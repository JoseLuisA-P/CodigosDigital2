

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 14:26:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  0007                     _PORTC	set	7
   290  0009                     _PORTE	set	9
   291  0008                     _PORTD	set	8
   292  001F                     _ADCON0bits	set	31
   293  001E                     _ADRESH	set	30
   294  0006                     _PORTBbits	set	6
   295  000B                     _INTCONbits	set	11
   296  009F                     _ADCON1bits	set	159
   297  0081                     _OPTION_REGbits	set	129
   298  0096                     _IOCBbits	set	150
   299  008F                     _OSCCONbits	set	143
   300  0089                     _TRISE	set	137
   301  0088                     _TRISD	set	136
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  0011                     start_initialization:	
   310                           ; #config settings
   311                           
   312  0011                     __initialization:
   313                           
   314                           ; Clear objects allocated to COMMON
   315  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   316  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   317                           
   318                           ; Clear objects allocated to BANK0
   319  0013  1283               	bcf	3,5	;RP0=0, select bank0
   320  0014  1303               	bcf	3,6	;RP1=0, select bank0
   321  0015  01A6               	clrf	__pbssBANK0& (0+127)
   322  0016  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   323  0017  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   324  0018                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  0018                     __end_of__initialization:
   328  0018  0183               	clrf	3
   329  0019  120A  118A  287B   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssCOMMON
   332  007B                     __pbssCOMMON:
   333  007B                     _lowhex:
   334  007B                     	ds	1
   335  007C                     _uphex:
   336  007C                     	ds	1
   337                           
   338                           	psect	bssBANK0
   339  0026                     __pbssBANK0:
   340  0026                     _tempo:
   341  0026                     	ds	1
   342  0027                     _multi:
   343  0027                     	ds	1
   344  0028                     _referencia:
   345  0028                     	ds	1
   346                           
   347                           	psect	cstackCOMMON
   348  0070                     __pcstackCOMMON:
   349  0070                     ?_CONVhexa:
   350  0070                     ?_configuracion:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_Seg7EQ:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_interrupcion:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     CONVhexa@upper:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     CONVhexa@lower:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	1
   372  0072                     ??_CONVhexa:
   373                           
   374                           ; 1 bytes @ 0x2
   375  0072                     	ds	2
   376  0074                     CONVhexa@valor:
   377                           
   378                           ; 1 bytes @ 0x4
   379  0074                     	ds	1
   380  0075                     CONVhexa@temp:
   381                           
   382                           ; 1 bytes @ 0x5
   383  0075                     	ds	1
   384  0076                     ??_interrupcion:
   385                           
   386                           ; 1 bytes @ 0x6
   387  0076                     	ds	5
   388                           
   389                           	psect	cstackBANK0
   390  0020                     __pcstackBANK0:
   391  0020                     ??_Seg7EQ:
   392  0020                     ?_ADCconfig:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0020                     ADCconfig@just:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0020                     	ds	1
   401  0021                     ??_ADCconfig:
   402                           
   403                           ; 1 bytes @ 0x1
   404  0021                     	ds	1
   405  0022                     Seg7EQ@dato:
   406                           
   407                           ; 1 bytes @ 0x2
   408  0022                     	ds	1
   409  0023                     ADCconfig@canal:
   410                           
   411                           ; 1 bytes @ 0x3
   412  0023                     	ds	1
   413  0024                     ??_configuracion:
   414  0024                     ??_main:	
   415                           ; 1 bytes @ 0x4
   416                           
   417                           
   418                           ; 1 bytes @ 0x4
   419  0024                     	ds	2
   420                           
   421                           	psect	maintext
   422  007B                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 75 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B00/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       2       0       0       0
   445 ;;      Totals:         0       2       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels required when called:    4
   448 ;; This function calls:
   449 ;;		_Seg7EQ
   450 ;;		_configuracion
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _main
   458  007B                     _main:
   459  007B                     l1265:	
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   462                           
   463                           
   464                           ;main.c: 76:     configuracion();
   465  007B  120A  118A  2148  120A  118A  	fcall	_configuracion
   466  0080                     l1267:
   467                           
   468                           ;main.c: 79:         PORTD = referencia;
   469  0080  1283               	bcf	3,5	;RP0=0, select bank0
   470  0081  1303               	bcf	3,6	;RP1=0, select bank0
   471  0082  0828               	movf	_referencia,w
   472  0083  0088               	movwf	8	;volatile
   473  0084                     l1269:
   474                           
   475                           ;main.c: 81:         if(tempo){
   476  0084  0826               	movf	_tempo,w
   477  0085  1903               	btfsc	3,2
   478  0086  2888               	goto	u171
   479  0087  2889               	goto	u170
   480  0088                     u171:
   481  0088  2880               	goto	l1267
   482  0089                     u170:
   483  0089                     l1271:
   484                           
   485                           ;main.c: 82:             multi++;
   486  0089  3001               	movlw	1
   487  008A  00A4               	movwf	??_main
   488  008B  0824               	movf	??_main,w
   489  008C  07A7               	addwf	_multi,f
   490  008D                     l1273:
   491                           
   492                           ;main.c: 83:             if(multi>=2)multi = 0;
   493  008D  3002               	movlw	2
   494  008E  0227               	subwf	_multi,w
   495  008F  1C03               	skipc
   496  0090  2892               	goto	u181
   497  0091  2893               	goto	u180
   498  0092                     u181:
   499  0092  28AF               	goto	l1291
   500  0093                     u180:
   501  0093                     l1275:
   502  0093  01A7               	clrf	_multi
   503  0094  28AF               	goto	l1291
   504  0095                     l1277:
   505                           
   506                           ;main.c: 86:                 PORTE = 0;
   507  0095  0189               	clrf	9	;volatile
   508  0096                     l1279:
   509                           
   510                           ;main.c: 87:                 PORTC = Seg7EQ(uphex);
   511  0096  087C               	movf	_uphex,w
   512  0097  120A  118A  201C  120A  118A  	fcall	_Seg7EQ
   513  009C  1283               	bcf	3,5	;RP0=0, select bank0
   514  009D  1303               	bcf	3,6	;RP1=0, select bank0
   515  009E  0087               	movwf	7	;volatile
   516  009F                     l1281:
   517                           
   518                           ;main.c: 88:                 PORTE = 0x01;
   519  009F  3001               	movlw	1
   520  00A0  0089               	movwf	9	;volatile
   521                           
   522                           ;main.c: 89:                 break;
   523  00A1  28BF               	goto	l1293
   524  00A2                     l1283:
   525                           
   526                           ;main.c: 91:                 PORTE = 0;
   527  00A2  0189               	clrf	9	;volatile
   528  00A3                     l1285:
   529                           
   530                           ;main.c: 92:                 PORTC = Seg7EQ(lowhex);
   531  00A3  087B               	movf	_lowhex,w
   532  00A4  120A  118A  201C  120A  118A  	fcall	_Seg7EQ
   533  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   534  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   535  00AB  0087               	movwf	7	;volatile
   536  00AC                     l1287:
   537                           
   538                           ;main.c: 93:                 PORTE = 0x02;
   539  00AC  3002               	movlw	2
   540  00AD  0089               	movwf	9	;volatile
   541                           
   542                           ;main.c: 94:                 break;
   543  00AE  28BF               	goto	l1293
   544  00AF                     l1291:
   545  00AF  0827               	movf	_multi,w
   546  00B0  00A4               	movwf	??_main
   547  00B1  01A5               	clrf	??_main+1
   548                           
   549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   550                           ; Switch size 1, requested type "simple"
   551                           ; Number of cases is 1, Range of values is 0 to 0
   552                           ; switch strategies available:
   553                           ; Name         Instructions Cycles
   554                           ; simple_byte            4     3 (average)
   555                           ; direct_byte           11     8 (fixed)
   556                           ; jumptable            260     6 (fixed)
   557                           ;	Chosen strategy is simple_byte
   558  00B2  0825               	movf	??_main+1,w
   559  00B3  3A00               	xorlw	0	; case 0
   560  00B4  1903               	skipnz
   561  00B5  28B7               	goto	l1379
   562  00B6  28BF               	goto	l1293
   563  00B7                     l1379:
   564                           
   565                           ; Switch size 1, requested type "simple"
   566                           ; Number of cases is 2, Range of values is 0 to 1
   567                           ; switch strategies available:
   568                           ; Name         Instructions Cycles
   569                           ; simple_byte            7     4 (average)
   570                           ; direct_byte           14     8 (fixed)
   571                           ; jumptable            260     6 (fixed)
   572                           ;	Chosen strategy is simple_byte
   573  00B7  0824               	movf	??_main,w
   574  00B8  3A00               	xorlw	0	; case 0
   575  00B9  1903               	skipnz
   576  00BA  2895               	goto	l1277
   577  00BB  3A01               	xorlw	1	; case 1
   578  00BC  1903               	skipnz
   579  00BD  28A2               	goto	l1283
   580  00BE  28BF               	goto	l1293
   581  00BF                     l1293:
   582                           
   583                           ;main.c: 98:         tempo = 0;
   584  00BF  01A6               	clrf	_tempo
   585  00C0  2880               	goto	l1267
   586  00C1  120A  118A  280E   	ljmp	start
   587  00C4                     __end_of_main:
   588                           
   589                           	psect	text1
   590  0148                     __ptext1:	
   591 ;; *************** function _configuracion *****************
   592 ;; Defined at:
   593 ;;		line 106 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    3
   614 ;; This function calls:
   615 ;;		_ADCconfig
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _configuracion
   623  0148                     _configuracion:
   624  0148                     l1075:	
   625                           ;incstack = 0
   626                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   627                           
   628                           
   629                           ;main.c: 108:     ANSEL = 0X01;
   630  0148  3001               	movlw	1
   631  0149  1683               	bsf	3,5	;RP0=1, select bank3
   632  014A  1703               	bsf	3,6	;RP1=1, select bank3
   633  014B  0088               	movwf	8	;volatile
   634  014C                     l1077:
   635                           
   636                           ;main.c: 109:     ANSELH = 0X00;
   637  014C  0189               	clrf	9	;volatile
   638  014D                     l1079:
   639                           
   640                           ;main.c: 110:     TRISA = 0X01;
   641  014D  3001               	movlw	1
   642  014E  1683               	bsf	3,5	;RP0=1, select bank1
   643  014F  1303               	bcf	3,6	;RP1=0, select bank1
   644  0150  0085               	movwf	5	;volatile
   645  0151                     l1081:
   646                           
   647                           ;main.c: 111:     TRISB = 0X03;
   648  0151  3003               	movlw	3
   649  0152  0086               	movwf	6	;volatile
   650  0153                     l1083:
   651                           
   652                           ;main.c: 112:     TRISC = 0X00;
   653  0153  0187               	clrf	7	;volatile
   654  0154                     l1085:
   655                           
   656                           ;main.c: 113:     TRISD = 0X00;
   657  0154  0188               	clrf	8	;volatile
   658  0155                     l1087:
   659                           
   660                           ;main.c: 114:     TRISE = 0X00;
   661  0155  0189               	clrf	9	;volatile
   662  0156                     l1089:
   663                           
   664                           ;main.c: 115:     PORTA = 0X00;
   665  0156  1283               	bcf	3,5	;RP0=0, select bank0
   666  0157  1303               	bcf	3,6	;RP1=0, select bank0
   667  0158  0185               	clrf	5	;volatile
   668  0159                     l1091:
   669                           
   670                           ;main.c: 116:     PORTB = 0X00;
   671  0159  0186               	clrf	6	;volatile
   672  015A                     l1093:
   673                           
   674                           ;main.c: 117:     PORTC = 0X00;
   675  015A  0187               	clrf	7	;volatile
   676  015B                     l1095:
   677                           
   678                           ;main.c: 118:     PORTD = 0X00;
   679  015B  0188               	clrf	8	;volatile
   680                           
   681                           ;main.c: 119:     PORTE = 0X01;
   682  015C  3001               	movlw	1
   683  015D  0089               	movwf	9	;volatile
   684  015E                     l1097:
   685                           
   686                           ;main.c: 122:     OSCCONbits.IRCF = 0b111;
   687  015E  3070               	movlw	112
   688  015F  1683               	bsf	3,5	;RP0=1, select bank1
   689  0160  1303               	bcf	3,6	;RP1=0, select bank1
   690  0161  048F               	iorwf	15,f	;volatile
   691  0162                     l1099:
   692                           
   693                           ;main.c: 123:     OSCCONbits.SCS = 0b1;
   694  0162  140F               	bsf	15,0	;volatile
   695  0163                     l1101:
   696                           
   697                           ;main.c: 126:     IOCBbits.IOCB0 = 1;
   698  0163  1416               	bsf	22,0	;volatile
   699  0164                     l1103:
   700                           
   701                           ;main.c: 127:     IOCBbits.IOCB1 = 1;
   702  0164  1496               	bsf	22,1	;volatile
   703  0165                     l1105:
   704                           
   705                           ;main.c: 130:     INTCONbits.RBIF = 0;
   706  0165  100B               	bcf	11,0	;volatile
   707  0166                     l1107:
   708                           
   709                           ;main.c: 131:     INTCONbits.RBIE = 1;
   710  0166  158B               	bsf	11,3	;volatile
   711  0167                     l1109:
   712                           
   713                           ;main.c: 132:     INTCONbits.T0IF = 0;
   714  0167  110B               	bcf	11,2	;volatile
   715  0168                     l1111:
   716                           
   717                           ;main.c: 133:     INTCONbits.T0IE = 1;
   718  0168  168B               	bsf	11,5	;volatile
   719  0169                     l1113:
   720                           
   721                           ;main.c: 134:     INTCONbits.GIE = 1;
   722  0169  178B               	bsf	11,7	;volatile
   723  016A                     l1115:
   724                           
   725                           ;main.c: 137:     OPTION_REGbits.T0CS = 0;
   726  016A  1281               	bcf	1,5	;volatile
   727  016B                     l1117:
   728                           
   729                           ;main.c: 138:     OPTION_REGbits.PSA = 0;
   730  016B  1181               	bcf	1,3	;volatile
   731  016C                     l1119:
   732                           
   733                           ;main.c: 139:     OPTION_REGbits.PS2 = 1;
   734  016C  1501               	bsf	1,2	;volatile
   735  016D                     l1121:
   736                           
   737                           ;main.c: 140:     OPTION_REGbits.PS1 = 1;
   738  016D  1481               	bsf	1,1	;volatile
   739  016E                     l1123:
   740                           
   741                           ;main.c: 141:     OPTION_REGbits.PS0 = 0;
   742  016E  1001               	bcf	1,0	;volatile
   743  016F                     l1125:
   744                           
   745                           ;main.c: 144:     ADCconfig(0,0);
   746  016F  1283               	bcf	3,5	;RP0=0, select bank0
   747  0170  1303               	bcf	3,6	;RP1=0, select bank0
   748  0171  01A0               	clrf	ADCconfig@just
   749  0172  3000               	movlw	0
   750  0173  120A  118A  2107  120A  118A  	fcall	_ADCconfig
   751  0178                     l83:
   752  0178  0008               	return
   753  0179                     __end_of_configuracion:
   754                           
   755                           	psect	text2
   756  0107                     __ptext2:	
   757 ;; *************** function _ADCconfig *****************
   758 ;; Defined at:
   759 ;;		line 10 in file "despliegue7SEG.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  canal           1    wreg     unsigned char 
   762 ;;  just            1    0[BANK0 ] unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  canal           1    3[BANK0 ] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       1       0       0       0
   775 ;;      Locals:         0       1       0       0       0
   776 ;;      Temps:          0       2       0       0       0
   777 ;;      Totals:         0       4       0       0       0
   778 ;;Total ram usage:        4 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    2
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_configuracion
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _ADCconfig
   790  0107                     _ADCconfig:
   791                           
   792                           ;incstack = 0
   793                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
   794                           ;ADCconfig@canal stored from wreg
   795  0107  1283               	bcf	3,5	;RP0=0, select bank0
   796  0108  1303               	bcf	3,6	;RP1=0, select bank0
   797  0109  00A3               	movwf	ADCconfig@canal
   798  010A                     l1035:
   799                           
   800                           ;despliegue7SEG.c: 11:     switch(OSCCONbits.IRCF){
   801  010A  291B               	goto	l1047
   802  010B                     l1037:
   803                           
   804                           ;despliegue7SEG.c: 13:             ADCON0bits.ADCS = 0b000;
   805  010B  303F               	movlw	-193
   806  010C  059F               	andwf	31,f	;volatile
   807                           
   808                           ;despliegue7SEG.c: 14:             break;
   809  010D  2933               	goto	l1049
   810  010E                     l1039:
   811                           
   812                           ;despliegue7SEG.c: 16:             ADCON0bits.ADCS = 0b001;
   813  010E  081F               	movf	31,w	;volatile
   814  010F  393F               	andlw	-193
   815  0110  3840               	iorlw	64
   816  0111  009F               	movwf	31	;volatile
   817                           
   818                           ;despliegue7SEG.c: 17:             break;
   819  0112  2933               	goto	l1049
   820  0113                     l1041:
   821                           
   822                           ;despliegue7SEG.c: 19:             ADCON0bits.ADCS = 0b010;
   823  0113  081F               	movf	31,w	;volatile
   824  0114  393F               	andlw	-193
   825  0115  3880               	iorlw	128
   826  0116  009F               	movwf	31	;volatile
   827                           
   828                           ;despliegue7SEG.c: 20:             break;
   829  0117  2933               	goto	l1049
   830  0118                     l1043:
   831                           
   832                           ;despliegue7SEG.c: 22:             ADCON0bits.ADCS = 0b11;
   833  0118  30C0               	movlw	192
   834  0119  049F               	iorwf	31,f	;volatile
   835                           
   836                           ;despliegue7SEG.c: 23:             break;
   837  011A  2933               	goto	l1049
   838  011B                     l1047:
   839  011B  1683               	bsf	3,5	;RP0=1, select bank1
   840  011C  1303               	bcf	3,6	;RP1=0, select bank1
   841  011D  0E0F               	swapf	15,w	;volatile
   842  011E  3907               	andlw	7
   843  011F  1283               	bcf	3,5	;RP0=0, select bank0
   844  0120  1303               	bcf	3,6	;RP1=0, select bank0
   845  0121  00A1               	movwf	??_ADCconfig
   846  0122  01A2               	clrf	??_ADCconfig+1
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ; direct_byte           11     8 (fixed)
   855                           ; jumptable            260     6 (fixed)
   856                           ;	Chosen strategy is simple_byte
   857  0123  0822               	movf	??_ADCconfig+1,w
   858  0124  3A00               	xorlw	0	; case 0
   859  0125  1903               	skipnz
   860  0126  2928               	goto	l1381
   861  0127  2918               	goto	l1043
   862  0128                     l1381:
   863                           
   864                           ; Switch size 1, requested type "simple"
   865                           ; Number of cases is 3, Range of values is 4 to 7
   866                           ; switch strategies available:
   867                           ; Name         Instructions Cycles
   868                           ; simple_byte           10     6 (average)
   869                           ; direct_byte           23    11 (fixed)
   870                           ; jumptable            263     9 (fixed)
   871                           ;	Chosen strategy is simple_byte
   872  0128  0821               	movf	??_ADCconfig,w
   873  0129  3A04               	xorlw	4	; case 4
   874  012A  1903               	skipnz
   875  012B  290B               	goto	l1037
   876  012C  3A02               	xorlw	2	; case 6
   877  012D  1903               	skipnz
   878  012E  290E               	goto	l1039
   879  012F  3A01               	xorlw	1	; case 7
   880  0130  1903               	skipnz
   881  0131  2913               	goto	l1041
   882  0132  2918               	goto	l1043
   883  0133                     l1049:
   884                           
   885                           ;despliegue7SEG.c: 25:     ADCON0bits.CHS = canal;
   886  0133  0823               	movf	ADCconfig@canal,w
   887  0134  00A1               	movwf	??_ADCconfig
   888  0135  0DA1               	rlf	??_ADCconfig,f
   889  0136  0DA1               	rlf	??_ADCconfig,f
   890  0137  081F               	movf	31,w	;volatile
   891  0138  0621               	xorwf	??_ADCconfig,w
   892  0139  39C3               	andlw	-61
   893  013A  0621               	xorwf	??_ADCconfig,w
   894  013B  009F               	movwf	31	;volatile
   895  013C                     l1051:
   896                           
   897                           ;despliegue7SEG.c: 26:     ADCON0bits.GO = 0b0;
   898  013C  109F               	bcf	31,1	;volatile
   899  013D                     l1053:
   900                           
   901                           ;despliegue7SEG.c: 27:     ADCON0bits.ADON = 0b1;
   902  013D  141F               	bsf	31,0	;volatile
   903  013E                     l1055:
   904                           
   905                           ;despliegue7SEG.c: 28:     ADCON1bits.ADFM = just;
   906  013E  0C20               	rrf	ADCconfig@just,w
   907  013F  1683               	bsf	3,5	;RP0=1, select bank1
   908  0140  1303               	bcf	3,6	;RP1=0, select bank1
   909  0141  1C03               	skipc
   910  0142  139F               	bcf	31,7	;volatile
   911  0143  1803               	skipnc
   912  0144  179F               	bsf	31,7	;volatile
   913  0145                     l1057:
   914                           
   915                           ;despliegue7SEG.c: 29:     ADCON1bits.VCFG1 = 0b0;
   916  0145  129F               	bcf	31,5	;volatile
   917  0146                     l1059:
   918                           
   919                           ;despliegue7SEG.c: 30:     ADCON1bits.VCFG0 = 0b0;
   920  0146  121F               	bcf	31,4	;volatile
   921  0147                     l98:
   922  0147  0008               	return
   923  0148                     __end_of_ADCconfig:
   924                           
   925                           	psect	text3
   926  001C                     __ptext3:	
   927 ;; *************** function _Seg7EQ *****************
   928 ;; Defined at:
   929 ;;		line 50 in file "despliegue7SEG.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  dato            1    wreg     unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  dato            1    2[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      unsigned char 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       1       0       0       0
   945 ;;      Temps:          0       2       0       0       0
   946 ;;      Totals:         0       3       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    2
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _Seg7EQ
   959  001C                     _Seg7EQ:
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _Seg7EQ: [wreg-fsr0h+status,2+status,0]
   963                           ;Seg7EQ@dato stored from wreg
   964  001C  1283               	bcf	3,5	;RP0=0, select bank0
   965  001D  1303               	bcf	3,6	;RP1=0, select bank0
   966  001E  00A2               	movwf	Seg7EQ@dato
   967  001F                     l1127:
   968                           
   969                           ;despliegue7SEG.c: 53:     switch(dato){
   970  001F  2840               	goto	l1233
   971  0020                     l1129:
   972                           
   973                           ;despliegue7SEG.c: 55:         return 0b00111111; break;
   974  0020  303F               	movlw	63
   975  0021  287A               	goto	l106
   976  0022                     l1135:
   977                           
   978                           ;despliegue7SEG.c: 57:         return 0b00000110; break;
   979  0022  3006               	movlw	6
   980  0023  287A               	goto	l106
   981  0024                     l1141:
   982                           
   983                           ;despliegue7SEG.c: 59:         return 0b01011011; break;
   984  0024  305B               	movlw	91
   985  0025  287A               	goto	l106
   986  0026                     l1147:
   987                           
   988                           ;despliegue7SEG.c: 61:         return 0b01001111; break;
   989  0026  304F               	movlw	79
   990  0027  287A               	goto	l106
   991  0028                     l1153:
   992                           
   993                           ;despliegue7SEG.c: 63:         return 0b01100110; break;
   994  0028  3066               	movlw	102
   995  0029  287A               	goto	l106
   996  002A                     l1159:
   997                           
   998                           ;despliegue7SEG.c: 65:         return 0b01101101; break;
   999  002A  306D               	movlw	109
  1000  002B  287A               	goto	l106
  1001  002C                     l1165:
  1002                           
  1003                           ;despliegue7SEG.c: 67:         return 0b01111101; break;
  1004  002C  307D               	movlw	125
  1005  002D  287A               	goto	l106
  1006  002E                     l1171:
  1007                           
  1008                           ;despliegue7SEG.c: 69:         return 0b00000111; break;
  1009  002E  3007               	movlw	7
  1010  002F  287A               	goto	l106
  1011  0030                     l1177:
  1012                           
  1013                           ;despliegue7SEG.c: 71:         return 0b01111111; break;
  1014  0030  307F               	movlw	127
  1015  0031  287A               	goto	l106
  1016  0032                     l1183:
  1017                           
  1018                           ;despliegue7SEG.c: 73:         return 0b01100111; break;
  1019  0032  3067               	movlw	103
  1020  0033  287A               	goto	l106
  1021  0034                     l1189:
  1022                           
  1023                           ;despliegue7SEG.c: 75:         return 0b01110111; break;
  1024  0034  3077               	movlw	119
  1025  0035  287A               	goto	l106
  1026  0036                     l1195:
  1027                           
  1028                           ;despliegue7SEG.c: 77:         return 0b01111100; break;
  1029  0036  307C               	movlw	124
  1030  0037  287A               	goto	l106
  1031  0038                     l1201:
  1032                           
  1033                           ;despliegue7SEG.c: 79:         return 0b00111001; break;
  1034  0038  3039               	movlw	57
  1035  0039  287A               	goto	l106
  1036  003A                     l1207:
  1037                           
  1038                           ;despliegue7SEG.c: 81:         return 0b01011110; break;
  1039  003A  305E               	movlw	94
  1040  003B  287A               	goto	l106
  1041  003C                     l1213:
  1042                           
  1043                           ;despliegue7SEG.c: 83:         return 0b01111001; break;
  1044  003C  3079               	movlw	121
  1045  003D  287A               	goto	l106
  1046  003E                     l1219:
  1047                           
  1048                           ;despliegue7SEG.c: 85:         return 0b01110001; break;
  1049  003E  3071               	movlw	113
  1050  003F  287A               	goto	l106
  1051  0040                     l1233:
  1052  0040  0822               	movf	Seg7EQ@dato,w
  1053  0041  00A0               	movwf	??_Seg7EQ
  1054  0042  01A1               	clrf	??_Seg7EQ+1
  1055                           
  1056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1057                           ; Switch size 1, requested type "simple"
  1058                           ; Number of cases is 1, Range of values is 0 to 0
  1059                           ; switch strategies available:
  1060                           ; Name         Instructions Cycles
  1061                           ; simple_byte            4     3 (average)
  1062                           ; direct_byte           11     8 (fixed)
  1063                           ; jumptable            260     6 (fixed)
  1064                           ;	Chosen strategy is simple_byte
  1065  0043  0821               	movf	??_Seg7EQ+1,w
  1066  0044  3A00               	xorlw	0	; case 0
  1067  0045  1903               	skipnz
  1068  0046  2848               	goto	l1383
  1069  0047  2820               	goto	l1129
  1070  0048                     l1383:
  1071                           
  1072                           ; Switch size 1, requested type "simple"
  1073                           ; Number of cases is 16, Range of values is 0 to 15
  1074                           ; switch strategies available:
  1075                           ; Name         Instructions Cycles
  1076                           ; simple_byte           49    25 (average)
  1077                           ; direct_byte           56     8 (fixed)
  1078                           ; jumptable            260     6 (fixed)
  1079                           ;	Chosen strategy is simple_byte
  1080  0048  0820               	movf	??_Seg7EQ,w
  1081  0049  3A00               	xorlw	0	; case 0
  1082  004A  1903               	skipnz
  1083  004B  2820               	goto	l1129
  1084  004C  3A01               	xorlw	1	; case 1
  1085  004D  1903               	skipnz
  1086  004E  2822               	goto	l1135
  1087  004F  3A03               	xorlw	3	; case 2
  1088  0050  1903               	skipnz
  1089  0051  2824               	goto	l1141
  1090  0052  3A01               	xorlw	1	; case 3
  1091  0053  1903               	skipnz
  1092  0054  2826               	goto	l1147
  1093  0055  3A07               	xorlw	7	; case 4
  1094  0056  1903               	skipnz
  1095  0057  2828               	goto	l1153
  1096  0058  3A01               	xorlw	1	; case 5
  1097  0059  1903               	skipnz
  1098  005A  282A               	goto	l1159
  1099  005B  3A03               	xorlw	3	; case 6
  1100  005C  1903               	skipnz
  1101  005D  282C               	goto	l1165
  1102  005E  3A01               	xorlw	1	; case 7
  1103  005F  1903               	skipnz
  1104  0060  282E               	goto	l1171
  1105  0061  3A0F               	xorlw	15	; case 8
  1106  0062  1903               	skipnz
  1107  0063  2830               	goto	l1177
  1108  0064  3A01               	xorlw	1	; case 9
  1109  0065  1903               	skipnz
  1110  0066  2832               	goto	l1183
  1111  0067  3A03               	xorlw	3	; case 10
  1112  0068  1903               	skipnz
  1113  0069  2834               	goto	l1189
  1114  006A  3A01               	xorlw	1	; case 11
  1115  006B  1903               	skipnz
  1116  006C  2836               	goto	l1195
  1117  006D  3A07               	xorlw	7	; case 12
  1118  006E  1903               	skipnz
  1119  006F  2838               	goto	l1201
  1120  0070  3A01               	xorlw	1	; case 13
  1121  0071  1903               	skipnz
  1122  0072  283A               	goto	l1207
  1123  0073  3A03               	xorlw	3	; case 14
  1124  0074  1903               	skipnz
  1125  0075  283C               	goto	l1213
  1126  0076  3A01               	xorlw	1	; case 15
  1127  0077  1903               	skipnz
  1128  0078  283E               	goto	l1219
  1129  0079  2820               	goto	l1129
  1130  007A                     l106:
  1131  007A  0008               	return
  1132  007B                     __end_of_Seg7EQ:
  1133                           
  1134                           	psect	text4
  1135  00C4                     __ptext4:	
  1136 ;; *************** function _interrupcion *****************
  1137 ;; Defined at:
  1138 ;;		line 52 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          5       0       0       0       0
  1155 ;;      Totals:         5       0       0       0       0
  1156 ;;Total ram usage:        5 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    1
  1159 ;; This function calls:
  1160 ;;		_CONVhexa
  1161 ;; This function is called by:
  1162 ;;		Interrupt level 1
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _interrupcion
  1168  00C4                     _interrupcion:
  1169  00C4                     i1l1241:
  1170                           
  1171                           ;main.c: 54:     if(INTCONbits.RBIF && PORTBbits.RB0){
  1172  00C4  1C0B               	btfss	11,0	;volatile
  1173  00C5  28C7               	goto	u11_21
  1174  00C6  28C8               	goto	u11_20
  1175  00C7                     u11_21:
  1176  00C7  28D3               	goto	i1l1249
  1177  00C8                     u11_20:
  1178  00C8                     i1l1243:
  1179  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00CA  1C06               	btfss	6,0	;volatile
  1182  00CB  28CD               	goto	u12_21
  1183  00CC  28CE               	goto	u12_20
  1184  00CD                     u12_21:
  1185  00CD  28D3               	goto	i1l1249
  1186  00CE                     u12_20:
  1187  00CE                     i1l1245:
  1188                           
  1189                           ;main.c: 55:         referencia++;
  1190  00CE  3001               	movlw	1
  1191  00CF  00F6               	movwf	??_interrupcion
  1192  00D0  0876               	movf	??_interrupcion,w
  1193  00D1  07A8               	addwf	_referencia,f
  1194  00D2                     i1l1247:
  1195                           
  1196                           ;main.c: 56:         INTCONbits.RBIF = 0;
  1197  00D2  100B               	bcf	11,0	;volatile
  1198  00D3                     i1l1249:
  1199                           
  1200                           ;main.c: 59:     if(INTCONbits.RBIF && PORTBbits.RB1){
  1201  00D3  1C0B               	btfss	11,0	;volatile
  1202  00D4  28D6               	goto	u13_21
  1203  00D5  28D7               	goto	u13_20
  1204  00D6                     u13_21:
  1205  00D6  28E0               	goto	i1l1257
  1206  00D7                     u13_20:
  1207  00D7                     i1l1251:
  1208  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1210  00D9  1C86               	btfss	6,1	;volatile
  1211  00DA  28DC               	goto	u14_21
  1212  00DB  28DD               	goto	u14_20
  1213  00DC                     u14_21:
  1214  00DC  28E0               	goto	i1l1257
  1215  00DD                     u14_20:
  1216  00DD                     i1l1253:
  1217                           
  1218                           ;main.c: 60:         referencia--;
  1219  00DD  3001               	movlw	1
  1220  00DE  02A8               	subwf	_referencia,f
  1221  00DF                     i1l1255:
  1222                           
  1223                           ;main.c: 61:         INTCONbits.RBIF = 0;
  1224  00DF  100B               	bcf	11,0	;volatile
  1225  00E0                     i1l1257:
  1226                           
  1227                           ;main.c: 64:     if(INTCONbits.T0IF){
  1228  00E0  1D0B               	btfss	11,2	;volatile
  1229  00E1  28E3               	goto	u15_21
  1230  00E2  28E4               	goto	u15_20
  1231  00E3                     u15_21:
  1232  00E3  28FE               	goto	i1l65
  1233  00E4                     u15_20:
  1234  00E4                     i1l1259:
  1235                           
  1236                           ;main.c: 65:         CONVhexa(ADRESH,&uphex,&lowhex);
  1237  00E4  307C               	movlw	(low (_uphex| 0))& (0+255)
  1238  00E5  00F6               	movwf	??_interrupcion
  1239  00E6  0876               	movf	??_interrupcion,w
  1240  00E7  00F0               	movwf	CONVhexa@upper
  1241  00E8  307B               	movlw	(low (_lowhex| 0))& (0+255)
  1242  00E9  00F7               	movwf	??_interrupcion+1
  1243  00EA  0877               	movf	??_interrupcion+1,w
  1244  00EB  00F1               	movwf	CONVhexa@lower
  1245  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1246  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1247  00EE  081E               	movf	30,w	;volatile
  1248  00EF  120A  118A  2179  120A  118A  	fcall	_CONVhexa
  1249  00F4                     i1l1261:
  1250                           
  1251                           ;main.c: 66:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  1252  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1253  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1254  00F6  189F               	btfsc	31,1	;volatile
  1255  00F7  28F9               	goto	u16_21
  1256  00F8  28FA               	goto	u16_20
  1257  00F9                     u16_21:
  1258  00F9  28FB               	goto	i1l64
  1259  00FA                     u16_20:
  1260  00FA                     i1l1263:
  1261  00FA  149F               	bsf	31,1	;volatile
  1262  00FB                     i1l64:
  1263                           
  1264                           ;main.c: 67:         tempo = 1;
  1265  00FB  01A6               	clrf	_tempo
  1266  00FC  0AA6               	incf	_tempo,f
  1267                           
  1268                           ;main.c: 68:         INTCONbits.T0IF = 0;
  1269  00FD  110B               	bcf	11,2	;volatile
  1270  00FE                     i1l65:
  1271  00FE  087A               	movf	??_interrupcion+4,w
  1272  00FF  008A               	movwf	10
  1273  0100  0879               	movf	??_interrupcion+3,w
  1274  0101  0084               	movwf	4
  1275  0102  0E78               	swapf	??_interrupcion+2,w
  1276  0103  0083               	movwf	3
  1277  0104  0EFE               	swapf	btemp,f
  1278  0105  0E7E               	swapf	btemp,w
  1279  0106  0009               	retfie
  1280  0107                     __end_of_interrupcion:
  1281                           
  1282                           	psect	intentry
  1283  0004                     __pintentry:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _interrupcion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1286                           
  1287  0004                     interrupt_function:
  1288  007E                     saved_w	set	btemp
  1289  0004  00FE               	movwf	btemp
  1290  0005  0E03               	swapf	3,w
  1291  0006  00F8               	movwf	??_interrupcion+2
  1292  0007  0804               	movf	4,w
  1293  0008  00F9               	movwf	??_interrupcion+3
  1294  0009  080A               	movf	10,w
  1295  000A  00FA               	movwf	??_interrupcion+4
  1296  000B  120A  118A  28C4   	ljmp	_interrupcion
  1297                           
  1298                           	psect	text5
  1299  0179                     __ptext5:	
  1300 ;; *************** function _CONVhexa *****************
  1301 ;; Defined at:
  1302 ;;		line 35 in file "despliegue7SEG.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  valor           1    wreg     unsigned char 
  1305 ;;  upper           1    0[COMMON] PTR unsigned char 
  1306 ;;		 -> uphex(1), 
  1307 ;;  lower           1    1[COMMON] PTR unsigned char 
  1308 ;;		 -> lowhex(1), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  valor           1    4[COMMON] unsigned char 
  1311 ;;  temp            1    5[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         2       0       0       0       0
  1322 ;;      Locals:         2       0       0       0       0
  1323 ;;      Temps:          2       0       0       0       0
  1324 ;;      Totals:         6       0       0       0       0
  1325 ;;Total ram usage:        6 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_interrupcion
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _CONVhexa
  1336  0179                     _CONVhexa:
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _CONVhexa: [wreg-fsr0h+status,2+status,0]
  1340                           ;CONVhexa@valor stored from wreg
  1341  0179  00F4               	movwf	CONVhexa@valor
  1342  017A                     i1l1067:
  1343                           
  1344                           ;despliegue7SEG.c: 40:     uint8_t temp;;despliegue7SEG.c: 41:     temp = valor;
  1345  017A  0874               	movf	CONVhexa@valor,w
  1346  017B  00F2               	movwf	??_CONVhexa
  1347  017C  0872               	movf	??_CONVhexa,w
  1348  017D  00F5               	movwf	CONVhexa@temp
  1349  017E                     i1l1069:
  1350                           
  1351                           ;despliegue7SEG.c: 42:     *lower = (valor & 0x0F);
  1352  017E  0874               	movf	CONVhexa@valor,w
  1353  017F  390F               	andlw	15
  1354  0180  00F2               	movwf	??_CONVhexa
  1355  0181  0871               	movf	CONVhexa@lower,w
  1356  0182  0084               	movwf	4
  1357  0183  0872               	movf	??_CONVhexa,w
  1358  0184  0080               	movwf	0
  1359  0185                     i1l1071:
  1360                           
  1361                           ;despliegue7SEG.c: 43:     temp = temp>>4;
  1362  0185  0875               	movf	CONVhexa@temp,w
  1363  0186  00F2               	movwf	??_CONVhexa
  1364  0187  3004               	movlw	4
  1365  0188                     u10_25:
  1366  0188  1003               	clrc
  1367  0189  0CF2               	rrf	??_CONVhexa,f
  1368  018A  3EFF               	addlw	-1
  1369  018B  1D03               	skipz
  1370  018C  2988               	goto	u10_25
  1371  018D  0872               	movf	??_CONVhexa,w
  1372  018E  00F3               	movwf	??_CONVhexa+1
  1373  018F  0873               	movf	??_CONVhexa+1,w
  1374  0190  00F5               	movwf	CONVhexa@temp
  1375  0191                     i1l1073:
  1376                           
  1377                           ;despliegue7SEG.c: 44:     *upper = (temp & 0x0F);
  1378  0191  0875               	movf	CONVhexa@temp,w
  1379  0192  390F               	andlw	15
  1380  0193  00F2               	movwf	??_CONVhexa
  1381  0194  0870               	movf	CONVhexa@upper,w
  1382  0195  0084               	movwf	4
  1383  0196  0872               	movf	??_CONVhexa,w
  1384  0197  0080               	movwf	0
  1385  0198                     i1l101:
  1386  0198  0008               	return
  1387  0199                     __end_of_CONVhexa:
  1388  007E                     btemp	set	126	;btemp
  1389  007E                     wtemp0	set	126
  1390                           
  1391                           	psect	config
  1392                           
  1393                           ;Config register CONFIG1 @ 0x2007
  1394                           ;	Oscillator Selection bits
  1395                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1396                           ;	Watchdog Timer Enable bit
  1397                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1398                           ;	Power-up Timer Enable bit
  1399                           ;	PWRTE = OFF, PWRT disabled
  1400                           ;	RE3/MCLR pin function select bit
  1401                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1402                           ;	Code Protection bit
  1403                           ;	CP = OFF, Program memory code protection is disabled
  1404                           ;	Data Code Protection bit
  1405                           ;	CPD = OFF, Data memory code protection is disabled
  1406                           ;	Brown Out Reset Selection bits
  1407                           ;	BOREN = OFF, BOR disabled
  1408                           ;	Internal External Switchover bit
  1409                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1410                           ;	Fail-Safe Clock Monitor Enabled bit
  1411                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1412                           ;	Low Voltage Programming Enable bit
  1413                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1414                           ;	In-Circuit Debugger Mode bit
  1415                           ;	DEBUG = 0x1, unprogrammed default
  1416  2007                     	org	8199
  1417  2007  20F4               	dw	8436
  1418                           
  1419                           ;Config register CONFIG2 @ 0x2008
  1420                           ;	Brown-out Reset Selection bit
  1421                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1422                           ;	Flash Program Memory Self Write Enable bits
  1423                           ;	WRT = OFF, Write protection off
  1424  2008                     	org	8200
  1425  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      6       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CONVhexa@upper	PTR unsigned char  size(1) Largest target is 1
		 -> uphex(COMMON[1]), 

    CONVhexa@lower	PTR unsigned char  size(1) Largest target is 1
		 -> lowhex(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcion in COMMON

    _interrupcion->_CONVhexa

Critical Paths under _main in BANK0

    _configuracion->_ADCconfig

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     142
                                              4 BANK0      2     2      0
                             _Seg7EQ
                      _configuracion
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Seg7EQ                                               3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         5     5      0     286
                                              6 COMMON     5     5      0
                           _CONVhexa
 ---------------------------------------------------------------------------------
 (4) _CONVhexa                                             6     4      2     286
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Seg7EQ
   _configuracion
     _ADCconfig

 _interrupcion (ROOT)
   _CONVhexa

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 14:26:21 2021

                     l83 0178                       l98 0147           ?_configuracion 0070  
                    l106 007A       __size_of_ADCconfig 0041                      u170 0089  
                    u171 0088                      u180 0093                      u181 0092  
                    fsr0 0004                      indf 0000                     l1101 0163  
                   l1111 0168                     l1103 0164                     l1201 0038  
                   l1041 0113                     l1121 016D                     l1113 0169  
                   l1105 0165                     l1051 013C                     l1043 0118  
                   l1035 010A                     l1123 016E                     l1115 016A  
                   l1107 0166                     l1213 003C                     l1141 0024  
                   l1053 013D                     l1037 010B                     l1125 016F  
                   l1117 016B                     l1109 0167                     l1207 003A  
                   l1135 0022                     l1127 001F                     l1055 013E  
                   l1039 010E                     l1047 011B                     l1119 016C  
                   l1153 0028                     l1129 0020                     l1233 0040  
                   l1057 0145                     l1049 0133                     l1081 0151  
                   l1219 003E                     l1171 002E                     l1147 0026  
                   l1059 0146                     l1091 0159                     l1083 0153  
                   l1075 0148                     l1165 002C                     l1093 015A  
                   l1085 0154                     l1077 014C                     l1183 0032  
                   l1159 002A                     l1095 015B                     l1087 0155  
                   l1079 014D                     l1271 0089                     l1177 0030  
                   l1097 015E                     l1089 0156                     l1281 009F  
                   l1273 008D                     l1265 007B                     l1195 0036  
                   l1099 0162                     l1283 00A2                     l1275 0093  
                   l1291 00AF                     l1267 0080                     l1189 0034  
                   l1381 0128                     l1285 00A3                     l1293 00BF  
                   l1277 0095                     l1269 0084                     l1383 0048  
                   l1287 00AC                     l1279 0096                     l1379 00B7  
                   i1l64 00FB                     i1l65 00FE                     _main 007B  
                   btemp 007E                     start 000E         __end_of_CONVhexa 0199  
                  ?_main 0070                    _ANSEL 0188                    i1l101 0198  
                  u10_25 0188                    u11_20 00C8                    u11_21 00C7  
                  u12_20 00CE                    u12_21 00CD                    u13_20 00D7  
                  u13_21 00D6                    u14_20 00DD                    u14_21 00DC  
                  u15_20 00E4                    u15_21 00E3                    u16_20 00FA  
                  u16_21 00F9                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _tempo 0026  
                  _multi 0027                    _uphex 007C                    pclath 000A  
                  status 0003                    wtemp0 007E        __end_of_ADCconfig 0148  
        __initialization 0011             CONVhexa@temp 0075             __end_of_main 00C4  
        ??_configuracion 0024                   ??_main 0024                   _ADRESH 001E  
                 _ANSELH 0189                   i1l1071 0185                   i1l1073 0191  
                 i1l1241 00C4                   i1l1067 017A                   i1l1251 00D7  
                 i1l1243 00C8                   i1l1069 017E                   i1l1261 00F4  
                 i1l1253 00DD                   i1l1245 00CE                   i1l1263 00FA  
                 i1l1255 00DF                   i1l1247 00D2                   i1l1257 00E0  
                 i1l1249 00D3                   i1l1259 00E4            ADCconfig@just 0020  
                 _Seg7EQ 001C                   _lowhex 007B                   saved_w 007E  
__end_of__initialization 0018                ?_CONVhexa 0070           __pcstackCOMMON 0070  
          ?_interrupcion 0070            CONVhexa@lower 0071            CONVhexa@valor 0074  
          CONVhexa@upper 0070           _OPTION_REGbits 0081               __pbssBANK0 0026  
             ??_CONVhexa 0072                  ?_Seg7EQ 0070           ??_interrupcion 0076  
             __pmaintext 007B               __pintentry 0004           ADCconfig@canal 0023  
        __size_of_Seg7EQ 005F                _ADCconfig 0107                  __ptext1 0148  
                __ptext2 0107                  __ptext3 001C                  __ptext4 00C4  
                __ptext5 0179               _referencia 0028     end_of_initialization 0018  
             ?_ADCconfig 0020    __end_of_configuracion 0179                _PORTBbits 0006  
   __end_of_interrupcion 0107        __size_of_CONVhexa 0020           __end_of_Seg7EQ 007B  
    start_initialization 0011                 ??_Seg7EQ 0020              ??_ADCconfig 0021  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
  __size_of_interrupcion 0043        interrupt_function 0004                 _CONVhexa 0179  
               _IOCBbits 0096             _interrupcion 00C4               _ADCON0bits 001F  
             _ADCON1bits 009F   __size_of_configuracion 0031            __size_of_main 0049  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
          _configuracion 0148               Seg7EQ@dato 0022  
