

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 12:11:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0009                     _PORTE	set	9
   287  0007                     _PORTC	set	7
   288  0006                     _PORTB	set	6
   289  0005                     _PORTA	set	5
   290  0008                     _PORTD	set	8
   291  001E                     _ADRESH	set	30
   292  001F                     _ADCON0bits	set	31
   293  0006                     _PORTBbits	set	6
   294  000B                     _INTCONbits	set	11
   295  009F                     _ADCON1bits	set	159
   296  0081                     _OPTION_REGbits	set	129
   297  0096                     _IOCBbits	set	150
   298  008F                     _OSCCONbits	set	143
   299  0089                     _TRISE	set	137
   300  0088                     _TRISD	set	136
   301  0087                     _TRISC	set	135
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  000F                     start_initialization:	
   309                           ; #config settings
   310                           
   311  000F                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   315  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   317                           
   318                           ; Clear objects allocated to BANK0
   319  0012  1283               	bcf	3,5	;RP0=0, select bank0
   320  0013  1303               	bcf	3,6	;RP1=0, select bank0
   321  0014  01A4               	clrf	__pbssBANK0& (0+127)
   322  0015                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0015                     __end_of__initialization:
   326  0015  0183               	clrf	3
   327  0016  120A  118A  28BD   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0077                     __pbssCOMMON:
   331  0077                     _referencia:
   332  0077                     	ds	1
   333  0078                     _lowhex:
   334  0078                     	ds	1
   335  0079                     _uphex:
   336  0079                     	ds	1
   337                           
   338                           	psect	bssBANK0
   339  0024                     __pbssBANK0:
   340  0024                     _tempo:
   341  0024                     	ds	1
   342                           
   343                           	psect	cstackCOMMON
   344  0070                     __pcstackCOMMON:
   345  0070                     ?_configuracion:
   346  0070                     ?_interrupcion:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_interrupcion:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	3
   358  0073                     ?_CONVhexa:
   359  0073                     ?_ADCconfig:	
   360                           ; 1 bytes @ 0x3
   361                           
   362  0073                     ADCconfig@just:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0073                     CONVhexa@upper:	
   366                           ; 1 bytes @ 0x3
   367                           
   368                           
   369                           ; 1 bytes @ 0x3
   370  0073                     	ds	1
   371  0074                     ??_ADCconfig:
   372  0074                     CONVhexa@lower:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           ; 1 bytes @ 0x4
   377  0074                     	ds	1
   378  0075                     ??_CONVhexa:
   379                           
   380                           ; 1 bytes @ 0x5
   381  0075                     	ds	1
   382  0076                     ADCconfig@canal:
   383                           
   384                           ; 1 bytes @ 0x6
   385  0076                     	ds	1
   386  0077                     ??_configuracion:
   387                           
   388                           	psect	cstackBANK0
   389  0020                     __pcstackBANK0:	
   390                           ; 1 bytes @ 0x7
   391                           
   392  0020                     CONVhexa@valor:
   393                           
   394                           ; 1 bytes @ 0x0
   395  0020                     	ds	1
   396  0021                     CONVhexa@temp:
   397                           
   398                           ; 1 bytes @ 0x1
   399  0021                     	ds	1
   400  0022                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x2
   403  0022                     	ds	2
   404                           
   405                           	psect	maintext
   406  00BD                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 73 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       2       0       0       0
   429 ;;      Totals:         0       2       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels required when called:    3
   432 ;; This function calls:
   433 ;;		_CONVhexa
   434 ;;		_configuracion
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  00BD                     _main:
   443  00BD                     l982:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 74:     configuracion();
   449  00BD  120A  118A  208F  120A  118A  	fcall	_configuracion
   450  00C2                     l984:
   451                           
   452                           ;main.c: 76:         if(tempo && !ADCON0bits.GO)CONVhexa(ADRESH,&uphex,&lowhex);
   453  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   454  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   455  00C4  0824               	movf	_tempo,w
   456  00C5  1903               	btfsc	3,2
   457  00C6  28C8               	goto	u201
   458  00C7  28C9               	goto	u200
   459  00C8                     u201:
   460  00C8  28DB               	goto	l990
   461  00C9                     u200:
   462  00C9                     l986:
   463  00C9  189F               	btfsc	31,1	;volatile
   464  00CA  28CC               	goto	u211
   465  00CB  28CD               	goto	u210
   466  00CC                     u211:
   467  00CC  28DB               	goto	l990
   468  00CD                     u210:
   469  00CD                     l988:
   470  00CD  3079               	movlw	(low (_uphex| 0))& (0+255)
   471  00CE  00A2               	movwf	??_main
   472  00CF  0822               	movf	??_main,w
   473  00D0  00F3               	movwf	CONVhexa@upper
   474  00D1  3078               	movlw	(low (_lowhex| 0))& (0+255)
   475  00D2  00A3               	movwf	??_main+1
   476  00D3  0823               	movf	??_main+1,w
   477  00D4  00F4               	movwf	CONVhexa@lower
   478  00D5  081E               	movf	30,w	;volatile
   479  00D6  120A  118A  20E3  120A  118A  	fcall	_CONVhexa
   480  00DB                     l990:
   481                           
   482                           ;main.c: 79:         PORTD = referencia;
   483  00DB  0877               	movf	_referencia,w
   484  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   485  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   486  00DE  0088               	movwf	8	;volatile
   487  00DF  28C2               	goto	l984
   488  00E0  120A  118A  280C   	ljmp	start
   489  00E3                     __end_of_main:
   490                           
   491                           	psect	text1
   492  008F                     __ptext1:	
   493 ;; *************** function _configuracion *****************
   494 ;; Defined at:
   495 ;;		line 87 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    2
   516 ;; This function calls:
   517 ;;		_ADCconfig
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _configuracion
   525  008F                     _configuracion:
   526  008F                     l860:	
   527                           ;incstack = 0
   528                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;main.c: 89:     ANSEL = 0X01;
   532  008F  3001               	movlw	1
   533  0090  1683               	bsf	3,5	;RP0=1, select bank3
   534  0091  1703               	bsf	3,6	;RP1=1, select bank3
   535  0092  0088               	movwf	8	;volatile
   536  0093                     l862:
   537                           
   538                           ;main.c: 90:     ANSELH = 0X00;
   539  0093  0189               	clrf	9	;volatile
   540  0094                     l864:
   541                           
   542                           ;main.c: 91:     TRISA = 0X01;
   543  0094  3001               	movlw	1
   544  0095  1683               	bsf	3,5	;RP0=1, select bank1
   545  0096  1303               	bcf	3,6	;RP1=0, select bank1
   546  0097  0085               	movwf	5	;volatile
   547  0098                     l866:
   548                           
   549                           ;main.c: 92:     TRISB = 0X03;
   550  0098  3003               	movlw	3
   551  0099  0086               	movwf	6	;volatile
   552  009A                     l868:
   553                           
   554                           ;main.c: 93:     TRISC = 0X00;
   555  009A  0187               	clrf	7	;volatile
   556  009B                     l870:
   557                           
   558                           ;main.c: 94:     TRISD = 0X00;
   559  009B  0188               	clrf	8	;volatile
   560  009C                     l872:
   561                           
   562                           ;main.c: 95:     TRISE = 0X00;
   563  009C  0189               	clrf	9	;volatile
   564  009D                     l874:
   565                           
   566                           ;main.c: 96:     PORTA = 0X00;
   567  009D  1283               	bcf	3,5	;RP0=0, select bank0
   568  009E  1303               	bcf	3,6	;RP1=0, select bank0
   569  009F  0185               	clrf	5	;volatile
   570  00A0                     l876:
   571                           
   572                           ;main.c: 97:     PORTB = 0X00;
   573  00A0  0186               	clrf	6	;volatile
   574  00A1                     l878:
   575                           
   576                           ;main.c: 98:     PORTC = 0X00;
   577  00A1  0187               	clrf	7	;volatile
   578  00A2                     l880:
   579                           
   580                           ;main.c: 99:     PORTD = 0X00;
   581  00A2  0188               	clrf	8	;volatile
   582  00A3                     l882:
   583                           
   584                           ;main.c: 100:     PORTE = 0X00;
   585  00A3  0189               	clrf	9	;volatile
   586  00A4                     l884:
   587                           
   588                           ;main.c: 103:     OSCCONbits.IRCF = 0b111;
   589  00A4  3070               	movlw	112
   590  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   591  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   592  00A7  048F               	iorwf	15,f	;volatile
   593  00A8                     l886:
   594                           
   595                           ;main.c: 104:     OSCCONbits.SCS = 0b1;
   596  00A8  140F               	bsf	15,0	;volatile
   597  00A9                     l888:
   598                           
   599                           ;main.c: 107:     IOCBbits.IOCB0 = 1;
   600  00A9  1416               	bsf	22,0	;volatile
   601  00AA                     l890:
   602                           
   603                           ;main.c: 108:     IOCBbits.IOCB1 = 1;
   604  00AA  1496               	bsf	22,1	;volatile
   605  00AB                     l892:
   606                           
   607                           ;main.c: 111:     INTCONbits.RBIF = 0;
   608  00AB  100B               	bcf	11,0	;volatile
   609  00AC                     l894:
   610                           
   611                           ;main.c: 112:     INTCONbits.RBIE = 1;
   612  00AC  158B               	bsf	11,3	;volatile
   613  00AD                     l896:
   614                           
   615                           ;main.c: 113:     INTCONbits.T0IF = 0;
   616  00AD  110B               	bcf	11,2	;volatile
   617  00AE                     l898:
   618                           
   619                           ;main.c: 114:     INTCONbits.T0IE = 1;
   620  00AE  168B               	bsf	11,5	;volatile
   621  00AF                     l900:
   622                           
   623                           ;main.c: 115:     INTCONbits.GIE = 1;
   624  00AF  178B               	bsf	11,7	;volatile
   625  00B0                     l902:
   626                           
   627                           ;main.c: 118:     OPTION_REGbits.T0CS = 0;
   628  00B0  1281               	bcf	1,5	;volatile
   629  00B1                     l904:
   630                           
   631                           ;main.c: 119:     OPTION_REGbits.PSA = 0;
   632  00B1  1181               	bcf	1,3	;volatile
   633  00B2                     l906:
   634                           
   635                           ;main.c: 120:     OPTION_REGbits.PS2 = 1;
   636  00B2  1501               	bsf	1,2	;volatile
   637  00B3                     l908:
   638                           
   639                           ;main.c: 121:     OPTION_REGbits.PS1 = 0;
   640  00B3  1081               	bcf	1,1	;volatile
   641  00B4                     l910:
   642                           
   643                           ;main.c: 122:     OPTION_REGbits.PS0 = 0;
   644  00B4  1001               	bcf	1,0	;volatile
   645  00B5                     l912:
   646                           
   647                           ;main.c: 125:     ADCconfig(0,0);
   648  00B5  01F3               	clrf	ADCconfig@just
   649  00B6  3000               	movlw	0
   650  00B7  120A  118A  2019  120A  118A  	fcall	_ADCconfig
   651  00BC                     l73:
   652  00BC  0008               	return
   653  00BD                     __end_of_configuracion:
   654                           
   655                           	psect	text2
   656  0019                     __ptext2:	
   657 ;; *************** function _ADCconfig *****************
   658 ;; Defined at:
   659 ;;		line 10 in file "despliegue7SEG.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  canal           1    wreg     unsigned char 
   662 ;;  just            1    3[COMMON] unsigned char 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  canal           1    6[COMMON] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         1       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0
   676 ;;      Temps:          2       0       0       0       0
   677 ;;      Totals:         4       0       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_configuracion
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _ADCconfig
   690  0019                     _ADCconfig:
   691                           
   692                           ;incstack = 0
   693                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
   694                           ;ADCconfig@canal stored from wreg
   695  0019  00F6               	movwf	ADCconfig@canal
   696  001A                     l830:
   697                           
   698                           ;despliegue7SEG.c: 11:     switch(OSCCONbits.IRCF){
   699  001A  2833               	goto	l842
   700  001B                     l832:
   701                           
   702                           ;despliegue7SEG.c: 13:             ADCON0bits.ADCS = 0b000;
   703  001B  303F               	movlw	-193
   704  001C  1283               	bcf	3,5	;RP0=0, select bank0
   705  001D  1303               	bcf	3,6	;RP1=0, select bank0
   706  001E  059F               	andwf	31,f	;volatile
   707                           
   708                           ;despliegue7SEG.c: 14:             break;
   709  001F  2849               	goto	l844
   710  0020                     l834:
   711                           
   712                           ;despliegue7SEG.c: 16:             ADCON0bits.ADCS = 0b001;
   713  0020  1283               	bcf	3,5	;RP0=0, select bank0
   714  0021  1303               	bcf	3,6	;RP1=0, select bank0
   715  0022  081F               	movf	31,w	;volatile
   716  0023  393F               	andlw	-193
   717  0024  3840               	iorlw	64
   718  0025  009F               	movwf	31	;volatile
   719                           
   720                           ;despliegue7SEG.c: 17:             break;
   721  0026  2849               	goto	l844
   722  0027                     l836:
   723                           
   724                           ;despliegue7SEG.c: 19:             ADCON0bits.ADCS = 0b010;
   725  0027  1283               	bcf	3,5	;RP0=0, select bank0
   726  0028  1303               	bcf	3,6	;RP1=0, select bank0
   727  0029  081F               	movf	31,w	;volatile
   728  002A  393F               	andlw	-193
   729  002B  3880               	iorlw	128
   730  002C  009F               	movwf	31	;volatile
   731                           
   732                           ;despliegue7SEG.c: 20:             break;
   733  002D  2849               	goto	l844
   734  002E                     l838:
   735                           
   736                           ;despliegue7SEG.c: 22:             ADCON0bits.ADCS = 0b11;
   737  002E  30C0               	movlw	192
   738  002F  1283               	bcf	3,5	;RP0=0, select bank0
   739  0030  1303               	bcf	3,6	;RP1=0, select bank0
   740  0031  049F               	iorwf	31,f	;volatile
   741                           
   742                           ;despliegue7SEG.c: 23:             break;
   743  0032  2849               	goto	l844
   744  0033                     l842:
   745  0033  1683               	bsf	3,5	;RP0=1, select bank1
   746  0034  1303               	bcf	3,6	;RP1=0, select bank1
   747  0035  0E0F               	swapf	15,w	;volatile
   748  0036  3907               	andlw	7
   749  0037  00F4               	movwf	??_ADCconfig
   750  0038  01F5               	clrf	??_ADCconfig+1
   751                           
   752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   753                           ; Switch size 1, requested type "simple"
   754                           ; Number of cases is 1, Range of values is 0 to 0
   755                           ; switch strategies available:
   756                           ; Name         Instructions Cycles
   757                           ; simple_byte            4     3 (average)
   758                           ; direct_byte           11     8 (fixed)
   759                           ; jumptable            260     6 (fixed)
   760                           ;	Chosen strategy is simple_byte
   761  0039  0875               	movf	??_ADCconfig+1,w
   762  003A  3A00               	xorlw	0	; case 0
   763  003B  1903               	skipnz
   764  003C  283E               	goto	l1012
   765  003D  282E               	goto	l838
   766  003E                     l1012:
   767                           
   768                           ; Switch size 1, requested type "simple"
   769                           ; Number of cases is 3, Range of values is 4 to 7
   770                           ; switch strategies available:
   771                           ; Name         Instructions Cycles
   772                           ; simple_byte           10     6 (average)
   773                           ; direct_byte           23    11 (fixed)
   774                           ; jumptable            263     9 (fixed)
   775                           ;	Chosen strategy is simple_byte
   776  003E  0874               	movf	??_ADCconfig,w
   777  003F  3A04               	xorlw	4	; case 4
   778  0040  1903               	skipnz
   779  0041  281B               	goto	l832
   780  0042  3A02               	xorlw	2	; case 6
   781  0043  1903               	skipnz
   782  0044  2820               	goto	l834
   783  0045  3A01               	xorlw	1	; case 7
   784  0046  1903               	skipnz
   785  0047  2827               	goto	l836
   786  0048  282E               	goto	l838
   787  0049                     l844:
   788                           
   789                           ;despliegue7SEG.c: 25:     ADCON0bits.CHS = canal;
   790  0049  0876               	movf	ADCconfig@canal,w
   791  004A  00F4               	movwf	??_ADCconfig
   792  004B  0DF4               	rlf	??_ADCconfig,f
   793  004C  0DF4               	rlf	??_ADCconfig,f
   794  004D  081F               	movf	31,w	;volatile
   795  004E  0674               	xorwf	??_ADCconfig,w
   796  004F  39C3               	andlw	-61
   797  0050  0674               	xorwf	??_ADCconfig,w
   798  0051  009F               	movwf	31	;volatile
   799  0052                     l846:
   800                           
   801                           ;despliegue7SEG.c: 26:     ADCON0bits.GO = 0b0;
   802  0052  109F               	bcf	31,1	;volatile
   803  0053                     l848:
   804                           
   805                           ;despliegue7SEG.c: 27:     ADCON0bits.ADON = 0b1;
   806  0053  141F               	bsf	31,0	;volatile
   807  0054                     l850:
   808                           
   809                           ;despliegue7SEG.c: 28:     ADCON1bits.ADFM = just;
   810  0054  0C73               	rrf	ADCconfig@just,w
   811  0055  1683               	bsf	3,5	;RP0=1, select bank1
   812  0056  1303               	bcf	3,6	;RP1=0, select bank1
   813  0057  1C03               	skipc
   814  0058  139F               	bcf	31,7	;volatile
   815  0059  1803               	skipnc
   816  005A  179F               	bsf	31,7	;volatile
   817  005B                     l852:
   818                           
   819                           ;despliegue7SEG.c: 29:     ADCON1bits.VCFG1 = 0b0;
   820  005B  129F               	bcf	31,5	;volatile
   821  005C                     l854:
   822                           
   823                           ;despliegue7SEG.c: 30:     ADCON1bits.VCFG0 = 0b0;
   824  005C  121F               	bcf	31,4	;volatile
   825  005D                     l88:
   826  005D  0008               	return
   827  005E                     __end_of_ADCconfig:
   828                           
   829                           	psect	text3
   830  00E3                     __ptext3:	
   831 ;; *************** function _CONVhexa *****************
   832 ;; Defined at:
   833 ;;		line 35 in file "despliegue7SEG.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  valor           1    wreg     unsigned char 
   836 ;;  upper           1    3[COMMON] PTR unsigned char 
   837 ;;		 -> uphex(1), 
   838 ;;  lower           1    4[COMMON] PTR unsigned char 
   839 ;;		 -> lowhex(1), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  valor           1    0[BANK0 ] unsigned char 
   842 ;;  temp            1    1[BANK0 ] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         2       0       0       0       0
   853 ;;      Locals:         0       2       0       0       0
   854 ;;      Temps:          2       0       0       0       0
   855 ;;      Totals:         4       2       0       0       0
   856 ;;Total ram usage:        6 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _CONVhexa
   868  00E3                     _CONVhexa:
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _CONVhexa: [wreg-fsr0h+status,2+status,0]
   872                           ;CONVhexa@valor stored from wreg
   873  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   874  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   875  00E5  00A0               	movwf	CONVhexa@valor
   876  00E6                     l974:
   877                           
   878                           ;despliegue7SEG.c: 40:     uint8_t temp;;despliegue7SEG.c: 41:     temp = valor;
   879  00E6  0820               	movf	CONVhexa@valor,w
   880  00E7  00F5               	movwf	??_CONVhexa
   881  00E8  0875               	movf	??_CONVhexa,w
   882  00E9  00A1               	movwf	CONVhexa@temp
   883  00EA                     l976:
   884                           
   885                           ;despliegue7SEG.c: 42:     *lower = (temp & 0x0F);
   886  00EA  0821               	movf	CONVhexa@temp,w
   887  00EB  390F               	andlw	15
   888  00EC  00F5               	movwf	??_CONVhexa
   889  00ED  0874               	movf	CONVhexa@lower,w
   890  00EE  0084               	movwf	4
   891  00EF  0875               	movf	??_CONVhexa,w
   892  00F0  0080               	movwf	0
   893  00F1                     l978:
   894                           
   895                           ;despliegue7SEG.c: 43:     temp = temp>>4;
   896  00F1  0821               	movf	CONVhexa@temp,w
   897  00F2  00F5               	movwf	??_CONVhexa
   898  00F3  3004               	movlw	4
   899  00F4                     u195:
   900  00F4  1003               	clrc
   901  00F5  0CF5               	rrf	??_CONVhexa,f
   902  00F6  3EFF               	addlw	-1
   903  00F7  1D03               	skipz
   904  00F8  28F4               	goto	u195
   905  00F9  0875               	movf	??_CONVhexa,w
   906  00FA  00F6               	movwf	??_CONVhexa+1
   907  00FB  0876               	movf	??_CONVhexa+1,w
   908  00FC  00A1               	movwf	CONVhexa@temp
   909  00FD                     l980:
   910                           
   911                           ;despliegue7SEG.c: 44:     *upper = (temp & 0x0F);
   912  00FD  0821               	movf	CONVhexa@temp,w
   913  00FE  390F               	andlw	15
   914  00FF  00F5               	movwf	??_CONVhexa
   915  0100  0873               	movf	CONVhexa@upper,w
   916  0101  0084               	movwf	4
   917  0102  0875               	movf	??_CONVhexa,w
   918  0103  0080               	movwf	0
   919  0104                     l91:
   920  0104  0008               	return
   921  0105                     __end_of_CONVhexa:
   922                           
   923                           	psect	text4
   924  005E                     __ptext4:	
   925 ;; *************** function _interrupcion *****************
   926 ;; Defined at:
   927 ;;		line 51 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          3       0       0       0       0
   944 ;;      Totals:         3       0       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		Interrupt level 1
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _interrupcion
   956  005E                     _interrupcion:
   957  005E                     i1l922:
   958                           
   959                           ;main.c: 53:     if(INTCONbits.RBIF && PORTBbits.RB0){
   960  005E  1C0B               	btfss	11,0	;volatile
   961  005F  2861               	goto	u11_21
   962  0060  2862               	goto	u11_20
   963  0061                     u11_21:
   964  0061  286D               	goto	i1l930
   965  0062                     u11_20:
   966  0062                     i1l924:
   967  0062  1283               	bcf	3,5	;RP0=0, select bank0
   968  0063  1303               	bcf	3,6	;RP1=0, select bank0
   969  0064  1C06               	btfss	6,0	;volatile
   970  0065  2867               	goto	u12_21
   971  0066  2868               	goto	u12_20
   972  0067                     u12_21:
   973  0067  286D               	goto	i1l930
   974  0068                     u12_20:
   975  0068                     i1l926:
   976                           
   977                           ;main.c: 54:         referencia++;
   978  0068  3001               	movlw	1
   979  0069  00F0               	movwf	??_interrupcion
   980  006A  0870               	movf	??_interrupcion,w
   981  006B  07F7               	addwf	_referencia,f
   982  006C                     i1l928:
   983                           
   984                           ;main.c: 55:         INTCONbits.RBIF = 0;
   985  006C  100B               	bcf	11,0	;volatile
   986  006D                     i1l930:
   987                           
   988                           ;main.c: 58:     if(INTCONbits.RBIF && PORTBbits.RB1){
   989  006D  1C0B               	btfss	11,0	;volatile
   990  006E  2870               	goto	u13_21
   991  006F  2871               	goto	u13_20
   992  0070                     u13_21:
   993  0070  287A               	goto	i1l938
   994  0071                     u13_20:
   995  0071                     i1l932:
   996  0071  1283               	bcf	3,5	;RP0=0, select bank0
   997  0072  1303               	bcf	3,6	;RP1=0, select bank0
   998  0073  1C86               	btfss	6,1	;volatile
   999  0074  2876               	goto	u14_21
  1000  0075  2877               	goto	u14_20
  1001  0076                     u14_21:
  1002  0076  287A               	goto	i1l938
  1003  0077                     u14_20:
  1004  0077                     i1l934:
  1005                           
  1006                           ;main.c: 59:         referencia--;
  1007  0077  3001               	movlw	1
  1008  0078  02F7               	subwf	_referencia,f
  1009  0079                     i1l936:
  1010                           
  1011                           ;main.c: 60:         INTCONbits.RBIF = 0;
  1012  0079  100B               	bcf	11,0	;volatile
  1013  007A                     i1l938:
  1014                           
  1015                           ;main.c: 63:     if(INTCONbits.T0IF){
  1016  007A  1D0B               	btfss	11,2	;volatile
  1017  007B  287D               	goto	u15_21
  1018  007C  287E               	goto	u15_20
  1019  007D                     u15_21:
  1020  007D  2888               	goto	i1l61
  1021  007E                     u15_20:
  1022  007E                     i1l940:
  1023                           
  1024                           ;main.c: 64:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  1025  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1026  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0080  189F               	btfsc	31,1	;volatile
  1028  0081  2883               	goto	u16_21
  1029  0082  2884               	goto	u16_20
  1030  0083                     u16_21:
  1031  0083  2885               	goto	i1l60
  1032  0084                     u16_20:
  1033  0084                     i1l942:
  1034  0084  149F               	bsf	31,1	;volatile
  1035  0085                     i1l60:
  1036                           
  1037                           ;main.c: 65:         tempo = 1;
  1038  0085  01A4               	clrf	_tempo
  1039  0086  0AA4               	incf	_tempo,f
  1040                           
  1041                           ;main.c: 66:         INTCONbits.T0IF = 0;
  1042  0087  110B               	bcf	11,2	;volatile
  1043  0088                     i1l61:
  1044  0088  0872               	movf	??_interrupcion+2,w
  1045  0089  008A               	movwf	10
  1046  008A  0E71               	swapf	??_interrupcion+1,w
  1047  008B  0083               	movwf	3
  1048  008C  0EFE               	swapf	btemp,f
  1049  008D  0E7E               	swapf	btemp,w
  1050  008E  0009               	retfie
  1051  008F                     __end_of_interrupcion:
  1052  007E                     btemp	set	126	;btemp
  1053  007E                     wtemp0	set	126
  1054                           
  1055                           	psect	intentry
  1056  0004                     __pintentry:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  1059                           
  1060  0004                     interrupt_function:
  1061  007E                     saved_w	set	btemp
  1062  0004  00FE               	movwf	btemp
  1063  0005  0E03               	swapf	3,w
  1064  0006  00F1               	movwf	??_interrupcion+1
  1065  0007  080A               	movf	10,w
  1066  0008  00F2               	movwf	??_interrupcion+2
  1067  0009  120A  118A  285E   	ljmp	_interrupcion
  1068                           
  1069                           	psect	config
  1070                           
  1071                           ;Config register CONFIG1 @ 0x2007
  1072                           ;	Oscillator Selection bits
  1073                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1074                           ;	Watchdog Timer Enable bit
  1075                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRTE = OFF, PWRT disabled
  1078                           ;	RE3/MCLR pin function select bit
  1079                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1080                           ;	Code Protection bit
  1081                           ;	CP = OFF, Program memory code protection is disabled
  1082                           ;	Data Code Protection bit
  1083                           ;	CPD = OFF, Data memory code protection is disabled
  1084                           ;	Brown Out Reset Selection bits
  1085                           ;	BOREN = OFF, BOR disabled
  1086                           ;	Internal External Switchover bit
  1087                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1088                           ;	Fail-Safe Clock Monitor Enabled bit
  1089                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1090                           ;	Low Voltage Programming Enable bit
  1091                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1092                           ;	In-Circuit Debugger Mode bit
  1093                           ;	DEBUG = 0x1, unprogrammed default
  1094  2007                     	org	8199
  1095  2007  20F4               	dw	8436
  1096                           
  1097                           ;Config register CONFIG2 @ 0x2008
  1098                           ;	Brown-out Reset Selection bit
  1099                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1100                           ;	Flash Program Memory Self Write Enable bits
  1101                           ;	WRT = OFF, Write protection off
  1102  2008                     	org	8200
  1103  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CONVhexa@upper	PTR unsigned char  size(1) Largest target is 1
		 -> uphex(COMMON[1]), 

    CONVhexa@lower	PTR unsigned char  size(1) Largest target is 1
		 -> lowhex(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_CONVhexa
    _configuracion->_ADCconfig

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CONVhexa

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     492
                                              2 BANK0      2     2      0
                           _CONVhexa
                      _configuracion
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _CONVhexa                                             6     4      2     372
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVhexa
   _configuracion
     _ADCconfig

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 12:11:56 2021

                     l73 00BC                       l91 0104                       l88 005D  
         ?_configuracion 0070                      l900 00AF                      l830 001A  
                    l910 00B4                      l902 00B0                      l832 001B  
                    l912 00B5                      l904 00B1                      l850 0054  
                    l834 0020                      l842 0033                      l906 00B2  
                    l852 005B                      l836 0027                      l844 0049  
                    l908 00B3                      l860 008F                      l854 005C  
                    l846 0052                      l838 002E                      l870 009B  
                    l862 0093                      l848 0053                      l880 00A2  
                    l872 009C                      l864 0094                      l890 00AA  
                    l882 00A3                      l874 009D                      l866 0098  
                    l980 00FD                      l892 00AB                      l884 00A4  
                    l876 00A0                      l868 009A                      l974 00E6  
                    l894 00AC                      l886 00A8                      l878 00A1  
                    l990 00DB                      l982 00BD                      l976 00EA  
                    l896 00AD                      l888 00A9                      l984 00C2  
                    l978 00F1                      l898 00AE                      l986 00C9  
                    l988 00CD       __size_of_ADCconfig 0045                      u200 00C9  
                    u201 00C8                      u210 00CD                      u211 00CC  
                    u195 00F4                      fsr0 0004                      indf 0000  
                   l1012 003E                     i1l60 0085                     i1l61 0088  
                   _main 00BD                     btemp 007E                     start 000C  
       __end_of_CONVhexa 0105                    ?_main 0070                    _ANSEL 0188  
                  i1l930 006D                    i1l922 005E                    i1l940 007E  
                  i1l932 0071                    i1l924 0062                    i1l942 0084  
                  i1l934 0077                    i1l926 0068                    i1l936 0079  
                  i1l928 006C                    i1l938 007A                    u11_20 0062  
                  u11_21 0061                    u12_20 0068                    u12_21 0067  
                  u13_20 0071                    u13_21 0070                    u14_20 0077  
                  u14_21 0076                    u15_20 007E                    u15_21 007D  
                  u16_20 0084                    u16_21 0083                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _tempo 0024                    _uphex 0079                    pclath 000A  
                  status 0003                    wtemp0 007E        __end_of_ADCconfig 005E  
        __initialization 000F             CONVhexa@temp 0021             __end_of_main 00E3  
        ??_configuracion 0077                   ??_main 0022                   _ADRESH 001E  
                 _ANSELH 0189            ADCconfig@just 0073                   _lowhex 0078  
                 saved_w 007E  __end_of__initialization 0015                ?_CONVhexa 0073  
         __pcstackCOMMON 0070            ?_interrupcion 0070            CONVhexa@lower 0074  
          CONVhexa@valor 0020            CONVhexa@upper 0073           _OPTION_REGbits 0081  
             __pbssBANK0 0024               ??_CONVhexa 0075           ??_interrupcion 0070  
             __pmaintext 00BD               __pintentry 0004           ADCconfig@canal 0076  
              _ADCconfig 0019                  __ptext1 008F                  __ptext2 0019  
                __ptext3 00E3                  __ptext4 005E               _referencia 0077  
   end_of_initialization 0015               ?_ADCconfig 0073    __end_of_configuracion 00BD  
              _PORTBbits 0006     __end_of_interrupcion 008F        __size_of_CONVhexa 0022  
    start_initialization 000F              ??_ADCconfig 0074              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020    __size_of_interrupcion 0031  
      interrupt_function 0004                 _CONVhexa 00E3                 _IOCBbits 0096  
           _interrupcion 005E               _ADCON0bits 001F               _ADCON1bits 009F  
 __size_of_configuracion 002E            __size_of_main 0026               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F            _configuracion 008F  
