

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 14:50:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  0007                     _PORTC	set	7
   290  0009                     _PORTE	set	9
   291  0005                     _PORTAbits	set	5
   292  0008                     _PORTD	set	8
   293  001F                     _ADCON0bits	set	31
   294  001E                     _ADRESH	set	30
   295  0006                     _PORTBbits	set	6
   296  000B                     _INTCONbits	set	11
   297  009F                     _ADCON1bits	set	159
   298  0081                     _OPTION_REGbits	set	129
   299  0096                     _IOCBbits	set	150
   300  008F                     _OSCCONbits	set	143
   301  0089                     _TRISE	set	137
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308                           
   309                           	psect	cinit
   310  0011                     start_initialization:	
   311                           ; #config settings
   312                           
   313  0011                     __initialization:
   314                           
   315                           ; Clear objects allocated to COMMON
   316  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   317  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   318                           
   319                           ; Clear objects allocated to BANK0
   320  0013  1283               	bcf	3,5	;RP0=0, select bank0
   321  0014  1303               	bcf	3,6	;RP1=0, select bank0
   322  0015  01A6               	clrf	__pbssBANK0& (0+127)
   323  0016  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   324  0017  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   325  0018                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  0018                     __end_of__initialization:
   329  0018  0183               	clrf	3
   330  0019  120A  118A  287B   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMMON
   333  007B                     __pbssCOMMON:
   334  007B                     _lowhex:
   335  007B                     	ds	1
   336  007C                     _uphex:
   337  007C                     	ds	1
   338                           
   339                           	psect	bssBANK0
   340  0026                     __pbssBANK0:
   341  0026                     _tempo:
   342  0026                     	ds	1
   343  0027                     _multi:
   344  0027                     	ds	1
   345  0028                     _referencia:
   346  0028                     	ds	1
   347                           
   348                           	psect	cstackCOMMON
   349  0070                     __pcstackCOMMON:
   350  0070                     ?_CONVhexa:
   351  0070                     ?_configuracion:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_Seg7EQ:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_interrupcion:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     CONVhexa@upper:	
   364                           ; 1 bytes @ 0x0
   365                           
   366                           
   367                           ; 1 bytes @ 0x0
   368  0070                     	ds	1
   369  0071                     CONVhexa@lower:
   370                           
   371                           ; 1 bytes @ 0x1
   372  0071                     	ds	1
   373  0072                     ??_CONVhexa:
   374                           
   375                           ; 1 bytes @ 0x2
   376  0072                     	ds	2
   377  0074                     CONVhexa@valor:
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	1
   381  0075                     CONVhexa@temp:
   382                           
   383                           ; 1 bytes @ 0x5
   384  0075                     	ds	1
   385  0076                     ??_interrupcion:
   386                           
   387                           ; 1 bytes @ 0x6
   388  0076                     	ds	5
   389                           
   390                           	psect	cstackBANK0
   391  0020                     __pcstackBANK0:
   392  0020                     ??_Seg7EQ:
   393  0020                     ?_ADCconfig:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0020                     ADCconfig@just:	
   397                           ; 1 bytes @ 0x0
   398                           
   399                           
   400                           ; 1 bytes @ 0x0
   401  0020                     	ds	1
   402  0021                     ??_ADCconfig:
   403                           
   404                           ; 1 bytes @ 0x1
   405  0021                     	ds	1
   406  0022                     Seg7EQ@dato:
   407                           
   408                           ; 1 bytes @ 0x2
   409  0022                     	ds	1
   410  0023                     ADCconfig@canal:
   411                           
   412                           ; 1 bytes @ 0x3
   413  0023                     	ds	1
   414  0024                     ??_configuracion:
   415  0024                     ??_main:	
   416                           ; 1 bytes @ 0x4
   417                           
   418                           
   419                           ; 1 bytes @ 0x4
   420  0024                     	ds	2
   421                           
   422                           	psect	maintext
   423  007B                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 77 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : B00/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          0       2       0       0       0
   446 ;;      Totals:         0       2       0       0       0
   447 ;;Total ram usage:        2 bytes
   448 ;; Hardware stack levels required when called:    4
   449 ;; This function calls:
   450 ;;		_Seg7EQ
   451 ;;		_configuracion
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _main
   459  007B                     _main:
   460  007B                     l1277:	
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   463                           
   464                           
   465                           ;main.c: 78:     configuracion();
   466  007B  120A  118A  2152  120A  118A  	fcall	_configuracion
   467  0080                     l1279:
   468                           
   469                           ;main.c: 81:         PORTD = referencia;
   470  0080  1283               	bcf	3,5	;RP0=0, select bank0
   471  0081  1303               	bcf	3,6	;RP1=0, select bank0
   472  0082  0828               	movf	_referencia,w
   473  0083  0088               	movwf	8	;volatile
   474  0084                     l1281:
   475                           
   476                           ;main.c: 83:         if(ADRESH>referencia)PORTAbits.RA1 = 1;
   477  0084  081E               	movf	30,w	;volatile
   478  0085  0228               	subwf	_referencia,w
   479  0086  1803               	skipnc
   480  0087  2889               	goto	u181
   481  0088  288A               	goto	u180
   482  0089                     u181:
   483  0089  288C               	goto	l73
   484  008A                     u180:
   485  008A                     l1283:
   486  008A  1485               	bsf	5,1	;volatile
   487  008B  288D               	goto	l1285
   488  008C                     l73:	
   489                           ;main.c: 84:         else PORTAbits.RA1 = 0;
   490                           
   491  008C  1085               	bcf	5,1	;volatile
   492  008D                     l1285:
   493                           
   494                           ;main.c: 86:         if(tempo){
   495  008D  0826               	movf	_tempo,w
   496  008E  1903               	btfsc	3,2
   497  008F  2891               	goto	u191
   498  0090  2892               	goto	u190
   499  0091                     u191:
   500  0091  2880               	goto	l1279
   501  0092                     u190:
   502  0092                     l1287:
   503                           
   504                           ;main.c: 87:             multi++;
   505  0092  3001               	movlw	1
   506  0093  00A4               	movwf	??_main
   507  0094  0824               	movf	??_main,w
   508  0095  07A7               	addwf	_multi,f
   509  0096                     l1289:
   510                           
   511                           ;main.c: 88:             if(multi>=2)multi = 0;
   512  0096  3002               	movlw	2
   513  0097  0227               	subwf	_multi,w
   514  0098  1C03               	skipc
   515  0099  289B               	goto	u201
   516  009A  289C               	goto	u200
   517  009B                     u201:
   518  009B  28B8               	goto	l1307
   519  009C                     u200:
   520  009C                     l1291:
   521  009C  01A7               	clrf	_multi
   522  009D  28B8               	goto	l1307
   523  009E                     l1293:
   524                           
   525                           ;main.c: 91:                 PORTE = 0;
   526  009E  0189               	clrf	9	;volatile
   527  009F                     l1295:
   528                           
   529                           ;main.c: 92:                 PORTC = Seg7EQ(uphex);
   530  009F  087C               	movf	_uphex,w
   531  00A0  120A  118A  201C  120A  118A  	fcall	_Seg7EQ
   532  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   533  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   534  00A7  0087               	movwf	7	;volatile
   535  00A8                     l1297:
   536                           
   537                           ;main.c: 93:                 PORTE = 0x01;
   538  00A8  3001               	movlw	1
   539  00A9  0089               	movwf	9	;volatile
   540                           
   541                           ;main.c: 94:                 break;
   542  00AA  28C8               	goto	l1309
   543  00AB                     l1299:
   544                           
   545                           ;main.c: 96:                 PORTE = 0;
   546  00AB  0189               	clrf	9	;volatile
   547  00AC                     l1301:
   548                           
   549                           ;main.c: 97:                 PORTC = Seg7EQ(lowhex);
   550  00AC  087B               	movf	_lowhex,w
   551  00AD  120A  118A  201C  120A  118A  	fcall	_Seg7EQ
   552  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   553  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   554  00B4  0087               	movwf	7	;volatile
   555  00B5                     l1303:
   556                           
   557                           ;main.c: 98:                 PORTE = 0x02;
   558  00B5  3002               	movlw	2
   559  00B6  0089               	movwf	9	;volatile
   560                           
   561                           ;main.c: 99:                 break;
   562  00B7  28C8               	goto	l1309
   563  00B8                     l1307:
   564  00B8  0827               	movf	_multi,w
   565  00B9  00A4               	movwf	??_main
   566  00BA  01A5               	clrf	??_main+1
   567                           
   568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   569                           ; Switch size 1, requested type "simple"
   570                           ; Number of cases is 1, Range of values is 0 to 0
   571                           ; switch strategies available:
   572                           ; Name         Instructions Cycles
   573                           ; simple_byte            4     3 (average)
   574                           ; direct_byte           11     8 (fixed)
   575                           ; jumptable            260     6 (fixed)
   576                           ;	Chosen strategy is simple_byte
   577  00BB  0825               	movf	??_main+1,w
   578  00BC  3A00               	xorlw	0	; case 0
   579  00BD  1903               	skipnz
   580  00BE  28C0               	goto	l1395
   581  00BF  28C8               	goto	l1309
   582  00C0                     l1395:
   583                           
   584                           ; Switch size 1, requested type "simple"
   585                           ; Number of cases is 2, Range of values is 0 to 1
   586                           ; switch strategies available:
   587                           ; Name         Instructions Cycles
   588                           ; simple_byte            7     4 (average)
   589                           ; direct_byte           14     8 (fixed)
   590                           ; jumptable            260     6 (fixed)
   591                           ;	Chosen strategy is simple_byte
   592  00C0  0824               	movf	??_main,w
   593  00C1  3A00               	xorlw	0	; case 0
   594  00C2  1903               	skipnz
   595  00C3  289E               	goto	l1293
   596  00C4  3A01               	xorlw	1	; case 1
   597  00C5  1903               	skipnz
   598  00C6  28AB               	goto	l1299
   599  00C7  28C8               	goto	l1309
   600  00C8                     l1309:
   601                           
   602                           ;main.c: 103:         tempo = 0;
   603  00C8  01A6               	clrf	_tempo
   604  00C9  2880               	goto	l1279
   605  00CA  120A  118A  280E   	ljmp	start
   606  00CD                     __end_of_main:
   607                           
   608                           	psect	text1
   609  0152                     __ptext1:	
   610 ;; *************** function _configuracion *****************
   611 ;; Defined at:
   612 ;;		line 111 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    3
   633 ;; This function calls:
   634 ;;		_ADCconfig
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _configuracion
   642  0152                     _configuracion:
   643  0152                     l1085:	
   644                           ;incstack = 0
   645                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   646                           
   647                           
   648                           ;main.c: 113:     ANSEL = 0X01;
   649  0152  3001               	movlw	1
   650  0153  1683               	bsf	3,5	;RP0=1, select bank3
   651  0154  1703               	bsf	3,6	;RP1=1, select bank3
   652  0155  0088               	movwf	8	;volatile
   653  0156                     l1087:
   654                           
   655                           ;main.c: 114:     ANSELH = 0X00;
   656  0156  0189               	clrf	9	;volatile
   657  0157                     l1089:
   658                           
   659                           ;main.c: 115:     TRISA = 0X01;
   660  0157  3001               	movlw	1
   661  0158  1683               	bsf	3,5	;RP0=1, select bank1
   662  0159  1303               	bcf	3,6	;RP1=0, select bank1
   663  015A  0085               	movwf	5	;volatile
   664  015B                     l1091:
   665                           
   666                           ;main.c: 116:     TRISB = 0X03;
   667  015B  3003               	movlw	3
   668  015C  0086               	movwf	6	;volatile
   669  015D                     l1093:
   670                           
   671                           ;main.c: 117:     TRISC = 0X00;
   672  015D  0187               	clrf	7	;volatile
   673  015E                     l1095:
   674                           
   675                           ;main.c: 118:     TRISD = 0X00;
   676  015E  0188               	clrf	8	;volatile
   677  015F                     l1097:
   678                           
   679                           ;main.c: 119:     TRISE = 0X00;
   680  015F  0189               	clrf	9	;volatile
   681  0160                     l1099:
   682                           
   683                           ;main.c: 120:     PORTA = 0X00;
   684  0160  1283               	bcf	3,5	;RP0=0, select bank0
   685  0161  1303               	bcf	3,6	;RP1=0, select bank0
   686  0162  0185               	clrf	5	;volatile
   687  0163                     l1101:
   688                           
   689                           ;main.c: 121:     PORTB = 0X00;
   690  0163  0186               	clrf	6	;volatile
   691  0164                     l1103:
   692                           
   693                           ;main.c: 122:     PORTC = 0X00;
   694  0164  0187               	clrf	7	;volatile
   695  0165                     l1105:
   696                           
   697                           ;main.c: 123:     PORTD = 0X00;
   698  0165  0188               	clrf	8	;volatile
   699                           
   700                           ;main.c: 124:     PORTE = 0X01;
   701  0166  3001               	movlw	1
   702  0167  0089               	movwf	9	;volatile
   703  0168                     l1107:
   704                           
   705                           ;main.c: 127:     OSCCONbits.IRCF = 0b111;
   706  0168  3070               	movlw	112
   707  0169  1683               	bsf	3,5	;RP0=1, select bank1
   708  016A  1303               	bcf	3,6	;RP1=0, select bank1
   709  016B  048F               	iorwf	15,f	;volatile
   710  016C                     l1109:
   711                           
   712                           ;main.c: 128:     OSCCONbits.SCS = 0b1;
   713  016C  140F               	bsf	15,0	;volatile
   714  016D                     l1111:
   715                           
   716                           ;main.c: 131:     IOCBbits.IOCB0 = 1;
   717  016D  1416               	bsf	22,0	;volatile
   718  016E                     l1113:
   719                           
   720                           ;main.c: 132:     IOCBbits.IOCB1 = 1;
   721  016E  1496               	bsf	22,1	;volatile
   722  016F                     l1115:
   723                           
   724                           ;main.c: 135:     INTCONbits.RBIF = 0;
   725  016F  100B               	bcf	11,0	;volatile
   726  0170                     l1117:
   727                           
   728                           ;main.c: 136:     INTCONbits.RBIE = 1;
   729  0170  158B               	bsf	11,3	;volatile
   730  0171                     l1119:
   731                           
   732                           ;main.c: 137:     INTCONbits.T0IF = 0;
   733  0171  110B               	bcf	11,2	;volatile
   734  0172                     l1121:
   735                           
   736                           ;main.c: 138:     INTCONbits.T0IE = 1;
   737  0172  168B               	bsf	11,5	;volatile
   738  0173                     l1123:
   739                           
   740                           ;main.c: 139:     INTCONbits.GIE = 1;
   741  0173  178B               	bsf	11,7	;volatile
   742  0174                     l1125:
   743                           
   744                           ;main.c: 142:     OPTION_REGbits.T0CS = 0;
   745  0174  1281               	bcf	1,5	;volatile
   746  0175                     l1127:
   747                           
   748                           ;main.c: 143:     OPTION_REGbits.PSA = 0;
   749  0175  1181               	bcf	1,3	;volatile
   750  0176                     l1129:
   751                           
   752                           ;main.c: 144:     OPTION_REGbits.PS2 = 1;
   753  0176  1501               	bsf	1,2	;volatile
   754  0177                     l1131:
   755                           
   756                           ;main.c: 145:     OPTION_REGbits.PS1 = 1;
   757  0177  1481               	bsf	1,1	;volatile
   758  0178                     l1133:
   759                           
   760                           ;main.c: 146:     OPTION_REGbits.PS0 = 0;
   761  0178  1001               	bcf	1,0	;volatile
   762  0179                     l1135:
   763                           
   764                           ;main.c: 149:     ADCconfig(0,0);
   765  0179  1283               	bcf	3,5	;RP0=0, select bank0
   766  017A  1303               	bcf	3,6	;RP1=0, select bank0
   767  017B  01A0               	clrf	ADCconfig@just
   768  017C  3000               	movlw	0
   769  017D  120A  118A  2111  120A  118A  	fcall	_ADCconfig
   770  0182                     l87:
   771  0182  0008               	return
   772  0183                     __end_of_configuracion:
   773                           
   774                           	psect	text2
   775  0111                     __ptext2:	
   776 ;; *************** function _ADCconfig *****************
   777 ;; Defined at:
   778 ;;		line 10 in file "despliegue7SEG.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  canal           1    wreg     unsigned char 
   781 ;;  just            1    0[BANK0 ] unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  canal           1    3[BANK0 ] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       1       0       0       0
   794 ;;      Locals:         0       1       0       0       0
   795 ;;      Temps:          0       2       0       0       0
   796 ;;      Totals:         0       4       0       0       0
   797 ;;Total ram usage:        4 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    2
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_configuracion
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _ADCconfig
   809  0111                     _ADCconfig:
   810                           
   811                           ;incstack = 0
   812                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
   813                           ;ADCconfig@canal stored from wreg
   814  0111  1283               	bcf	3,5	;RP0=0, select bank0
   815  0112  1303               	bcf	3,6	;RP1=0, select bank0
   816  0113  00A3               	movwf	ADCconfig@canal
   817  0114                     l1045:
   818                           
   819                           ;despliegue7SEG.c: 15:     switch(OSCCONbits.IRCF){
   820  0114  2925               	goto	l1057
   821  0115                     l1047:
   822                           
   823                           ;despliegue7SEG.c: 17:             ADCON0bits.ADCS = 0b000;
   824  0115  303F               	movlw	-193
   825  0116  059F               	andwf	31,f	;volatile
   826                           
   827                           ;despliegue7SEG.c: 18:             break;
   828  0117  293D               	goto	l1059
   829  0118                     l1049:
   830                           
   831                           ;despliegue7SEG.c: 20:             ADCON0bits.ADCS = 0b001;
   832  0118  081F               	movf	31,w	;volatile
   833  0119  393F               	andlw	-193
   834  011A  3840               	iorlw	64
   835  011B  009F               	movwf	31	;volatile
   836                           
   837                           ;despliegue7SEG.c: 21:             break;
   838  011C  293D               	goto	l1059
   839  011D                     l1051:
   840                           
   841                           ;despliegue7SEG.c: 23:             ADCON0bits.ADCS = 0b010;
   842  011D  081F               	movf	31,w	;volatile
   843  011E  393F               	andlw	-193
   844  011F  3880               	iorlw	128
   845  0120  009F               	movwf	31	;volatile
   846                           
   847                           ;despliegue7SEG.c: 24:             break;
   848  0121  293D               	goto	l1059
   849  0122                     l1053:
   850                           
   851                           ;despliegue7SEG.c: 26:             ADCON0bits.ADCS = 0b11;
   852  0122  30C0               	movlw	192
   853  0123  049F               	iorwf	31,f	;volatile
   854                           
   855                           ;despliegue7SEG.c: 27:             break;
   856  0124  293D               	goto	l1059
   857  0125                     l1057:
   858  0125  1683               	bsf	3,5	;RP0=1, select bank1
   859  0126  1303               	bcf	3,6	;RP1=0, select bank1
   860  0127  0E0F               	swapf	15,w	;volatile
   861  0128  3907               	andlw	7
   862  0129  1283               	bcf	3,5	;RP0=0, select bank0
   863  012A  1303               	bcf	3,6	;RP1=0, select bank0
   864  012B  00A1               	movwf	??_ADCconfig
   865  012C  01A2               	clrf	??_ADCconfig+1
   866                           
   867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 1, Range of values is 0 to 0
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ; direct_byte           11     8 (fixed)
   874                           ; jumptable            260     6 (fixed)
   875                           ;	Chosen strategy is simple_byte
   876  012D  0822               	movf	??_ADCconfig+1,w
   877  012E  3A00               	xorlw	0	; case 0
   878  012F  1903               	skipnz
   879  0130  2932               	goto	l1397
   880  0131  2922               	goto	l1053
   881  0132                     l1397:
   882                           
   883                           ; Switch size 1, requested type "simple"
   884                           ; Number of cases is 3, Range of values is 4 to 7
   885                           ; switch strategies available:
   886                           ; Name         Instructions Cycles
   887                           ; simple_byte           10     6 (average)
   888                           ; direct_byte           23    11 (fixed)
   889                           ; jumptable            263     9 (fixed)
   890                           ;	Chosen strategy is simple_byte
   891  0132  0821               	movf	??_ADCconfig,w
   892  0133  3A04               	xorlw	4	; case 4
   893  0134  1903               	skipnz
   894  0135  2915               	goto	l1047
   895  0136  3A02               	xorlw	2	; case 6
   896  0137  1903               	skipnz
   897  0138  2918               	goto	l1049
   898  0139  3A01               	xorlw	1	; case 7
   899  013A  1903               	skipnz
   900  013B  291D               	goto	l1051
   901  013C  2922               	goto	l1053
   902  013D                     l1059:
   903                           
   904                           ;despliegue7SEG.c: 29:     ADCON0bits.CHS = canal;
   905  013D  0823               	movf	ADCconfig@canal,w
   906  013E  00A1               	movwf	??_ADCconfig
   907  013F  0DA1               	rlf	??_ADCconfig,f
   908  0140  0DA1               	rlf	??_ADCconfig,f
   909  0141  081F               	movf	31,w	;volatile
   910  0142  0621               	xorwf	??_ADCconfig,w
   911  0143  39C3               	andlw	-61
   912  0144  0621               	xorwf	??_ADCconfig,w
   913  0145  009F               	movwf	31	;volatile
   914  0146                     l1061:
   915                           
   916                           ;despliegue7SEG.c: 30:     ADCON0bits.GO = 0b0;
   917  0146  109F               	bcf	31,1	;volatile
   918  0147                     l1063:
   919                           
   920                           ;despliegue7SEG.c: 31:     ADCON0bits.ADON = 0b1;
   921  0147  141F               	bsf	31,0	;volatile
   922  0148                     l1065:
   923                           
   924                           ;despliegue7SEG.c: 32:     ADCON1bits.ADFM = just;
   925  0148  0C20               	rrf	ADCconfig@just,w
   926  0149  1683               	bsf	3,5	;RP0=1, select bank1
   927  014A  1303               	bcf	3,6	;RP1=0, select bank1
   928  014B  1C03               	skipc
   929  014C  139F               	bcf	31,7	;volatile
   930  014D  1803               	skipnc
   931  014E  179F               	bsf	31,7	;volatile
   932  014F                     l1067:
   933                           
   934                           ;despliegue7SEG.c: 33:     ADCON1bits.VCFG1 = 0b0;
   935  014F  129F               	bcf	31,5	;volatile
   936  0150                     l1069:
   937                           
   938                           ;despliegue7SEG.c: 34:     ADCON1bits.VCFG0 = 0b0;
   939  0150  121F               	bcf	31,4	;volatile
   940  0151                     l102:
   941  0151  0008               	return
   942  0152                     __end_of_ADCconfig:
   943                           
   944                           	psect	text3
   945  001C                     __ptext3:	
   946 ;; *************** function _Seg7EQ *****************
   947 ;; Defined at:
   948 ;;		line 54 in file "despliegue7SEG.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  dato            1    wreg     unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  dato            1    2[BANK0 ] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      unsigned char 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       1       0       0       0
   964 ;;      Temps:          0       2       0       0       0
   965 ;;      Totals:         0       3       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    2
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _Seg7EQ
   978  001C                     _Seg7EQ:
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _Seg7EQ: [wreg-fsr0h+status,2+status,0]
   982                           ;Seg7EQ@dato stored from wreg
   983  001C  1283               	bcf	3,5	;RP0=0, select bank0
   984  001D  1303               	bcf	3,6	;RP1=0, select bank0
   985  001E  00A2               	movwf	Seg7EQ@dato
   986  001F                     l1137:
   987                           
   988                           ;despliegue7SEG.c: 58:     switch(dato){
   989  001F  2840               	goto	l1243
   990  0020                     l1139:
   991                           
   992                           ;despliegue7SEG.c: 60:         return 0b00111111; break;
   993  0020  303F               	movlw	63
   994  0021  287A               	goto	l110
   995  0022                     l1145:
   996                           
   997                           ;despliegue7SEG.c: 62:         return 0b00000110; break;
   998  0022  3006               	movlw	6
   999  0023  287A               	goto	l110
  1000  0024                     l1151:
  1001                           
  1002                           ;despliegue7SEG.c: 64:         return 0b01011011; break;
  1003  0024  305B               	movlw	91
  1004  0025  287A               	goto	l110
  1005  0026                     l1157:
  1006                           
  1007                           ;despliegue7SEG.c: 66:         return 0b01001111; break;
  1008  0026  304F               	movlw	79
  1009  0027  287A               	goto	l110
  1010  0028                     l1163:
  1011                           
  1012                           ;despliegue7SEG.c: 68:         return 0b01100110; break;
  1013  0028  3066               	movlw	102
  1014  0029  287A               	goto	l110
  1015  002A                     l1169:
  1016                           
  1017                           ;despliegue7SEG.c: 70:         return 0b01101101; break;
  1018  002A  306D               	movlw	109
  1019  002B  287A               	goto	l110
  1020  002C                     l1175:
  1021                           
  1022                           ;despliegue7SEG.c: 72:         return 0b01111101; break;
  1023  002C  307D               	movlw	125
  1024  002D  287A               	goto	l110
  1025  002E                     l1181:
  1026                           
  1027                           ;despliegue7SEG.c: 74:         return 0b00000111; break;
  1028  002E  3007               	movlw	7
  1029  002F  287A               	goto	l110
  1030  0030                     l1187:
  1031                           
  1032                           ;despliegue7SEG.c: 76:         return 0b01111111; break;
  1033  0030  307F               	movlw	127
  1034  0031  287A               	goto	l110
  1035  0032                     l1193:
  1036                           
  1037                           ;despliegue7SEG.c: 78:         return 0b01100111; break;
  1038  0032  3067               	movlw	103
  1039  0033  287A               	goto	l110
  1040  0034                     l1199:
  1041                           
  1042                           ;despliegue7SEG.c: 80:         return 0b01110111; break;
  1043  0034  3077               	movlw	119
  1044  0035  287A               	goto	l110
  1045  0036                     l1205:
  1046                           
  1047                           ;despliegue7SEG.c: 82:         return 0b01111100; break;
  1048  0036  307C               	movlw	124
  1049  0037  287A               	goto	l110
  1050  0038                     l1211:
  1051                           
  1052                           ;despliegue7SEG.c: 84:         return 0b00111001; break;
  1053  0038  3039               	movlw	57
  1054  0039  287A               	goto	l110
  1055  003A                     l1217:
  1056                           
  1057                           ;despliegue7SEG.c: 86:         return 0b01011110; break;
  1058  003A  305E               	movlw	94
  1059  003B  287A               	goto	l110
  1060  003C                     l1223:
  1061                           
  1062                           ;despliegue7SEG.c: 88:         return 0b01111001; break;
  1063  003C  3079               	movlw	121
  1064  003D  287A               	goto	l110
  1065  003E                     l1229:
  1066                           
  1067                           ;despliegue7SEG.c: 90:         return 0b01110001; break;
  1068  003E  3071               	movlw	113
  1069  003F  287A               	goto	l110
  1070  0040                     l1243:
  1071  0040  0822               	movf	Seg7EQ@dato,w
  1072  0041  00A0               	movwf	??_Seg7EQ
  1073  0042  01A1               	clrf	??_Seg7EQ+1
  1074                           
  1075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1076                           ; Switch size 1, requested type "simple"
  1077                           ; Number of cases is 1, Range of values is 0 to 0
  1078                           ; switch strategies available:
  1079                           ; Name         Instructions Cycles
  1080                           ; simple_byte            4     3 (average)
  1081                           ; direct_byte           11     8 (fixed)
  1082                           ; jumptable            260     6 (fixed)
  1083                           ;	Chosen strategy is simple_byte
  1084  0043  0821               	movf	??_Seg7EQ+1,w
  1085  0044  3A00               	xorlw	0	; case 0
  1086  0045  1903               	skipnz
  1087  0046  2848               	goto	l1399
  1088  0047  2820               	goto	l1139
  1089  0048                     l1399:
  1090                           
  1091                           ; Switch size 1, requested type "simple"
  1092                           ; Number of cases is 16, Range of values is 0 to 15
  1093                           ; switch strategies available:
  1094                           ; Name         Instructions Cycles
  1095                           ; simple_byte           49    25 (average)
  1096                           ; direct_byte           56     8 (fixed)
  1097                           ; jumptable            260     6 (fixed)
  1098                           ;	Chosen strategy is simple_byte
  1099  0048  0820               	movf	??_Seg7EQ,w
  1100  0049  3A00               	xorlw	0	; case 0
  1101  004A  1903               	skipnz
  1102  004B  2820               	goto	l1139
  1103  004C  3A01               	xorlw	1	; case 1
  1104  004D  1903               	skipnz
  1105  004E  2822               	goto	l1145
  1106  004F  3A03               	xorlw	3	; case 2
  1107  0050  1903               	skipnz
  1108  0051  2824               	goto	l1151
  1109  0052  3A01               	xorlw	1	; case 3
  1110  0053  1903               	skipnz
  1111  0054  2826               	goto	l1157
  1112  0055  3A07               	xorlw	7	; case 4
  1113  0056  1903               	skipnz
  1114  0057  2828               	goto	l1163
  1115  0058  3A01               	xorlw	1	; case 5
  1116  0059  1903               	skipnz
  1117  005A  282A               	goto	l1169
  1118  005B  3A03               	xorlw	3	; case 6
  1119  005C  1903               	skipnz
  1120  005D  282C               	goto	l1175
  1121  005E  3A01               	xorlw	1	; case 7
  1122  005F  1903               	skipnz
  1123  0060  282E               	goto	l1181
  1124  0061  3A0F               	xorlw	15	; case 8
  1125  0062  1903               	skipnz
  1126  0063  2830               	goto	l1187
  1127  0064  3A01               	xorlw	1	; case 9
  1128  0065  1903               	skipnz
  1129  0066  2832               	goto	l1193
  1130  0067  3A03               	xorlw	3	; case 10
  1131  0068  1903               	skipnz
  1132  0069  2834               	goto	l1199
  1133  006A  3A01               	xorlw	1	; case 11
  1134  006B  1903               	skipnz
  1135  006C  2836               	goto	l1205
  1136  006D  3A07               	xorlw	7	; case 12
  1137  006E  1903               	skipnz
  1138  006F  2838               	goto	l1211
  1139  0070  3A01               	xorlw	1	; case 13
  1140  0071  1903               	skipnz
  1141  0072  283A               	goto	l1217
  1142  0073  3A03               	xorlw	3	; case 14
  1143  0074  1903               	skipnz
  1144  0075  283C               	goto	l1223
  1145  0076  3A01               	xorlw	1	; case 15
  1146  0077  1903               	skipnz
  1147  0078  283E               	goto	l1229
  1148  0079  2820               	goto	l1139
  1149  007A                     l110:
  1150  007A  0008               	return
  1151  007B                     __end_of_Seg7EQ:
  1152                           
  1153                           	psect	text4
  1154  00CD                     __ptext4:	
  1155 ;; *************** function _interrupcion *****************
  1156 ;; Defined at:
  1157 ;;		line 52 in file "main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0
  1173 ;;      Temps:          5       0       0       0       0
  1174 ;;      Totals:         5       0       0       0       0
  1175 ;;Total ram usage:        5 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		_CONVhexa
  1180 ;; This function is called by:
  1181 ;;		Interrupt level 1
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _interrupcion
  1187  00CD                     _interrupcion:
  1188  00CD                     i1l1251:
  1189                           
  1190                           ;main.c: 54:     if(INTCONbits.RBIF && PORTBbits.RB0){
  1191  00CD  1C0B               	btfss	11,0	;volatile
  1192  00CE  28D0               	goto	u12_21
  1193  00CF  28D1               	goto	u12_20
  1194  00D0                     u12_21:
  1195  00D0  28DC               	goto	i1l1259
  1196  00D1                     u12_20:
  1197  00D1                     i1l1253:
  1198  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00D3  1C06               	btfss	6,0	;volatile
  1201  00D4  28D6               	goto	u13_21
  1202  00D5  28D7               	goto	u13_20
  1203  00D6                     u13_21:
  1204  00D6  28DC               	goto	i1l1259
  1205  00D7                     u13_20:
  1206  00D7                     i1l1255:
  1207                           
  1208                           ;main.c: 55:         referencia++;
  1209  00D7  3001               	movlw	1
  1210  00D8  00F6               	movwf	??_interrupcion
  1211  00D9  0876               	movf	??_interrupcion,w
  1212  00DA  07A8               	addwf	_referencia,f
  1213  00DB                     i1l1257:
  1214                           
  1215                           ;main.c: 56:         INTCONbits.RBIF = 0;
  1216  00DB  100B               	bcf	11,0	;volatile
  1217  00DC                     i1l1259:
  1218                           
  1219                           ;main.c: 59:     if(INTCONbits.RBIF && PORTBbits.RB1){
  1220  00DC  1C0B               	btfss	11,0	;volatile
  1221  00DD  28DF               	goto	u14_21
  1222  00DE  28E0               	goto	u14_20
  1223  00DF                     u14_21:
  1224  00DF  28E9               	goto	i1l1267
  1225  00E0                     u14_20:
  1226  00E0                     i1l1261:
  1227  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1229  00E2  1C86               	btfss	6,1	;volatile
  1230  00E3  28E5               	goto	u15_21
  1231  00E4  28E6               	goto	u15_20
  1232  00E5                     u15_21:
  1233  00E5  28E9               	goto	i1l1267
  1234  00E6                     u15_20:
  1235  00E6                     i1l1263:
  1236                           
  1237                           ;main.c: 60:         referencia--;
  1238  00E6  3001               	movlw	1
  1239  00E7  02A8               	subwf	_referencia,f
  1240  00E8                     i1l1265:
  1241                           
  1242                           ;main.c: 61:         INTCONbits.RBIF = 0;
  1243  00E8  100B               	bcf	11,0	;volatile
  1244  00E9                     i1l1267:
  1245                           
  1246                           ;main.c: 63:         INTCONbits.RBIF = 0;
  1247  00E9  100B               	bcf	11,0	;volatile
  1248  00EA                     i1l1269:
  1249                           
  1250                           ;main.c: 65:     if(INTCONbits.T0IF){
  1251  00EA  1D0B               	btfss	11,2	;volatile
  1252  00EB  28ED               	goto	u16_21
  1253  00EC  28EE               	goto	u16_20
  1254  00ED                     u16_21:
  1255  00ED  2908               	goto	i1l67
  1256  00EE                     u16_20:
  1257  00EE                     i1l1271:
  1258                           
  1259                           ;main.c: 66:         CONVhexa(ADRESH,&uphex,&lowhex);
  1260  00EE  307C               	movlw	(low (_uphex| 0))& (0+255)
  1261  00EF  00F6               	movwf	??_interrupcion
  1262  00F0  0876               	movf	??_interrupcion,w
  1263  00F1  00F0               	movwf	CONVhexa@upper
  1264  00F2  307B               	movlw	(low (_lowhex| 0))& (0+255)
  1265  00F3  00F7               	movwf	??_interrupcion+1
  1266  00F4  0877               	movf	??_interrupcion+1,w
  1267  00F5  00F1               	movwf	CONVhexa@lower
  1268  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1269  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1270  00F8  081E               	movf	30,w	;volatile
  1271  00F9  120A  118A  2183  120A  118A  	fcall	_CONVhexa
  1272  00FE                     i1l1273:
  1273                           
  1274                           ;main.c: 68:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  1275  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0100  189F               	btfsc	31,1	;volatile
  1278  0101  2903               	goto	u17_21
  1279  0102  2904               	goto	u17_20
  1280  0103                     u17_21:
  1281  0103  2905               	goto	i1l66
  1282  0104                     u17_20:
  1283  0104                     i1l1275:
  1284  0104  149F               	bsf	31,1	;volatile
  1285  0105                     i1l66:
  1286                           
  1287                           ;main.c: 69:         tempo = 1;
  1288  0105  01A6               	clrf	_tempo
  1289  0106  0AA6               	incf	_tempo,f
  1290                           
  1291                           ;main.c: 70:         INTCONbits.T0IF = 0;
  1292  0107  110B               	bcf	11,2	;volatile
  1293  0108                     i1l67:
  1294  0108  087A               	movf	??_interrupcion+4,w
  1295  0109  008A               	movwf	10
  1296  010A  0879               	movf	??_interrupcion+3,w
  1297  010B  0084               	movwf	4
  1298  010C  0E78               	swapf	??_interrupcion+2,w
  1299  010D  0083               	movwf	3
  1300  010E  0EFE               	swapf	btemp,f
  1301  010F  0E7E               	swapf	btemp,w
  1302  0110  0009               	retfie
  1303  0111                     __end_of_interrupcion:
  1304                           
  1305                           	psect	intentry
  1306  0004                     __pintentry:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _interrupcion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1309                           
  1310  0004                     interrupt_function:
  1311  007E                     saved_w	set	btemp
  1312  0004  00FE               	movwf	btemp
  1313  0005  0E03               	swapf	3,w
  1314  0006  00F8               	movwf	??_interrupcion+2
  1315  0007  0804               	movf	4,w
  1316  0008  00F9               	movwf	??_interrupcion+3
  1317  0009  080A               	movf	10,w
  1318  000A  00FA               	movwf	??_interrupcion+4
  1319  000B  120A  118A  28CD   	ljmp	_interrupcion
  1320                           
  1321                           	psect	text5
  1322  0183                     __ptext5:	
  1323 ;; *************** function _CONVhexa *****************
  1324 ;; Defined at:
  1325 ;;		line 39 in file "despliegue7SEG.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  valor           1    wreg     unsigned char 
  1328 ;;  upper           1    0[COMMON] PTR unsigned char 
  1329 ;;		 -> uphex(1), 
  1330 ;;  lower           1    1[COMMON] PTR unsigned char 
  1331 ;;		 -> lowhex(1), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  valor           1    4[COMMON] unsigned char 
  1334 ;;  temp            1    5[COMMON] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         2       0       0       0       0
  1345 ;;      Locals:         2       0       0       0       0
  1346 ;;      Temps:          2       0       0       0       0
  1347 ;;      Totals:         6       0       0       0       0
  1348 ;;Total ram usage:        6 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_interrupcion
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _CONVhexa
  1359  0183                     _CONVhexa:
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _CONVhexa: [wreg-fsr0h+status,2+status,0]
  1363                           ;CONVhexa@valor stored from wreg
  1364  0183  00F4               	movwf	CONVhexa@valor
  1365  0184                     i1l1077:
  1366                           
  1367                           ;despliegue7SEG.c: 44:     uint8_t temp;;despliegue7SEG.c: 45:     temp = valor;
  1368  0184  0874               	movf	CONVhexa@valor,w
  1369  0185  00F2               	movwf	??_CONVhexa
  1370  0186  0872               	movf	??_CONVhexa,w
  1371  0187  00F5               	movwf	CONVhexa@temp
  1372  0188                     i1l1079:
  1373                           
  1374                           ;despliegue7SEG.c: 46:     *lower = (valor & 0x0F);
  1375  0188  0874               	movf	CONVhexa@valor,w
  1376  0189  390F               	andlw	15
  1377  018A  00F2               	movwf	??_CONVhexa
  1378  018B  0871               	movf	CONVhexa@lower,w
  1379  018C  0084               	movwf	4
  1380  018D  0872               	movf	??_CONVhexa,w
  1381  018E  0080               	movwf	0
  1382  018F                     i1l1081:
  1383                           
  1384                           ;despliegue7SEG.c: 47:     temp = temp>>4;
  1385  018F  0875               	movf	CONVhexa@temp,w
  1386  0190  00F2               	movwf	??_CONVhexa
  1387  0191  3004               	movlw	4
  1388  0192                     u11_25:
  1389  0192  1003               	clrc
  1390  0193  0CF2               	rrf	??_CONVhexa,f
  1391  0194  3EFF               	addlw	-1
  1392  0195  1D03               	skipz
  1393  0196  2992               	goto	u11_25
  1394  0197  0872               	movf	??_CONVhexa,w
  1395  0198  00F3               	movwf	??_CONVhexa+1
  1396  0199  0873               	movf	??_CONVhexa+1,w
  1397  019A  00F5               	movwf	CONVhexa@temp
  1398  019B                     i1l1083:
  1399                           
  1400                           ;despliegue7SEG.c: 48:     *upper = (temp & 0x0F);
  1401  019B  0875               	movf	CONVhexa@temp,w
  1402  019C  390F               	andlw	15
  1403  019D  00F2               	movwf	??_CONVhexa
  1404  019E  0870               	movf	CONVhexa@upper,w
  1405  019F  0084               	movwf	4
  1406  01A0  0872               	movf	??_CONVhexa,w
  1407  01A1  0080               	movwf	0
  1408  01A2                     i1l105:
  1409  01A2  0008               	return
  1410  01A3                     __end_of_CONVhexa:
  1411  007E                     btemp	set	126	;btemp
  1412  007E                     wtemp0	set	126
  1413                           
  1414                           	psect	config
  1415                           
  1416                           ;Config register CONFIG1 @ 0x2007
  1417                           ;	Oscillator Selection bits
  1418                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1419                           ;	Watchdog Timer Enable bit
  1420                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1421                           ;	Power-up Timer Enable bit
  1422                           ;	PWRTE = OFF, PWRT disabled
  1423                           ;	RE3/MCLR pin function select bit
  1424                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1425                           ;	Code Protection bit
  1426                           ;	CP = OFF, Program memory code protection is disabled
  1427                           ;	Data Code Protection bit
  1428                           ;	CPD = OFF, Data memory code protection is disabled
  1429                           ;	Brown Out Reset Selection bits
  1430                           ;	BOREN = OFF, BOR disabled
  1431                           ;	Internal External Switchover bit
  1432                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1433                           ;	Fail-Safe Clock Monitor Enabled bit
  1434                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1435                           ;	Low Voltage Programming Enable bit
  1436                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1437                           ;	In-Circuit Debugger Mode bit
  1438                           ;	DEBUG = 0x1, unprogrammed default
  1439  2007                     	org	8199
  1440  2007  20F4               	dw	8436
  1441                           
  1442                           ;Config register CONFIG2 @ 0x2008
  1443                           ;	Brown-out Reset Selection bit
  1444                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1445                           ;	Flash Program Memory Self Write Enable bits
  1446                           ;	WRT = OFF, Write protection off
  1447  2008                     	org	8200
  1448  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      6       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CONVhexa@upper	PTR unsigned char  size(1) Largest target is 1
		 -> uphex(COMMON[1]), 

    CONVhexa@lower	PTR unsigned char  size(1) Largest target is 1
		 -> lowhex(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcion in COMMON

    _interrupcion->_CONVhexa

Critical Paths under _main in BANK0

    _configuracion->_ADCconfig

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     142
                                              4 BANK0      2     2      0
                             _Seg7EQ
                      _configuracion
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Seg7EQ                                               3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         5     5      0     286
                                              6 COMMON     5     5      0
                           _CONVhexa
 ---------------------------------------------------------------------------------
 (4) _CONVhexa                                             6     4      2     286
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Seg7EQ
   _configuracion
     _ADCconfig

 _interrupcion (ROOT)
   _CONVhexa

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 14:50:46 2021

                     l73 008C                       l87 0182           ?_configuracion 0070  
                    l110 007A                      l102 0151       __size_of_ADCconfig 0041  
                    u200 009C                      u201 009B                      u180 008A  
                    u181 0089                      u190 0092                      u191 0091  
                    fsr0 0004                      indf 0000                     l1101 0163  
                   l1111 016D                     l1103 0164                     l1121 0172  
                   l1113 016E                     l1105 0165                     l1211 0038  
                   l1051 011D                     l1131 0177                     l1123 0173  
                   l1115 016F                     l1107 0168                     l1205 0036  
                   l1061 0146                     l1053 0122                     l1045 0114  
                   l1133 0178                     l1125 0174                     l1117 0170  
                   l1109 016C                     l1301 00AC                     l1223 003C  
                   l1151 0024                     l1063 0147                     l1047 0115  
                   l1135 0179                     l1127 0175                     l1119 0171  
                   l1303 00B5                     l1217 003A                     l1145 0022  
                   l1137 001F                     l1065 0148                     l1049 0118  
                   l1057 0125                     l1129 0176                     l1163 0028  
                   l1139 0020                     l1243 0040                     l1067 014F  
                   l1059 013D                     l1091 015B                     l1307 00B8  
                   l1229 003E                     l1181 002E                     l1157 0026  
                   l1069 0150                     l1093 015D                     l1085 0152  
                   l1309 00C8                     l1175 002C                     l1095 015E  
                   l1087 0156                     l1193 0032                     l1169 002A  
                   l1097 015F                     l1089 0157                     l1281 0084  
                   l1187 0030                     l1099 0160                     l1291 009C  
                   l1283 008A                     l1293 009E                     l1285 008D  
                   l1277 007B                     l1199 0034                     l1295 009F  
                   l1287 0092                     l1279 0080                     l1297 00A8  
                   l1289 0096                     l1395 00C0                     l1299 00AB  
                   l1397 0132                     l1399 0048                     i1l66 0105  
                   i1l67 0108                     _main 007B                     btemp 007E  
                   start 000E         __end_of_CONVhexa 01A3                    ?_main 0070  
                  _ANSEL 0188                    i1l105 01A2                    u11_25 0192  
                  u12_20 00D1                    u12_21 00D0                    u13_20 00D7  
                  u13_21 00D6                    u14_20 00E0                    u14_21 00DF  
                  u15_20 00E6                    u15_21 00E5                    u16_20 00EE  
                  u16_21 00ED                    u17_20 0104                    u17_21 0103  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tempo 0026                    _multi 0027  
                  _uphex 007C                    pclath 000A                    status 0003  
                  wtemp0 007E        __end_of_ADCconfig 0152          __initialization 0011  
           CONVhexa@temp 0075             __end_of_main 00CD          ??_configuracion 0024  
                 ??_main 0024                   _ADRESH 001E                   _ANSELH 0189  
                 i1l1081 018F                   i1l1083 019B                   i1l1251 00CD  
                 i1l1077 0184                   i1l1261 00E0                   i1l1253 00D1  
                 i1l1079 0188                   i1l1271 00EE                   i1l1263 00E6  
                 i1l1255 00D7                   i1l1273 00FE                   i1l1265 00E8  
                 i1l1257 00DB                   i1l1275 0104                   i1l1267 00E9  
                 i1l1259 00DC                   i1l1269 00EA            ADCconfig@just 0020  
                 _Seg7EQ 001C                   _lowhex 007B                   saved_w 007E  
__end_of__initialization 0018                ?_CONVhexa 0070           __pcstackCOMMON 0070  
          ?_interrupcion 0070            CONVhexa@lower 0071            CONVhexa@valor 0074  
          CONVhexa@upper 0070           _OPTION_REGbits 0081               __pbssBANK0 0026  
             ??_CONVhexa 0072                  ?_Seg7EQ 0070           ??_interrupcion 0076  
             __pmaintext 007B               __pintentry 0004           ADCconfig@canal 0023  
        __size_of_Seg7EQ 005F                _ADCconfig 0111                  __ptext1 0152  
                __ptext2 0111                  __ptext3 001C                  __ptext4 00CD  
                __ptext5 0183               _referencia 0028     end_of_initialization 0018  
             ?_ADCconfig 0020    __end_of_configuracion 0183                _PORTAbits 0005  
              _PORTBbits 0006     __end_of_interrupcion 0111        __size_of_CONVhexa 0020  
         __end_of_Seg7EQ 007B      start_initialization 0011                 ??_Seg7EQ 0020  
            ??_ADCconfig 0021              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0020    __size_of_interrupcion 0044        interrupt_function 0004  
               _CONVhexa 0183                 _IOCBbits 0096             _interrupcion 00CD  
             _ADCON0bits 001F               _ADCON1bits 009F   __size_of_configuracion 0031  
          __size_of_main 0052               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            _configuracion 0152               Seg7EQ@dato 0022  
