

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 11 11:23:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  04DA                     __pidataBANK0:
   376                           
   377                           ;initializer for _humedadR
   378  04DA  3452               	retlw	82
   379  04DB  3448               	retlw	72
   380  04DC  3420               	retlw	32
   381  04DD  3420               	retlw	32
   382  04DE  3420               	retlw	32
   383  04DF  343D               	retlw	61
   384  04E0  3420               	retlw	32
   385  04E1  3430               	retlw	48
   386  04E2  3430               	retlw	48
   387  04E3  342E               	retlw	46
   388  04E4  3430               	retlw	48
   389  04E5  3420               	retlw	32
   390  04E6  3425               	retlw	37
   391  04E7  3420               	retlw	32
   392  04E8  3400               	retlw	0
   393                           
   394                           ;initializer for _temperatura
   395  04E9  3454               	retlw	84
   396  04EA  3445               	retlw	69
   397  04EB  344D               	retlw	77
   398  04EC  3450               	retlw	80
   399  04ED  3420               	retlw	32
   400  04EE  343D               	retlw	61
   401  04EF  3420               	retlw	32
   402  04F0  3430               	retlw	48
   403  04F1  3430               	retlw	48
   404  04F2  342E               	retlw	46
   405  04F3  3430               	retlw	48
   406  04F4  3420               	retlw	32
   407  04F5  3443               	retlw	67
   408  04F6  3420               	retlw	32
   409  04F7  3400               	retlw	0
   410  0010                     _T1CON	set	16
   411  0008                     _PORTD	set	8
   412  0006                     _PORTB	set	6
   413  0005                     _PORTA	set	5
   414  0010                     _T1CONbits	set	16
   415  000E                     _TMR1L	set	14
   416  000F                     _TMR1H	set	15
   417  004A                     _RE2	set	74
   418  0049                     _RE1	set	73
   419  0048                     _RE0	set	72
   420  008F                     _OSCCONbits	set	143
   421  0089                     _TRISEbits	set	137
   422  0088                     _TRISD	set	136
   423  0086                     _TRISB	set	134
   424  0085                     _TRISA	set	133
   425  0189                     _ANSELH	set	393
   426  0188                     _ANSEL	set	392
   427                           
   428                           	psect	strings
   429  0003                     __pstrings:
   430  0003                     stringtab:
   431  0003                     __stringtab:
   432                           
   433                           ;	String table - string pointers are 1 byte each
   434  0003  1BFF               	btfsc	btemp+1,7
   435  0004  280D               	ljmp	stringcode
   436  0005  1383               	bcf	3,7
   437  0006  187F               	btfsc	btemp+1,0
   438  0007  1783               	bsf	3,7
   439  0008  0800               	movf	0,w
   440  0009  0A84               	incf	4,f
   441  000A  1903               	skipnz
   442  000B  0AFF               	incf	btemp+1,f
   443  000C  0008               	return
   444  000D                     stringcode:
   445  000D                     stringdir:
   446  000D  3000               	movlw	high stringdir
   447  000E  008A               	movwf	10
   448  000F  0804               	movf	4,w
   449  0010  0A84               	incf	4,f
   450  0011  0782               	addwf	2,f
   451  0012                     __stringbase:
   452  0012  3400               	retlw	0
   453  0013                     __end_of__stringtab:
   454  0013                     STR_1:
   455  0013  3445               	retlw	69	;'E'
   456  0014  3452               	retlw	82	;'R'
   457  0015  3452               	retlw	82	;'R'
   458  0016  344F               	retlw	79	;'O'
   459  0017  3452               	retlw	82	;'R'
   460  0018  3400               	retlw	0
   461  0013                     
   462                           	psect	cinit
   463  07E9                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07E9                     __initialization:
   467                           
   468                           ; Initialize objects allocated to BANK0
   469  07E9  1383               	bcf	3,7	;select IRP bank0
   470  07EA  303E               	movlw	low (__pdataBANK0+30)
   471  07EB  00FD               	movwf	btemp+-1
   472  07EC  3004               	movlw	high __pidataBANK0
   473  07ED  00FE               	movwf	btemp
   474  07EE  30DA               	movlw	low __pidataBANK0
   475  07EF  00FF               	movwf	btemp+1
   476  07F0  3020               	movlw	low __pdataBANK0
   477  07F1  0084               	movwf	4
   478  07F2  120A  118A  2480  120A  118A  	fcall	init_ram0
   479                           
   480                           ; Clear objects allocated to COMMON
   481  07F7  01F9               	clrf	__pbssCOMMON& (0+127)
   482  07F8  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   483  07F9  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   484  07FA  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   485  07FB  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   486  07FC                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  07FC                     __end_of__initialization:
   490  07FC  0183               	clrf	3
   491  07FD  120A  118A  2EAA   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494  0079                     __pbssCOMMON:
   495  0079                     _CHECKSUM:
   496  0079                     	ds	1
   497  007A                     _dummyHum1:
   498  007A                     	ds	1
   499  007B                     _Hum1:
   500  007B                     	ds	1
   501  007C                     _dummyT1:
   502  007C                     	ds	1
   503  007D                     _Temp1:
   504  007D                     	ds	1
   505                           
   506                           	psect	dataBANK0
   507  0020                     __pdataBANK0:
   508  0020                     _humedadR:
   509  0020                     	ds	15
   510  002F                     _temperatura:
   511  002F                     	ds	15
   512                           
   513                           	psect	inittext
   514  047C                     init_fetch0:	
   515                           ;	Called with low address in FSR and high address in W
   516                           
   517  047C  087E               	movf	btemp,w
   518  047D  008A               	movwf	10
   519  047E  087F               	movf	btemp+1,w
   520  047F  0082               	movwf	2
   521  0480                     init_ram0:	
   522                           ;Called with:
   523                           ;	high address of idata address in btemp 
   524                           ;	low address of idata address in btemp+1 
   525                           ;	low address of data in FSR
   526                           ;	high address + 1 of data in btemp-1
   527                           
   528  0480  120A  118A  247C  120A  118A  	fcall	init_fetch0
   529  0485  0080               	movwf	0
   530  0486  0A84               	incf	4,f
   531  0487  0804               	movf	4,w
   532  0488  067D               	xorwf	btemp+-1,w
   533  0489  1903               	btfsc	3,2
   534  048A  3400               	retlw	0
   535  048B  0AFF               	incf	btemp+1,f
   536  048C  1903               	btfsc	3,2
   537  048D  0AFE               	incf	btemp,f
   538  048E  2C80               	goto	init_ram0
   539                           
   540                           	psect	cstackCOMMON
   541  0070                     __pcstackCOMMON:
   542  0070                     ?_config:
   543  0070                     ??_config:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_initLCD:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_DHT11_START:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_DHT11_START:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_DHT11_ALIVE:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_DHT11_ALIVE:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_DHT11_ReadData:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_DHT11_ReadData:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_comandoLCD:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ??_comandoLCD:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_dispCHAR:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_dispCHAR:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?___awdiv:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?___awmod:	
   586                           ; 2 bytes @ 0x0
   587                           
   588  0070                     ___awdiv@divisor:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0070                     ___awmod@divisor:	
   592                           ; 2 bytes @ 0x0
   593                           
   594                           
   595                           ; 2 bytes @ 0x0
   596  0070                     	ds	1
   597  0071                     dispCHAR@b:
   598                           
   599                           ; 1 bytes @ 0x1
   600  0071                     	ds	1
   601  0072                     ?_LCDstring:
   602  0072                     DHT11_ReadData@i:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     comandoLCD@cmd:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     LCDstring@mensaje:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ___awdiv@dividend:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ___awmod@dividend:	
   615                           ; 2 bytes @ 0x2
   616                           
   617                           
   618                           ; 2 bytes @ 0x2
   619  0072                     	ds	1
   620  0073                     ??_initLCD:
   621  0073                     ?_cursorLCD:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     DHT11_ReadData@datos:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     cursorLCD@columna:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     ??_cursorLCD:
   634  0074                     ??_LCDstring:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??___awdiv:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___awmod:	
   641                           ; 1 bytes @ 0x4
   642                           
   643                           
   644                           ; 1 bytes @ 0x4
   645  0074                     	ds	1
   646  0075                     cursorLCD@fila:
   647  0075                     ___awdiv@counter:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     ___awmod@counter:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 1 bytes @ 0x5
   655  0075                     	ds	1
   656  0076                     cursorLCD@temp:
   657  0076                     ___awdiv@sign:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ___awmod@sign:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           ; 1 bytes @ 0x6
   665  0076                     	ds	1
   666  0077                     ___awdiv@quotient:
   667                           
   668                           ; 2 bytes @ 0x7
   669  0077                     	ds	2
   670                           
   671                           	psect	cstackBANK0
   672  003E                     __pcstackBANK0:
   673  003E                     ??_main:
   674                           
   675                           ; 1 bytes @ 0x0
   676  003E                     	ds	10
   677                           
   678                           	psect	maintext
   679  06AA                     __pmaintext:	
   680 ;;
   681 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   682 ;;
   683 ;; *************** function _main *****************
   684 ;; Defined at:
   685 ;;		line 47 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B00/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0      10       0       0       0
   702 ;;      Totals:         0      10       0       0       0
   703 ;;Total ram usage:       10 bytes
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		_DHT11_ALIVE
   707 ;;		_DHT11_ReadData
   708 ;;		_DHT11_START
   709 ;;		_LCDstring
   710 ;;		___awdiv
   711 ;;		___awmod
   712 ;;		_config
   713 ;;		_cursorLCD
   714 ;;		_initLCD
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _main
   722  06AA                     _main:
   723  06AA                     l1094:	
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   726                           
   727                           
   728                           ;main.c: 48:     config();
   729  06AA  120A  118A  24BE  120A  118A  	fcall	_config
   730  06AF                     l1096:
   731                           
   732                           ;main.c: 49:     TMR1H = 0;
   733  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   734  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   735  06B1  018F               	clrf	15	;volatile
   736  06B2                     l1098:
   737                           
   738                           ;main.c: 50:     TMR1L = 0;
   739  06B2  018E               	clrf	14	;volatile
   740                           
   741                           ;main.c: 51:     initLCD();
   742  06B3  120A  118A  25A0  120A  118A  	fcall	_initLCD
   743  06B8                     l63:	
   744                           ;main.c: 53:     while(1){
   745                           
   746                           
   747                           ;main.c: 54:         DHT11_START();
   748  06B8  120A  118A  24A3  120A  118A  	fcall	_DHT11_START
   749  06BD                     l1100:
   750                           
   751                           ;main.c: 56:         if(DHT11_ALIVE()){
   752  06BD  120A  118A  2541  120A  118A  	fcall	_DHT11_ALIVE
   753  06C2  3A00               	xorlw	0
   754  06C3  1903               	skipnz
   755  06C4  2EC6               	goto	u581
   756  06C5  2EC7               	goto	u580
   757  06C6                     u581:
   758  06C6  2FB1               	goto	l1118
   759  06C7                     u580:
   760  06C7                     l1102:
   761                           
   762                           ;main.c: 57:             DHT11_ReadData(&Hum1);
   763  06C7  307B               	movlw	(low (_Hum1| 0))& (0+255)
   764  06C8  120A  118A  256D  120A  118A  	fcall	_DHT11_ReadData
   765                           
   766                           ;main.c: 58:             DHT11_ReadData(&dummyHum1);
   767  06CD  307A               	movlw	(low (_dummyHum1| 0))& (0+255)
   768  06CE  120A  118A  256D  120A  118A  	fcall	_DHT11_ReadData
   769                           
   770                           ;main.c: 59:             DHT11_ReadData(&Temp1);
   771  06D3  307D               	movlw	(low (_Temp1| 0))& (0+255)
   772  06D4  120A  118A  256D  120A  118A  	fcall	_DHT11_ReadData
   773                           
   774                           ;main.c: 60:             DHT11_ReadData(&dummyT1);
   775  06D9  307C               	movlw	(low (_dummyT1| 0))& (0+255)
   776  06DA  120A  118A  256D  120A  118A  	fcall	_DHT11_ReadData
   777                           
   778                           ;main.c: 61:             DHT11_ReadData(&CHECKSUM);
   779  06DF  3079               	movlw	(low (_CHECKSUM| 0))& (0+255)
   780  06E0  120A  118A  256D  120A  118A  	fcall	_DHT11_ReadData
   781  06E5                     l1104:
   782                           
   783                           ;main.c: 63:             if(CHECKSUM == ((Hum1 + dummyHum1 + Temp1 + dummyT1) & 0XFF)){
   784  06E5  087B               	movf	_Hum1,w
   785  06E6  077A               	addwf	_dummyHum1,w
   786  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   787  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   788  06E9  00BE               	movwf	??_main
   789  06EA  01BF               	clrf	??_main+1
   790  06EB  0DBF               	rlf	??_main+1,f
   791  06EC  087D               	movf	_Temp1,w
   792  06ED  073E               	addwf	??_main,w
   793  06EE  00C0               	movwf	??_main+2
   794  06EF  3000               	movlw	0
   795  06F0  1803               	skipnc
   796  06F1  3001               	movlw	1
   797  06F2  073F               	addwf	??_main+1,w
   798  06F3  00C1               	movwf	??_main+3
   799  06F4  087C               	movf	_dummyT1,w
   800  06F5  0740               	addwf	??_main+2,w
   801  06F6  00C2               	movwf	??_main+4
   802  06F7  3000               	movlw	0
   803  06F8  1803               	skipnc
   804  06F9  3001               	movlw	1
   805  06FA  0741               	addwf	??_main+3,w
   806  06FB  00C3               	movwf	??_main+5
   807  06FC  30FF               	movlw	255
   808  06FD  0542               	andwf	??_main+4,w
   809  06FE  00C4               	movwf	??_main+6
   810  06FF  3000               	movlw	0
   811  0700  0543               	andwf	??_main+5,w
   812  0701  00C5               	movwf	??_main+7
   813  0702  0879               	movf	_CHECKSUM,w
   814  0703  00C6               	movwf	??_main+8
   815  0704  01C7               	clrf	??_main+9
   816  0705  0845               	movf	??_main+7,w
   817  0706  0647               	xorwf	??_main+9,w
   818  0707  1D03               	skipz
   819  0708  2F0B               	goto	u595
   820  0709  0844               	movf	??_main+6,w
   821  070A  0646               	xorwf	??_main+8,w
   822  070B                     u595:
   823  070B  1D03               	skipz
   824  070C  2F0E               	goto	u591
   825  070D  2F0F               	goto	u590
   826  070E                     u591:
   827  070E  2F8E               	goto	l1112
   828  070F                     u590:
   829  070F                     l1106:
   830                           
   831                           ;main.c: 64:                 temperatura[7] = Temp1/10 + 48;
   832  070F  300A               	movlw	10
   833  0710  00F0               	movwf	___awdiv@divisor
   834  0711  3000               	movlw	0
   835  0712  00F1               	movwf	___awdiv@divisor+1
   836  0713  087D               	movf	_Temp1,w
   837  0714  00BE               	movwf	??_main
   838  0715  01BF               	clrf	??_main+1
   839  0716  083E               	movf	??_main,w
   840  0717  00F2               	movwf	___awdiv@dividend
   841  0718  083F               	movf	??_main+1,w
   842  0719  00F3               	movwf	___awdiv@dividend+1
   843  071A  120A  118A  2643  120A  118A  	fcall	___awdiv
   844  071F  0870               	movf	?___awdiv,w
   845  0720  3E30               	addlw	48
   846  0721  1283               	bcf	3,5	;RP0=0, select bank0
   847  0722  1303               	bcf	3,6	;RP1=0, select bank0
   848  0723  00C0               	movwf	??_main+2
   849  0724  0840               	movf	??_main+2,w
   850  0725  00B6               	movwf	_temperatura+7
   851                           
   852                           ;main.c: 65:                 temperatura[8] = Temp1%10 + 48;
   853  0726  300A               	movlw	10
   854  0727  00F0               	movwf	___awmod@divisor
   855  0728  3000               	movlw	0
   856  0729  00F1               	movwf	___awmod@divisor+1
   857  072A  087D               	movf	_Temp1,w
   858  072B  00BE               	movwf	??_main
   859  072C  01BF               	clrf	??_main+1
   860  072D  083E               	movf	??_main,w
   861  072E  00F2               	movwf	___awmod@dividend
   862  072F  083F               	movf	??_main+1,w
   863  0730  00F3               	movwf	___awmod@dividend+1
   864  0731  120A  118A  25EA  120A  118A  	fcall	___awmod
   865  0736  0870               	movf	?___awmod,w
   866  0737  3E30               	addlw	48
   867  0738  1283               	bcf	3,5	;RP0=0, select bank0
   868  0739  1303               	bcf	3,6	;RP1=0, select bank0
   869  073A  00C0               	movwf	??_main+2
   870  073B  0840               	movf	??_main+2,w
   871  073C  00B7               	movwf	_temperatura+8
   872                           
   873                           ;main.c: 66:                 humedadR[7] = Hum1/10 + 48;
   874  073D  300A               	movlw	10
   875  073E  00F0               	movwf	___awdiv@divisor
   876  073F  3000               	movlw	0
   877  0740  00F1               	movwf	___awdiv@divisor+1
   878  0741  087B               	movf	_Hum1,w
   879  0742  00BE               	movwf	??_main
   880  0743  01BF               	clrf	??_main+1
   881  0744  083E               	movf	??_main,w
   882  0745  00F2               	movwf	___awdiv@dividend
   883  0746  083F               	movf	??_main+1,w
   884  0747  00F3               	movwf	___awdiv@dividend+1
   885  0748  120A  118A  2643  120A  118A  	fcall	___awdiv
   886  074D  0870               	movf	?___awdiv,w
   887  074E  3E30               	addlw	48
   888  074F  1283               	bcf	3,5	;RP0=0, select bank0
   889  0750  1303               	bcf	3,6	;RP1=0, select bank0
   890  0751  00C0               	movwf	??_main+2
   891  0752  0840               	movf	??_main+2,w
   892  0753  00A7               	movwf	_humedadR+7
   893                           
   894                           ;main.c: 67:                 humedadR[8] = Hum1%10 + 48;
   895  0754  300A               	movlw	10
   896  0755  00F0               	movwf	___awmod@divisor
   897  0756  3000               	movlw	0
   898  0757  00F1               	movwf	___awmod@divisor+1
   899  0758  087B               	movf	_Hum1,w
   900  0759  00BE               	movwf	??_main
   901  075A  01BF               	clrf	??_main+1
   902  075B  083E               	movf	??_main,w
   903  075C  00F2               	movwf	___awmod@dividend
   904  075D  083F               	movf	??_main+1,w
   905  075E  00F3               	movwf	___awmod@dividend+1
   906  075F  120A  118A  25EA  120A  118A  	fcall	___awmod
   907  0764  0870               	movf	?___awmod,w
   908  0765  3E30               	addlw	48
   909  0766  1283               	bcf	3,5	;RP0=0, select bank0
   910  0767  1303               	bcf	3,6	;RP1=0, select bank0
   911  0768  00C0               	movwf	??_main+2
   912  0769  0840               	movf	??_main+2,w
   913  076A  00A8               	movwf	_humedadR+8
   914                           
   915                           ;main.c: 68:                 cursorLCD(1,1);
   916  076B  01F3               	clrf	cursorLCD@columna
   917  076C  0AF3               	incf	cursorLCD@columna,f
   918  076D  3001               	movlw	1
   919  076E  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   920  0773                     l1108:
   921                           
   922                           ;main.c: 69:                 LCDstring(temperatura);
   923  0773  302F               	movlw	(low (_temperatura| 0))& (0+255)
   924  0774  00F2               	movwf	LCDstring@mensaje
   925  0775  3000               	movlw	0
   926  0776  00F3               	movwf	LCDstring@mensaje+1
   927  0777  120A  118A  251B  120A  118A  	fcall	_LCDstring
   928  077C                     l1110:
   929                           
   930                           ;main.c: 70:                 cursorLCD(2,1);
   931  077C  01F3               	clrf	cursorLCD@columna
   932  077D  0AF3               	incf	cursorLCD@columna,f
   933  077E  3002               	movlw	2
   934  077F  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   935                           
   936                           ;main.c: 71:                 LCDstring(humedadR);
   937  0784  3020               	movlw	(low (_humedadR| 0))& (0+255)
   938  0785  00F2               	movwf	LCDstring@mensaje
   939  0786  3000               	movlw	0
   940  0787  00F3               	movwf	LCDstring@mensaje+1
   941  0788  120A  118A  251B  120A  118A  	fcall	_LCDstring
   942                           
   943                           ;main.c: 72:             }
   944  078D  2FD3               	goto	l1124
   945  078E                     l1112:
   946                           
   947                           ;main.c: 74:                 cursorLCD(1,1);
   948  078E  01F3               	clrf	cursorLCD@columna
   949  078F  0AF3               	incf	cursorLCD@columna,f
   950  0790  3001               	movlw	1
   951  0791  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   952  0796                     l1114:
   953                           
   954                           ;main.c: 75:                 LCDstring("ERROR");
   955  0796  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   956  0797  00F2               	movwf	LCDstring@mensaje
   957  0798  3080               	movlw	128
   958  0799  00F3               	movwf	LCDstring@mensaje+1
   959  079A  120A  118A  251B  120A  118A  	fcall	_LCDstring
   960  079F                     l1116:
   961                           
   962                           ;main.c: 76:                 cursorLCD(2,1);
   963  079F  01F3               	clrf	cursorLCD@columna
   964  07A0  0AF3               	incf	cursorLCD@columna,f
   965  07A1  3002               	movlw	2
   966  07A2  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   967                           
   968                           ;main.c: 77:                 LCDstring("ERROR");
   969  07A7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   970  07A8  00F2               	movwf	LCDstring@mensaje
   971  07A9  3080               	movlw	128
   972  07AA  00F3               	movwf	LCDstring@mensaje+1
   973  07AB  120A  118A  251B  120A  118A  	fcall	_LCDstring
   974  07B0  2FD3               	goto	l1124
   975  07B1                     l1118:
   976                           
   977                           ;main.c: 81:                 cursorLCD(1,1);
   978  07B1  01F3               	clrf	cursorLCD@columna
   979  07B2  0AF3               	incf	cursorLCD@columna,f
   980  07B3  3001               	movlw	1
   981  07B4  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   982  07B9                     l1120:
   983                           
   984                           ;main.c: 82:                 LCDstring("ERROR");
   985  07B9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   986  07BA  00F2               	movwf	LCDstring@mensaje
   987  07BB  3080               	movlw	128
   988  07BC  00F3               	movwf	LCDstring@mensaje+1
   989  07BD  120A  118A  251B  120A  118A  	fcall	_LCDstring
   990  07C2                     l1122:
   991                           
   992                           ;main.c: 83:                 cursorLCD(2,1);
   993  07C2  01F3               	clrf	cursorLCD@columna
   994  07C3  0AF3               	incf	cursorLCD@columna,f
   995  07C4  3002               	movlw	2
   996  07C5  120A  118A  24F8  120A  118A  	fcall	_cursorLCD
   997                           
   998                           ;main.c: 84:                 LCDstring("ERROR");
   999  07CA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1000  07CB  00F2               	movwf	LCDstring@mensaje
  1001  07CC  3080               	movlw	128
  1002  07CD  00F3               	movwf	LCDstring@mensaje+1
  1003  07CE  120A  118A  251B  120A  118A  	fcall	_LCDstring
  1004  07D3                     l1124:
  1005                           
  1006                           ;main.c: 87:         T1CONbits.TMR1ON = 0;
  1007  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1008  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1009  07D5  1010               	bcf	16,0	;volatile
  1010  07D6                     l1126:
  1011                           
  1012                           ;main.c: 88:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1013  07D6  3002               	movlw	2
  1014  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1015  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1016  07D9  00C0               	movwf	??_main+2
  1017  07DA  3004               	movlw	4
  1018  07DB  00BF               	movwf	??_main+1
  1019  07DC  30B9               	movlw	185
  1020  07DD  00BE               	movwf	??_main
  1021  07DE                     u607:
  1022  07DE  0BBE               	decfsz	??_main,f
  1023  07DF  2FDE               	goto	u607
  1024  07E0  0BBF               	decfsz	??_main+1,f
  1025  07E1  2FDE               	goto	u607
  1026  07E2  0BC0               	decfsz	??_main+2,f
  1027  07E3  2FDE               	goto	u607
  1028  07E4  2FE5               	nop2
  1029  07E5  2EB8               	goto	l63
  1030  07E6  120A  118A  2800   	ljmp	start
  1031  07E9                     __end_of_main:
  1032                           
  1033                           	psect	text1
  1034  05A0                     __ptext1:	
  1035 ;; *************** function _initLCD *****************
  1036 ;; Defined at:
  1037 ;;		line 20 in file "LCDD2.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          2       0       0       0       0
  1054 ;;      Totals:         2       0       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		_comandoLCD
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _initLCD
  1067  05A0                     _initLCD:
  1068  05A0                     l774:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1071                           
  1072                           
  1073                           ;LCDD2.c: 21:     RE1 = 0;
  1074  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1075  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1076  05A2  1089               	bcf	9,1	;volatile
  1077  05A3                     l776:
  1078                           
  1079                           ;LCDD2.c: 22:     PORTD = 0X00;
  1080  05A3  0188               	clrf	8	;volatile
  1081  05A4                     l778:
  1082                           
  1083                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1084  05A4  3082               	movlw	130
  1085  05A5  00F4               	movwf	??_initLCD+1
  1086  05A6  30DD               	movlw	221
  1087  05A7  00F3               	movwf	??_initLCD
  1088  05A8                     u617:
  1089  05A8  0BF3               	decfsz	??_initLCD,f
  1090  05A9  2DA8               	goto	u617
  1091  05AA  0BF4               	decfsz	??_initLCD+1,f
  1092  05AB  2DA8               	goto	u617
  1093  05AC  2DAD               	nop2
  1094  05AD                     l780:
  1095                           
  1096                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1097  05AD  3030               	movlw	48
  1098  05AE  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1099  05B3                     l782:
  1100                           
  1101                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1102  05B3  300D               	movlw	13
  1103  05B4  00F4               	movwf	??_initLCD+1
  1104  05B5  30FB               	movlw	251
  1105  05B6  00F3               	movwf	??_initLCD
  1106  05B7                     u627:
  1107  05B7  0BF3               	decfsz	??_initLCD,f
  1108  05B8  2DB7               	goto	u627
  1109  05B9  0BF4               	decfsz	??_initLCD+1,f
  1110  05BA  2DB7               	goto	u627
  1111  05BB  2DBC               	nop2
  1112  05BC                     l784:
  1113                           
  1114                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1115  05BC  3030               	movlw	48
  1116  05BD  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1117  05C2                     l786:
  1118                           
  1119                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1120  05C2  300D               	movlw	13
  1121  05C3  00F4               	movwf	??_initLCD+1
  1122  05C4  30FB               	movlw	251
  1123  05C5  00F3               	movwf	??_initLCD
  1124  05C6                     u637:
  1125  05C6  0BF3               	decfsz	??_initLCD,f
  1126  05C7  2DC6               	goto	u637
  1127  05C8  0BF4               	decfsz	??_initLCD+1,f
  1128  05C9  2DC6               	goto	u637
  1129  05CA  2DCB               	nop2
  1130  05CB                     l788:
  1131                           
  1132                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1133  05CB  3030               	movlw	48
  1134  05CC  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1135  05D1                     l790:
  1136                           
  1137                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1138  05D1  3038               	movlw	56
  1139  05D2  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1140  05D7                     l792:
  1141                           
  1142                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1143  05D7  3006               	movlw	6
  1144  05D8  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1145  05DD                     l794:
  1146                           
  1147                           ;LCDD2.c: 31:     comandoLCD(0X0C);
  1148  05DD  300C               	movlw	12
  1149  05DE  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1150  05E3                     l796:
  1151                           
  1152                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1153  05E3  3001               	movlw	1
  1154  05E4  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1155  05E9                     l130:
  1156  05E9  0008               	return
  1157  05EA                     __end_of_initLCD:
  1158                           
  1159                           	psect	text2
  1160  04F8                     __ptext2:	
  1161 ;; *************** function _cursorLCD *****************
  1162 ;; Defined at:
  1163 ;;		line 50 in file "LCDD2.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  fila            1    wreg     unsigned char 
  1166 ;;  columna         1    3[COMMON] unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  fila            1    5[COMMON] unsigned char 
  1169 ;;  temp            1    6[COMMON] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         1       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0
  1181 ;;      Temps:          1       0       0       0       0
  1182 ;;      Totals:         4       0       0       0       0
  1183 ;;Total ram usage:        4 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    1
  1186 ;; This function calls:
  1187 ;;		_comandoLCD
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _cursorLCD
  1195  04F8                     _cursorLCD:
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  1199                           ;cursorLCD@fila stored from wreg
  1200  04F8  00F5               	movwf	cursorLCD@fila
  1201  04F9                     l992:
  1202                           
  1203                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  1204  04F9  0375               	decf	cursorLCD@fila,w
  1205  04FA  1D03               	btfss	3,2
  1206  04FB  2CFD               	goto	u361
  1207  04FC  2CFE               	goto	u360
  1208  04FD                     u361:
  1209  04FD  2D09               	goto	l998
  1210  04FE                     u360:
  1211  04FE                     l994:
  1212                           
  1213                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  1214  04FE  0873               	movf	cursorLCD@columna,w
  1215  04FF  3E7F               	addlw	127
  1216  0500  00F4               	movwf	??_cursorLCD
  1217  0501  0874               	movf	??_cursorLCD,w
  1218  0502  00F6               	movwf	cursorLCD@temp
  1219  0503                     l996:
  1220                           
  1221                           ;LCDD2.c: 54:         comandoLCD(temp);
  1222  0503  0876               	movf	cursorLCD@temp,w
  1223  0504  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1224  0509                     l998:
  1225                           
  1226                           ;LCDD2.c: 57:     if(fila == 2){
  1227  0509  3002               	movlw	2
  1228  050A  0675               	xorwf	cursorLCD@fila,w
  1229  050B  1D03               	btfss	3,2
  1230  050C  2D0E               	goto	u371
  1231  050D  2D0F               	goto	u370
  1232  050E                     u371:
  1233  050E  2D1A               	goto	l138
  1234  050F                     u370:
  1235  050F                     l1000:
  1236                           
  1237                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  1238  050F  0873               	movf	cursorLCD@columna,w
  1239  0510  3EBF               	addlw	191
  1240  0511  00F4               	movwf	??_cursorLCD
  1241  0512  0874               	movf	??_cursorLCD,w
  1242  0513  00F6               	movwf	cursorLCD@temp
  1243  0514                     l1002:
  1244                           
  1245                           ;LCDD2.c: 59:         comandoLCD(temp);
  1246  0514  0876               	movf	cursorLCD@temp,w
  1247  0515  120A  118A  248F  120A  118A  	fcall	_comandoLCD
  1248  051A                     l138:
  1249  051A  0008               	return
  1250  051B                     __end_of_cursorLCD:
  1251                           
  1252                           	psect	text3
  1253  048F                     __ptext3:	
  1254 ;; *************** function _comandoLCD *****************
  1255 ;; Defined at:
  1256 ;;		line 63 in file "LCDD2.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  cmd             1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  cmd             1    2[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0
  1272 ;;      Temps:          2       0       0       0       0
  1273 ;;      Totals:         3       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_initLCD
  1280 ;;		_cursorLCD
  1281 ;;		_ClearLCD
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _comandoLCD
  1287  048F                     _comandoLCD:
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _comandoLCD: [wreg]
  1291                           ;comandoLCD@cmd stored from wreg
  1292  048F  00F2               	movwf	comandoLCD@cmd
  1293  0490                     l742:
  1294                           
  1295                           ;LCDD2.c: 64:     RE1 = 0;
  1296  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0492  1089               	bcf	9,1	;volatile
  1299  0493                     l744:
  1300                           
  1301                           ;LCDD2.c: 65:     PORTD = cmd;
  1302  0493  0872               	movf	comandoLCD@cmd,w
  1303  0494  0088               	movwf	8	;volatile
  1304  0495                     l746:
  1305                           
  1306                           ;LCDD2.c: 66:     RE2 = 1;
  1307  0495  1509               	bsf	9,2	;volatile
  1308                           
  1309                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1310  0496  300B               	movlw	11
  1311  0497  00F1               	movwf	??_comandoLCD+1
  1312  0498  3062               	movlw	98
  1313  0499  00F0               	movwf	??_comandoLCD
  1314  049A                     u647:
  1315  049A  0BF0               	decfsz	??_comandoLCD,f
  1316  049B  2C9A               	goto	u647
  1317  049C  0BF1               	decfsz	??_comandoLCD+1,f
  1318  049D  2C9A               	goto	u647
  1319  049E  0000               	nop
  1320  049F                     l748:
  1321                           
  1322                           ;LCDD2.c: 68:     RE2 = 0;
  1323  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1324  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1325  04A1  1109               	bcf	9,2	;volatile
  1326  04A2                     l141:
  1327  04A2  0008               	return
  1328  04A3                     __end_of_comandoLCD:
  1329                           
  1330                           	psect	text4
  1331  04BE                     __ptext4:	
  1332 ;; *************** function _config *****************
  1333 ;; Defined at:
  1334 ;;		line 92 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _config
  1363  04BE                     _config:
  1364  04BE                     l758:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _config: [wreg+status,2+status,0]
  1367                           
  1368                           
  1369                           ;main.c: 93:     ANSEL = 0X00;
  1370  04BE  1683               	bsf	3,5	;RP0=1, select bank3
  1371  04BF  1703               	bsf	3,6	;RP1=1, select bank3
  1372  04C0  0188               	clrf	8	;volatile
  1373                           
  1374                           ;main.c: 94:     ANSELH = 0X00;
  1375  04C1  0189               	clrf	9	;volatile
  1376                           
  1377                           ;main.c: 95:     TRISA = 0X00;
  1378  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1379  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1380  04C4  0185               	clrf	5	;volatile
  1381                           
  1382                           ;main.c: 96:     TRISB = 0X00;
  1383  04C5  0186               	clrf	6	;volatile
  1384                           
  1385                           ;main.c: 97:     TRISD = 0X00;
  1386  04C6  0188               	clrf	8	;volatile
  1387  04C7                     l760:
  1388                           
  1389                           ;main.c: 98:     TRISEbits.TRISE1 = 0;
  1390  04C7  1089               	bcf	9,1	;volatile
  1391  04C8                     l762:
  1392                           
  1393                           ;main.c: 99:     TRISEbits.TRISE2 = 0;
  1394  04C8  1109               	bcf	9,2	;volatile
  1395                           
  1396                           ;main.c: 100:     PORTA = 0X00;
  1397  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1398  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1399  04CB  0185               	clrf	5	;volatile
  1400                           
  1401                           ;main.c: 101:     PORTB = 0X00;
  1402  04CC  0186               	clrf	6	;volatile
  1403                           
  1404                           ;main.c: 102:     PORTD = 0X00;
  1405  04CD  0188               	clrf	8	;volatile
  1406  04CE                     l764:
  1407                           
  1408                           ;main.c: 105:     OSCCONbits.IRCF = 0b111;
  1409  04CE  3070               	movlw	112
  1410  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  1411  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  1412  04D1  048F               	iorwf	15,f	;volatile
  1413  04D2                     l766:
  1414                           
  1415                           ;main.c: 106:     OSCCONbits.SCS = 0b1;
  1416  04D2  140F               	bsf	15,0	;volatile
  1417  04D3                     l768:
  1418                           
  1419                           ;main.c: 109:     T1CON = 0X10;
  1420  04D3  3010               	movlw	16
  1421  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1422  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1423  04D6  0090               	movwf	16	;volatile
  1424  04D7                     l770:
  1425                           
  1426                           ;main.c: 110:     TMR1H = 0;
  1427  04D7  018F               	clrf	15	;volatile
  1428  04D8                     l772:
  1429                           
  1430                           ;main.c: 111:     TMR1L = 0;
  1431  04D8  018E               	clrf	14	;volatile
  1432  04D9                     l73:
  1433  04D9  0008               	return
  1434  04DA                     __end_of_config:
  1435                           
  1436                           	psect	text5
  1437  05EA                     __ptext5:	
  1438 ;; *************** function ___awmod *****************
  1439 ;; Defined at:
  1440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  divisor         2    0[COMMON] int 
  1443 ;;  dividend        2    2[COMMON] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  sign            1    6[COMMON] unsigned char 
  1446 ;;  counter         1    5[COMMON] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2    0[COMMON] int 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         4       0       0       0       0
  1457 ;;      Locals:         2       0       0       0       0
  1458 ;;      Temps:          1       0       0       0       0
  1459 ;;      Totals:         7       0       0       0       0
  1460 ;;Total ram usage:        7 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function ___awmod
  1471  05EA                     ___awmod:
  1472  05EA                     l1056:	
  1473                           ;incstack = 0
  1474                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1475                           
  1476  05EA  01F6               	clrf	___awmod@sign
  1477  05EB                     l1058:
  1478  05EB  1FF3               	btfss	___awmod@dividend+1,7
  1479  05EC  2DEE               	goto	u491
  1480  05ED  2DEF               	goto	u490
  1481  05EE                     u491:
  1482  05EE  2DF6               	goto	l1064
  1483  05EF                     u490:
  1484  05EF                     l1060:
  1485  05EF  09F2               	comf	___awmod@dividend,f
  1486  05F0  09F3               	comf	___awmod@dividend+1,f
  1487  05F1  0AF2               	incf	___awmod@dividend,f
  1488  05F2  1903               	skipnz
  1489  05F3  0AF3               	incf	___awmod@dividend+1,f
  1490  05F4                     l1062:
  1491  05F4  01F6               	clrf	___awmod@sign
  1492  05F5  0AF6               	incf	___awmod@sign,f
  1493  05F6                     l1064:
  1494  05F6  1FF1               	btfss	___awmod@divisor+1,7
  1495  05F7  2DF9               	goto	u501
  1496  05F8  2DFA               	goto	u500
  1497  05F9                     u501:
  1498  05F9  2DFF               	goto	l1068
  1499  05FA                     u500:
  1500  05FA                     l1066:
  1501  05FA  09F0               	comf	___awmod@divisor,f
  1502  05FB  09F1               	comf	___awmod@divisor+1,f
  1503  05FC  0AF0               	incf	___awmod@divisor,f
  1504  05FD  1903               	skipnz
  1505  05FE  0AF1               	incf	___awmod@divisor+1,f
  1506  05FF                     l1068:
  1507  05FF  0870               	movf	___awmod@divisor,w
  1508  0600  0471               	iorwf	___awmod@divisor+1,w
  1509  0601  1903               	btfsc	3,2
  1510  0602  2E04               	goto	u511
  1511  0603  2E05               	goto	u510
  1512  0604                     u511:
  1513  0604  2E34               	goto	l1086
  1514  0605                     u510:
  1515  0605                     l1070:
  1516  0605  01F5               	clrf	___awmod@counter
  1517  0606  0AF5               	incf	___awmod@counter,f
  1518  0607  2E13               	goto	l1076
  1519  0608                     l1072:
  1520  0608  3001               	movlw	1
  1521  0609                     u525:
  1522  0609  1003               	clrc
  1523  060A  0DF0               	rlf	___awmod@divisor,f
  1524  060B  0DF1               	rlf	___awmod@divisor+1,f
  1525  060C  3EFF               	addlw	-1
  1526  060D  1D03               	skipz
  1527  060E  2E09               	goto	u525
  1528  060F                     l1074:
  1529  060F  3001               	movlw	1
  1530  0610  00F4               	movwf	??___awmod
  1531  0611  0874               	movf	??___awmod,w
  1532  0612  07F5               	addwf	___awmod@counter,f
  1533  0613                     l1076:
  1534  0613  1FF1               	btfss	___awmod@divisor+1,7
  1535  0614  2E16               	goto	u531
  1536  0615  2E17               	goto	u530
  1537  0616                     u531:
  1538  0616  2E08               	goto	l1072
  1539  0617                     u530:
  1540  0617                     l1078:
  1541  0617  0871               	movf	___awmod@divisor+1,w
  1542  0618  0273               	subwf	___awmod@dividend+1,w
  1543  0619  1D03               	skipz
  1544  061A  2E1D               	goto	u545
  1545  061B  0870               	movf	___awmod@divisor,w
  1546  061C  0272               	subwf	___awmod@dividend,w
  1547  061D                     u545:
  1548  061D  1C03               	skipc
  1549  061E  2E20               	goto	u541
  1550  061F  2E21               	goto	u540
  1551  0620                     u541:
  1552  0620  2E27               	goto	l1082
  1553  0621                     u540:
  1554  0621                     l1080:
  1555  0621  0870               	movf	___awmod@divisor,w
  1556  0622  02F2               	subwf	___awmod@dividend,f
  1557  0623  0871               	movf	___awmod@divisor+1,w
  1558  0624  1C03               	skipc
  1559  0625  03F3               	decf	___awmod@dividend+1,f
  1560  0626  02F3               	subwf	___awmod@dividend+1,f
  1561  0627                     l1082:
  1562  0627  3001               	movlw	1
  1563  0628                     u555:
  1564  0628  1003               	clrc
  1565  0629  0CF1               	rrf	___awmod@divisor+1,f
  1566  062A  0CF0               	rrf	___awmod@divisor,f
  1567  062B  3EFF               	addlw	-1
  1568  062C  1D03               	skipz
  1569  062D  2E28               	goto	u555
  1570  062E                     l1084:
  1571  062E  3001               	movlw	1
  1572  062F  02F5               	subwf	___awmod@counter,f
  1573  0630  1D03               	btfss	3,2
  1574  0631  2E33               	goto	u561
  1575  0632  2E34               	goto	u560
  1576  0633                     u561:
  1577  0633  2E17               	goto	l1078
  1578  0634                     u560:
  1579  0634                     l1086:
  1580  0634  0876               	movf	___awmod@sign,w
  1581  0635  1903               	btfsc	3,2
  1582  0636  2E38               	goto	u571
  1583  0637  2E39               	goto	u570
  1584  0638                     u571:
  1585  0638  2E3E               	goto	l1090
  1586  0639                     u570:
  1587  0639                     l1088:
  1588  0639  09F2               	comf	___awmod@dividend,f
  1589  063A  09F3               	comf	___awmod@dividend+1,f
  1590  063B  0AF2               	incf	___awmod@dividend,f
  1591  063C  1903               	skipnz
  1592  063D  0AF3               	incf	___awmod@dividend+1,f
  1593  063E                     l1090:
  1594  063E  0873               	movf	___awmod@dividend+1,w
  1595  063F  00F1               	movwf	?___awmod+1
  1596  0640  0872               	movf	___awmod@dividend,w
  1597  0641  00F0               	movwf	?___awmod
  1598  0642                     l402:
  1599  0642  0008               	return
  1600  0643                     __end_of___awmod:
  1601                           
  1602                           	psect	text6
  1603  0643                     __ptext6:	
  1604 ;; *************** function ___awdiv *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         2    0[COMMON] int 
  1609 ;;  dividend        2    2[COMMON] int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        2    7[COMMON] int 
  1612 ;;  sign            1    6[COMMON] unsigned char 
  1613 ;;  counter         1    5[COMMON] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[COMMON] int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         4       0       0       0       0
  1624 ;;      Locals:         4       0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0
  1626 ;;      Totals:         9       0       0       0       0
  1627 ;;Total ram usage:        9 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function ___awdiv
  1638  0643                     ___awdiv:
  1639  0643                     l1012:	
  1640                           ;incstack = 0
  1641                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1642                           
  1643  0643  01F6               	clrf	___awdiv@sign
  1644  0644                     l1014:
  1645  0644  1FF1               	btfss	___awdiv@divisor+1,7
  1646  0645  2E47               	goto	u391
  1647  0646  2E48               	goto	u390
  1648  0647                     u391:
  1649  0647  2E4F               	goto	l1020
  1650  0648                     u390:
  1651  0648                     l1016:
  1652  0648  09F0               	comf	___awdiv@divisor,f
  1653  0649  09F1               	comf	___awdiv@divisor+1,f
  1654  064A  0AF0               	incf	___awdiv@divisor,f
  1655  064B  1903               	skipnz
  1656  064C  0AF1               	incf	___awdiv@divisor+1,f
  1657  064D                     l1018:
  1658  064D  01F6               	clrf	___awdiv@sign
  1659  064E  0AF6               	incf	___awdiv@sign,f
  1660  064F                     l1020:
  1661  064F  1FF3               	btfss	___awdiv@dividend+1,7
  1662  0650  2E52               	goto	u401
  1663  0651  2E53               	goto	u400
  1664  0652                     u401:
  1665  0652  2E5C               	goto	l1026
  1666  0653                     u400:
  1667  0653                     l1022:
  1668  0653  09F2               	comf	___awdiv@dividend,f
  1669  0654  09F3               	comf	___awdiv@dividend+1,f
  1670  0655  0AF2               	incf	___awdiv@dividend,f
  1671  0656  1903               	skipnz
  1672  0657  0AF3               	incf	___awdiv@dividend+1,f
  1673  0658                     l1024:
  1674  0658  3001               	movlw	1
  1675  0659  00F4               	movwf	??___awdiv
  1676  065A  0874               	movf	??___awdiv,w
  1677  065B  06F6               	xorwf	___awdiv@sign,f
  1678  065C                     l1026:
  1679  065C  01F7               	clrf	___awdiv@quotient
  1680  065D  01F8               	clrf	___awdiv@quotient+1
  1681  065E                     l1028:
  1682  065E  0870               	movf	___awdiv@divisor,w
  1683  065F  0471               	iorwf	___awdiv@divisor+1,w
  1684  0660  1903               	btfsc	3,2
  1685  0661  2E63               	goto	u411
  1686  0662  2E64               	goto	u410
  1687  0663                     u411:
  1688  0663  2E9B               	goto	l1048
  1689  0664                     u410:
  1690  0664                     l1030:
  1691  0664  01F5               	clrf	___awdiv@counter
  1692  0665  0AF5               	incf	___awdiv@counter,f
  1693  0666  2E72               	goto	l1036
  1694  0667                     l1032:
  1695  0667  3001               	movlw	1
  1696  0668                     u425:
  1697  0668  1003               	clrc
  1698  0669  0DF0               	rlf	___awdiv@divisor,f
  1699  066A  0DF1               	rlf	___awdiv@divisor+1,f
  1700  066B  3EFF               	addlw	-1
  1701  066C  1D03               	skipz
  1702  066D  2E68               	goto	u425
  1703  066E                     l1034:
  1704  066E  3001               	movlw	1
  1705  066F  00F4               	movwf	??___awdiv
  1706  0670  0874               	movf	??___awdiv,w
  1707  0671  07F5               	addwf	___awdiv@counter,f
  1708  0672                     l1036:
  1709  0672  1FF1               	btfss	___awdiv@divisor+1,7
  1710  0673  2E75               	goto	u431
  1711  0674  2E76               	goto	u430
  1712  0675                     u431:
  1713  0675  2E67               	goto	l1032
  1714  0676                     u430:
  1715  0676                     l1038:
  1716  0676  3001               	movlw	1
  1717  0677                     u445:
  1718  0677  1003               	clrc
  1719  0678  0DF7               	rlf	___awdiv@quotient,f
  1720  0679  0DF8               	rlf	___awdiv@quotient+1,f
  1721  067A  3EFF               	addlw	-1
  1722  067B  1D03               	skipz
  1723  067C  2E77               	goto	u445
  1724  067D  0871               	movf	___awdiv@divisor+1,w
  1725  067E  0273               	subwf	___awdiv@dividend+1,w
  1726  067F  1D03               	skipz
  1727  0680  2E83               	goto	u455
  1728  0681  0870               	movf	___awdiv@divisor,w
  1729  0682  0272               	subwf	___awdiv@dividend,w
  1730  0683                     u455:
  1731  0683  1C03               	skipc
  1732  0684  2E86               	goto	u451
  1733  0685  2E87               	goto	u450
  1734  0686                     u451:
  1735  0686  2E8E               	goto	l1044
  1736  0687                     u450:
  1737  0687                     l1040:
  1738  0687  0870               	movf	___awdiv@divisor,w
  1739  0688  02F2               	subwf	___awdiv@dividend,f
  1740  0689  0871               	movf	___awdiv@divisor+1,w
  1741  068A  1C03               	skipc
  1742  068B  03F3               	decf	___awdiv@dividend+1,f
  1743  068C  02F3               	subwf	___awdiv@dividend+1,f
  1744  068D                     l1042:
  1745  068D  1477               	bsf	___awdiv@quotient,0
  1746  068E                     l1044:
  1747  068E  3001               	movlw	1
  1748  068F                     u465:
  1749  068F  1003               	clrc
  1750  0690  0CF1               	rrf	___awdiv@divisor+1,f
  1751  0691  0CF0               	rrf	___awdiv@divisor,f
  1752  0692  3EFF               	addlw	-1
  1753  0693  1D03               	skipz
  1754  0694  2E8F               	goto	u465
  1755  0695                     l1046:
  1756  0695  3001               	movlw	1
  1757  0696  02F5               	subwf	___awdiv@counter,f
  1758  0697  1D03               	btfss	3,2
  1759  0698  2E9A               	goto	u471
  1760  0699  2E9B               	goto	u470
  1761  069A                     u471:
  1762  069A  2E76               	goto	l1038
  1763  069B                     u470:
  1764  069B                     l1048:
  1765  069B  0876               	movf	___awdiv@sign,w
  1766  069C  1903               	btfsc	3,2
  1767  069D  2E9F               	goto	u481
  1768  069E  2EA0               	goto	u480
  1769  069F                     u481:
  1770  069F  2EA5               	goto	l1052
  1771  06A0                     u480:
  1772  06A0                     l1050:
  1773  06A0  09F7               	comf	___awdiv@quotient,f
  1774  06A1  09F8               	comf	___awdiv@quotient+1,f
  1775  06A2  0AF7               	incf	___awdiv@quotient,f
  1776  06A3  1903               	skipnz
  1777  06A4  0AF8               	incf	___awdiv@quotient+1,f
  1778  06A5                     l1052:
  1779  06A5  0878               	movf	___awdiv@quotient+1,w
  1780  06A6  00F1               	movwf	?___awdiv+1
  1781  06A7  0877               	movf	___awdiv@quotient,w
  1782  06A8  00F0               	movwf	?___awdiv
  1783  06A9                     l389:
  1784  06A9  0008               	return
  1785  06AA                     __end_of___awdiv:
  1786                           
  1787                           	psect	text7
  1788  051B                     __ptext7:	
  1789 ;; *************** function _LCDstring *****************
  1790 ;; Defined at:
  1791 ;;		line 75 in file "LCDD2.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  mensaje         2    2[COMMON] PTR unsigned char 
  1794 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
  1795 ;;		 -> humedadR(15), temperatura(15), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         2       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         2       0       0       0       0
  1811 ;;Total ram usage:        2 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    1
  1814 ;; This function calls:
  1815 ;;		_dispCHAR
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _LCDstring
  1823  051B                     _LCDstring:
  1824  051B                     l1004:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1827                           
  1828                           
  1829                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  1830  051B  2D30               	goto	l1010
  1831  051C                     l1006:
  1832                           
  1833                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  1834  051C  0873               	movf	LCDstring@mensaje+1,w
  1835  051D  00FF               	movwf	btemp+1
  1836  051E  0872               	movf	LCDstring@mensaje,w
  1837  051F  0084               	movwf	4
  1838  0520  120A  118A  2003  120A  118A  	fcall	stringtab
  1839  0525  120A  118A  246C  120A  118A  	fcall	_dispCHAR
  1840  052A                     l1008:
  1841                           
  1842                           ;LCDD2.c: 78:         mensaje ++;
  1843  052A  3001               	movlw	1
  1844  052B  07F2               	addwf	LCDstring@mensaje,f
  1845  052C  1803               	skipnc
  1846  052D  0AF3               	incf	LCDstring@mensaje+1,f
  1847  052E  3000               	movlw	0
  1848  052F  07F3               	addwf	LCDstring@mensaje+1,f
  1849  0530                     l1010:
  1850                           
  1851                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  1852  0530  0873               	movf	LCDstring@mensaje+1,w
  1853  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0533  00FF               	movwf	btemp+1
  1856  0534  0872               	movf	LCDstring@mensaje,w
  1857  0535  0084               	movwf	4
  1858  0536  120A  118A  2003  120A  118A  	fcall	stringtab
  1859  053B  3A00               	xorlw	0
  1860  053C  1D03               	skipz
  1861  053D  2D3F               	goto	u381
  1862  053E  2D40               	goto	u380
  1863  053F                     u381:
  1864  053F  2D1C               	goto	l1006
  1865  0540                     u380:
  1866  0540                     l150:
  1867  0540  0008               	return
  1868  0541                     __end_of_LCDstring:
  1869                           
  1870                           	psect	text8
  1871  046C                     __ptext8:	
  1872 ;; *************** function _dispCHAR *****************
  1873 ;; Defined at:
  1874 ;;		line 40 in file "LCDD2.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  b               1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  b               1    1[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0
  1890 ;;      Temps:          1       0       0       0       0
  1891 ;;      Totals:         2       0       0       0       0
  1892 ;;Total ram usage:        2 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_LCDstring
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _dispCHAR
  1903  046C                     _dispCHAR:
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _dispCHAR: [wreg]
  1907                           ;dispCHAR@b stored from wreg
  1908  046C  00F1               	movwf	dispCHAR@b
  1909  046D                     l750:
  1910                           
  1911                           ;LCDD2.c: 42:     RE1 = 1;
  1912  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1913  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1914  046F  1489               	bsf	9,1	;volatile
  1915  0470                     l752:
  1916                           
  1917                           ;LCDD2.c: 43:     PORTD = b;
  1918  0470  0871               	movf	dispCHAR@b,w
  1919  0471  0088               	movwf	8	;volatile
  1920  0472                     l754:
  1921                           
  1922                           ;LCDD2.c: 44:     RE2 = 1;
  1923  0472  1509               	bsf	9,2	;volatile
  1924                           
  1925                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1926  0473  301A               	movlw	26
  1927  0474  00F0               	movwf	??_dispCHAR
  1928  0475                     u657:
  1929  0475  0BF0               	decfsz	??_dispCHAR,f
  1930  0476  2C75               	goto	u657
  1931  0477  0000               	nop
  1932  0478                     l756:
  1933                           
  1934                           ;LCDD2.c: 46:     RE2 = 0;
  1935  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1937  047A  1109               	bcf	9,2	;volatile
  1938  047B                     l133:
  1939  047B  0008               	return
  1940  047C                     __end_of_dispCHAR:
  1941                           
  1942                           	psect	text9
  1943  04A3                     __ptext9:	
  1944 ;; *************** function _DHT11_START *****************
  1945 ;; Defined at:
  1946 ;;		line 11 in file "DHT11.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0
  1963 ;;      Totals:         2       0       0       0       0
  1964 ;;Total ram usage:        2 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _DHT11_START
  1975  04A3                     _DHT11_START:
  1976  04A3                     l798:	
  1977                           ;incstack = 0
  1978                           ; Regs used in _DHT11_START: [wreg]
  1979                           
  1980                           
  1981                           ;DHT11.c: 15:     TRISEbits.TRISE0 = 0;
  1982  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  1983  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  1984  04A5  1009               	bcf	9,0	;volatile
  1985                           
  1986                           ;DHT11.c: 16:     RE0 = 0;
  1987  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1988  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1989  04A8  1009               	bcf	9,0	;volatile
  1990  04A9                     l800:
  1991                           
  1992                           ;DHT11.c: 17:     _delay((unsigned long)((25)*(8000000/4000.0)));
  1993  04A9  3041               	movlw	65
  1994  04AA  00F1               	movwf	??_DHT11_START+1
  1995  04AB  30EE               	movlw	238
  1996  04AC  00F0               	movwf	??_DHT11_START
  1997  04AD                     u667:
  1998  04AD  0BF0               	decfsz	??_DHT11_START,f
  1999  04AE  2CAD               	goto	u667
  2000  04AF  0BF1               	decfsz	??_DHT11_START+1,f
  2001  04B0  2CAD               	goto	u667
  2002  04B1  0000               	nop
  2003  04B2                     l802:
  2004                           
  2005                           ;DHT11.c: 18:     RE0 = 1;
  2006  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2007  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2008  04B4  1409               	bsf	9,0	;volatile
  2009                           
  2010                           ;DHT11.c: 19:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  2011  04B5  3010               	movlw	16
  2012  04B6  00F0               	movwf	??_DHT11_START
  2013  04B7                     u677:
  2014  04B7  0BF0               	decfsz	??_DHT11_START,f
  2015  04B8  2CB7               	goto	u677
  2016  04B9  0000               	nop
  2017  04BA                     l804:
  2018                           
  2019                           ;DHT11.c: 20:     TRISEbits.TRISE0 = 1;
  2020  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2021  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2022  04BC  1409               	bsf	9,0	;volatile
  2023  04BD                     l88:
  2024  04BD  0008               	return
  2025  04BE                     __end_of_DHT11_START:
  2026                           
  2027                           	psect	text10
  2028  056D                     __ptext10:	
  2029 ;; *************** function _DHT11_ReadData *****************
  2030 ;; Defined at:
  2031 ;;		line 45 in file "DHT11.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  datos           1    wreg     PTR unsigned char 
  2034 ;;		 -> CHECKSUM(1), dummyT1(1), Temp1(1), dummyHum1(1), 
  2035 ;;		 -> Hum1(1), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  datos           1    3[COMMON] PTR unsigned char 
  2038 ;;		 -> CHECKSUM(1), dummyT1(1), Temp1(1), dummyHum1(1), 
  2039 ;;		 -> Hum1(1), 
  2040 ;;  i               1    2[COMMON] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         2       0       0       0       0
  2052 ;;      Temps:          2       0       0       0       0
  2053 ;;      Totals:         4       0       0       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _DHT11_ReadData
  2065  056D                     _DHT11_ReadData:
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _DHT11_ReadData: [wreg-fsr0h+status,2+status,0]
  2069                           ;DHT11_ReadData@datos stored from wreg
  2070  056D  00F3               	movwf	DHT11_ReadData@datos
  2071  056E                     l836:
  2072                           
  2073                           ;DHT11.c: 46:     uint8_t i;;DHT11.c: 47:     *datos = 0;
  2074  056E  0873               	movf	DHT11_ReadData@datos,w
  2075  056F  0084               	movwf	4
  2076  0570  0180               	clrf	0
  2077  0571                     l838:
  2078                           
  2079                           ;DHT11.c: 48:     for(i=0; i<8; i++){
  2080  0571  01F2               	clrf	DHT11_ReadData@i
  2081  0572                     l110:
  2082  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0574  1C09               	btfss	9,0	;volatile
  2085  0575  2D77               	goto	u71
  2086  0576  2D78               	goto	u70
  2087  0577                     u71:
  2088  0577  2D72               	goto	l110
  2089  0578                     u70:
  2090  0578                     l844:
  2091                           
  2092                           ;DHT11.c: 50:         TMR1H = 0;
  2093  0578  018F               	clrf	15	;volatile
  2094                           
  2095                           ;DHT11.c: 51:         TMR1L = 0;
  2096  0579  018E               	clrf	14	;volatile
  2097  057A                     l113:	
  2098                           ;DHT11.c: 52:         while(RE0);
  2099                           
  2100  057A  1809               	btfsc	9,0	;volatile
  2101  057B  2D7D               	goto	u81
  2102  057C  2D7E               	goto	u80
  2103  057D                     u81:
  2104  057D  2D7A               	goto	l113
  2105  057E                     u80:
  2106  057E                     l846:
  2107                           
  2108                           ;DHT11.c: 53:         if(TMR1L > 50)*datos |= (1 << (7-i));
  2109  057E  3033               	movlw	51
  2110  057F  020E               	subwf	14,w	;volatile
  2111  0580  1C03               	skipc
  2112  0581  2D83               	goto	u91
  2113  0582  2D84               	goto	u90
  2114  0583                     u91:
  2115  0583  2D95               	goto	l850
  2116  0584                     u90:
  2117  0584                     l848:
  2118  0584  3001               	movlw	1
  2119  0585  00F0               	movwf	??_DHT11_ReadData
  2120  0586  0872               	movf	DHT11_ReadData@i,w
  2121  0587  3C07               	sublw	7
  2122  0588  3E01               	addlw	1
  2123  0589  2D8C               	goto	u104
  2124  058A                     u105:
  2125  058A  1003               	clrc
  2126  058B  0DF0               	rlf	??_DHT11_ReadData,f
  2127  058C                     u104:
  2128  058C  3EFF               	addlw	-1
  2129  058D  1D03               	skipz
  2130  058E  2D8A               	goto	u105
  2131  058F  0870               	movf	??_DHT11_ReadData,w
  2132  0590  00F1               	movwf	??_DHT11_ReadData+1
  2133  0591  0873               	movf	DHT11_ReadData@datos,w
  2134  0592  0084               	movwf	4
  2135  0593  0871               	movf	??_DHT11_ReadData+1,w
  2136  0594  0480               	iorwf	0,f
  2137  0595                     l850:
  2138                           
  2139                           ;DHT11.c: 56:     }
  2140  0595  3001               	movlw	1
  2141  0596  00F0               	movwf	??_DHT11_ReadData
  2142  0597  0870               	movf	??_DHT11_ReadData,w
  2143  0598  07F2               	addwf	DHT11_ReadData@i,f
  2144  0599                     l852:
  2145  0599  3008               	movlw	8
  2146  059A  0272               	subwf	DHT11_ReadData@i,w
  2147  059B  1C03               	skipc
  2148  059C  2D9E               	goto	u111
  2149  059D  2D9F               	goto	u110
  2150  059E                     u111:
  2151  059E  2D72               	goto	l110
  2152  059F                     u110:
  2153  059F                     l117:
  2154  059F  0008               	return
  2155  05A0                     __end_of_DHT11_ReadData:
  2156                           
  2157                           	psect	text11
  2158  0541                     __ptext11:	
  2159 ;; *************** function _DHT11_ALIVE *****************
  2160 ;; Defined at:
  2161 ;;		line 24 in file "DHT11.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      unsigned char 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _DHT11_ALIVE
  2190  0541                     _DHT11_ALIVE:
  2191  0541                     l806:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _DHT11_ALIVE: [wreg+status,2]
  2194                           
  2195                           
  2196                           ;DHT11.c: 29:     TMR1H = 0;
  2197  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0543  018F               	clrf	15	;volatile
  2200                           
  2201                           ;DHT11.c: 30:     TMR1L = 0;
  2202  0544  018E               	clrf	14	;volatile
  2203  0545                     l808:
  2204                           
  2205                           ;DHT11.c: 31:     T1CONbits.TMR1ON = 1;
  2206  0545  1410               	bsf	16,0	;volatile
  2207  0546                     l91:	
  2208                           ;DHT11.c: 32:     while(!RE0 && TMR1L < 100);
  2209                           
  2210  0546  1809               	btfsc	9,0	;volatile
  2211  0547  2D49               	goto	u11
  2212  0548  2D4A               	goto	u10
  2213  0549                     u11:
  2214  0549  2D50               	goto	l812
  2215  054A                     u10:
  2216  054A                     l810:
  2217  054A  3064               	movlw	100
  2218  054B  020E               	subwf	14,w	;volatile
  2219  054C  1C03               	skipc
  2220  054D  2D4F               	goto	u21
  2221  054E  2D50               	goto	u20
  2222  054F                     u21:
  2223  054F  2D46               	goto	l91
  2224  0550                     u20:
  2225  0550                     l812:
  2226                           
  2227                           ;DHT11.c: 34:     if(TMR1L > 99)return 0;
  2228  0550  3064               	movlw	100
  2229  0551  020E               	subwf	14,w	;volatile
  2230  0552  1C03               	skipc
  2231  0553  2D55               	goto	u31
  2232  0554  2D56               	goto	u30
  2233  0555                     u31:
  2234  0555  2D58               	goto	l820
  2235  0556                     u30:
  2236  0556                     l814:
  2237  0556  3000               	movlw	0
  2238  0557  2D6C               	goto	l97
  2239  0558                     l820:
  2240                           
  2241                           ;DHT11.c: 36:         TMR1H = 0;
  2242  0558  018F               	clrf	15	;volatile
  2243                           
  2244                           ;DHT11.c: 37:         TMR1L = 0;
  2245  0559  018E               	clrf	14	;volatile
  2246  055A                     l99:	
  2247                           ;DHT11.c: 38:         while(RE0 && TMR1L < 100);
  2248                           
  2249  055A  1C09               	btfss	9,0	;volatile
  2250  055B  2D5D               	goto	u41
  2251  055C  2D5E               	goto	u40
  2252  055D                     u41:
  2253  055D  2D64               	goto	l824
  2254  055E                     u40:
  2255  055E                     l822:
  2256  055E  3064               	movlw	100
  2257  055F  020E               	subwf	14,w	;volatile
  2258  0560  1C03               	skipc
  2259  0561  2D63               	goto	u51
  2260  0562  2D64               	goto	u50
  2261  0563                     u51:
  2262  0563  2D5A               	goto	l99
  2263  0564                     u50:
  2264  0564                     l824:
  2265                           
  2266                           ;DHT11.c: 40:         if(TMR1L > 99) return 0;
  2267  0564  3064               	movlw	100
  2268  0565  020E               	subwf	14,w	;volatile
  2269  0566  1C03               	skipc
  2270  0567  2D69               	goto	u61
  2271  0568  2D6A               	goto	u60
  2272  0569                     u61:
  2273  0569  2D6B               	goto	l832
  2274  056A                     u60:
  2275  056A  2D56               	goto	l814
  2276  056B                     l832:
  2277  056B  3001               	movlw	1
  2278  056C                     l97:
  2279  056C  0008               	return
  2280  056D                     __end_of_DHT11_ALIVE:
  2281  007E                     btemp	set	126	;btemp
  2282  007E                     wtemp0	set	126
  2283                           
  2284                           	psect	config
  2285                           
  2286                           ;Config register CONFIG1 @ 0x2007
  2287                           ;	Oscillator Selection bits
  2288                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2289                           ;	Watchdog Timer Enable bit
  2290                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2291                           ;	Power-up Timer Enable bit
  2292                           ;	PWRTE = OFF, PWRT disabled
  2293                           ;	RE3/MCLR pin function select bit
  2294                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2295                           ;	Code Protection bit
  2296                           ;	CP = OFF, Program memory code protection is disabled
  2297                           ;	Data Code Protection bit
  2298                           ;	CPD = OFF, Data memory code protection is disabled
  2299                           ;	Brown Out Reset Selection bits
  2300                           ;	BOREN = OFF, BOR disabled
  2301                           ;	Internal External Switchover bit
  2302                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2303                           ;	Fail-Safe Clock Monitor Enabled bit
  2304                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2305                           ;	Low Voltage Programming Enable bit
  2306                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2307                           ;	In-Circuit Debugger Mode bit
  2308                           ;	DEBUG = 0x1, unprogrammed default
  2309  2007                     	org	8199
  2310  2007  20F4               	dw	8436
  2311                           
  2312                           ;Config register CONFIG2 @ 0x2008
  2313                           ;	Brown-out Reset Selection bit
  2314                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2315                           ;	Flash Program Memory Self Write Enable bits
  2316                           ;	WRT = OFF, Write protection off
  2317  2008                     	org	8200
  2318  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        30
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     10      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 
		 -> humedadR(BANK0[15]), temperatura(BANK0[15]), 

    DHT11_ReadData@datos	PTR unsigned char  size(1) Largest target is 1
		 -> CHECKSUM(COMMON[1]), dummyT1(COMMON[1]), Temp1(COMMON[1]), dummyHum1(COMMON[1]), 
		 -> Hum1(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _initLCD->_comandoLCD
    _cursorLCD->_comandoLCD
    _LCDstring->_dispCHAR

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2565
                                              0 BANK0     10    10      0
                        _DHT11_ALIVE
                     _DHT11_ReadData
                        _DHT11_START
                          _LCDstring
                            ___awdiv
                            ___awmod
                             _config
                          _cursorLCD
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      15
                                              3 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     605
                                              3 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     0      2     516
                                              2 COMMON     2     0      2
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (2) _dispCHAR                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_START                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       4     4      0     225
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ALIVE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_ALIVE
   _DHT11_ReadData
   _DHT11_START
   _LCDstring
     _dispCHAR
   ___awdiv
   ___awmod
   _config
   _cursorLCD
     _comandoLCD
   _initLCD
     _comandoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 11 11:23:03 2021

                      pc 0002                       l63 06B8                       l73 04D9  
                     l91 0546                       l88 04BD                       l97 056C  
                     l99 055A                       u10 054A                       u11 0549  
                     u20 0550                       u21 054F                       u30 0556  
                     u31 0555                       u40 055E                       u41 055D  
                     u50 0564                       u51 0563                       u60 056A  
                     u61 0569                       u70 0578                       u71 0577  
                     u80 057E                       u81 057D                       u90 0584  
                     u91 0583             ___awdiv@sign 0076                       fsr 0004  
                    l110 0572                      l113 057A                      l130 05E9  
                    l117 059F                      l133 047B                      l141 04A2  
                    l150 0540                      l402 0642                      l138 051A  
                    l800 04A9                      l810 054A                      l802 04B2  
                    l820 0558                      l812 0550                      l804 04BA  
                    l389 06A9                      l822 055E                      l814 0556  
                    l806 0541                      l750 046D                      l742 0490  
                    l832 056B                      l824 0564                      l808 0545  
                    l752 0470                      l760 04C7                      l744 0493  
                    l850 0595                      l754 0472                      l770 04D7  
                    l762 04C8                      l746 0495                      l852 0599  
                    l844 0578                      l836 056E                      l756 0478  
                    l772 04D8                      l764 04CE                      l748 049F  
                    l780 05AD                      l846 057E                      l838 0571  
                    l766 04D2                      l758 04BE                      l790 05D1  
                    l782 05B3                      l774 05A0                      l848 0584  
                    l768 04D3                      l792 05D7                      l784 05BC  
                    l776 05A3                      l794 05DD                      l786 05C2  
                    l778 05A4                      l796 05E3                      l788 05CB  
                    l798 04A3                      l992 04F9                      l994 04FE  
                    l996 0503                      l998 0509                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      u110 059F  
                    u111 059E                      u104 058C                      u105 058A  
                    u400 0653                      u401 0652                      u410 0664  
                    u411 0663                      u500 05FA                      u501 05F9  
                    u430 0676                      u510 0605                      u431 0675  
                    u511 0604                      u360 04FE                      u425 0668  
                    u361 04FD                      u450 0687                      u530 0617  
                    u370 050F                      u451 0686                      u531 0616  
                    u371 050E                      u380 0540                      u540 0621  
                    u381 053F                      u445 0677                      u541 0620  
                    u525 0609                      u470 069B                      u390 0648  
                    u471 069A                      u455 0683                      u391 0647  
                    u607 07DE                      u480 06A0                      u560 0634  
                    u481 069F                      u465 068F                      u561 0633  
                    u545 061D                      u617 05A8                      u570 0639  
                    u490 05EF                      u571 0638                      u555 0628  
                    u491 05EE                      u627 05B7                      u580 06C7  
                    u637 05C6                      u581 06C6                      u590 070F  
                    u647 049A                      u591 070E                      u657 0475  
                    u667 04AD                      u595 070B                      u677 04B7  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1000 050F                     l1010 0530                     l1002 0514  
                   l1004 051B                     l1020 064F                     l1012 0643  
                   l1100 06BD                     l1006 051C                     l1030 0664  
                   l1022 0653                     l1014 0644                     l1110 077C  
                   l1102 06C7                     l1008 052A                     l1040 0687  
                   l1032 0667                     l1024 0658                     l1016 0648  
                   l1120 07B9                     l1112 078E                     l1104 06E5  
                   l1050 06A0                     l1042 068D                     l1034 066E  
                   l1026 065C                     l1018 064D                     l1122 07C2  
                   l1114 0796                     l1106 070F                     l1052 06A5  
                   l1044 068E                     l1036 0672                     l1028 065E  
                   l1060 05EF                     l1116 079F                     l1124 07D3  
                   l1108 0773                     l1046 0695                     l1038 0676  
                   l1070 0605                     l1062 05F4                     l1126 07D6  
                   l1118 07B1                     l1048 069B                     l1080 0621  
                   l1072 0608                     l1064 05F6                     l1056 05EA  
                   l1090 063E                     l1082 0627                     l1074 060F  
                   l1066 05FA                     l1058 05EB                     l1084 062E  
                   l1076 0613                     l1068 05FF                     l1078 0617  
                   l1086 0634                     l1094 06AA                     l1088 0639  
                   l1096 06AF                     l1098 06B2                     STR_1 0013  
                   STR_2 0013                     STR_3 0013                     STR_4 0013  
                   _Hum1 007B     __size_of_DHT11_ALIVE 002C                     _main 06AA  
                   btemp 007E     __size_of_DHT11_START 001B                     start 0000  
       ??_DHT11_ReadData 0070      DHT11_ReadData@datos 0073       __size_of_LCDstring 0026  
                  ?_main 0070          __end_of___awdiv 06AA          __end_of___awmod 0643  
                  _ANSEL 0188          ___awdiv@divisor 0070                    _T1CON 0010  
        ___awdiv@counter 0075                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _Temp1 007D          __end_of_initLCD 05EA                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E9  
           __end_of_main 07E9                   ??_main 003E         ___awdiv@dividend 0072  
                 _ANSELH 0189        __end_of_LCDstring 0541         __end_of_dispCHAR 047C  
              ??___awdiv 0074                ??___awmod 0074                   _config 04BE  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_initLCD 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 04DA       __size_of_cursorLCD 0023               __pmaintext 06AA  
                ?_config 0070               _comandoLCD 048F                ?_dispCHAR 0070  
          ??_DHT11_ALIVE 0070               __stringtab 0003            ??_DHT11_START 0070  
                ___awdiv 0643                  ___awmod 05EA          __size_of_config 001C  
                __ptext1 05A0                  __ptext2 04F8                  __ptext3 048F  
                __ptext4 04BE                  __ptext5 05EA                  __ptext6 0643  
                __ptext7 051B                  __ptext8 046C                  __ptext9 04A3  
                _initLCD 05A0                _T1CONbits 0010                  _dummyT1 007C  
      __end_of_cursorLCD 051B         ___awmod@dividend 0072               ??_dispCHAR 0070  
   end_of_initialization 07FC      __end_of_DHT11_ALIVE 056D                _LCDstring 051B  
    __end_of_DHT11_START 04BE  __size_of_DHT11_ReadData 0033              ?_comandoLCD 0070  
              _TRISEbits 0089               ?_LCDstring 0072           __end_of_config 04DA  
    start_initialization 07E9              _DHT11_ALIVE 0541              _DHT11_START 04A3  
    __size_of_comandoLCD 0014               init_fetch0 047C                 ??_config 0070  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 003E        __size_of_dispCHAR 0010              ??_LCDstring 0074  
               ?___awdiv 0070                 ?___awmod 0070           _DHT11_ReadData 056D  
              __pstrings 0003                 ?_initLCD 0070                 _CHECKSUM 0079  
              _dummyHum1 007A                _cursorLCD 04F8                dispCHAR@b 0071  
 __end_of_DHT11_ReadData 05A0              __stringbase 0012             ??_comandoLCD 0070  
             ?_cursorLCD 0073       __end_of_comandoLCD 04A3          ?_DHT11_ReadData 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059          DHT11_ReadData@i 0072  
     __end_of__stringtab 0013         __size_of_initLCD 004A                 _dispCHAR 046C  
               __ptext10 056D                 __ptext11 0541         LCDstring@mensaje 0072  
           ?_DHT11_ALIVE 0070             ?_DHT11_START 0070            __size_of_main 013F  
               _humedadR 0020            cursorLCD@fila 0075            cursorLCD@temp 0076  
               init_ram0 0480              ??_cursorLCD 0074                stringcode 000D  
             _OSCCONbits 008F         cursorLCD@columna 0073              _temperatura 002F  
               stringdir 000D                 stringtab 0003            comandoLCD@cmd 0072  
