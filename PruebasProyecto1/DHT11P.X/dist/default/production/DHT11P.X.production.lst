

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 11 11:48:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  04DE                     __pidataBANK0:
   376                           
   377                           ;initializer for _humedadR
   378  04DE  3452               	retlw	82
   379  04DF  3448               	retlw	72
   380  04E0  3420               	retlw	32
   381  04E1  3420               	retlw	32
   382  04E2  3420               	retlw	32
   383  04E3  343D               	retlw	61
   384  04E4  3420               	retlw	32
   385  04E5  3430               	retlw	48
   386  04E6  3430               	retlw	48
   387  04E7  342E               	retlw	46
   388  04E8  3430               	retlw	48
   389  04E9  3420               	retlw	32
   390  04EA  3425               	retlw	37
   391  04EB  3420               	retlw	32
   392  04EC  3400               	retlw	0
   393                           
   394                           ;initializer for _temperatura
   395  04ED  3454               	retlw	84
   396  04EE  3445               	retlw	69
   397  04EF  344D               	retlw	77
   398  04F0  3450               	retlw	80
   399  04F1  3420               	retlw	32
   400  04F2  343D               	retlw	61
   401  04F3  3420               	retlw	32
   402  04F4  3430               	retlw	48
   403  04F5  3430               	retlw	48
   404  04F6  342E               	retlw	46
   405  04F7  3430               	retlw	48
   406  04F8  3420               	retlw	32
   407  04F9  3443               	retlw	67
   408  04FA  3420               	retlw	32
   409  04FB  3400               	retlw	0
   410  0010                     _T1CON	set	16
   411  0008                     _PORTD	set	8
   412  0006                     _PORTB	set	6
   413  0005                     _PORTA	set	5
   414  0010                     _T1CONbits	set	16
   415  000E                     _TMR1L	set	14
   416  000F                     _TMR1H	set	15
   417  004A                     _RE2	set	74
   418  0049                     _RE1	set	73
   419  0048                     _RE0	set	72
   420  008F                     _OSCCONbits	set	143
   421  0089                     _TRISEbits	set	137
   422  0088                     _TRISD	set	136
   423  0086                     _TRISB	set	134
   424  0085                     _TRISA	set	133
   425  0189                     _ANSELH	set	393
   426  0188                     _ANSEL	set	392
   427                           
   428                           	psect	strings
   429  0003                     __pstrings:
   430  0003                     stringtab:
   431  0003                     __stringtab:
   432                           
   433                           ;	String table - string pointers are 1 byte each
   434  0003  1BFF               	btfsc	btemp+1,7
   435  0004  280D               	ljmp	stringcode
   436  0005  1383               	bcf	3,7
   437  0006  187F               	btfsc	btemp+1,0
   438  0007  1783               	bsf	3,7
   439  0008  0800               	movf	0,w
   440  0009  0A84               	incf	4,f
   441  000A  1903               	skipnz
   442  000B  0AFF               	incf	btemp+1,f
   443  000C  0008               	return
   444  000D                     stringcode:
   445  000D                     stringdir:
   446  000D  3000               	movlw	high stringdir
   447  000E  008A               	movwf	10
   448  000F  0804               	movf	4,w
   449  0010  0A84               	incf	4,f
   450  0011  0782               	addwf	2,f
   451  0012                     __stringbase:
   452  0012  3400               	retlw	0
   453  0013                     __end_of__stringtab:
   454  0013                     STR_1:
   455  0013  3445               	retlw	69	;'E'
   456  0014  3452               	retlw	82	;'R'
   457  0015  3452               	retlw	82	;'R'
   458  0016  344F               	retlw	79	;'O'
   459  0017  3452               	retlw	82	;'R'
   460  0018  3400               	retlw	0
   461  0013                     
   462                           	psect	cinit
   463  07E9                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07E9                     __initialization:
   467                           
   468                           ; Initialize objects allocated to BANK0
   469  07E9  1383               	bcf	3,7	;select IRP bank0
   470  07EA  303E               	movlw	low (__pdataBANK0+30)
   471  07EB  00FD               	movwf	btemp+-1
   472  07EC  3004               	movlw	high __pidataBANK0
   473  07ED  00FE               	movwf	btemp
   474  07EE  30DE               	movlw	low __pidataBANK0
   475  07EF  00FF               	movwf	btemp+1
   476  07F0  3020               	movlw	low __pdataBANK0
   477  07F1  0084               	movwf	4
   478  07F2  120A  118A  2484  120A  118A  	fcall	init_ram0
   479                           
   480                           ; Clear objects allocated to COMMON
   481  07F7  01F9               	clrf	__pbssCOMMON& (0+127)
   482  07F8  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   483  07F9  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   484  07FA  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   485  07FB  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   486  07FC                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  07FC                     __end_of__initialization:
   490  07FC  0183               	clrf	3
   491  07FD  120A  118A  2EAE   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494  0079                     __pbssCOMMON:
   495  0079                     _CHECKSUM:
   496  0079                     	ds	1
   497  007A                     _dummyHum1:
   498  007A                     	ds	1
   499  007B                     _Hum1:
   500  007B                     	ds	1
   501  007C                     _dummyT1:
   502  007C                     	ds	1
   503  007D                     _Temp1:
   504  007D                     	ds	1
   505                           
   506                           	psect	dataBANK0
   507  0020                     __pdataBANK0:
   508  0020                     _humedadR:
   509  0020                     	ds	15
   510  002F                     _temperatura:
   511  002F                     	ds	15
   512                           
   513                           	psect	inittext
   514  0480                     init_fetch0:	
   515                           ;	Called with low address in FSR and high address in W
   516                           
   517  0480  087E               	movf	btemp,w
   518  0481  008A               	movwf	10
   519  0482  087F               	movf	btemp+1,w
   520  0483  0082               	movwf	2
   521  0484                     init_ram0:	
   522                           ;Called with:
   523                           ;	high address of idata address in btemp 
   524                           ;	low address of idata address in btemp+1 
   525                           ;	low address of data in FSR
   526                           ;	high address + 1 of data in btemp-1
   527                           
   528  0484  120A  118A  2480  120A  118A  	fcall	init_fetch0
   529  0489  0080               	movwf	0
   530  048A  0A84               	incf	4,f
   531  048B  0804               	movf	4,w
   532  048C  067D               	xorwf	btemp+-1,w
   533  048D  1903               	btfsc	3,2
   534  048E  3400               	retlw	0
   535  048F  0AFF               	incf	btemp+1,f
   536  0490  1903               	btfsc	3,2
   537  0491  0AFE               	incf	btemp,f
   538  0492  2C84               	goto	init_ram0
   539                           
   540                           	psect	cstackCOMMON
   541  0070                     __pcstackCOMMON:
   542  0070                     ?_config:
   543  0070                     ??_config:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_initLCD:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_DHT11_START:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_DHT11_START:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_DHT11_ALIVE:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_DHT11_ALIVE:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_DHT11_ReadData:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_DHT11_ReadData:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_comandoLCD:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ??_comandoLCD:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_dispCHAR:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_dispCHAR:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?___awdiv:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?___awmod:	
   586                           ; 2 bytes @ 0x0
   587                           
   588  0070                     ___awdiv@divisor:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0070                     ___awmod@divisor:	
   592                           ; 2 bytes @ 0x0
   593                           
   594                           
   595                           ; 2 bytes @ 0x0
   596  0070                     	ds	1
   597  0071                     dispCHAR@b:
   598                           
   599                           ; 1 bytes @ 0x1
   600  0071                     	ds	1
   601  0072                     ?_LCDstring:
   602  0072                     DHT11_ReadData@i:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     comandoLCD@cmd:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     LCDstring@mensaje:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ___awdiv@dividend:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ___awmod@dividend:	
   615                           ; 2 bytes @ 0x2
   616                           
   617                           
   618                           ; 2 bytes @ 0x2
   619  0072                     	ds	1
   620  0073                     ??_initLCD:
   621  0073                     ?_cursorLCD:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     DHT11_ReadData@datos:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     cursorLCD@columna:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     ??_cursorLCD:
   634  0074                     ??_LCDstring:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??___awdiv:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___awmod:	
   641                           ; 1 bytes @ 0x4
   642                           
   643                           
   644                           ; 1 bytes @ 0x4
   645  0074                     	ds	1
   646  0075                     cursorLCD@fila:
   647  0075                     ___awdiv@counter:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     ___awmod@counter:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 1 bytes @ 0x5
   655  0075                     	ds	1
   656  0076                     cursorLCD@temp:
   657  0076                     ___awdiv@sign:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ___awmod@sign:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           ; 1 bytes @ 0x6
   665  0076                     	ds	1
   666  0077                     ___awdiv@quotient:
   667                           
   668                           ; 2 bytes @ 0x7
   669  0077                     	ds	2
   670                           
   671                           	psect	cstackBANK0
   672  003E                     __pcstackBANK0:
   673  003E                     ??_main:
   674                           
   675                           ; 1 bytes @ 0x0
   676  003E                     	ds	10
   677                           
   678                           	psect	maintext
   679  06AE                     __pmaintext:	
   680 ;;
   681 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   682 ;;
   683 ;; *************** function _main *****************
   684 ;; Defined at:
   685 ;;		line 47 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B00/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0      10       0       0       0
   702 ;;      Totals:         0      10       0       0       0
   703 ;;Total ram usage:       10 bytes
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		_DHT11_ALIVE
   707 ;;		_DHT11_ReadData
   708 ;;		_DHT11_START
   709 ;;		_LCDstring
   710 ;;		___awdiv
   711 ;;		___awmod
   712 ;;		_config
   713 ;;		_cursorLCD
   714 ;;		_initLCD
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _main
   722  06AE                     _main:
   723  06AE                     l1094:	
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   726                           
   727                           
   728                           ;main.c: 48:     config();
   729  06AE  120A  118A  24C2  120A  118A  	fcall	_config
   730  06B3                     l1096:
   731                           
   732                           ;main.c: 49:     TMR1H = 0;
   733  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   734  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   735  06B5  018F               	clrf	15	;volatile
   736  06B6                     l1098:
   737                           
   738                           ;main.c: 50:     TMR1L = 0;
   739  06B6  018E               	clrf	14	;volatile
   740                           
   741                           ;main.c: 51:     initLCD();
   742  06B7  120A  118A  25A4  120A  118A  	fcall	_initLCD
   743  06BC                     l63:	
   744                           ;main.c: 53:     while(1){
   745                           
   746                           
   747                           ;main.c: 54:         DHT11_START();
   748  06BC  120A  118A  24A7  120A  118A  	fcall	_DHT11_START
   749  06C1                     l1100:
   750                           
   751                           ;main.c: 56:         if(DHT11_ALIVE()){
   752  06C1  120A  118A  2545  120A  118A  	fcall	_DHT11_ALIVE
   753  06C6  3A00               	xorlw	0
   754  06C7  1903               	skipnz
   755  06C8  2ECA               	goto	u581
   756  06C9  2ECB               	goto	u580
   757  06CA                     u581:
   758  06CA  2FB5               	goto	l1118
   759  06CB                     u580:
   760  06CB                     l1102:
   761                           
   762                           ;main.c: 57:             DHT11_ReadData(&Hum1);
   763  06CB  307B               	movlw	(low (_Hum1| 0))& (0+255)
   764  06CC  120A  118A  2571  120A  118A  	fcall	_DHT11_ReadData
   765                           
   766                           ;main.c: 58:             DHT11_ReadData(&dummyHum1);
   767  06D1  307A               	movlw	(low (_dummyHum1| 0))& (0+255)
   768  06D2  120A  118A  2571  120A  118A  	fcall	_DHT11_ReadData
   769                           
   770                           ;main.c: 59:             DHT11_ReadData(&Temp1);
   771  06D7  307D               	movlw	(low (_Temp1| 0))& (0+255)
   772  06D8  120A  118A  2571  120A  118A  	fcall	_DHT11_ReadData
   773                           
   774                           ;main.c: 60:             DHT11_ReadData(&dummyT1);
   775  06DD  307C               	movlw	(low (_dummyT1| 0))& (0+255)
   776  06DE  120A  118A  2571  120A  118A  	fcall	_DHT11_ReadData
   777                           
   778                           ;main.c: 61:             DHT11_ReadData(&CHECKSUM);
   779  06E3  3079               	movlw	(low (_CHECKSUM| 0))& (0+255)
   780  06E4  120A  118A  2571  120A  118A  	fcall	_DHT11_ReadData
   781  06E9                     l1104:
   782                           
   783                           ;main.c: 63:             if(CHECKSUM == ((Hum1 + dummyHum1 + Temp1 + dummyT1) & 0XFF)){
   784  06E9  087B               	movf	_Hum1,w
   785  06EA  077A               	addwf	_dummyHum1,w
   786  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   787  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   788  06ED  00BE               	movwf	??_main
   789  06EE  01BF               	clrf	??_main+1
   790  06EF  0DBF               	rlf	??_main+1,f
   791  06F0  087D               	movf	_Temp1,w
   792  06F1  073E               	addwf	??_main,w
   793  06F2  00C0               	movwf	??_main+2
   794  06F3  3000               	movlw	0
   795  06F4  1803               	skipnc
   796  06F5  3001               	movlw	1
   797  06F6  073F               	addwf	??_main+1,w
   798  06F7  00C1               	movwf	??_main+3
   799  06F8  087C               	movf	_dummyT1,w
   800  06F9  0740               	addwf	??_main+2,w
   801  06FA  00C2               	movwf	??_main+4
   802  06FB  3000               	movlw	0
   803  06FC  1803               	skipnc
   804  06FD  3001               	movlw	1
   805  06FE  0741               	addwf	??_main+3,w
   806  06FF  00C3               	movwf	??_main+5
   807  0700  30FF               	movlw	255
   808  0701  0542               	andwf	??_main+4,w
   809  0702  00C4               	movwf	??_main+6
   810  0703  3000               	movlw	0
   811  0704  0543               	andwf	??_main+5,w
   812  0705  00C5               	movwf	??_main+7
   813  0706  0879               	movf	_CHECKSUM,w
   814  0707  00C6               	movwf	??_main+8
   815  0708  01C7               	clrf	??_main+9
   816  0709  0845               	movf	??_main+7,w
   817  070A  0647               	xorwf	??_main+9,w
   818  070B  1D03               	skipz
   819  070C  2F0F               	goto	u595
   820  070D  0844               	movf	??_main+6,w
   821  070E  0646               	xorwf	??_main+8,w
   822  070F                     u595:
   823  070F  1D03               	skipz
   824  0710  2F12               	goto	u591
   825  0711  2F13               	goto	u590
   826  0712                     u591:
   827  0712  2F92               	goto	l1112
   828  0713                     u590:
   829  0713                     l1106:
   830                           
   831                           ;main.c: 64:                 temperatura[7] = Temp1/10 + 48;
   832  0713  300A               	movlw	10
   833  0714  00F0               	movwf	___awdiv@divisor
   834  0715  3000               	movlw	0
   835  0716  00F1               	movwf	___awdiv@divisor+1
   836  0717  087D               	movf	_Temp1,w
   837  0718  00BE               	movwf	??_main
   838  0719  01BF               	clrf	??_main+1
   839  071A  083E               	movf	??_main,w
   840  071B  00F2               	movwf	___awdiv@dividend
   841  071C  083F               	movf	??_main+1,w
   842  071D  00F3               	movwf	___awdiv@dividend+1
   843  071E  120A  118A  2647  120A  118A  	fcall	___awdiv
   844  0723  0870               	movf	?___awdiv,w
   845  0724  3E30               	addlw	48
   846  0725  1283               	bcf	3,5	;RP0=0, select bank0
   847  0726  1303               	bcf	3,6	;RP1=0, select bank0
   848  0727  00C0               	movwf	??_main+2
   849  0728  0840               	movf	??_main+2,w
   850  0729  00B6               	movwf	_temperatura+7
   851                           
   852                           ;main.c: 65:                 temperatura[8] = Temp1%10 + 48;
   853  072A  300A               	movlw	10
   854  072B  00F0               	movwf	___awmod@divisor
   855  072C  3000               	movlw	0
   856  072D  00F1               	movwf	___awmod@divisor+1
   857  072E  087D               	movf	_Temp1,w
   858  072F  00BE               	movwf	??_main
   859  0730  01BF               	clrf	??_main+1
   860  0731  083E               	movf	??_main,w
   861  0732  00F2               	movwf	___awmod@dividend
   862  0733  083F               	movf	??_main+1,w
   863  0734  00F3               	movwf	___awmod@dividend+1
   864  0735  120A  118A  25EE  120A  118A  	fcall	___awmod
   865  073A  0870               	movf	?___awmod,w
   866  073B  3E30               	addlw	48
   867  073C  1283               	bcf	3,5	;RP0=0, select bank0
   868  073D  1303               	bcf	3,6	;RP1=0, select bank0
   869  073E  00C0               	movwf	??_main+2
   870  073F  0840               	movf	??_main+2,w
   871  0740  00B7               	movwf	_temperatura+8
   872                           
   873                           ;main.c: 66:                 humedadR[7] = Hum1/10 + 48;
   874  0741  300A               	movlw	10
   875  0742  00F0               	movwf	___awdiv@divisor
   876  0743  3000               	movlw	0
   877  0744  00F1               	movwf	___awdiv@divisor+1
   878  0745  087B               	movf	_Hum1,w
   879  0746  00BE               	movwf	??_main
   880  0747  01BF               	clrf	??_main+1
   881  0748  083E               	movf	??_main,w
   882  0749  00F2               	movwf	___awdiv@dividend
   883  074A  083F               	movf	??_main+1,w
   884  074B  00F3               	movwf	___awdiv@dividend+1
   885  074C  120A  118A  2647  120A  118A  	fcall	___awdiv
   886  0751  0870               	movf	?___awdiv,w
   887  0752  3E30               	addlw	48
   888  0753  1283               	bcf	3,5	;RP0=0, select bank0
   889  0754  1303               	bcf	3,6	;RP1=0, select bank0
   890  0755  00C0               	movwf	??_main+2
   891  0756  0840               	movf	??_main+2,w
   892  0757  00A7               	movwf	_humedadR+7
   893                           
   894                           ;main.c: 67:                 humedadR[8] = Hum1%10 + 48;
   895  0758  300A               	movlw	10
   896  0759  00F0               	movwf	___awmod@divisor
   897  075A  3000               	movlw	0
   898  075B  00F1               	movwf	___awmod@divisor+1
   899  075C  087B               	movf	_Hum1,w
   900  075D  00BE               	movwf	??_main
   901  075E  01BF               	clrf	??_main+1
   902  075F  083E               	movf	??_main,w
   903  0760  00F2               	movwf	___awmod@dividend
   904  0761  083F               	movf	??_main+1,w
   905  0762  00F3               	movwf	___awmod@dividend+1
   906  0763  120A  118A  25EE  120A  118A  	fcall	___awmod
   907  0768  0870               	movf	?___awmod,w
   908  0769  3E30               	addlw	48
   909  076A  1283               	bcf	3,5	;RP0=0, select bank0
   910  076B  1303               	bcf	3,6	;RP1=0, select bank0
   911  076C  00C0               	movwf	??_main+2
   912  076D  0840               	movf	??_main+2,w
   913  076E  00A8               	movwf	_humedadR+8
   914                           
   915                           ;main.c: 68:                 cursorLCD(1,1);
   916  076F  01F3               	clrf	cursorLCD@columna
   917  0770  0AF3               	incf	cursorLCD@columna,f
   918  0771  3001               	movlw	1
   919  0772  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   920  0777                     l1108:
   921                           
   922                           ;main.c: 69:                 LCDstring(temperatura);
   923  0777  302F               	movlw	(low (_temperatura| 0))& (0+255)
   924  0778  00F2               	movwf	LCDstring@mensaje
   925  0779  3000               	movlw	0
   926  077A  00F3               	movwf	LCDstring@mensaje+1
   927  077B  120A  118A  251F  120A  118A  	fcall	_LCDstring
   928  0780                     l1110:
   929                           
   930                           ;main.c: 70:                 cursorLCD(2,1);
   931  0780  01F3               	clrf	cursorLCD@columna
   932  0781  0AF3               	incf	cursorLCD@columna,f
   933  0782  3002               	movlw	2
   934  0783  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   935                           
   936                           ;main.c: 71:                 LCDstring(humedadR);
   937  0788  3020               	movlw	(low (_humedadR| 0))& (0+255)
   938  0789  00F2               	movwf	LCDstring@mensaje
   939  078A  3000               	movlw	0
   940  078B  00F3               	movwf	LCDstring@mensaje+1
   941  078C  120A  118A  251F  120A  118A  	fcall	_LCDstring
   942                           
   943                           ;main.c: 72:             }
   944  0791  2FD7               	goto	l1124
   945  0792                     l1112:
   946                           
   947                           ;main.c: 74:                 cursorLCD(1,1);
   948  0792  01F3               	clrf	cursorLCD@columna
   949  0793  0AF3               	incf	cursorLCD@columna,f
   950  0794  3001               	movlw	1
   951  0795  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   952  079A                     l1114:
   953                           
   954                           ;main.c: 75:                 LCDstring("ERROR");
   955  079A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   956  079B  00F2               	movwf	LCDstring@mensaje
   957  079C  3080               	movlw	128
   958  079D  00F3               	movwf	LCDstring@mensaje+1
   959  079E  120A  118A  251F  120A  118A  	fcall	_LCDstring
   960  07A3                     l1116:
   961                           
   962                           ;main.c: 76:                 cursorLCD(2,1);
   963  07A3  01F3               	clrf	cursorLCD@columna
   964  07A4  0AF3               	incf	cursorLCD@columna,f
   965  07A5  3002               	movlw	2
   966  07A6  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   967                           
   968                           ;main.c: 77:                 LCDstring("ERROR");
   969  07AB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   970  07AC  00F2               	movwf	LCDstring@mensaje
   971  07AD  3080               	movlw	128
   972  07AE  00F3               	movwf	LCDstring@mensaje+1
   973  07AF  120A  118A  251F  120A  118A  	fcall	_LCDstring
   974  07B4  2FD7               	goto	l1124
   975  07B5                     l1118:
   976                           
   977                           ;main.c: 81:                 cursorLCD(1,1);
   978  07B5  01F3               	clrf	cursorLCD@columna
   979  07B6  0AF3               	incf	cursorLCD@columna,f
   980  07B7  3001               	movlw	1
   981  07B8  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   982  07BD                     l1120:
   983                           
   984                           ;main.c: 82:                 LCDstring("ERROR");
   985  07BD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   986  07BE  00F2               	movwf	LCDstring@mensaje
   987  07BF  3080               	movlw	128
   988  07C0  00F3               	movwf	LCDstring@mensaje+1
   989  07C1  120A  118A  251F  120A  118A  	fcall	_LCDstring
   990  07C6                     l1122:
   991                           
   992                           ;main.c: 83:                 cursorLCD(2,1);
   993  07C6  01F3               	clrf	cursorLCD@columna
   994  07C7  0AF3               	incf	cursorLCD@columna,f
   995  07C8  3002               	movlw	2
   996  07C9  120A  118A  24FC  120A  118A  	fcall	_cursorLCD
   997                           
   998                           ;main.c: 84:                 LCDstring("ERROR");
   999  07CE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1000  07CF  00F2               	movwf	LCDstring@mensaje
  1001  07D0  3080               	movlw	128
  1002  07D1  00F3               	movwf	LCDstring@mensaje+1
  1003  07D2  120A  118A  251F  120A  118A  	fcall	_LCDstring
  1004  07D7                     l1124:
  1005                           
  1006                           ;main.c: 87:         T1CONbits.TMR1ON = 0;
  1007  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1008  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1009  07D9  1010               	bcf	16,0	;volatile
  1010  07DA                     l1126:
  1011                           
  1012                           ;main.c: 88:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1013  07DA  301A               	movlw	26
  1014  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1015  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1016  07DD  00BF               	movwf	??_main+1
  1017  07DE  30F7               	movlw	247
  1018  07DF  00BE               	movwf	??_main
  1019  07E0                     u607:
  1020  07E0  0BBE               	decfsz	??_main,f
  1021  07E1  2FE0               	goto	u607
  1022  07E2  0BBF               	decfsz	??_main+1,f
  1023  07E3  2FE0               	goto	u607
  1024  07E4  2FE5               	nop2
  1025  07E5  2EBC               	goto	l63
  1026  07E6  120A  118A  2800   	ljmp	start
  1027  07E9                     __end_of_main:
  1028                           
  1029                           	psect	text1
  1030  05A4                     __ptext1:	
  1031 ;; *************** function _initLCD *****************
  1032 ;; Defined at:
  1033 ;;		line 20 in file "LCDD2.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          2       0       0       0       0
  1050 ;;      Totals:         2       0       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    1
  1054 ;; This function calls:
  1055 ;;		_comandoLCD
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _initLCD
  1063  05A4                     _initLCD:
  1064  05A4                     l774:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1067                           
  1068                           
  1069                           ;LCDD2.c: 21:     RE1 = 0;
  1070  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1071  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1072  05A6  1089               	bcf	9,1	;volatile
  1073  05A7                     l776:
  1074                           
  1075                           ;LCDD2.c: 22:     PORTD = 0X00;
  1076  05A7  0188               	clrf	8	;volatile
  1077  05A8                     l778:
  1078                           
  1079                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1080  05A8  3082               	movlw	130
  1081  05A9  00F4               	movwf	??_initLCD+1
  1082  05AA  30DD               	movlw	221
  1083  05AB  00F3               	movwf	??_initLCD
  1084  05AC                     u617:
  1085  05AC  0BF3               	decfsz	??_initLCD,f
  1086  05AD  2DAC               	goto	u617
  1087  05AE  0BF4               	decfsz	??_initLCD+1,f
  1088  05AF  2DAC               	goto	u617
  1089  05B0  2DB1               	nop2
  1090  05B1                     l780:
  1091                           
  1092                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1093  05B1  3030               	movlw	48
  1094  05B2  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1095  05B7                     l782:
  1096                           
  1097                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1098  05B7  300D               	movlw	13
  1099  05B8  00F4               	movwf	??_initLCD+1
  1100  05B9  30FB               	movlw	251
  1101  05BA  00F3               	movwf	??_initLCD
  1102  05BB                     u627:
  1103  05BB  0BF3               	decfsz	??_initLCD,f
  1104  05BC  2DBB               	goto	u627
  1105  05BD  0BF4               	decfsz	??_initLCD+1,f
  1106  05BE  2DBB               	goto	u627
  1107  05BF  2DC0               	nop2
  1108  05C0                     l784:
  1109                           
  1110                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1111  05C0  3030               	movlw	48
  1112  05C1  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1113  05C6                     l786:
  1114                           
  1115                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1116  05C6  300D               	movlw	13
  1117  05C7  00F4               	movwf	??_initLCD+1
  1118  05C8  30FB               	movlw	251
  1119  05C9  00F3               	movwf	??_initLCD
  1120  05CA                     u637:
  1121  05CA  0BF3               	decfsz	??_initLCD,f
  1122  05CB  2DCA               	goto	u637
  1123  05CC  0BF4               	decfsz	??_initLCD+1,f
  1124  05CD  2DCA               	goto	u637
  1125  05CE  2DCF               	nop2
  1126  05CF                     l788:
  1127                           
  1128                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1129  05CF  3030               	movlw	48
  1130  05D0  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1131  05D5                     l790:
  1132                           
  1133                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1134  05D5  3038               	movlw	56
  1135  05D6  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1136  05DB                     l792:
  1137                           
  1138                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1139  05DB  3006               	movlw	6
  1140  05DC  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1141  05E1                     l794:
  1142                           
  1143                           ;LCDD2.c: 31:     comandoLCD(0X0C);
  1144  05E1  300C               	movlw	12
  1145  05E2  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1146  05E7                     l796:
  1147                           
  1148                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1149  05E7  3001               	movlw	1
  1150  05E8  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1151  05ED                     l130:
  1152  05ED  0008               	return
  1153  05EE                     __end_of_initLCD:
  1154                           
  1155                           	psect	text2
  1156  04FC                     __ptext2:	
  1157 ;; *************** function _cursorLCD *****************
  1158 ;; Defined at:
  1159 ;;		line 50 in file "LCDD2.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  fila            1    wreg     unsigned char 
  1162 ;;  columna         1    3[COMMON] unsigned char 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  fila            1    5[COMMON] unsigned char 
  1165 ;;  temp            1    6[COMMON] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, pclath, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         1       0       0       0       0
  1176 ;;      Locals:         2       0       0       0       0
  1177 ;;      Temps:          1       0       0       0       0
  1178 ;;      Totals:         4       0       0       0       0
  1179 ;;Total ram usage:        4 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    1
  1182 ;; This function calls:
  1183 ;;		_comandoLCD
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _cursorLCD
  1191  04FC                     _cursorLCD:
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  1195                           ;cursorLCD@fila stored from wreg
  1196  04FC  00F5               	movwf	cursorLCD@fila
  1197  04FD                     l992:
  1198                           
  1199                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  1200  04FD  0375               	decf	cursorLCD@fila,w
  1201  04FE  1D03               	btfss	3,2
  1202  04FF  2D01               	goto	u361
  1203  0500  2D02               	goto	u360
  1204  0501                     u361:
  1205  0501  2D0D               	goto	l998
  1206  0502                     u360:
  1207  0502                     l994:
  1208                           
  1209                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  1210  0502  0873               	movf	cursorLCD@columna,w
  1211  0503  3E7F               	addlw	127
  1212  0504  00F4               	movwf	??_cursorLCD
  1213  0505  0874               	movf	??_cursorLCD,w
  1214  0506  00F6               	movwf	cursorLCD@temp
  1215  0507                     l996:
  1216                           
  1217                           ;LCDD2.c: 54:         comandoLCD(temp);
  1218  0507  0876               	movf	cursorLCD@temp,w
  1219  0508  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1220  050D                     l998:
  1221                           
  1222                           ;LCDD2.c: 57:     if(fila == 2){
  1223  050D  3002               	movlw	2
  1224  050E  0675               	xorwf	cursorLCD@fila,w
  1225  050F  1D03               	btfss	3,2
  1226  0510  2D12               	goto	u371
  1227  0511  2D13               	goto	u370
  1228  0512                     u371:
  1229  0512  2D1E               	goto	l138
  1230  0513                     u370:
  1231  0513                     l1000:
  1232                           
  1233                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  1234  0513  0873               	movf	cursorLCD@columna,w
  1235  0514  3EBF               	addlw	191
  1236  0515  00F4               	movwf	??_cursorLCD
  1237  0516  0874               	movf	??_cursorLCD,w
  1238  0517  00F6               	movwf	cursorLCD@temp
  1239  0518                     l1002:
  1240                           
  1241                           ;LCDD2.c: 59:         comandoLCD(temp);
  1242  0518  0876               	movf	cursorLCD@temp,w
  1243  0519  120A  118A  2493  120A  118A  	fcall	_comandoLCD
  1244  051E                     l138:
  1245  051E  0008               	return
  1246  051F                     __end_of_cursorLCD:
  1247                           
  1248                           	psect	text3
  1249  0493                     __ptext3:	
  1250 ;; *************** function _comandoLCD *****************
  1251 ;; Defined at:
  1252 ;;		line 63 in file "LCDD2.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  cmd             1    wreg     unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  cmd             1    2[COMMON] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         1       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0
  1269 ;;      Totals:         3       0       0       0       0
  1270 ;;Total ram usage:        3 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_initLCD
  1276 ;;		_cursorLCD
  1277 ;;		_ClearLCD
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _comandoLCD
  1283  0493                     _comandoLCD:
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in _comandoLCD: [wreg]
  1287                           ;comandoLCD@cmd stored from wreg
  1288  0493  00F2               	movwf	comandoLCD@cmd
  1289  0494                     l742:
  1290                           
  1291                           ;LCDD2.c: 64:     RE1 = 0;
  1292  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0496  1089               	bcf	9,1	;volatile
  1295  0497                     l744:
  1296                           
  1297                           ;LCDD2.c: 65:     PORTD = cmd;
  1298  0497  0872               	movf	comandoLCD@cmd,w
  1299  0498  0088               	movwf	8	;volatile
  1300  0499                     l746:
  1301                           
  1302                           ;LCDD2.c: 66:     RE2 = 1;
  1303  0499  1509               	bsf	9,2	;volatile
  1304                           
  1305                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1306  049A  300B               	movlw	11
  1307  049B  00F1               	movwf	??_comandoLCD+1
  1308  049C  3062               	movlw	98
  1309  049D  00F0               	movwf	??_comandoLCD
  1310  049E                     u647:
  1311  049E  0BF0               	decfsz	??_comandoLCD,f
  1312  049F  2C9E               	goto	u647
  1313  04A0  0BF1               	decfsz	??_comandoLCD+1,f
  1314  04A1  2C9E               	goto	u647
  1315  04A2  0000               	nop
  1316  04A3                     l748:
  1317                           
  1318                           ;LCDD2.c: 68:     RE2 = 0;
  1319  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1320  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1321  04A5  1109               	bcf	9,2	;volatile
  1322  04A6                     l141:
  1323  04A6  0008               	return
  1324  04A7                     __end_of_comandoLCD:
  1325                           
  1326                           	psect	text4
  1327  04C2                     __ptext4:	
  1328 ;; *************** function _config *****************
  1329 ;; Defined at:
  1330 ;;		line 92 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _config
  1359  04C2                     _config:
  1360  04C2                     l758:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _config: [wreg+status,2+status,0]
  1363                           
  1364                           
  1365                           ;main.c: 93:     ANSEL = 0X00;
  1366  04C2  1683               	bsf	3,5	;RP0=1, select bank3
  1367  04C3  1703               	bsf	3,6	;RP1=1, select bank3
  1368  04C4  0188               	clrf	8	;volatile
  1369                           
  1370                           ;main.c: 94:     ANSELH = 0X00;
  1371  04C5  0189               	clrf	9	;volatile
  1372                           
  1373                           ;main.c: 95:     TRISA = 0X00;
  1374  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1375  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1376  04C8  0185               	clrf	5	;volatile
  1377                           
  1378                           ;main.c: 96:     TRISB = 0X00;
  1379  04C9  0186               	clrf	6	;volatile
  1380                           
  1381                           ;main.c: 97:     TRISD = 0X00;
  1382  04CA  0188               	clrf	8	;volatile
  1383  04CB                     l760:
  1384                           
  1385                           ;main.c: 98:     TRISEbits.TRISE1 = 0;
  1386  04CB  1089               	bcf	9,1	;volatile
  1387  04CC                     l762:
  1388                           
  1389                           ;main.c: 99:     TRISEbits.TRISE2 = 0;
  1390  04CC  1109               	bcf	9,2	;volatile
  1391                           
  1392                           ;main.c: 100:     PORTA = 0X00;
  1393  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1394  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1395  04CF  0185               	clrf	5	;volatile
  1396                           
  1397                           ;main.c: 101:     PORTB = 0X00;
  1398  04D0  0186               	clrf	6	;volatile
  1399                           
  1400                           ;main.c: 102:     PORTD = 0X00;
  1401  04D1  0188               	clrf	8	;volatile
  1402  04D2                     l764:
  1403                           
  1404                           ;main.c: 105:     OSCCONbits.IRCF = 0b111;
  1405  04D2  3070               	movlw	112
  1406  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1407  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  1408  04D5  048F               	iorwf	15,f	;volatile
  1409  04D6                     l766:
  1410                           
  1411                           ;main.c: 106:     OSCCONbits.SCS = 0b1;
  1412  04D6  140F               	bsf	15,0	;volatile
  1413  04D7                     l768:
  1414                           
  1415                           ;main.c: 109:     T1CON = 0X10;
  1416  04D7  3010               	movlw	16
  1417  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1418  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1419  04DA  0090               	movwf	16	;volatile
  1420  04DB                     l770:
  1421                           
  1422                           ;main.c: 110:     TMR1H = 0;
  1423  04DB  018F               	clrf	15	;volatile
  1424  04DC                     l772:
  1425                           
  1426                           ;main.c: 111:     TMR1L = 0;
  1427  04DC  018E               	clrf	14	;volatile
  1428  04DD                     l73:
  1429  04DD  0008               	return
  1430  04DE                     __end_of_config:
  1431                           
  1432                           	psect	text5
  1433  05EE                     __ptext5:	
  1434 ;; *************** function ___awmod *****************
  1435 ;; Defined at:
  1436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  divisor         2    0[COMMON] int 
  1439 ;;  dividend        2    2[COMMON] int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  sign            1    6[COMMON] unsigned char 
  1442 ;;  counter         1    5[COMMON] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2    0[COMMON] int 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         4       0       0       0       0
  1453 ;;      Locals:         2       0       0       0       0
  1454 ;;      Temps:          1       0       0       0       0
  1455 ;;      Totals:         7       0       0       0       0
  1456 ;;Total ram usage:        7 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function ___awmod
  1467  05EE                     ___awmod:
  1468  05EE                     l1056:	
  1469                           ;incstack = 0
  1470                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1471                           
  1472  05EE  01F6               	clrf	___awmod@sign
  1473  05EF                     l1058:
  1474  05EF  1FF3               	btfss	___awmod@dividend+1,7
  1475  05F0  2DF2               	goto	u491
  1476  05F1  2DF3               	goto	u490
  1477  05F2                     u491:
  1478  05F2  2DFA               	goto	l1064
  1479  05F3                     u490:
  1480  05F3                     l1060:
  1481  05F3  09F2               	comf	___awmod@dividend,f
  1482  05F4  09F3               	comf	___awmod@dividend+1,f
  1483  05F5  0AF2               	incf	___awmod@dividend,f
  1484  05F6  1903               	skipnz
  1485  05F7  0AF3               	incf	___awmod@dividend+1,f
  1486  05F8                     l1062:
  1487  05F8  01F6               	clrf	___awmod@sign
  1488  05F9  0AF6               	incf	___awmod@sign,f
  1489  05FA                     l1064:
  1490  05FA  1FF1               	btfss	___awmod@divisor+1,7
  1491  05FB  2DFD               	goto	u501
  1492  05FC  2DFE               	goto	u500
  1493  05FD                     u501:
  1494  05FD  2E03               	goto	l1068
  1495  05FE                     u500:
  1496  05FE                     l1066:
  1497  05FE  09F0               	comf	___awmod@divisor,f
  1498  05FF  09F1               	comf	___awmod@divisor+1,f
  1499  0600  0AF0               	incf	___awmod@divisor,f
  1500  0601  1903               	skipnz
  1501  0602  0AF1               	incf	___awmod@divisor+1,f
  1502  0603                     l1068:
  1503  0603  0870               	movf	___awmod@divisor,w
  1504  0604  0471               	iorwf	___awmod@divisor+1,w
  1505  0605  1903               	btfsc	3,2
  1506  0606  2E08               	goto	u511
  1507  0607  2E09               	goto	u510
  1508  0608                     u511:
  1509  0608  2E38               	goto	l1086
  1510  0609                     u510:
  1511  0609                     l1070:
  1512  0609  01F5               	clrf	___awmod@counter
  1513  060A  0AF5               	incf	___awmod@counter,f
  1514  060B  2E17               	goto	l1076
  1515  060C                     l1072:
  1516  060C  3001               	movlw	1
  1517  060D                     u525:
  1518  060D  1003               	clrc
  1519  060E  0DF0               	rlf	___awmod@divisor,f
  1520  060F  0DF1               	rlf	___awmod@divisor+1,f
  1521  0610  3EFF               	addlw	-1
  1522  0611  1D03               	skipz
  1523  0612  2E0D               	goto	u525
  1524  0613                     l1074:
  1525  0613  3001               	movlw	1
  1526  0614  00F4               	movwf	??___awmod
  1527  0615  0874               	movf	??___awmod,w
  1528  0616  07F5               	addwf	___awmod@counter,f
  1529  0617                     l1076:
  1530  0617  1FF1               	btfss	___awmod@divisor+1,7
  1531  0618  2E1A               	goto	u531
  1532  0619  2E1B               	goto	u530
  1533  061A                     u531:
  1534  061A  2E0C               	goto	l1072
  1535  061B                     u530:
  1536  061B                     l1078:
  1537  061B  0871               	movf	___awmod@divisor+1,w
  1538  061C  0273               	subwf	___awmod@dividend+1,w
  1539  061D  1D03               	skipz
  1540  061E  2E21               	goto	u545
  1541  061F  0870               	movf	___awmod@divisor,w
  1542  0620  0272               	subwf	___awmod@dividend,w
  1543  0621                     u545:
  1544  0621  1C03               	skipc
  1545  0622  2E24               	goto	u541
  1546  0623  2E25               	goto	u540
  1547  0624                     u541:
  1548  0624  2E2B               	goto	l1082
  1549  0625                     u540:
  1550  0625                     l1080:
  1551  0625  0870               	movf	___awmod@divisor,w
  1552  0626  02F2               	subwf	___awmod@dividend,f
  1553  0627  0871               	movf	___awmod@divisor+1,w
  1554  0628  1C03               	skipc
  1555  0629  03F3               	decf	___awmod@dividend+1,f
  1556  062A  02F3               	subwf	___awmod@dividend+1,f
  1557  062B                     l1082:
  1558  062B  3001               	movlw	1
  1559  062C                     u555:
  1560  062C  1003               	clrc
  1561  062D  0CF1               	rrf	___awmod@divisor+1,f
  1562  062E  0CF0               	rrf	___awmod@divisor,f
  1563  062F  3EFF               	addlw	-1
  1564  0630  1D03               	skipz
  1565  0631  2E2C               	goto	u555
  1566  0632                     l1084:
  1567  0632  3001               	movlw	1
  1568  0633  02F5               	subwf	___awmod@counter,f
  1569  0634  1D03               	btfss	3,2
  1570  0635  2E37               	goto	u561
  1571  0636  2E38               	goto	u560
  1572  0637                     u561:
  1573  0637  2E1B               	goto	l1078
  1574  0638                     u560:
  1575  0638                     l1086:
  1576  0638  0876               	movf	___awmod@sign,w
  1577  0639  1903               	btfsc	3,2
  1578  063A  2E3C               	goto	u571
  1579  063B  2E3D               	goto	u570
  1580  063C                     u571:
  1581  063C  2E42               	goto	l1090
  1582  063D                     u570:
  1583  063D                     l1088:
  1584  063D  09F2               	comf	___awmod@dividend,f
  1585  063E  09F3               	comf	___awmod@dividend+1,f
  1586  063F  0AF2               	incf	___awmod@dividend,f
  1587  0640  1903               	skipnz
  1588  0641  0AF3               	incf	___awmod@dividend+1,f
  1589  0642                     l1090:
  1590  0642  0873               	movf	___awmod@dividend+1,w
  1591  0643  00F1               	movwf	?___awmod+1
  1592  0644  0872               	movf	___awmod@dividend,w
  1593  0645  00F0               	movwf	?___awmod
  1594  0646                     l402:
  1595  0646  0008               	return
  1596  0647                     __end_of___awmod:
  1597                           
  1598                           	psect	text6
  1599  0647                     __ptext6:	
  1600 ;; *************** function ___awdiv *****************
  1601 ;; Defined at:
  1602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  divisor         2    0[COMMON] int 
  1605 ;;  dividend        2    2[COMMON] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  quotient        2    7[COMMON] int 
  1608 ;;  sign            1    6[COMMON] unsigned char 
  1609 ;;  counter         1    5[COMMON] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2    0[COMMON] int 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         4       0       0       0       0
  1620 ;;      Locals:         4       0       0       0       0
  1621 ;;      Temps:          1       0       0       0       0
  1622 ;;      Totals:         9       0       0       0       0
  1623 ;;Total ram usage:        9 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function ___awdiv
  1634  0647                     ___awdiv:
  1635  0647                     l1012:	
  1636                           ;incstack = 0
  1637                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1638                           
  1639  0647  01F6               	clrf	___awdiv@sign
  1640  0648                     l1014:
  1641  0648  1FF1               	btfss	___awdiv@divisor+1,7
  1642  0649  2E4B               	goto	u391
  1643  064A  2E4C               	goto	u390
  1644  064B                     u391:
  1645  064B  2E53               	goto	l1020
  1646  064C                     u390:
  1647  064C                     l1016:
  1648  064C  09F0               	comf	___awdiv@divisor,f
  1649  064D  09F1               	comf	___awdiv@divisor+1,f
  1650  064E  0AF0               	incf	___awdiv@divisor,f
  1651  064F  1903               	skipnz
  1652  0650  0AF1               	incf	___awdiv@divisor+1,f
  1653  0651                     l1018:
  1654  0651  01F6               	clrf	___awdiv@sign
  1655  0652  0AF6               	incf	___awdiv@sign,f
  1656  0653                     l1020:
  1657  0653  1FF3               	btfss	___awdiv@dividend+1,7
  1658  0654  2E56               	goto	u401
  1659  0655  2E57               	goto	u400
  1660  0656                     u401:
  1661  0656  2E60               	goto	l1026
  1662  0657                     u400:
  1663  0657                     l1022:
  1664  0657  09F2               	comf	___awdiv@dividend,f
  1665  0658  09F3               	comf	___awdiv@dividend+1,f
  1666  0659  0AF2               	incf	___awdiv@dividend,f
  1667  065A  1903               	skipnz
  1668  065B  0AF3               	incf	___awdiv@dividend+1,f
  1669  065C                     l1024:
  1670  065C  3001               	movlw	1
  1671  065D  00F4               	movwf	??___awdiv
  1672  065E  0874               	movf	??___awdiv,w
  1673  065F  06F6               	xorwf	___awdiv@sign,f
  1674  0660                     l1026:
  1675  0660  01F7               	clrf	___awdiv@quotient
  1676  0661  01F8               	clrf	___awdiv@quotient+1
  1677  0662                     l1028:
  1678  0662  0870               	movf	___awdiv@divisor,w
  1679  0663  0471               	iorwf	___awdiv@divisor+1,w
  1680  0664  1903               	btfsc	3,2
  1681  0665  2E67               	goto	u411
  1682  0666  2E68               	goto	u410
  1683  0667                     u411:
  1684  0667  2E9F               	goto	l1048
  1685  0668                     u410:
  1686  0668                     l1030:
  1687  0668  01F5               	clrf	___awdiv@counter
  1688  0669  0AF5               	incf	___awdiv@counter,f
  1689  066A  2E76               	goto	l1036
  1690  066B                     l1032:
  1691  066B  3001               	movlw	1
  1692  066C                     u425:
  1693  066C  1003               	clrc
  1694  066D  0DF0               	rlf	___awdiv@divisor,f
  1695  066E  0DF1               	rlf	___awdiv@divisor+1,f
  1696  066F  3EFF               	addlw	-1
  1697  0670  1D03               	skipz
  1698  0671  2E6C               	goto	u425
  1699  0672                     l1034:
  1700  0672  3001               	movlw	1
  1701  0673  00F4               	movwf	??___awdiv
  1702  0674  0874               	movf	??___awdiv,w
  1703  0675  07F5               	addwf	___awdiv@counter,f
  1704  0676                     l1036:
  1705  0676  1FF1               	btfss	___awdiv@divisor+1,7
  1706  0677  2E79               	goto	u431
  1707  0678  2E7A               	goto	u430
  1708  0679                     u431:
  1709  0679  2E6B               	goto	l1032
  1710  067A                     u430:
  1711  067A                     l1038:
  1712  067A  3001               	movlw	1
  1713  067B                     u445:
  1714  067B  1003               	clrc
  1715  067C  0DF7               	rlf	___awdiv@quotient,f
  1716  067D  0DF8               	rlf	___awdiv@quotient+1,f
  1717  067E  3EFF               	addlw	-1
  1718  067F  1D03               	skipz
  1719  0680  2E7B               	goto	u445
  1720  0681  0871               	movf	___awdiv@divisor+1,w
  1721  0682  0273               	subwf	___awdiv@dividend+1,w
  1722  0683  1D03               	skipz
  1723  0684  2E87               	goto	u455
  1724  0685  0870               	movf	___awdiv@divisor,w
  1725  0686  0272               	subwf	___awdiv@dividend,w
  1726  0687                     u455:
  1727  0687  1C03               	skipc
  1728  0688  2E8A               	goto	u451
  1729  0689  2E8B               	goto	u450
  1730  068A                     u451:
  1731  068A  2E92               	goto	l1044
  1732  068B                     u450:
  1733  068B                     l1040:
  1734  068B  0870               	movf	___awdiv@divisor,w
  1735  068C  02F2               	subwf	___awdiv@dividend,f
  1736  068D  0871               	movf	___awdiv@divisor+1,w
  1737  068E  1C03               	skipc
  1738  068F  03F3               	decf	___awdiv@dividend+1,f
  1739  0690  02F3               	subwf	___awdiv@dividend+1,f
  1740  0691                     l1042:
  1741  0691  1477               	bsf	___awdiv@quotient,0
  1742  0692                     l1044:
  1743  0692  3001               	movlw	1
  1744  0693                     u465:
  1745  0693  1003               	clrc
  1746  0694  0CF1               	rrf	___awdiv@divisor+1,f
  1747  0695  0CF0               	rrf	___awdiv@divisor,f
  1748  0696  3EFF               	addlw	-1
  1749  0697  1D03               	skipz
  1750  0698  2E93               	goto	u465
  1751  0699                     l1046:
  1752  0699  3001               	movlw	1
  1753  069A  02F5               	subwf	___awdiv@counter,f
  1754  069B  1D03               	btfss	3,2
  1755  069C  2E9E               	goto	u471
  1756  069D  2E9F               	goto	u470
  1757  069E                     u471:
  1758  069E  2E7A               	goto	l1038
  1759  069F                     u470:
  1760  069F                     l1048:
  1761  069F  0876               	movf	___awdiv@sign,w
  1762  06A0  1903               	btfsc	3,2
  1763  06A1  2EA3               	goto	u481
  1764  06A2  2EA4               	goto	u480
  1765  06A3                     u481:
  1766  06A3  2EA9               	goto	l1052
  1767  06A4                     u480:
  1768  06A4                     l1050:
  1769  06A4  09F7               	comf	___awdiv@quotient,f
  1770  06A5  09F8               	comf	___awdiv@quotient+1,f
  1771  06A6  0AF7               	incf	___awdiv@quotient,f
  1772  06A7  1903               	skipnz
  1773  06A8  0AF8               	incf	___awdiv@quotient+1,f
  1774  06A9                     l1052:
  1775  06A9  0878               	movf	___awdiv@quotient+1,w
  1776  06AA  00F1               	movwf	?___awdiv+1
  1777  06AB  0877               	movf	___awdiv@quotient,w
  1778  06AC  00F0               	movwf	?___awdiv
  1779  06AD                     l389:
  1780  06AD  0008               	return
  1781  06AE                     __end_of___awdiv:
  1782                           
  1783                           	psect	text7
  1784  051F                     __ptext7:	
  1785 ;; *************** function _LCDstring *****************
  1786 ;; Defined at:
  1787 ;;		line 75 in file "LCDD2.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  mensaje         2    2[COMMON] PTR unsigned char 
  1790 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
  1791 ;;		 -> humedadR(15), temperatura(15), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         2       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		_dispCHAR
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _LCDstring
  1819  051F                     _LCDstring:
  1820  051F                     l1004:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1823                           
  1824                           
  1825                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  1826  051F  2D34               	goto	l1010
  1827  0520                     l1006:
  1828                           
  1829                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  1830  0520  0873               	movf	LCDstring@mensaje+1,w
  1831  0521  00FF               	movwf	btemp+1
  1832  0522  0872               	movf	LCDstring@mensaje,w
  1833  0523  0084               	movwf	4
  1834  0524  120A  118A  2003  120A  118A  	fcall	stringtab
  1835  0529  120A  118A  2470  120A  118A  	fcall	_dispCHAR
  1836  052E                     l1008:
  1837                           
  1838                           ;LCDD2.c: 78:         mensaje ++;
  1839  052E  3001               	movlw	1
  1840  052F  07F2               	addwf	LCDstring@mensaje,f
  1841  0530  1803               	skipnc
  1842  0531  0AF3               	incf	LCDstring@mensaje+1,f
  1843  0532  3000               	movlw	0
  1844  0533  07F3               	addwf	LCDstring@mensaje+1,f
  1845  0534                     l1010:
  1846                           
  1847                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  1848  0534  0873               	movf	LCDstring@mensaje+1,w
  1849  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0537  00FF               	movwf	btemp+1
  1852  0538  0872               	movf	LCDstring@mensaje,w
  1853  0539  0084               	movwf	4
  1854  053A  120A  118A  2003  120A  118A  	fcall	stringtab
  1855  053F  3A00               	xorlw	0
  1856  0540  1D03               	skipz
  1857  0541  2D43               	goto	u381
  1858  0542  2D44               	goto	u380
  1859  0543                     u381:
  1860  0543  2D20               	goto	l1006
  1861  0544                     u380:
  1862  0544                     l150:
  1863  0544  0008               	return
  1864  0545                     __end_of_LCDstring:
  1865                           
  1866                           	psect	text8
  1867  0470                     __ptext8:	
  1868 ;; *************** function _dispCHAR *****************
  1869 ;; Defined at:
  1870 ;;		line 40 in file "LCDD2.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  b               1    wreg     unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  b               1    1[COMMON] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         1       0       0       0       0
  1886 ;;      Temps:          1       0       0       0       0
  1887 ;;      Totals:         2       0       0       0       0
  1888 ;;Total ram usage:        2 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_LCDstring
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _dispCHAR
  1899  0470                     _dispCHAR:
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _dispCHAR: [wreg]
  1903                           ;dispCHAR@b stored from wreg
  1904  0470  00F1               	movwf	dispCHAR@b
  1905  0471                     l750:
  1906                           
  1907                           ;LCDD2.c: 42:     RE1 = 1;
  1908  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0473  1489               	bsf	9,1	;volatile
  1911  0474                     l752:
  1912                           
  1913                           ;LCDD2.c: 43:     PORTD = b;
  1914  0474  0871               	movf	dispCHAR@b,w
  1915  0475  0088               	movwf	8	;volatile
  1916  0476                     l754:
  1917                           
  1918                           ;LCDD2.c: 44:     RE2 = 1;
  1919  0476  1509               	bsf	9,2	;volatile
  1920                           
  1921                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1922  0477  301A               	movlw	26
  1923  0478  00F0               	movwf	??_dispCHAR
  1924  0479                     u657:
  1925  0479  0BF0               	decfsz	??_dispCHAR,f
  1926  047A  2C79               	goto	u657
  1927  047B  0000               	nop
  1928  047C                     l756:
  1929                           
  1930                           ;LCDD2.c: 46:     RE2 = 0;
  1931  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1932  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1933  047E  1109               	bcf	9,2	;volatile
  1934  047F                     l133:
  1935  047F  0008               	return
  1936  0480                     __end_of_dispCHAR:
  1937                           
  1938                           	psect	text9
  1939  04A7                     __ptext9:	
  1940 ;; *************** function _DHT11_START *****************
  1941 ;; Defined at:
  1942 ;;		line 11 in file "DHT11.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          2       0       0       0       0
  1959 ;;      Totals:         2       0       0       0       0
  1960 ;;Total ram usage:        2 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _DHT11_START
  1971  04A7                     _DHT11_START:
  1972  04A7                     l798:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _DHT11_START: [wreg]
  1975                           
  1976                           
  1977                           ;DHT11.c: 15:     TRISEbits.TRISE0 = 0;
  1978  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1979  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1980  04A9  1009               	bcf	9,0	;volatile
  1981                           
  1982                           ;DHT11.c: 16:     RE0 = 0;
  1983  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1984  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1985  04AC  1009               	bcf	9,0	;volatile
  1986  04AD                     l800:
  1987                           
  1988                           ;DHT11.c: 17:     _delay((unsigned long)((25)*(8000000/4000.0)));
  1989  04AD  3041               	movlw	65
  1990  04AE  00F1               	movwf	??_DHT11_START+1
  1991  04AF  30EE               	movlw	238
  1992  04B0  00F0               	movwf	??_DHT11_START
  1993  04B1                     u667:
  1994  04B1  0BF0               	decfsz	??_DHT11_START,f
  1995  04B2  2CB1               	goto	u667
  1996  04B3  0BF1               	decfsz	??_DHT11_START+1,f
  1997  04B4  2CB1               	goto	u667
  1998  04B5  0000               	nop
  1999  04B6                     l802:
  2000                           
  2001                           ;DHT11.c: 18:     RE0 = 1;
  2002  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2003  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2004  04B8  1409               	bsf	9,0	;volatile
  2005                           
  2006                           ;DHT11.c: 19:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  2007  04B9  3010               	movlw	16
  2008  04BA  00F0               	movwf	??_DHT11_START
  2009  04BB                     u677:
  2010  04BB  0BF0               	decfsz	??_DHT11_START,f
  2011  04BC  2CBB               	goto	u677
  2012  04BD  0000               	nop
  2013  04BE                     l804:
  2014                           
  2015                           ;DHT11.c: 20:     TRISEbits.TRISE0 = 1;
  2016  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2017  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2018  04C0  1409               	bsf	9,0	;volatile
  2019  04C1                     l88:
  2020  04C1  0008               	return
  2021  04C2                     __end_of_DHT11_START:
  2022                           
  2023                           	psect	text10
  2024  0571                     __ptext10:	
  2025 ;; *************** function _DHT11_ReadData *****************
  2026 ;; Defined at:
  2027 ;;		line 45 in file "DHT11.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  datos           1    wreg     PTR unsigned char 
  2030 ;;		 -> CHECKSUM(1), dummyT1(1), Temp1(1), dummyHum1(1), 
  2031 ;;		 -> Hum1(1), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  datos           1    3[COMMON] PTR unsigned char 
  2034 ;;		 -> CHECKSUM(1), dummyT1(1), Temp1(1), dummyHum1(1), 
  2035 ;;		 -> Hum1(1), 
  2036 ;;  i               1    2[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         2       0       0       0       0
  2048 ;;      Temps:          2       0       0       0       0
  2049 ;;      Totals:         4       0       0       0       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _DHT11_ReadData
  2061  0571                     _DHT11_ReadData:
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _DHT11_ReadData: [wreg-fsr0h+status,2+status,0]
  2065                           ;DHT11_ReadData@datos stored from wreg
  2066  0571  00F3               	movwf	DHT11_ReadData@datos
  2067  0572                     l836:
  2068                           
  2069                           ;DHT11.c: 46:     uint8_t i;;DHT11.c: 47:     *datos = 0;
  2070  0572  0873               	movf	DHT11_ReadData@datos,w
  2071  0573  0084               	movwf	4
  2072  0574  0180               	clrf	0
  2073  0575                     l838:
  2074                           
  2075                           ;DHT11.c: 48:     for(i=0; i<8; i++){
  2076  0575  01F2               	clrf	DHT11_ReadData@i
  2077  0576                     l110:
  2078  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0578  1C09               	btfss	9,0	;volatile
  2081  0579  2D7B               	goto	u71
  2082  057A  2D7C               	goto	u70
  2083  057B                     u71:
  2084  057B  2D76               	goto	l110
  2085  057C                     u70:
  2086  057C                     l844:
  2087                           
  2088                           ;DHT11.c: 50:         TMR1H = 0;
  2089  057C  018F               	clrf	15	;volatile
  2090                           
  2091                           ;DHT11.c: 51:         TMR1L = 0;
  2092  057D  018E               	clrf	14	;volatile
  2093  057E                     l113:	
  2094                           ;DHT11.c: 52:         while(RE0);
  2095                           
  2096  057E  1809               	btfsc	9,0	;volatile
  2097  057F  2D81               	goto	u81
  2098  0580  2D82               	goto	u80
  2099  0581                     u81:
  2100  0581  2D7E               	goto	l113
  2101  0582                     u80:
  2102  0582                     l846:
  2103                           
  2104                           ;DHT11.c: 53:         if(TMR1L > 50)*datos |= (1 << (7-i));
  2105  0582  3033               	movlw	51
  2106  0583  020E               	subwf	14,w	;volatile
  2107  0584  1C03               	skipc
  2108  0585  2D87               	goto	u91
  2109  0586  2D88               	goto	u90
  2110  0587                     u91:
  2111  0587  2D99               	goto	l850
  2112  0588                     u90:
  2113  0588                     l848:
  2114  0588  3001               	movlw	1
  2115  0589  00F0               	movwf	??_DHT11_ReadData
  2116  058A  0872               	movf	DHT11_ReadData@i,w
  2117  058B  3C07               	sublw	7
  2118  058C  3E01               	addlw	1
  2119  058D  2D90               	goto	u104
  2120  058E                     u105:
  2121  058E  1003               	clrc
  2122  058F  0DF0               	rlf	??_DHT11_ReadData,f
  2123  0590                     u104:
  2124  0590  3EFF               	addlw	-1
  2125  0591  1D03               	skipz
  2126  0592  2D8E               	goto	u105
  2127  0593  0870               	movf	??_DHT11_ReadData,w
  2128  0594  00F1               	movwf	??_DHT11_ReadData+1
  2129  0595  0873               	movf	DHT11_ReadData@datos,w
  2130  0596  0084               	movwf	4
  2131  0597  0871               	movf	??_DHT11_ReadData+1,w
  2132  0598  0480               	iorwf	0,f
  2133  0599                     l850:
  2134                           
  2135                           ;DHT11.c: 56:     }
  2136  0599  3001               	movlw	1
  2137  059A  00F0               	movwf	??_DHT11_ReadData
  2138  059B  0870               	movf	??_DHT11_ReadData,w
  2139  059C  07F2               	addwf	DHT11_ReadData@i,f
  2140  059D                     l852:
  2141  059D  3008               	movlw	8
  2142  059E  0272               	subwf	DHT11_ReadData@i,w
  2143  059F  1C03               	skipc
  2144  05A0  2DA2               	goto	u111
  2145  05A1  2DA3               	goto	u110
  2146  05A2                     u111:
  2147  05A2  2D76               	goto	l110
  2148  05A3                     u110:
  2149  05A3                     l117:
  2150  05A3  0008               	return
  2151  05A4                     __end_of_DHT11_ReadData:
  2152                           
  2153                           	psect	text11
  2154  0545                     __ptext11:	
  2155 ;; *************** function _DHT11_ALIVE *****************
  2156 ;; Defined at:
  2157 ;;		line 24 in file "DHT11.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      unsigned char 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _DHT11_ALIVE
  2186  0545                     _DHT11_ALIVE:
  2187  0545                     l806:	
  2188                           ;incstack = 0
  2189                           ; Regs used in _DHT11_ALIVE: [wreg+status,2]
  2190                           
  2191                           
  2192                           ;DHT11.c: 29:     TMR1H = 0;
  2193  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0547  018F               	clrf	15	;volatile
  2196                           
  2197                           ;DHT11.c: 30:     TMR1L = 0;
  2198  0548  018E               	clrf	14	;volatile
  2199  0549                     l808:
  2200                           
  2201                           ;DHT11.c: 31:     T1CONbits.TMR1ON = 1;
  2202  0549  1410               	bsf	16,0	;volatile
  2203  054A                     l91:	
  2204                           ;DHT11.c: 32:     while(!RE0 && TMR1L < 100);
  2205                           
  2206  054A  1809               	btfsc	9,0	;volatile
  2207  054B  2D4D               	goto	u11
  2208  054C  2D4E               	goto	u10
  2209  054D                     u11:
  2210  054D  2D54               	goto	l812
  2211  054E                     u10:
  2212  054E                     l810:
  2213  054E  3064               	movlw	100
  2214  054F  020E               	subwf	14,w	;volatile
  2215  0550  1C03               	skipc
  2216  0551  2D53               	goto	u21
  2217  0552  2D54               	goto	u20
  2218  0553                     u21:
  2219  0553  2D4A               	goto	l91
  2220  0554                     u20:
  2221  0554                     l812:
  2222                           
  2223                           ;DHT11.c: 34:     if(TMR1L > 99)return 0;
  2224  0554  3064               	movlw	100
  2225  0555  020E               	subwf	14,w	;volatile
  2226  0556  1C03               	skipc
  2227  0557  2D59               	goto	u31
  2228  0558  2D5A               	goto	u30
  2229  0559                     u31:
  2230  0559  2D5C               	goto	l820
  2231  055A                     u30:
  2232  055A                     l814:
  2233  055A  3000               	movlw	0
  2234  055B  2D70               	goto	l97
  2235  055C                     l820:
  2236                           
  2237                           ;DHT11.c: 36:         TMR1H = 0;
  2238  055C  018F               	clrf	15	;volatile
  2239                           
  2240                           ;DHT11.c: 37:         TMR1L = 0;
  2241  055D  018E               	clrf	14	;volatile
  2242  055E                     l99:	
  2243                           ;DHT11.c: 38:         while(RE0 && TMR1L < 100);
  2244                           
  2245  055E  1C09               	btfss	9,0	;volatile
  2246  055F  2D61               	goto	u41
  2247  0560  2D62               	goto	u40
  2248  0561                     u41:
  2249  0561  2D68               	goto	l824
  2250  0562                     u40:
  2251  0562                     l822:
  2252  0562  3064               	movlw	100
  2253  0563  020E               	subwf	14,w	;volatile
  2254  0564  1C03               	skipc
  2255  0565  2D67               	goto	u51
  2256  0566  2D68               	goto	u50
  2257  0567                     u51:
  2258  0567  2D5E               	goto	l99
  2259  0568                     u50:
  2260  0568                     l824:
  2261                           
  2262                           ;DHT11.c: 40:         if(TMR1L > 99) return 0;
  2263  0568  3064               	movlw	100
  2264  0569  020E               	subwf	14,w	;volatile
  2265  056A  1C03               	skipc
  2266  056B  2D6D               	goto	u61
  2267  056C  2D6E               	goto	u60
  2268  056D                     u61:
  2269  056D  2D6F               	goto	l832
  2270  056E                     u60:
  2271  056E  2D5A               	goto	l814
  2272  056F                     l832:
  2273  056F  3001               	movlw	1
  2274  0570                     l97:
  2275  0570  0008               	return
  2276  0571                     __end_of_DHT11_ALIVE:
  2277  007E                     btemp	set	126	;btemp
  2278  007E                     wtemp0	set	126
  2279                           
  2280                           	psect	config
  2281                           
  2282                           ;Config register CONFIG1 @ 0x2007
  2283                           ;	Oscillator Selection bits
  2284                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2285                           ;	Watchdog Timer Enable bit
  2286                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2287                           ;	Power-up Timer Enable bit
  2288                           ;	PWRTE = OFF, PWRT disabled
  2289                           ;	RE3/MCLR pin function select bit
  2290                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2291                           ;	Code Protection bit
  2292                           ;	CP = OFF, Program memory code protection is disabled
  2293                           ;	Data Code Protection bit
  2294                           ;	CPD = OFF, Data memory code protection is disabled
  2295                           ;	Brown Out Reset Selection bits
  2296                           ;	BOREN = OFF, BOR disabled
  2297                           ;	Internal External Switchover bit
  2298                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2299                           ;	Fail-Safe Clock Monitor Enabled bit
  2300                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2301                           ;	Low Voltage Programming Enable bit
  2302                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2303                           ;	In-Circuit Debugger Mode bit
  2304                           ;	DEBUG = 0x1, unprogrammed default
  2305  2007                     	org	8199
  2306  2007  20F4               	dw	8436
  2307                           
  2308                           ;Config register CONFIG2 @ 0x2008
  2309                           ;	Brown-out Reset Selection bit
  2310                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2311                           ;	Flash Program Memory Self Write Enable bits
  2312                           ;	WRT = OFF, Write protection off
  2313  2008                     	org	8200
  2314  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        30
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     10      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 
		 -> humedadR(BANK0[15]), temperatura(BANK0[15]), 

    DHT11_ReadData@datos	PTR unsigned char  size(1) Largest target is 1
		 -> CHECKSUM(COMMON[1]), dummyT1(COMMON[1]), Temp1(COMMON[1]), dummyHum1(COMMON[1]), 
		 -> Hum1(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _initLCD->_comandoLCD
    _cursorLCD->_comandoLCD
    _LCDstring->_dispCHAR

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2565
                                              0 BANK0     10    10      0
                        _DHT11_ALIVE
                     _DHT11_ReadData
                        _DHT11_START
                          _LCDstring
                            ___awdiv
                            ___awmod
                             _config
                          _cursorLCD
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      15
                                              3 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     605
                                              3 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     0      2     516
                                              2 COMMON     2     0      2
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (2) _dispCHAR                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_START                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       4     4      0     225
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ALIVE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_ALIVE
   _DHT11_ReadData
   _DHT11_START
   _LCDstring
     _dispCHAR
   ___awdiv
   ___awmod
   _config
   _cursorLCD
     _comandoLCD
   _initLCD
     _comandoLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 11 11:48:28 2021

                      pc 0002                       l63 06BC                       l73 04DD  
                     l91 054A                       l88 04C1                       l97 0570  
                     l99 055E                       u10 054E                       u11 054D  
                     u20 0554                       u21 0553                       u30 055A  
                     u31 0559                       u40 0562                       u41 0561  
                     u50 0568                       u51 0567                       u60 056E  
                     u61 056D                       u70 057C                       u71 057B  
                     u80 0582                       u81 0581                       u90 0588  
                     u91 0587             ___awdiv@sign 0076                       fsr 0004  
                    l110 0576                      l113 057E                      l130 05ED  
                    l117 05A3                      l133 047F                      l141 04A6  
                    l150 0544                      l402 0646                      l138 051E  
                    l800 04AD                      l810 054E                      l802 04B6  
                    l820 055C                      l812 0554                      l804 04BE  
                    l389 06AD                      l822 0562                      l814 055A  
                    l806 0545                      l750 0471                      l742 0494  
                    l832 056F                      l824 0568                      l808 0549  
                    l752 0474                      l760 04CB                      l744 0497  
                    l850 0599                      l754 0476                      l770 04DB  
                    l762 04CC                      l746 0499                      l852 059D  
                    l844 057C                      l836 0572                      l756 047C  
                    l772 04DC                      l764 04D2                      l748 04A3  
                    l780 05B1                      l846 0582                      l838 0575  
                    l766 04D6                      l758 04C2                      l790 05D5  
                    l782 05B7                      l774 05A4                      l848 0588  
                    l768 04D7                      l792 05DB                      l784 05C0  
                    l776 05A7                      l794 05E1                      l786 05C6  
                    l778 05A8                      l796 05E7                      l788 05CF  
                    l798 04A7                      l992 04FD                      l994 0502  
                    l996 0507                      l998 050D                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      u110 05A3  
                    u111 05A2                      u104 0590                      u105 058E  
                    u400 0657                      u401 0656                      u410 0668  
                    u411 0667                      u500 05FE                      u501 05FD  
                    u430 067A                      u510 0609                      u431 0679  
                    u511 0608                      u360 0502                      u425 066C  
                    u361 0501                      u450 068B                      u530 061B  
                    u370 0513                      u451 068A                      u531 061A  
                    u371 0512                      u380 0544                      u540 0625  
                    u381 0543                      u445 067B                      u541 0624  
                    u525 060D                      u470 069F                      u390 064C  
                    u471 069E                      u455 0687                      u391 064B  
                    u607 07E0                      u480 06A4                      u560 0638  
                    u481 06A3                      u465 0693                      u561 0637  
                    u545 0621                      u617 05AC                      u570 063D  
                    u490 05F3                      u571 063C                      u555 062C  
                    u491 05F2                      u627 05BB                      u580 06CB  
                    u637 05CA                      u581 06CA                      u590 0713  
                    u647 049E                      u591 0712                      u657 0479  
                    u667 04B1                      u595 070F                      u677 04BB  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1000 0513                     l1010 0534                     l1002 0518  
                   l1004 051F                     l1020 0653                     l1012 0647  
                   l1100 06C1                     l1006 0520                     l1030 0668  
                   l1022 0657                     l1014 0648                     l1110 0780  
                   l1102 06CB                     l1008 052E                     l1040 068B  
                   l1032 066B                     l1024 065C                     l1016 064C  
                   l1120 07BD                     l1112 0792                     l1104 06E9  
                   l1050 06A4                     l1042 0691                     l1034 0672  
                   l1026 0660                     l1018 0651                     l1122 07C6  
                   l1114 079A                     l1106 0713                     l1052 06A9  
                   l1044 0692                     l1036 0676                     l1028 0662  
                   l1060 05F3                     l1116 07A3                     l1124 07D7  
                   l1108 0777                     l1046 0699                     l1038 067A  
                   l1070 0609                     l1062 05F8                     l1126 07DA  
                   l1118 07B5                     l1048 069F                     l1080 0625  
                   l1072 060C                     l1064 05FA                     l1056 05EE  
                   l1090 0642                     l1082 062B                     l1074 0613  
                   l1066 05FE                     l1058 05EF                     l1084 0632  
                   l1076 0617                     l1068 0603                     l1078 061B  
                   l1086 0638                     l1094 06AE                     l1088 063D  
                   l1096 06B3                     l1098 06B6                     STR_1 0013  
                   STR_2 0013                     STR_3 0013                     STR_4 0013  
                   _Hum1 007B     __size_of_DHT11_ALIVE 002C                     _main 06AE  
                   btemp 007E     __size_of_DHT11_START 001B                     start 0000  
       ??_DHT11_ReadData 0070      DHT11_ReadData@datos 0073       __size_of_LCDstring 0026  
                  ?_main 0070          __end_of___awdiv 06AE          __end_of___awmod 0647  
                  _ANSEL 0188          ___awdiv@divisor 0070                    _T1CON 0010  
        ___awdiv@counter 0075                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _Temp1 007D          __end_of_initLCD 05EE                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E9  
           __end_of_main 07E9                   ??_main 003E         ___awdiv@dividend 0072  
                 _ANSELH 0189        __end_of_LCDstring 0545         __end_of_dispCHAR 0480  
              ??___awdiv 0074                ??___awmod 0074                   _config 04C2  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_initLCD 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 04DE       __size_of_cursorLCD 0023               __pmaintext 06AE  
                ?_config 0070               _comandoLCD 0493                ?_dispCHAR 0070  
          ??_DHT11_ALIVE 0070               __stringtab 0003            ??_DHT11_START 0070  
                ___awdiv 0647                  ___awmod 05EE          __size_of_config 001C  
                __ptext1 05A4                  __ptext2 04FC                  __ptext3 0493  
                __ptext4 04C2                  __ptext5 05EE                  __ptext6 0647  
                __ptext7 051F                  __ptext8 0470                  __ptext9 04A7  
                _initLCD 05A4                _T1CONbits 0010                  _dummyT1 007C  
      __end_of_cursorLCD 051F         ___awmod@dividend 0072               ??_dispCHAR 0070  
   end_of_initialization 07FC      __end_of_DHT11_ALIVE 0571                _LCDstring 051F  
    __end_of_DHT11_START 04C2  __size_of_DHT11_ReadData 0033              ?_comandoLCD 0070  
              _TRISEbits 0089               ?_LCDstring 0072           __end_of_config 04DE  
    start_initialization 07E9              _DHT11_ALIVE 0545              _DHT11_START 04A7  
    __size_of_comandoLCD 0014               init_fetch0 0480                 ??_config 0070  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 003E        __size_of_dispCHAR 0010              ??_LCDstring 0074  
               ?___awdiv 0070                 ?___awmod 0070           _DHT11_ReadData 0571  
              __pstrings 0003                 ?_initLCD 0070                 _CHECKSUM 0079  
              _dummyHum1 007A                _cursorLCD 04FC                dispCHAR@b 0071  
 __end_of_DHT11_ReadData 05A4              __stringbase 0012             ??_comandoLCD 0070  
             ?_cursorLCD 0073       __end_of_comandoLCD 04A7          ?_DHT11_ReadData 0070  
       __size_of___awdiv 0067         __size_of___awmod 0059          DHT11_ReadData@i 0072  
     __end_of__stringtab 0013         __size_of_initLCD 004A                 _dispCHAR 0470  
               __ptext10 0571                 __ptext11 0545         LCDstring@mensaje 0072  
           ?_DHT11_ALIVE 0070             ?_DHT11_START 0070            __size_of_main 013B  
               _humedadR 0020            cursorLCD@fila 0075            cursorLCD@temp 0076  
               init_ram0 0484              ??_cursorLCD 0074                stringcode 000D  
             _OSCCONbits 008F         cursorLCD@columna 0073              _temperatura 002F  
               stringdir 000D                 stringtab 0003            comandoLCD@cmd 0072  
