

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 30 13:15:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0019                     _TXREG	set	25
   374  0018                     _RCSTAbits	set	24
   375  0013                     _SSPBUF	set	19
   376  0014                     _SSPCON	set	20
   377  000B                     _INTCONbits	set	11
   378  0009                     _PORTE	set	9
   379  0008                     _PORTD	set	8
   380  0007                     _PORTC	set	7
   381  0006                     _PORTB	set	6
   382  0007                     _PORTCbits	set	7
   383  001A                     _RCREG	set	26
   384  0005                     _PORTA	set	5
   385  000C                     _PIR1bits	set	12
   386  0098                     _TXSTAbits	set	152
   387  0099                     _SPBRG	set	153
   388  0094                     _SSPSTATbits	set	148
   389  0094                     _SSPSTAT	set	148
   390  008C                     _PIE1bits	set	140
   391  008F                     _OSCCONbits	set	143
   392  0089                     _TRISE	set	137
   393  0088                     _TRISD	set	136
   394  0087                     _TRISCbits	set	135
   395  0086                     _TRISB	set	134
   396  0085                     _TRISA	set	133
   397  043B                     _TRISC3	set	1083
   398  043D                     _TRISC5	set	1085
   399  0189                     _ANSELH	set	393
   400  0188                     _ANSEL	set	392
   401                           
   402                           	psect	strings
   403  0237                     __pstrings:
   404  0237                     stringtab:
   405  0237                     __stringtab:
   406  0237                     stringcode:	
   407                           ;	String table - string pointers are 1 byte each
   408                           
   409  0237                     stringdir:
   410  0237  3002               	movlw	high stringdir
   411  0238  008A               	movwf	10
   412  0239  0804               	movf	4,w
   413  023A  0A84               	incf	4,f
   414  023B  0782               	addwf	2,f
   415  023C                     __stringbase:
   416  023C  3400               	retlw	0
   417  023D                     __end_of__stringtab:
   418  023D                     STR_4:
   419  023D  340D               	retlw	13
   420  023E  3400               	retlw	0
   421  023F                     STR_3:
   422  023F  342E               	retlw	46	;'.'
   423  0240  3400               	retlw	0
   424  0241                     STR_1:
   425  0241  340A               	retlw	10
   426  0242  3400               	retlw	0
   427  0241                     
   428                           	psect	cinit
   429  000F                     start_initialization:	
   430                           ; #config settings
   431                           
   432  000F                     __initialization:
   433                           
   434                           ; Clear objects allocated to COMMON
   435  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   436  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   437  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   438                           
   439                           ; Clear objects allocated to BANK0
   440  0012  1283               	bcf	3,5	;RP0=0, select bank0
   441  0013  1303               	bcf	3,6	;RP1=0, select bank0
   442  0014  01B4               	clrf	__pbssBANK0& (0+127)
   443  0015  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   444  0016                     end_of_initialization:	
   445                           ;End of C runtime variable initialization code
   446                           
   447  0016                     __end_of__initialization:
   448  0016  0183               	clrf	3
   449  0017  120A  118A  2897   	ljmp	_main	;jump to C main() function
   450                           
   451                           	psect	bssCOMMON
   452  0079                     __pbssCOMMON:
   453  0079                     _val1:
   454  0079                     	ds	1
   455  007A                     _UARTsend2:
   456  007A                     	ds	1
   457  007B                     _UARTsend:
   458  007B                     	ds	1
   459                           
   460                           	psect	bssBANK0
   461  0034                     __pbssBANK0:
   462  0034                     _UARTdat:
   463  0034                     	ds	1
   464  0035                     _val2:
   465  0035                     	ds	1
   466                           
   467                           	psect	cstackCOMMON
   468  0070                     __pcstackCOMMON:
   469  0070                     ?_config:
   470  0070                     ?_sendSPI:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_readSPI:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_sendhex:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_sendString:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_configUART:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_interrupcion:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??_interrupcion:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_main:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_send1dato:	
   495                           ; 1 bytes @ 0x0
   496                           
   497                           
   498                           ; 1 bytes @ 0x0
   499  0070                     	ds	2
   500  0072                     ??_config:
   501  0072                     ?_spiInit:	
   502                           ; 1 bytes @ 0x2
   503                           
   504  0072                     ??_sendSPI:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  0072                     ??_readSPI:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  0072                     ??_configUART:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  0072                     ??_send1dato:	
   514                           ; 1 bytes @ 0x2
   515                           
   516  0072                     ?___bmul:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0072                     ?___awdiv:	
   520                           ; 1 bytes @ 0x2
   521                           
   522  0072                     spiInit@sDataSample:	
   523                           ; 2 bytes @ 0x2
   524                           
   525  0072                     sendSPI@valor:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     send1dato@dato:	
   529                           ; 1 bytes @ 0x2
   530                           
   531  0072                     ___bmul@multiplicand:	
   532                           ; 1 bytes @ 0x2
   533                           
   534  0072                     ___awdiv@divisor:	
   535                           ; 1 bytes @ 0x2
   536                           
   537                           
   538                           ; 2 bytes @ 0x2
   539  0072                     	ds	1
   540  0073                     ??_sendString:
   541  0073                     ??___bmul:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     spiInit@sClockIdle:	
   545                           ; 1 bytes @ 0x3
   546                           
   547                           
   548                           ; 1 bytes @ 0x3
   549  0073                     	ds	1
   550  0074                     spiInit@sTransmitEdge:
   551  0074                     sendString@mensaje:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     ___bmul@product:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0074                     ___awdiv@dividend:	
   558                           ; 1 bytes @ 0x4
   559                           
   560                           
   561                           ; 2 bytes @ 0x4
   562  0074                     	ds	1
   563  0075                     ??_spiInit:
   564  0075                     spiInit@sType:	
   565                           ; 1 bytes @ 0x5
   566                           
   567  0075                     ___bmul@multiplier:	
   568                           ; 1 bytes @ 0x5
   569                           
   570                           
   571                           ; 1 bytes @ 0x5
   572  0075                     	ds	1
   573  0076                     ??___awdiv:
   574                           
   575                           ; 1 bytes @ 0x6
   576  0076                     	ds	1
   577  0077                     divisiondecimal@conteo:
   578                           
   579                           ; 1 bytes @ 0x7
   580  0077                     	ds	1
   581  0078                     divisiondecimal@div:
   582                           
   583                           ; 1 bytes @ 0x8
   584  0078                     	ds	1
   585                           
   586                           	psect	cstackBANK0
   587  0020                     __pcstackBANK0:
   588  0020                     ___awdiv@counter:
   589                           
   590                           ; 1 bytes @ 0x0
   591  0020                     	ds	1
   592  0021                     ___awdiv@sign:
   593                           
   594                           ; 1 bytes @ 0x1
   595  0021                     	ds	1
   596  0022                     ___awdiv@quotient:
   597                           
   598                           ; 2 bytes @ 0x2
   599  0022                     	ds	2
   600  0024                     ?_divisiondecimal:
   601  0024                     divisiondecimal@un:	
   602                           ; 1 bytes @ 0x4
   603                           
   604                           
   605                           ; 1 bytes @ 0x4
   606  0024                     	ds	1
   607  0025                     divisiondecimal@dec:
   608                           
   609                           ; 1 bytes @ 0x5
   610  0025                     	ds	1
   611  0026                     divisiondecimal@cent:
   612                           
   613                           ; 1 bytes @ 0x6
   614  0026                     	ds	1
   615  0027                     ??_divisiondecimal:
   616                           
   617                           ; 1 bytes @ 0x7
   618  0027                     	ds	3
   619  002A                     ??_sendhex:
   620                           
   621                           ; 1 bytes @ 0xA
   622  002A                     	ds	3
   623  002D                     sendhex@valor:
   624                           
   625                           ; 1 bytes @ 0xD
   626  002D                     	ds	1
   627  002E                     sendhex@unidad:
   628                           
   629                           ; 1 bytes @ 0xE
   630  002E                     	ds	1
   631  002F                     sendhex@centena:
   632                           
   633                           ; 1 bytes @ 0xF
   634  002F                     	ds	1
   635  0030                     sendhex@decena:
   636                           
   637                           ; 1 bytes @ 0x10
   638  0030                     	ds	1
   639  0031                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x11
   642  0031                     	ds	3
   643                           
   644                           	psect	maintext
   645  0097                     __pmaintext:	
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 54 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : B00/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       3       0       0       0
   668 ;;      Totals:         0       3       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels required when called:    4
   671 ;; This function calls:
   672 ;;		_config
   673 ;;		_readSPI
   674 ;;		_sendSPI
   675 ;;		_sendString
   676 ;;		_sendhex
   677 ;;		_spiInit
   678 ;; This function is called by:
   679 ;;		Startup code after reset
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _main
   685  0097                     _main:
   686  0097                     l1211:	
   687                           ;incstack = 0
   688                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   689                           
   690                           
   691                           ;main.c: 55:     config();
   692  0097  120A  118A  21A7  120A  118A  	fcall	_config
   693                           
   694                           ;main.c: 56:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   695  009C  01F2               	clrf	spiInit@sDataSample
   696  009D  01F3               	clrf	spiInit@sClockIdle
   697  009E  01F4               	clrf	spiInit@sTransmitEdge
   698  009F  3020               	movlw	32
   699  00A0  120A  118A  21EA  120A  118A  	fcall	_spiInit
   700  00A5                     l1213:
   701                           
   702                           ;main.c: 58:         PORTCbits.RC2 = 0;
   703  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   704  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   705  00A7  1107               	bcf	7,2	;volatile
   706                           
   707                           ;main.c: 59:         sendSPI('1');
   708  00A8  3031               	movlw	49
   709  00A9  120A  118A  2259  120A  118A  	fcall	_sendSPI
   710  00AE                     l1215:
   711                           
   712                           ;main.c: 61:         UARTsend = readSPI();
   713  00AE  120A  118A  224F  120A  118A  	fcall	_readSPI
   714  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   715  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   716  00B5  00B1               	movwf	??_main
   717  00B6  0831               	movf	??_main,w
   718  00B7  00FB               	movwf	_UARTsend
   719  00B8                     l1217:
   720                           
   721                           ;main.c: 62:         _delay((unsigned long)((10)*(8000000/4000.0)));
   722  00B8  301A               	movlw	26
   723  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   724  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   725  00BB  00B2               	movwf	??_main+1
   726  00BC  30F7               	movlw	247
   727  00BD  00B1               	movwf	??_main
   728  00BE                     u547:
   729  00BE  0BB1               	decfsz	??_main,f
   730  00BF  28BE               	goto	u547
   731  00C0  0BB2               	decfsz	??_main+1,f
   732  00C1  28BE               	goto	u547
   733  00C2  28C3               	nop2
   734  00C3                     l1219:
   735                           
   736                           ;main.c: 64:         sendSPI('2');
   737  00C3  3032               	movlw	50
   738  00C4  120A  118A  2259  120A  118A  	fcall	_sendSPI
   739  00C9                     l1221:
   740                           
   741                           ;main.c: 66:         UARTsend2 = readSPI();
   742  00C9  120A  118A  224F  120A  118A  	fcall	_readSPI
   743  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   744  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   745  00D0  00B1               	movwf	??_main
   746  00D1  0831               	movf	??_main,w
   747  00D2  00FA               	movwf	_UARTsend2
   748                           
   749                           ;main.c: 67:         _delay((unsigned long)((10)*(8000000/4000.0)));
   750  00D3  301A               	movlw	26
   751  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   752  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   753  00D6  00B2               	movwf	??_main+1
   754  00D7  30F7               	movlw	247
   755  00D8  00B1               	movwf	??_main
   756  00D9                     u557:
   757  00D9  0BB1               	decfsz	??_main,f
   758  00DA  28D9               	goto	u557
   759  00DB  0BB2               	decfsz	??_main+1,f
   760  00DC  28D9               	goto	u557
   761  00DD  28DE               	nop2
   762  00DE                     l1223:
   763                           
   764                           ;main.c: 68:         PORTCbits.RC2 = 1;
   765  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   766  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   767  00E0  1507               	bsf	7,2	;volatile
   768  00E1                     l1225:
   769                           
   770                           ;main.c: 70:         sendhex(&UARTsend);
   771  00E1  307B               	movlw	(low (_UARTsend| 0))& (0+255)
   772  00E2  120A  118A  2174  120A  118A  	fcall	_sendhex
   773  00E7                     l1227:
   774                           
   775                           ;main.c: 71:         sendString("\n");
   776  00E7  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   777  00E8  120A  118A  21CB  120A  118A  	fcall	_sendString
   778  00ED                     l1229:
   779                           
   780                           ;main.c: 73:         sendhex(&UARTsend2);
   781  00ED  307A               	movlw	(low (_UARTsend2| 0))& (0+255)
   782  00EE  120A  118A  2174  120A  118A  	fcall	_sendhex
   783  00F3                     l1231:
   784                           
   785                           ;main.c: 74:         sendString("\n");
   786  00F3  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   787  00F4  120A  118A  21CB  120A  118A  	fcall	_sendString
   788                           
   789                           ;main.c: 75:         _delay((unsigned long)((250)*(8000000/4000.0)));
   790  00F9  3003               	movlw	3
   791  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   792  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   793  00FC  00B3               	movwf	??_main+2
   794  00FD  308A               	movlw	138
   795  00FE  00B2               	movwf	??_main+1
   796  00FF  3055               	movlw	85
   797  0100  00B1               	movwf	??_main
   798  0101                     u567:
   799  0101  0BB1               	decfsz	??_main,f
   800  0102  2901               	goto	u567
   801  0103  0BB2               	decfsz	??_main+1,f
   802  0104  2901               	goto	u567
   803  0105  0BB3               	decfsz	??_main+2,f
   804  0106  2901               	goto	u567
   805  0107  28A5               	goto	l1213
   806  0108  120A  118A  280C   	ljmp	start
   807  010B                     __end_of_main:
   808                           
   809                           	psect	text1
   810  01EA                     __ptext1:	
   811 ;; *************** function _spiInit *****************
   812 ;; Defined at:
   813 ;;		line 13 in file "SPI.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  sType           1    wreg     enum E1264
   816 ;;  sDataSample     1    2[COMMON] enum E1272
   817 ;;  sClockIdle      1    3[COMMON] enum E1276
   818 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  sType           1    5[COMMON] enum E1264
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         3       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _spiInit
   846  01EA                     _spiInit:
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   850                           ;spiInit@sType stored from wreg
   851  01EA  00F5               	movwf	spiInit@sType
   852  01EB                     l1041:
   853                           
   854                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   855  01EB  1683               	bsf	3,5	;RP0=1, select bank1
   856  01EC  1303               	bcf	3,6	;RP1=0, select bank1
   857  01ED  1287               	bcf	7,5	;volatile
   858                           
   859                           ;SPI.c: 16:     if(sType & 0b00000100)
   860  01EE  1D75               	btfss	spiInit@sType,2
   861  01EF  29F1               	goto	u361
   862  01F0  29F2               	goto	u360
   863  01F1                     u361:
   864  01F1  29F6               	goto	l1047
   865  01F2                     u360:
   866  01F2                     l1043:
   867                           
   868                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   869  01F2  0874               	movf	spiInit@sTransmitEdge,w
   870  01F3  0094               	movwf	20	;volatile
   871  01F4                     l1045:
   872                           
   873                           ;SPI.c: 20:         TRISC3 = 1;
   874  01F4  1587               	bsf	7,3	;volatile
   875                           
   876                           ;SPI.c: 21:     }
   877  01F5  29FA               	goto	l95
   878  01F6                     l1047:
   879                           
   880                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   881  01F6  0872               	movf	spiInit@sDataSample,w
   882  01F7  0474               	iorwf	spiInit@sTransmitEdge,w
   883  01F8  0094               	movwf	20	;volatile
   884  01F9                     l1049:
   885                           
   886                           ;SPI.c: 26:         TRISC3 = 0;
   887  01F9  1187               	bcf	7,3	;volatile
   888  01FA                     l95:	
   889                           ;SPI.c: 27:     }
   890                           
   891                           
   892                           ;SPI.c: 29:     SSPCON = sType | sClockIdle;
   893  01FA  0875               	movf	spiInit@sType,w
   894  01FB  0473               	iorwf	spiInit@sClockIdle,w
   895  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   896  01FD  1303               	bcf	3,6	;RP1=0, select bank0
   897  01FE  0094               	movwf	20	;volatile
   898  01FF                     l96:
   899  01FF  0008               	return
   900  0200                     __end_of_spiInit:
   901                           
   902                           	psect	text2
   903  0174                     __ptext2:	
   904 ;; *************** function _sendhex *****************
   905 ;; Defined at:
   906 ;;		line 81 in file "ComSerial.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  valor           1    wreg     PTR unsigned char 
   909 ;;		 -> UARTsend2(1), UARTsend(1), 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  valor           1   13[BANK0 ] PTR unsigned char 
   912 ;;		 -> UARTsend2(1), UARTsend(1), 
   913 ;;  decena          1   16[BANK0 ] unsigned char 
   914 ;;  centena         1   15[BANK0 ] unsigned char 
   915 ;;  unidad          1   14[BANK0 ] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       4       0       0       0
   927 ;;      Temps:          0       3       0       0       0
   928 ;;      Totals:         0       7       0       0       0
   929 ;;Total ram usage:        7 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    3
   932 ;; This function calls:
   933 ;;		_divisiondecimal
   934 ;;		_send1dato
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           
   941                           ;psect for function _sendhex
   942  0174                     _sendhex:
   943                           
   944                           ;incstack = 0
   945                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   946                           ;sendhex@valor stored from wreg
   947  0174  1283               	bcf	3,5	;RP0=0, select bank0
   948  0175  1303               	bcf	3,6	;RP1=0, select bank0
   949  0176  00AD               	movwf	sendhex@valor
   950  0177                     l1203:
   951                           
   952                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(*valor,&unidad,&decena,&ce
      +                          ntena);
   953  0177  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
   954  0178  00AA               	movwf	??_sendhex
   955  0179  082A               	movf	??_sendhex,w
   956  017A  00A4               	movwf	divisiondecimal@un
   957  017B  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
   958  017C  00AB               	movwf	??_sendhex+1
   959  017D  082B               	movf	??_sendhex+1,w
   960  017E  00A5               	movwf	divisiondecimal@dec
   961  017F  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
   962  0180  00AC               	movwf	??_sendhex+2
   963  0181  082C               	movf	??_sendhex+2,w
   964  0182  00A6               	movwf	divisiondecimal@cent
   965  0183  082D               	movf	sendhex@valor,w
   966  0184  0084               	movwf	4
   967  0185  0800               	movf	0,w
   968  0186  120A  118A  201A  120A  118A  	fcall	_divisiondecimal
   969  018B                     l1205:
   970                           
   971                           ;ComSerial.c: 87:     send1dato(centena +48);
   972  018B  1283               	bcf	3,5	;RP0=0, select bank0
   973  018C  1303               	bcf	3,6	;RP1=0, select bank0
   974  018D  082F               	movf	sendhex@centena,w
   975  018E  3E30               	addlw	48
   976  018F  120A  118A  2243  120A  118A  	fcall	_send1dato
   977  0194                     l1207:
   978                           
   979                           ;ComSerial.c: 88:     send1dato(decena +48);
   980  0194  1283               	bcf	3,5	;RP0=0, select bank0
   981  0195  1303               	bcf	3,6	;RP1=0, select bank0
   982  0196  0830               	movf	sendhex@decena,w
   983  0197  3E30               	addlw	48
   984  0198  120A  118A  2243  120A  118A  	fcall	_send1dato
   985  019D                     l1209:
   986                           
   987                           ;ComSerial.c: 89:     send1dato(unidad +48);
   988  019D  1283               	bcf	3,5	;RP0=0, select bank0
   989  019E  1303               	bcf	3,6	;RP1=0, select bank0
   990  019F  082E               	movf	sendhex@unidad,w
   991  01A0  3E30               	addlw	48
   992  01A1  120A  118A  2243  120A  118A  	fcall	_send1dato
   993  01A6                     l143:
   994  01A6  0008               	return
   995  01A7                     __end_of_sendhex:
   996                           
   997                           	psect	text3
   998  001A                     __ptext3:	
   999 ;; *************** function _divisiondecimal *****************
  1000 ;; Defined at:
  1001 ;;		line 120 in file "ComSerial.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  conteo          1    wreg     unsigned char 
  1004 ;;  un              1    4[BANK0 ] PTR unsigned char 
  1005 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  1006 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  1007 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  1008 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  1009 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  conteo          1    7[COMMON] unsigned char 
  1012 ;;  div             1    8[COMMON] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       3       0       0       0
  1023 ;;      Locals:         2       0       0       0       0
  1024 ;;      Temps:          0       3       0       0       0
  1025 ;;      Totals:         2       6       0       0       0
  1026 ;;Total ram usage:        8 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    2
  1029 ;; This function calls:
  1030 ;;		___awdiv
  1031 ;;		___bmul
  1032 ;; This function is called by:
  1033 ;;		_sendhex
  1034 ;;		_hexTochar
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _divisiondecimal
  1040  001A                     _divisiondecimal:
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1044                           ;divisiondecimal@conteo stored from wreg
  1045  001A  00F7               	movwf	divisiondecimal@conteo
  1046  001B                     l1185:
  1047                           
  1048                           ;ComSerial.c: 121:     uint8_t div = conteo;
  1049  001B  0877               	movf	divisiondecimal@conteo,w
  1050  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1051  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1052  001E  00A7               	movwf	??_divisiondecimal
  1053  001F  0827               	movf	??_divisiondecimal,w
  1054  0020  00F8               	movwf	divisiondecimal@div
  1055  0021                     l1187:
  1056                           
  1057                           ;ComSerial.c: 122:     *un = 0;
  1058  0021  0824               	movf	divisiondecimal@un,w
  1059  0022  0084               	movwf	4
  1060  0023  1383               	bcf	3,7	;select IRP bank0
  1061  0024  0180               	clrf	0
  1062  0025                     l1189:
  1063                           
  1064                           ;ComSerial.c: 123:     *dec = 0;
  1065  0025  0825               	movf	divisiondecimal@dec,w
  1066  0026  0084               	movwf	4
  1067  0027  0180               	clrf	0
  1068  0028                     l1191:
  1069                           
  1070                           ;ComSerial.c: 124:     *cent = 0;
  1071  0028  0826               	movf	divisiondecimal@cent,w
  1072  0029  0084               	movwf	4
  1073  002A  0180               	clrf	0
  1074                           
  1075                           ;ComSerial.c: 127:     while(div >= 100){
  1076  002B  2857               	goto	l1195
  1077  002C                     l1193:
  1078                           
  1079                           ;ComSerial.c: 128:     *cent = div/100;
  1080  002C  3064               	movlw	100
  1081  002D  00F2               	movwf	___awdiv@divisor
  1082  002E  3000               	movlw	0
  1083  002F  00F3               	movwf	___awdiv@divisor+1
  1084  0030  0878               	movf	divisiondecimal@div,w
  1085  0031  00A7               	movwf	??_divisiondecimal
  1086  0032  01A8               	clrf	??_divisiondecimal+1
  1087  0033  0827               	movf	??_divisiondecimal,w
  1088  0034  00F4               	movwf	___awdiv@dividend
  1089  0035  0828               	movf	??_divisiondecimal+1,w
  1090  0036  00F5               	movwf	___awdiv@dividend+1
  1091  0037  120A  118A  210B  120A  118A  	fcall	___awdiv
  1092  003C  0872               	movf	?___awdiv,w
  1093  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1094  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1095  003F  00A9               	movwf	??_divisiondecimal+2
  1096  0040  0826               	movf	divisiondecimal@cent,w
  1097  0041  0084               	movwf	4
  1098  0042  0829               	movf	??_divisiondecimal+2,w
  1099  0043  1383               	bcf	3,7	;select IRP bank0
  1100  0044  0080               	movwf	0
  1101                           
  1102                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  1103  0045  309C               	movlw	156
  1104  0046  00A7               	movwf	??_divisiondecimal
  1105  0047  0827               	movf	??_divisiondecimal,w
  1106  0048  00F2               	movwf	___bmul@multiplicand
  1107  0049  0826               	movf	divisiondecimal@cent,w
  1108  004A  0084               	movwf	4
  1109  004B  0800               	movf	0,w
  1110  004C  120A  118A  2200  120A  118A  	fcall	___bmul
  1111  0051  0778               	addwf	divisiondecimal@div,w
  1112  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0054  00A8               	movwf	??_divisiondecimal+1
  1115  0055  0828               	movf	??_divisiondecimal+1,w
  1116  0056  00F8               	movwf	divisiondecimal@div
  1117  0057                     l1195:
  1118                           
  1119                           ;ComSerial.c: 127:     while(div >= 100){
  1120  0057  3064               	movlw	100
  1121  0058  0278               	subwf	divisiondecimal@div,w
  1122  0059  1803               	skipnc
  1123  005A  285C               	goto	u511
  1124  005B  285D               	goto	u510
  1125  005C                     u511:
  1126  005C  282C               	goto	l1193
  1127  005D                     u510:
  1128  005D  2889               	goto	l1199
  1129  005E                     l1197:
  1130                           
  1131                           ;ComSerial.c: 133:     *dec = div/10;
  1132  005E  300A               	movlw	10
  1133  005F  00F2               	movwf	___awdiv@divisor
  1134  0060  3000               	movlw	0
  1135  0061  00F3               	movwf	___awdiv@divisor+1
  1136  0062  0878               	movf	divisiondecimal@div,w
  1137  0063  00A7               	movwf	??_divisiondecimal
  1138  0064  01A8               	clrf	??_divisiondecimal+1
  1139  0065  0827               	movf	??_divisiondecimal,w
  1140  0066  00F4               	movwf	___awdiv@dividend
  1141  0067  0828               	movf	??_divisiondecimal+1,w
  1142  0068  00F5               	movwf	___awdiv@dividend+1
  1143  0069  120A  118A  210B  120A  118A  	fcall	___awdiv
  1144  006E  0872               	movf	?___awdiv,w
  1145  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0071  00A9               	movwf	??_divisiondecimal+2
  1148  0072  0825               	movf	divisiondecimal@dec,w
  1149  0073  0084               	movwf	4
  1150  0074  0829               	movf	??_divisiondecimal+2,w
  1151  0075  1383               	bcf	3,7	;select IRP bank0
  1152  0076  0080               	movwf	0
  1153                           
  1154                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  1155  0077  30F6               	movlw	246
  1156  0078  00A7               	movwf	??_divisiondecimal
  1157  0079  0827               	movf	??_divisiondecimal,w
  1158  007A  00F2               	movwf	___bmul@multiplicand
  1159  007B  0825               	movf	divisiondecimal@dec,w
  1160  007C  0084               	movwf	4
  1161  007D  0800               	movf	0,w
  1162  007E  120A  118A  2200  120A  118A  	fcall	___bmul
  1163  0083  0778               	addwf	divisiondecimal@div,w
  1164  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0086  00A8               	movwf	??_divisiondecimal+1
  1167  0087  0828               	movf	??_divisiondecimal+1,w
  1168  0088  00F8               	movwf	divisiondecimal@div
  1169  0089                     l1199:
  1170                           
  1171                           ;ComSerial.c: 132:     while (div >= 10){
  1172  0089  300A               	movlw	10
  1173  008A  0278               	subwf	divisiondecimal@div,w
  1174  008B  1803               	skipnc
  1175  008C  288E               	goto	u521
  1176  008D  288F               	goto	u520
  1177  008E                     u521:
  1178  008E  285E               	goto	l1197
  1179  008F                     u520:
  1180  008F                     l1201:
  1181                           
  1182                           ;ComSerial.c: 137:     *un = div;
  1183  008F  0878               	movf	divisiondecimal@div,w
  1184  0090  00A7               	movwf	??_divisiondecimal
  1185  0091  0824               	movf	divisiondecimal@un,w
  1186  0092  0084               	movwf	4
  1187  0093  0827               	movf	??_divisiondecimal,w
  1188  0094  1383               	bcf	3,7	;select IRP bank0
  1189  0095  0080               	movwf	0
  1190  0096                     l161:
  1191  0096  0008               	return
  1192  0097                     __end_of_divisiondecimal:
  1193                           
  1194                           	psect	text4
  1195  0200                     __ptext4:	
  1196 ;; *************** function ___bmul *****************
  1197 ;; Defined at:
  1198 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  multiplier      1    wreg     unsigned char 
  1201 ;;  multiplicand    1    2[COMMON] unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  multiplier      1    5[COMMON] unsigned char 
  1204 ;;  product         1    4[COMMON] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      unsigned char 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         1       0       0       0       0
  1215 ;;      Locals:         2       0       0       0       0
  1216 ;;      Temps:          1       0       0       0       0
  1217 ;;      Totals:         4       0       0       0       0
  1218 ;;Total ram usage:        4 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_divisiondecimal
  1225 ;;		_division
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function ___bmul
  1231  0200                     ___bmul:
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1235                           ;___bmul@multiplier stored from wreg
  1236  0200  00F5               	movwf	___bmul@multiplier
  1237  0201                     l1127:
  1238  0201  01F4               	clrf	___bmul@product
  1239  0202                     l1129:
  1240  0202  1C75               	btfss	___bmul@multiplier,0
  1241  0203  2A05               	goto	u391
  1242  0204  2A06               	goto	u390
  1243  0205                     u391:
  1244  0205  2A0A               	goto	l1133
  1245  0206                     u390:
  1246  0206                     l1131:
  1247  0206  0872               	movf	___bmul@multiplicand,w
  1248  0207  00F3               	movwf	??___bmul
  1249  0208  0873               	movf	??___bmul,w
  1250  0209  07F4               	addwf	___bmul@product,f
  1251  020A                     l1133:
  1252  020A  1003               	clrc
  1253  020B  0DF2               	rlf	___bmul@multiplicand,f
  1254  020C                     l1135:
  1255  020C  1003               	clrc
  1256  020D  0CF5               	rrf	___bmul@multiplier,f
  1257  020E  0875               	movf	___bmul@multiplier,w
  1258  020F  1D03               	btfss	3,2
  1259  0210  2A12               	goto	u401
  1260  0211  2A13               	goto	u400
  1261  0212                     u401:
  1262  0212  2A02               	goto	l1129
  1263  0213                     u400:
  1264  0213                     l1137:
  1265  0213  0874               	movf	___bmul@product,w
  1266  0214                     l273:
  1267  0214  0008               	return
  1268  0215                     __end_of___bmul:
  1269                           
  1270                           	psect	text5
  1271  010B                     __ptext5:	
  1272 ;; *************** function ___awdiv *****************
  1273 ;; Defined at:
  1274 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  divisor         2    2[COMMON] int 
  1277 ;;  dividend        2    4[COMMON] int 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  quotient        2    2[BANK0 ] int 
  1280 ;;  sign            1    1[BANK0 ] unsigned char 
  1281 ;;  counter         1    0[BANK0 ] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  2    2[COMMON] int 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         4       0       0       0       0
  1292 ;;      Locals:         0       4       0       0       0
  1293 ;;      Temps:          1       0       0       0       0
  1294 ;;      Totals:         5       4       0       0       0
  1295 ;;Total ram usage:        9 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_divisiondecimal
  1302 ;;		_division
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function ___awdiv
  1308  010B                     ___awdiv:
  1309  010B                     l1141:	
  1310                           ;incstack = 0
  1311                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1312                           
  1313  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1314  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1315  010D  01A1               	clrf	___awdiv@sign
  1316  010E                     l1143:
  1317  010E  1FF3               	btfss	___awdiv@divisor+1,7
  1318  010F  2911               	goto	u411
  1319  0110  2912               	goto	u410
  1320  0111                     u411:
  1321  0111  2919               	goto	l1149
  1322  0112                     u410:
  1323  0112                     l1145:
  1324  0112  09F2               	comf	___awdiv@divisor,f
  1325  0113  09F3               	comf	___awdiv@divisor+1,f
  1326  0114  0AF2               	incf	___awdiv@divisor,f
  1327  0115  1903               	skipnz
  1328  0116  0AF3               	incf	___awdiv@divisor+1,f
  1329  0117                     l1147:
  1330  0117  01A1               	clrf	___awdiv@sign
  1331  0118  0AA1               	incf	___awdiv@sign,f
  1332  0119                     l1149:
  1333  0119  1FF5               	btfss	___awdiv@dividend+1,7
  1334  011A  291C               	goto	u421
  1335  011B  291D               	goto	u420
  1336  011C                     u421:
  1337  011C  2926               	goto	l1155
  1338  011D                     u420:
  1339  011D                     l1151:
  1340  011D  09F4               	comf	___awdiv@dividend,f
  1341  011E  09F5               	comf	___awdiv@dividend+1,f
  1342  011F  0AF4               	incf	___awdiv@dividend,f
  1343  0120  1903               	skipnz
  1344  0121  0AF5               	incf	___awdiv@dividend+1,f
  1345  0122                     l1153:
  1346  0122  3001               	movlw	1
  1347  0123  00F6               	movwf	??___awdiv
  1348  0124  0876               	movf	??___awdiv,w
  1349  0125  06A1               	xorwf	___awdiv@sign,f
  1350  0126                     l1155:
  1351  0126  01A2               	clrf	___awdiv@quotient
  1352  0127  01A3               	clrf	___awdiv@quotient+1
  1353  0128                     l1157:
  1354  0128  0872               	movf	___awdiv@divisor,w
  1355  0129  0473               	iorwf	___awdiv@divisor+1,w
  1356  012A  1903               	btfsc	3,2
  1357  012B  292D               	goto	u431
  1358  012C  292E               	goto	u430
  1359  012D                     u431:
  1360  012D  2965               	goto	l1177
  1361  012E                     u430:
  1362  012E                     l1159:
  1363  012E  01A0               	clrf	___awdiv@counter
  1364  012F  0AA0               	incf	___awdiv@counter,f
  1365  0130  293C               	goto	l1165
  1366  0131                     l1161:
  1367  0131  3001               	movlw	1
  1368  0132                     u445:
  1369  0132  1003               	clrc
  1370  0133  0DF2               	rlf	___awdiv@divisor,f
  1371  0134  0DF3               	rlf	___awdiv@divisor+1,f
  1372  0135  3EFF               	addlw	-1
  1373  0136  1D03               	skipz
  1374  0137  2932               	goto	u445
  1375  0138                     l1163:
  1376  0138  3001               	movlw	1
  1377  0139  00F6               	movwf	??___awdiv
  1378  013A  0876               	movf	??___awdiv,w
  1379  013B  07A0               	addwf	___awdiv@counter,f
  1380  013C                     l1165:
  1381  013C  1FF3               	btfss	___awdiv@divisor+1,7
  1382  013D  293F               	goto	u451
  1383  013E  2940               	goto	u450
  1384  013F                     u451:
  1385  013F  2931               	goto	l1161
  1386  0140                     u450:
  1387  0140                     l1167:
  1388  0140  3001               	movlw	1
  1389  0141                     u465:
  1390  0141  1003               	clrc
  1391  0142  0DA2               	rlf	___awdiv@quotient,f
  1392  0143  0DA3               	rlf	___awdiv@quotient+1,f
  1393  0144  3EFF               	addlw	-1
  1394  0145  1D03               	skipz
  1395  0146  2941               	goto	u465
  1396  0147  0873               	movf	___awdiv@divisor+1,w
  1397  0148  0275               	subwf	___awdiv@dividend+1,w
  1398  0149  1D03               	skipz
  1399  014A  294D               	goto	u475
  1400  014B  0872               	movf	___awdiv@divisor,w
  1401  014C  0274               	subwf	___awdiv@dividend,w
  1402  014D                     u475:
  1403  014D  1C03               	skipc
  1404  014E  2950               	goto	u471
  1405  014F  2951               	goto	u470
  1406  0150                     u471:
  1407  0150  2958               	goto	l1173
  1408  0151                     u470:
  1409  0151                     l1169:
  1410  0151  0872               	movf	___awdiv@divisor,w
  1411  0152  02F4               	subwf	___awdiv@dividend,f
  1412  0153  0873               	movf	___awdiv@divisor+1,w
  1413  0154  1C03               	skipc
  1414  0155  03F5               	decf	___awdiv@dividend+1,f
  1415  0156  02F5               	subwf	___awdiv@dividend+1,f
  1416  0157                     l1171:
  1417  0157  1422               	bsf	___awdiv@quotient,0
  1418  0158                     l1173:
  1419  0158  3001               	movlw	1
  1420  0159                     u485:
  1421  0159  1003               	clrc
  1422  015A  0CF3               	rrf	___awdiv@divisor+1,f
  1423  015B  0CF2               	rrf	___awdiv@divisor,f
  1424  015C  3EFF               	addlw	-1
  1425  015D  1D03               	skipz
  1426  015E  2959               	goto	u485
  1427  015F                     l1175:
  1428  015F  3001               	movlw	1
  1429  0160  02A0               	subwf	___awdiv@counter,f
  1430  0161  1D03               	btfss	3,2
  1431  0162  2964               	goto	u491
  1432  0163  2965               	goto	u490
  1433  0164                     u491:
  1434  0164  2940               	goto	l1167
  1435  0165                     u490:
  1436  0165                     l1177:
  1437  0165  0821               	movf	___awdiv@sign,w
  1438  0166  1903               	btfsc	3,2
  1439  0167  2969               	goto	u501
  1440  0168  296A               	goto	u500
  1441  0169                     u501:
  1442  0169  296F               	goto	l1181
  1443  016A                     u500:
  1444  016A                     l1179:
  1445  016A  09A2               	comf	___awdiv@quotient,f
  1446  016B  09A3               	comf	___awdiv@quotient+1,f
  1447  016C  0AA2               	incf	___awdiv@quotient,f
  1448  016D  1903               	skipnz
  1449  016E  0AA3               	incf	___awdiv@quotient+1,f
  1450  016F                     l1181:
  1451  016F  0823               	movf	___awdiv@quotient+1,w
  1452  0170  00F3               	movwf	?___awdiv+1
  1453  0171  0822               	movf	___awdiv@quotient,w
  1454  0172  00F2               	movwf	?___awdiv
  1455  0173                     l400:
  1456  0173  0008               	return
  1457  0174                     __end_of___awdiv:
  1458                           
  1459                           	psect	text6
  1460  01CB                     __ptext6:	
  1461 ;; *************** function _sendString *****************
  1462 ;; Defined at:
  1463 ;;		line 31 in file "ComSerial.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  mensaje         1    wreg     PTR unsigned char 
  1466 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  mensaje         1    4[COMMON] PTR unsigned char 
  1469 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         0       0       0       0       0
  1480 ;;      Locals:         1       0       0       0       0
  1481 ;;      Temps:          1       0       0       0       0
  1482 ;;      Totals:         2       0       0       0       0
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    2
  1486 ;; This function calls:
  1487 ;;		_send1dato
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;;		_sendfloat
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _sendString
  1496  01CB                     _sendString:
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1500                           ;sendString@mensaje stored from wreg
  1501  01CB  00F4               	movwf	sendString@mensaje
  1502  01CC                     l1059:
  1503                           
  1504                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1505  01CC  29DD               	goto	l1065
  1506  01CD                     l1061:
  1507                           
  1508                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1509  01CD  0874               	movf	sendString@mensaje,w
  1510  01CE  0084               	movwf	4
  1511  01CF  120A  118A  2237  120A  118A  	fcall	stringdir
  1512  01D4  120A  118A  2243  120A  118A  	fcall	_send1dato
  1513  01D9                     l1063:
  1514                           
  1515                           ;ComSerial.c: 34:         mensaje ++;
  1516  01D9  3001               	movlw	1
  1517  01DA  00F3               	movwf	??_sendString
  1518  01DB  0873               	movf	??_sendString,w
  1519  01DC  07F4               	addwf	sendString@mensaje,f
  1520  01DD                     l1065:
  1521                           
  1522                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1523  01DD  0874               	movf	sendString@mensaje,w
  1524  01DE  0084               	movwf	4
  1525  01DF  120A  118A  2237  120A  118A  	fcall	stringdir
  1526  01E4  3A00               	xorlw	0
  1527  01E5  1D03               	skipz
  1528  01E6  29E8               	goto	u371
  1529  01E7  29E9               	goto	u370
  1530  01E8                     u371:
  1531  01E8  29CD               	goto	l1061
  1532  01E9                     u370:
  1533  01E9                     l134:
  1534  01E9  0008               	return
  1535  01EA                     __end_of_sendString:
  1536                           
  1537                           	psect	text7
  1538  0243                     __ptext7:	
  1539 ;; *************** function _send1dato *****************
  1540 ;; Defined at:
  1541 ;;		line 26 in file "ComSerial.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  dato            1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  dato            1    2[COMMON] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0
  1558 ;;      Totals:         1       0       0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_sendString
  1566 ;;		_sendhex
  1567 ;;		_sendfloat
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _send1dato
  1573  0243                     _send1dato:
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _send1dato: [wreg]
  1577                           ;send1dato@dato stored from wreg
  1578  0243  00F2               	movwf	send1dato@dato
  1579  0244                     l1021:
  1580                           
  1581                           ;ComSerial.c: 27:     TXREG = dato;
  1582  0244  0872               	movf	send1dato@dato,w
  1583  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0247  0099               	movwf	25	;volatile
  1586  0248                     l125:	
  1587                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1588                           
  1589  0248  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0249  1303               	bcf	3,6	;RP1=0, select bank1
  1591  024A  1C98               	btfss	24,1	;volatile
  1592  024B  2A4D               	goto	u331
  1593  024C  2A4E               	goto	u330
  1594  024D                     u331:
  1595  024D  2A48               	goto	l125
  1596  024E                     u330:
  1597  024E                     l128:
  1598  024E  0008               	return
  1599  024F                     __end_of_send1dato:
  1600                           
  1601                           	psect	text8
  1602  0259                     __ptext8:	
  1603 ;; *************** function _sendSPI *****************
  1604 ;; Defined at:
  1605 ;;		line 33 in file "SPI.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  valor           1    wreg     unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  valor           1    2[COMMON] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         1       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0
  1622 ;;      Totals:         1       0       0       0       0
  1623 ;;Total ram usage:        1 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _sendSPI
  1635  0259                     _sendSPI:
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _sendSPI: [wreg]
  1639                           ;sendSPI@valor stored from wreg
  1640  0259  00F2               	movwf	sendSPI@valor
  1641  025A                     l875:
  1642                           
  1643                           ;SPI.c: 34:     SSPBUF = valor;
  1644  025A  0872               	movf	sendSPI@valor,w
  1645  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1646  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1647  025D  0093               	movwf	19	;volatile
  1648  025E                     l99:
  1649  025E  0008               	return
  1650  025F                     __end_of_sendSPI:
  1651                           
  1652                           	psect	text9
  1653  024F                     __ptext9:	
  1654 ;; *************** function _readSPI *****************
  1655 ;; Defined at:
  1656 ;;		line 37 in file "SPI.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      unsigned char 
  1663 ;; Registers used:
  1664 ;;		wreg
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _readSPI
  1686  024F                     _readSPI:
  1687  024F                     l877:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _readSPI: [wreg]
  1690                           
  1691  024F                     l102:	
  1692                           ;SPI.c: 38:     while(!SSPSTATbits.BF);
  1693                           
  1694  024F  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0250  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0251  1C14               	btfss	20,0	;volatile
  1697  0252  2A54               	goto	u171
  1698  0253  2A55               	goto	u170
  1699  0254                     u171:
  1700  0254  2A4F               	goto	l102
  1701  0255                     u170:
  1702  0255                     l879:
  1703                           
  1704                           ;SPI.c: 39:     return(SSPBUF);
  1705  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0257  0813               	movf	19,w	;volatile
  1708  0258                     l105:
  1709  0258  0008               	return
  1710  0259                     __end_of_readSPI:
  1711                           
  1712                           	psect	text10
  1713  01A7                     __ptext10:	
  1714 ;; *************** function _config *****************
  1715 ;; Defined at:
  1716 ;;		line 82 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    2
  1737 ;; This function calls:
  1738 ;;		_configUART
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _config
  1746  01A7                     _config:
  1747  01A7                     l845:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;main.c: 84:     ANSEL = 0X00;
  1753  01A7  1683               	bsf	3,5	;RP0=1, select bank3
  1754  01A8  1703               	bsf	3,6	;RP1=1, select bank3
  1755  01A9  0188               	clrf	8	;volatile
  1756                           
  1757                           ;main.c: 85:     ANSELH = 0X00;
  1758  01AA  0189               	clrf	9	;volatile
  1759                           
  1760                           ;main.c: 86:     TRISA = 0X00;
  1761  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1762  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1763  01AD  0185               	clrf	5	;volatile
  1764                           
  1765                           ;main.c: 87:     TRISB = 0X00;
  1766  01AE  0186               	clrf	6	;volatile
  1767  01AF                     l847:
  1768                           
  1769                           ;main.c: 89:     TRISCbits.TRISC2 = 0;
  1770  01AF  1107               	bcf	7,2	;volatile
  1771  01B0                     l849:
  1772                           
  1773                           ;main.c: 90:     TRISCbits.TRISC6 = 0;
  1774  01B0  1307               	bcf	7,6	;volatile
  1775  01B1                     l851:
  1776                           
  1777                           ;main.c: 91:     TRISCbits.TRISC7 = 1;
  1778  01B1  1787               	bsf	7,7	;volatile
  1779                           
  1780                           ;main.c: 92:     TRISD = 0X00;
  1781  01B2  0188               	clrf	8	;volatile
  1782                           
  1783                           ;main.c: 93:     TRISE = 0X00;
  1784  01B3  0189               	clrf	9	;volatile
  1785                           
  1786                           ;main.c: 94:     PORTA = 0X00;
  1787  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1788  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1789  01B6  0185               	clrf	5	;volatile
  1790                           
  1791                           ;main.c: 95:     PORTB = 0X00;
  1792  01B7  0186               	clrf	6	;volatile
  1793                           
  1794                           ;main.c: 96:     PORTC = 0X00;
  1795  01B8  0187               	clrf	7	;volatile
  1796                           
  1797                           ;main.c: 97:     PORTD = 0X00;
  1798  01B9  0188               	clrf	8	;volatile
  1799                           
  1800                           ;main.c: 98:     PORTE = 0X00;
  1801  01BA  0189               	clrf	9	;volatile
  1802  01BB                     l853:
  1803                           
  1804                           ;main.c: 101:     OSCCONbits.IRCF = 0b111;
  1805  01BB  3070               	movlw	112
  1806  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1807  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1808  01BE  048F               	iorwf	15,f	;volatile
  1809  01BF                     l855:
  1810                           
  1811                           ;main.c: 102:     OSCCONbits.SCS = 0b1;
  1812  01BF  140F               	bsf	15,0	;volatile
  1813  01C0                     l857:
  1814                           
  1815                           ;main.c: 105:     configUART();
  1816  01C0  120A  118A  2215  120A  118A  	fcall	_configUART
  1817  01C5                     l859:
  1818                           
  1819                           ;main.c: 108:     INTCONbits.GIE = 1;
  1820  01C5  178B               	bsf	11,7	;volatile
  1821  01C6                     l861:
  1822                           
  1823                           ;main.c: 109:     INTCONbits.PEIE = 1;
  1824  01C6  170B               	bsf	11,6	;volatile
  1825  01C7                     l863:
  1826                           
  1827                           ;main.c: 110:     PIE1bits.RCIE = 1;
  1828  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1829  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1830  01C9  168C               	bsf	12,5	;volatile
  1831  01CA                     l79:
  1832  01CA  0008               	return
  1833  01CB                     __end_of_config:
  1834                           
  1835                           	psect	text11
  1836  0215                     __ptext11:	
  1837 ;; *************** function _configUART *****************
  1838 ;; Defined at:
  1839 ;;		line 11 in file "ComSerial.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_config
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _configUART
  1869  0215                     _configUART:
  1870  0215                     l811:	
  1871                           ;incstack = 0
  1872                           ; Regs used in _configUART: [wreg]
  1873                           
  1874                           
  1875                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  1876  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0217  1307               	bcf	7,6	;volatile
  1879                           
  1880                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  1881  0218  1787               	bsf	7,7	;volatile
  1882  0219                     l813:
  1883                           
  1884                           ;ComSerial.c: 15:     SPBRG = 12;
  1885  0219  300C               	movlw	12
  1886  021A  0099               	movwf	25	;volatile
  1887  021B                     l815:
  1888                           
  1889                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  1890  021B  1118               	bcf	24,2	;volatile
  1891  021C                     l817:
  1892                           
  1893                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  1894  021C  1698               	bsf	24,5	;volatile
  1895  021D                     l819:
  1896                           
  1897                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  1898  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1899  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1900  021F  1618               	bsf	24,4	;volatile
  1901  0220                     l821:
  1902                           
  1903                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  1904  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0222  1218               	bcf	24,4	;volatile
  1907  0223                     l823:
  1908                           
  1909                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  1910  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0225  1798               	bsf	24,7	;volatile
  1913  0226                     l122:
  1914  0226  0008               	return
  1915  0227                     __end_of_configUART:
  1916                           
  1917                           	psect	text12
  1918  0227                     __ptext12:	
  1919 ;; *************** function _interrupcion *****************
  1920 ;; Defined at:
  1921 ;;		line 44 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0
  1937 ;;      Temps:          2       0       0       0       0
  1938 ;;      Totals:         2       0       0       0       0
  1939 ;;Total ram usage:        2 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		Interrupt level 1
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _interrupcion
  1950  0227                     _interrupcion:
  1951  0227                     i1l899:
  1952                           
  1953                           ;main.c: 45:     if(PIR1bits.RCIF){
  1954  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0229  1E8C               	btfss	12,5	;volatile
  1957  022A  2A2C               	goto	u19_21
  1958  022B  2A2D               	goto	u19_20
  1959  022C                     u19_21:
  1960  022C  2A30               	goto	i1l68
  1961  022D                     u19_20:
  1962  022D                     i1l901:
  1963                           
  1964                           ;main.c: 46:         PORTA = RCREG;
  1965  022D  081A               	movf	26,w	;volatile
  1966  022E  0085               	movwf	5	;volatile
  1967  022F                     i1l903:
  1968                           
  1969                           ;main.c: 47:         PIR1bits.RCIF = 0;
  1970  022F  128C               	bcf	12,5	;volatile
  1971  0230                     i1l68:
  1972  0230  0871               	movf	??_interrupcion+1,w
  1973  0231  008A               	movwf	10
  1974  0232  0E70               	swapf	??_interrupcion,w
  1975  0233  0083               	movwf	3
  1976  0234  0EFE               	swapf	btemp,f
  1977  0235  0E7E               	swapf	btemp,w
  1978  0236  0009               	retfie
  1979  0237                     __end_of_interrupcion:
  1980  007E                     btemp	set	126	;btemp
  1981  007E                     wtemp0	set	126
  1982                           
  1983                           	psect	intentry
  1984  0004                     __pintentry:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _interrupcion: [wreg]
  1987                           
  1988  0004                     interrupt_function:
  1989  007E                     saved_w	set	btemp
  1990  0004  00FE               	movwf	btemp
  1991  0005  0E03               	swapf	3,w
  1992  0006  00F0               	movwf	??_interrupcion
  1993  0007  080A               	movf	10,w
  1994  0008  00F1               	movwf	??_interrupcion+1
  1995  0009  120A  118A  2A27   	ljmp	_interrupcion
  1996                           
  1997                           	psect	config
  1998                           
  1999                           ;Config register CONFIG1 @ 0x2007
  2000                           ;	Oscillator Selection bits
  2001                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2002                           ;	Watchdog Timer Enable bit
  2003                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2004                           ;	Power-up Timer Enable bit
  2005                           ;	PWRTE = OFF, PWRT disabled
  2006                           ;	RE3/MCLR pin function select bit
  2007                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2008                           ;	Code Protection bit
  2009                           ;	CP = OFF, Program memory code protection is disabled
  2010                           ;	Data Code Protection bit
  2011                           ;	CPD = OFF, Data memory code protection is disabled
  2012                           ;	Brown Out Reset Selection bits
  2013                           ;	BOREN = OFF, BOR disabled
  2014                           ;	Internal External Switchover bit
  2015                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2016                           ;	Fail-Safe Clock Monitor Enabled bit
  2017                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2018                           ;	Low Voltage Programming Enable bit
  2019                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2020                           ;	In-Circuit Debugger Mode bit
  2021                           ;	DEBUG = 0x1, unprogrammed default
  2022  2007                     	org	8199
  2023  2007  20F4               	dw	8436
  2024                           
  2025                           ;Config register CONFIG2 @ 0x2008
  2026                           ;	Brown-out Reset Selection bit
  2027                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2028                           ;	Flash Program Memory Self Write Enable bits
  2029                           ;	WRT = OFF, Write protection off
  2030  2008                     	org	8200
  2031  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     20      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(COMMON[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(COMMON[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(COMMON[1]), sendhex@unidad(BANK0[1]), 

    sendhex@valor	PTR unsigned char  size(1) Largest target is 1
		 -> UARTsend2(COMMON[1]), UARTsend(COMMON[1]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _sendhex->_divisiondecimal
    _divisiondecimal->___awdiv
    _sendString->_send1dato

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sendhex
    _sendhex->_divisiondecimal
    _divisiondecimal->___awdiv

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3363
                                             17 BANK0      3     3      0
                             _config
                            _readSPI
                            _sendSPI
                         _sendString
                            _sendhex
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2789
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              7 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _sendString                                           2     2      0     199
                                              3 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _configUART
   _readSPI
   _sendSPI
   _sendString
     _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato
   _spiInit

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 30 13:15:30 2021

                       pc 0002            ___bmul@product 0074               _SSPSTATbits 0094  
                      l79 01CA                        l95 01FA                        l96 01FF  
                      l99 025E              ___awdiv@sign 0021                        fsr 0004  
                     l102 024F                       l105 0258                       l122 0226  
                     l125 0248                       l134 01E9                       l143 01A6  
                     l128 024E                       l400 0173                       l161 0096  
                     l273 0214                       l811 0215                       l821 0220  
                     l813 0219                       l823 0223                       l815 021B  
                     l817 021C                       l819 021D                       l851 01B1  
                     l861 01C6                       l853 01BB                       l845 01A7  
                     l863 01C7                       l855 01BF                       l847 01AF  
                     l857 01C0                       l849 01B0                       l859 01C5  
                     l875 025A                       l877 024F                       l879 0255  
                     u400 0213                       u401 0212                       u170 0255  
                     u330 024E                       u410 0112                       u171 0254  
                     u331 024D                       u411 0111                       u500 016A  
                     u420 011D                       u501 0169                       u421 011C  
                     u430 012E                       u510 005D                       u431 012D  
                     u511 005C                       u520 008F                       u360 01F2  
                     u521 008E                       u361 01F1                       u370 01E9  
                     u450 0140                       u371 01E8                       u451 013F  
                     u445 0132                       u470 0151                       u390 0206  
                     u471 0150                       u391 0205                       u465 0141  
                     u490 0165                       u491 0164                       u475 014D  
                     u547 00BE                       u485 0159                       u557 00D9  
                     u567 0101                       fsr0 0004                       indf 0000  
                    l1021 0244                      l1201 008F                      l1041 01EB  
                    l1131 0206                      l1203 0177                      l1043 01F2  
                    l1211 0097                      l1061 01CD                      l1141 010B  
                    l1133 020A                      l1205 018B                      l1045 01F4  
                    l1221 00C9                      l1213 00A5                      l1063 01D9  
                    l1151 011D                      l1143 010E                      l1135 020C  
                    l1127 0201                      l1207 0194                      l1047 01F6  
                    l1231 00F3                      l1223 00DE                      l1215 00AE  
                    l1065 01DD                      l1161 0131                      l1153 0122  
                    l1145 0112                      l1137 0213                      l1129 0202  
                    l1209 019D                      l1049 01F9                      l1225 00E1  
                    l1217 00B8                      l1059 01CC                      l1171 0157  
                    l1163 0138                      l1155 0126                      l1147 0117  
                    l1227 00E7                      l1219 00C3                      l1181 016F  
                    l1173 0158                      l1165 013C                      l1157 0128  
                    l1149 0119                      l1229 00ED                      l1175 015F  
                    l1167 0140                      l1159 012E                      l1191 0028  
                    l1169 0151                      l1177 0165                      l1193 002C  
                    l1185 001B                      l1179 016A                      l1195 0057  
                    l1187 0021                      l1197 005E                      l1189 0025  
                    l1199 0089                      STR_1 0241                      STR_2 0241  
                    STR_3 023F                      STR_4 023D                      i1l68 0230  
                    _main 0097                      _val1 0079                      _val2 0035  
                    btemp 007E           _divisiondecimal 001A                      start 000C  
       ___bmul@multiplier 0075                     ?_main 0070           __end_of___awdiv 0174  
                   _ANSEL 0188           ___awdiv@divisor 0072                     i1l901 022D  
                   i1l903 022F                     i1l899 0227           ___awdiv@counter 0020  
                   _RCREG 001A                     _SPBRG 0099                     u19_20 022D  
                   u19_21 022C                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019             send1dato@dato 0072  
         __end_of_readSPI 0259           __end_of_sendSPI 025F           __end_of_sendhex 01A7  
                   pclath 000A           __end_of_spiInit 0200                     status 0003  
                   wtemp0 007E            sendhex@centena 002F           __initialization 000F  
            __end_of_main 010B                    ??_main 0031       divisiondecimal@cent 0026  
        ___awdiv@dividend 0074   __end_of_divisiondecimal 0097                    _ANSELH 0189  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013                    ___bmul 0200                 ??___awdiv 0076  
                  _config 01A7          ___awdiv@quotient 0022                 ??_readSPI 0072  
               ??_sendSPI 0072                    saved_w 007E                 ??_sendhex 002A  
               ??_spiInit 0075   __end_of__initialization 0016       ___bmul@multiplicand 0072  
          __pcstackCOMMON 0070             ?_interrupcion 0070          ?_divisiondecimal 0024  
              __pbssBANK0 0034        __size_of_send1dato 000C            ??_interrupcion 0070  
              __pmaintext 0097                   ?___bmul 0072                __pintentry 0004  
                 ?_config 0070                _configUART 0215                   _UARTdat 0034  
                 _SSPSTAT 0094                __stringtab 0237           __size_of___bmul 0015  
                 ___awdiv 010B           __size_of_config 0024                   __ptext1 01EA  
                 __ptext2 0174                   __ptext3 001A                   __ptext4 0200  
                 __ptext5 010B                   __ptext6 01CB                   __ptext7 0243  
                 __ptext8 0259                   __ptext9 024F                   _readSPI 024F  
                 _sendSPI 0259                   _sendhex 0174                   _spiInit 01EA  
       __end_of_send1dato 024F      end_of_initialization 0016                _sendString 01CB  
               _RCSTAbits 0018                 _PORTCbits 0007                 _UARTsend2 007A  
             ?_configUART 0070                 _TRISCbits 0087      __end_of_interrupcion 0237  
               _TXSTAbits 0098            __end_of___bmul 0215            __end_of_config 01CB  
     start_initialization 000F             sendhex@decena 0030             sendhex@unidad 002E  
      divisiondecimal@dec 0025        divisiondecimal@div 0078               ?_sendString 0070  
     __size_of_configUART 0012                  ??___bmul 0073              sendSPI@valor 0072  
                ??_config 0072     divisiondecimal@conteo 0077               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0020  __size_of_divisiondecimal 007D  
                ?___awdiv 0072                 __pstrings 0237       __size_of_sendString 001F  
   __size_of_interrupcion 0010                  ?_readSPI 0070                  ?_sendSPI 0070  
                ?_sendhex 0070                  ?_spiInit 0072                 _send1dato 0243  
    spiInit@sTransmitEdge 0074         interrupt_function 0004         sendString@mensaje 0074  
                _PIE1bits 008C        spiInit@sDataSample 0072                  _PIR1bits 000C  
            _interrupcion 0227                  _UARTsend 007B               __stringbase 023C  
            ??_configUART 0072                ?_send1dato 0070              sendhex@valor 002D  
       divisiondecimal@un 0024        __end_of_configUART 0227          __size_of___awdiv 0069  
       ??_divisiondecimal 0027        __end_of__stringtab 023D          __size_of_readSPI 000A  
        __size_of_sendSPI 0006          __size_of_sendhex 0033                  __ptext10 01A7  
                __ptext11 0215                  __ptext12 0227          __size_of_spiInit 0016  
            ??_sendString 0073             __size_of_main 0074              spiInit@sType 0075  
       spiInit@sClockIdle 0073        __end_of_sendString 01EA                _INTCONbits 000B  
                intlevel1 0000               ??_send1dato 0072                 stringcode 0237  
              _OSCCONbits 008F                  stringdir 0237                  stringtab 0237  
