

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 16:32:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  000B                     _INTCONbits	set	11
   288  0009                     _PORTE	set	9
   289  0007                     _PORTC	set	7
   290  0005                     _PORTA	set	5
   291  0008                     _PORTD	set	8
   292  0006                     _PORTB	set	6
   293  0007                     _PORTCbits	set	7
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  008F                     _OSCCONbits	set	143
   297  0089                     _TRISE	set	137
   298  0088                     _TRISD	set	136
   299  0087                     _TRISCbits	set	135
   300  0086                     _TRISB	set	134
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   317  0013                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  0013                     __end_of__initialization:
   321  0013  0183               	clrf	3
   322  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0078                     __pbssCOMMON:
   326  0078                     _val2:
   327  0078                     	ds	1
   328  0079                     _val1:
   329  0079                     	ds	1
   330  007A                     _dato:
   331  007A                     	ds	1
   332  007B                     _SPIcontrol:
   333  007B                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_config:
   338  0070                     ?_sendSPI:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_readSPI:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_interrupcion:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_interrupcion:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_main:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0070                     	ds	2
   356  0072                     ??_config:
   357  0072                     ?_spiInit:	
   358                           ; 1 bytes @ 0x2
   359                           
   360  0072                     ??_sendSPI:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0072                     ??_readSPI:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     spiInit@sDataSample:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     sendSPI@valor:	
   370                           ; 1 bytes @ 0x2
   371                           
   372                           
   373                           ; 1 bytes @ 0x2
   374  0072                     	ds	1
   375  0073                     spiInit@sClockIdle:
   376                           
   377                           ; 1 bytes @ 0x3
   378  0073                     	ds	1
   379  0074                     spiInit@sTransmitEdge:
   380                           
   381                           ; 1 bytes @ 0x4
   382  0074                     	ds	1
   383  0075                     ??_spiInit:
   384  0075                     spiInit@sType:	
   385                           ; 1 bytes @ 0x5
   386                           
   387                           
   388                           ; 1 bytes @ 0x5
   389  0075                     	ds	1
   390  0076                     ??_main:
   391                           
   392                           ; 1 bytes @ 0x6
   393  0076                     	ds	2
   394                           
   395                           	psect	maintext
   396  0017                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 58 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : B00/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0
   419 ;;      Totals:         2       0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels required when called:    2
   422 ;; This function calls:
   423 ;;		_config
   424 ;;		_readSPI
   425 ;;		_sendSPI
   426 ;;		_spiInit
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _main
   434  0017                     _main:
   435  0017                     l734:	
   436                           ;incstack = 0
   437                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   438                           
   439                           
   440                           ;main.c: 59:     config();
   441  0017  120A  118A  205D  120A  118A  	fcall	_config
   442                           
   443                           ;main.c: 60:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   444  001C  01F2               	clrf	spiInit@sDataSample
   445  001D  01F3               	clrf	spiInit@sClockIdle
   446  001E  01F4               	clrf	spiInit@sTransmitEdge
   447  001F  3020               	movlw	32
   448  0020  120A  118A  2076  120A  118A  	fcall	_spiInit
   449  0025                     l736:
   450                           
   451                           ;main.c: 62:         PORTCbits.RC2 = 0;
   452  0025  1283               	bcf	3,5	;RP0=0, select bank0
   453  0026  1303               	bcf	3,6	;RP1=0, select bank0
   454  0027  1107               	bcf	7,2	;volatile
   455                           
   456                           ;main.c: 63:         sendSPI('1');
   457  0028  3031               	movlw	49
   458  0029  120A  118A  209D  120A  118A  	fcall	_sendSPI
   459  002E                     l738:
   460                           
   461                           ;main.c: 64:         PORTB = readSPI();
   462  002E  120A  118A  208C  120A  118A  	fcall	_readSPI
   463  0033  1283               	bcf	3,5	;RP0=0, select bank0
   464  0034  1303               	bcf	3,6	;RP1=0, select bank0
   465  0035  0086               	movwf	6	;volatile
   466  0036                     l740:
   467                           
   468                           ;main.c: 65:         _delay((unsigned long)((10)*(8000000/4000.0)));
   469  0036  301A               	movlw	26
   470  0037  00F7               	movwf	??_main+1
   471  0038  30F8               	movlw	248
   472  0039  00F6               	movwf	??_main
   473  003A                     u47:
   474  003A  0BF6               	decfsz	??_main,f
   475  003B  283A               	goto	u47
   476  003C  0BF7               	decfsz	??_main+1,f
   477  003D  283A               	goto	u47
   478  003E  0000               	nop
   479  003F                     l742:
   480                           
   481                           ;main.c: 67:         sendSPI('2');
   482  003F  3032               	movlw	50
   483  0040  120A  118A  209D  120A  118A  	fcall	_sendSPI
   484  0045                     l744:
   485                           
   486                           ;main.c: 68:         PORTD = readSPI();
   487  0045  120A  118A  208C  120A  118A  	fcall	_readSPI
   488  004A  1283               	bcf	3,5	;RP0=0, select bank0
   489  004B  1303               	bcf	3,6	;RP1=0, select bank0
   490  004C  0088               	movwf	8	;volatile
   491                           
   492                           ;main.c: 69:         _delay((unsigned long)((10)*(8000000/4000.0)));
   493  004D  301A               	movlw	26
   494  004E  00F7               	movwf	??_main+1
   495  004F  30F8               	movlw	248
   496  0050  00F6               	movwf	??_main
   497  0051                     u57:
   498  0051  0BF6               	decfsz	??_main,f
   499  0052  2851               	goto	u57
   500  0053  0BF7               	decfsz	??_main+1,f
   501  0054  2851               	goto	u57
   502  0055  0000               	nop
   503  0056                     l746:
   504                           
   505                           ;main.c: 70:         PORTCbits.RC2 = 1;
   506  0056  1283               	bcf	3,5	;RP0=0, select bank0
   507  0057  1303               	bcf	3,6	;RP1=0, select bank0
   508  0058  1507               	bsf	7,2	;volatile
   509  0059  2825               	goto	l736
   510  005A  120A  118A  280C   	ljmp	start
   511  005D                     __end_of_main:
   512                           
   513                           	psect	text1
   514  0076                     __ptext1:	
   515 ;; *************** function _spiInit *****************
   516 ;; Defined at:
   517 ;;		line 13 in file "SPI.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  sType           1    wreg     enum E1264
   520 ;;  sDataSample     1    2[COMMON] enum E1272
   521 ;;  sClockIdle      1    3[COMMON] enum E1276
   522 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  sType           1    5[COMMON] enum E1264
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         3       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         4       0       0       0       0
   538 ;;Total ram usage:        4 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _spiInit
   550  0076                     _spiInit:
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   554                           ;spiInit@sType stored from wreg
   555  0076  00F5               	movwf	spiInit@sType
   556  0077                     l724:
   557                           
   558                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   559  0077  1683               	bsf	3,5	;RP0=1, select bank1
   560  0078  1303               	bcf	3,6	;RP1=0, select bank1
   561  0079  1287               	bcf	7,5	;volatile
   562                           
   563                           ;SPI.c: 16:     if(sType & 0b00000100)
   564  007A  1D75               	btfss	spiInit@sType,2
   565  007B  287D               	goto	u31
   566  007C  287E               	goto	u30
   567  007D                     u31:
   568  007D  2882               	goto	l730
   569  007E                     u30:
   570  007E                     l726:
   571                           
   572                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   573  007E  0874               	movf	spiInit@sTransmitEdge,w
   574  007F  0094               	movwf	20	;volatile
   575  0080                     l728:
   576                           
   577                           ;SPI.c: 19:         TRISC3 = 1;
   578  0080  1587               	bsf	7,3	;volatile
   579                           
   580                           ;SPI.c: 20:     }
   581  0081  2886               	goto	l78
   582  0082                     l730:
   583                           
   584                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   585  0082  0872               	movf	spiInit@sDataSample,w
   586  0083  0474               	iorwf	spiInit@sTransmitEdge,w
   587  0084  0094               	movwf	20	;volatile
   588  0085                     l732:
   589                           
   590                           ;SPI.c: 24:         TRISC3 = 0;
   591  0085  1187               	bcf	7,3	;volatile
   592  0086                     l78:	
   593                           ;SPI.c: 25:     }
   594                           
   595                           
   596                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   597  0086  0875               	movf	spiInit@sType,w
   598  0087  0473               	iorwf	spiInit@sClockIdle,w
   599  0088  1283               	bcf	3,5	;RP0=0, select bank0
   600  0089  1303               	bcf	3,6	;RP1=0, select bank0
   601  008A  0094               	movwf	20	;volatile
   602  008B                     l79:
   603  008B  0008               	return
   604  008C                     __end_of_spiInit:
   605                           
   606                           	psect	text2
   607  009D                     __ptext2:	
   608 ;; *************** function _sendSPI *****************
   609 ;; Defined at:
   610 ;;		line 30 in file "SPI.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  valor           1    wreg     unsigned char 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  valor           1    2[COMMON] unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         1       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0
   627 ;;      Totals:         1       0       0       0       0
   628 ;;Total ram usage:        1 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _sendSPI
   640  009D                     _sendSPI:
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _sendSPI: [wreg]
   644                           ;sendSPI@valor stored from wreg
   645  009D  00F2               	movwf	sendSPI@valor
   646  009E                     l702:
   647                           
   648                           ;SPI.c: 31:     SSPBUF = valor;
   649  009E  0872               	movf	sendSPI@valor,w
   650  009F  1283               	bcf	3,5	;RP0=0, select bank0
   651  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   652  00A1  0093               	movwf	19	;volatile
   653  00A2                     l82:
   654  00A2  0008               	return
   655  00A3                     __end_of_sendSPI:
   656                           
   657                           	psect	text3
   658  008C                     __ptext3:	
   659 ;; *************** function _readSPI *****************
   660 ;; Defined at:
   661 ;;		line 34 in file "SPI.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      unsigned char 
   668 ;; Registers used:
   669 ;;		wreg
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _readSPI
   691  008C                     _readSPI:
   692  008C                     l704:	
   693                           ;incstack = 0
   694                           ; Regs used in _readSPI: [wreg]
   695                           
   696  008C                     l85:	
   697                           ;SPI.c: 35:     while(!SSPSTATbits.BF);
   698                           
   699  008C  1683               	bsf	3,5	;RP0=1, select bank1
   700  008D  1303               	bcf	3,6	;RP1=0, select bank1
   701  008E  1C14               	btfss	20,0	;volatile
   702  008F  2891               	goto	u21
   703  0090  2892               	goto	u20
   704  0091                     u21:
   705  0091  288C               	goto	l85
   706  0092                     u20:
   707  0092                     l706:
   708                           
   709                           ;SPI.c: 36:     return(SSPBUF);
   710  0092  1283               	bcf	3,5	;RP0=0, select bank0
   711  0093  1303               	bcf	3,6	;RP1=0, select bank0
   712  0094  0813               	movf	19,w	;volatile
   713  0095                     l88:
   714  0095  0008               	return
   715  0096                     __end_of_readSPI:
   716                           
   717                           	psect	text4
   718  005D                     __ptext4:	
   719 ;; *************** function _config *****************
   720 ;; Defined at:
   721 ;;		line 77 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _config
   751  005D                     _config:
   752  005D                     l680:	
   753                           ;incstack = 0
   754                           ; Regs used in _config: [wreg+status,2+status,0]
   755                           
   756                           
   757                           ;main.c: 79:     ANSEL = 0X00;
   758  005D  1683               	bsf	3,5	;RP0=1, select bank3
   759  005E  1703               	bsf	3,6	;RP1=1, select bank3
   760  005F  0188               	clrf	8	;volatile
   761                           
   762                           ;main.c: 80:     ANSELH = 0X00;
   763  0060  0189               	clrf	9	;volatile
   764                           
   765                           ;main.c: 82:     TRISB = 0X00;
   766  0061  1683               	bsf	3,5	;RP0=1, select bank1
   767  0062  1303               	bcf	3,6	;RP1=0, select bank1
   768  0063  0186               	clrf	6	;volatile
   769  0064                     l682:
   770                           
   771                           ;main.c: 84:     TRISCbits.TRISC2 = 0;
   772  0064  1107               	bcf	7,2	;volatile
   773                           
   774                           ;main.c: 85:     TRISD = 0X00;
   775  0065  0188               	clrf	8	;volatile
   776                           
   777                           ;main.c: 86:     TRISE = 0X00;
   778  0066  0189               	clrf	9	;volatile
   779                           
   780                           ;main.c: 87:     PORTA = 0X00;
   781  0067  1283               	bcf	3,5	;RP0=0, select bank0
   782  0068  1303               	bcf	3,6	;RP1=0, select bank0
   783  0069  0185               	clrf	5	;volatile
   784                           
   785                           ;main.c: 88:     PORTB = 0X00;
   786  006A  0186               	clrf	6	;volatile
   787                           
   788                           ;main.c: 89:     PORTC = 0X00;
   789  006B  0187               	clrf	7	;volatile
   790                           
   791                           ;main.c: 90:     PORTD = 0X00;
   792  006C  0188               	clrf	8	;volatile
   793                           
   794                           ;main.c: 91:     PORTE = 0X00;
   795  006D  0189               	clrf	9	;volatile
   796  006E                     l684:
   797                           
   798                           ;main.c: 94:     OSCCONbits.IRCF = 0b111;
   799  006E  3070               	movlw	112
   800  006F  1683               	bsf	3,5	;RP0=1, select bank1
   801  0070  1303               	bcf	3,6	;RP1=0, select bank1
   802  0071  048F               	iorwf	15,f	;volatile
   803  0072                     l686:
   804                           
   805                           ;main.c: 95:     OSCCONbits.SCS = 0b1;
   806  0072  140F               	bsf	15,0	;volatile
   807  0073                     l688:
   808                           
   809                           ;main.c: 98:     INTCONbits.GIE = 1;
   810  0073  178B               	bsf	11,7	;volatile
   811  0074                     l690:
   812                           
   813                           ;main.c: 99:     INTCONbits.PEIE = 1;
   814  0074  170B               	bsf	11,6	;volatile
   815  0075                     l62:
   816  0075  0008               	return
   817  0076                     __end_of_config:
   818                           
   819                           	psect	text5
   820  0096                     __ptext5:	
   821 ;; *************** function _interrupcion *****************
   822 ;; Defined at:
   823 ;;		line 51 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		None
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          2       0       0       0       0
   840 ;;      Totals:         2       0       0       0       0
   841 ;;Total ram usage:        2 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		Interrupt level 1
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _interrupcion
   852  0096                     _interrupcion:
   853  0096                     i1l51:
   854  0096  0871               	movf	??_interrupcion+1,w
   855  0097  008A               	movwf	10
   856  0098  0E70               	swapf	??_interrupcion,w
   857  0099  0083               	movwf	3
   858  009A  0EFE               	swapf	btemp,f
   859  009B  0E7E               	swapf	btemp,w
   860  009C  0009               	retfie
   861  009D                     __end_of_interrupcion:
   862  007E                     btemp	set	126	;btemp
   863  007E                     wtemp0	set	126
   864                           
   865                           	psect	intentry
   866  0004                     __pintentry:	
   867                           ;incstack = 0
   868                           ; Regs used in _interrupcion: []
   869                           
   870  0004                     interrupt_function:
   871  007E                     saved_w	set	btemp
   872  0004  00FE               	movwf	btemp
   873  0005  0E03               	swapf	3,w
   874  0006  00F0               	movwf	??_interrupcion
   875  0007  080A               	movf	10,w
   876  0008  00F1               	movwf	??_interrupcion+1
   877  0009  120A  118A  2896   	ljmp	_interrupcion
   878                           
   879                           	psect	config
   880                           
   881                           ;Config register CONFIG1 @ 0x2007
   882                           ;	Oscillator Selection bits
   883                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   884                           ;	Watchdog Timer Enable bit
   885                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   886                           ;	Power-up Timer Enable bit
   887                           ;	PWRTE = OFF, PWRT disabled
   888                           ;	RE3/MCLR pin function select bit
   889                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   890                           ;	Code Protection bit
   891                           ;	CP = OFF, Program memory code protection is disabled
   892                           ;	Data Code Protection bit
   893                           ;	CPD = OFF, Data memory code protection is disabled
   894                           ;	Brown Out Reset Selection bits
   895                           ;	BOREN = OFF, BOR disabled
   896                           ;	Internal External Switchover bit
   897                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   898                           ;	Fail-Safe Clock Monitor Enabled bit
   899                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   900                           ;	Low Voltage Programming Enable bit
   901                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   902                           ;	In-Circuit Debugger Mode bit
   903                           ;	DEBUG = 0x1, unprogrammed default
   904  2007                     	org	8199
   905  2007  20F4               	dw	8436
   906                           
   907                           ;Config register CONFIG2 @ 0x2008
   908                           ;	Brown-out Reset Selection bit
   909                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   910                           ;	Flash Program Memory Self Write Enable bits
   911                           ;	WRT = OFF, Write protection off
   912  2008                     	org	8200
   913  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              6 COMMON     2     2      0
                             _config
                            _readSPI
                            _sendSPI
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interrupcion                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _readSPI
   _sendSPI
   _spiInit

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 16:32:37 2021

            _SSPSTATbits 0094                       l62 0075                       l82 00A2  
                     l85 008C                       l78 0086                       l79 008B  
                     l88 0095                       u20 0092                       u21 0091  
                     u30 007E                       u31 007D                       u47 003A  
                     u57 0051                      l702 009E                      l704 008C  
                    l706 0092                      l730 0082                      l732 0085  
                    l724 0077                      l740 0036                      l726 007E  
                    l742 003F                      l734 0017                      l680 005D  
                    l728 0080                      l744 0045                      l736 0025  
                    l690 0074                      l682 0064                      l746 0056  
                    l738 002E                      l684 006E                      l686 0072  
                    l688 0073               _SPIcontrol 007B                     i1l51 0096  
                   _dato 007A                     _main 0017                     _val1 0079  
                   _val2 0078                     btemp 007E                     start 000C  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089          __end_of_readSPI 0096          __end_of_sendSPI 00A3  
                  pclath 000A          __end_of_spiInit 008C                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 005D  
                 ??_main 0076                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _config 005D                ??_readSPI 0072                ??_sendSPI 0072  
                 saved_w 007E                ??_spiInit 0075  __end_of__initialization 0013  
         __pcstackCOMMON 0070            ?_interrupcion 0070           ??_interrupcion 0070  
             __pmaintext 0017               __pintentry 0004                  ?_config 0070  
                _SSPSTAT 0094          __size_of_config 0019                  __ptext1 0076  
                __ptext2 009D                  __ptext3 008C                  __ptext4 005D  
                __ptext5 0096                  _readSPI 008C                  _sendSPI 009D  
                _spiInit 0076     end_of_initialization 0013                _PORTCbits 0007  
              _TRISCbits 0087     __end_of_interrupcion 009D           __end_of_config 0076  
    start_initialization 000F             sendSPI@valor 0072                 ??_config 0072  
            __pbssCOMMON 0078                ___latbits 0002    __size_of_interrupcion 0007  
               ?_readSPI 0070                 ?_sendSPI 0070                 ?_spiInit 0072  
   spiInit@sTransmitEdge 0074        interrupt_function 0004       spiInit@sDataSample 0072  
           _interrupcion 0096         __size_of_readSPI 000A         __size_of_sendSPI 0006  
       __size_of_spiInit 0016            __size_of_main 0046             spiInit@sType 0075  
      spiInit@sClockIdle 0073               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
