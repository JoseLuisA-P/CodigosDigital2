

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 16:32:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  0009                     _PORTE	set	9
   368  0005                     _PORTA	set	5
   369  0008                     _PORTD	set	8
   370  0006                     _PORTB	set	6
   371  000B                     _INTCONbits	set	11
   372  001E                     _ADRESH	set	30
   373  001F                     _ADCON0bits	set	31
   374  000C                     _PIR1bits	set	12
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  0081                     _OPTION_REGbits	set	129
   379  008C                     _PIE1bits	set	140
   380  008F                     _OSCCONbits	set	143
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISAbits	set	133
   385  043B                     _TRISC3	set	1083
   386  043D                     _TRISC5	set	1085
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394  000F                     __initialization:
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   398  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   399  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   400  0012                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0012                     __end_of__initialization:
   404  0012  0183               	clrf	3
   405  0013  120A  118A  2909   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0077                     __pbssCOMMON:
   409  0077                     _dato:
   410  0077                     	ds	1
   411  0078                     _pot2:
   412  0078                     	ds	1
   413  0079                     _pot1:
   414  0079                     	ds	1
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:
   418  0070                     ?_readSPI:
   419  0070                     ??_readSPI:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_sendSPI:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_sendSPI:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_config:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_interrupcion:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     sendSPI@valor:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0070                     	ds	1
   443  0071                     ??_interrupcion:
   444                           
   445                           ; 1 bytes @ 0x1
   446  0071                     	ds	3
   447  0074                     ?_spiInit:
   448  0074                     ?_ADCconfig:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0074                     ADCconfig@just:	
   452                           ; 1 bytes @ 0x4
   453                           
   454  0074                     spiInit@sDataSample:	
   455                           ; 1 bytes @ 0x4
   456                           
   457                           
   458                           ; 1 bytes @ 0x4
   459  0074                     	ds	1
   460  0075                     ??_ADCconfig:
   461  0075                     spiInit@sClockIdle:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 1 bytes @ 0x5
   466  0075                     	ds	1
   467  0076                     spiInit@sTransmitEdge:
   468                           
   469                           ; 1 bytes @ 0x6
   470  0076                     	ds	1
   471  0077                     ??_config:
   472  0077                     ??_spiInit:	
   473                           ; 1 bytes @ 0x7
   474                           
   475  0077                     ??_main:	
   476                           ; 1 bytes @ 0x7
   477                           
   478                           
   479                           	psect	cstackBANK0
   480  0020                     __pcstackBANK0:	
   481                           ; 1 bytes @ 0x7
   482                           
   483  0020                     ADCconfig@canal:
   484  0020                     spiInit@sType:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0020                     	ds	1
   490                           
   491                           	psect	maintext
   492  0109                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 68 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		_config
   520 ;;		_spiInit
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0109                     _main:
   529  0109                     l1093:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;main.c: 69:     config();
   535  0109  120A  118A  20B7  120A  118A  	fcall	_config
   536  010E                     l1095:
   537                           
   538                           ;main.c: 70:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   539  010E  01F4               	clrf	spiInit@sDataSample
   540  010F  01F5               	clrf	spiInit@sClockIdle
   541  0110  01F6               	clrf	spiInit@sTransmitEdge
   542  0111  3024               	movlw	36
   543  0112  120A  118A  20EB  120A  118A  	fcall	_spiInit
   544  0117                     l1097:
   545                           
   546                           ;main.c: 72:       PORTB = pot1;
   547  0117  0879               	movf	_pot1,w
   548  0118  1283               	bcf	3,5	;RP0=0, select bank0
   549  0119  1303               	bcf	3,6	;RP1=0, select bank0
   550  011A  0086               	movwf	6	;volatile
   551  011B                     l1099:
   552                           
   553                           ;main.c: 73:       PORTD = pot2;
   554  011B  0878               	movf	_pot2,w
   555  011C  0088               	movwf	8	;volatile
   556  011D  2917               	goto	l1097
   557  011E  120A  118A  280C   	ljmp	start
   558  0121                     __end_of_main:
   559                           
   560                           	psect	text1
   561  00EB                     __ptext1:	
   562 ;; *************** function _spiInit *****************
   563 ;; Defined at:
   564 ;;		line 13 in file "SPI.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  sType           1    wreg     enum E1264
   567 ;;  sDataSample     1    4[COMMON] enum E1272
   568 ;;  sClockIdle      1    5[COMMON] enum E1276
   569 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  sType           1    0[BANK0 ] enum E1264
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         3       0       0       0       0
   582 ;;      Locals:         0       1       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         3       1       0       0       0
   585 ;;Total ram usage:        4 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    2
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _spiInit
   597  00EB                     _spiInit:
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   601                           ;spiInit@sType stored from wreg
   602  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   603  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   604  00ED  00A0               	movwf	spiInit@sType
   605  00EE                     l1083:
   606                           
   607                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   608  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   609  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   610  00F0  1287               	bcf	7,5	;volatile
   611                           
   612                           ;SPI.c: 16:     if(sType & 0b00000100)
   613  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   614  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   615  00F3  1D20               	btfss	spiInit@sType,2
   616  00F4  28F6               	goto	u141
   617  00F5  28F7               	goto	u140
   618  00F6                     u141:
   619  00F6  28FD               	goto	l1089
   620  00F7                     u140:
   621  00F7                     l1085:
   622                           
   623                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   624  00F7  0876               	movf	spiInit@sTransmitEdge,w
   625  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   626  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   627  00FA  0094               	movwf	20	;volatile
   628  00FB                     l1087:
   629                           
   630                           ;SPI.c: 19:         TRISC3 = 1;
   631  00FB  1587               	bsf	7,3	;volatile
   632                           
   633                           ;SPI.c: 20:     }
   634  00FC  2903               	goto	l109
   635  00FD                     l1089:
   636                           
   637                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   638  00FD  0874               	movf	spiInit@sDataSample,w
   639  00FE  0476               	iorwf	spiInit@sTransmitEdge,w
   640  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   641  0100  1303               	bcf	3,6	;RP1=0, select bank1
   642  0101  0094               	movwf	20	;volatile
   643  0102                     l1091:
   644                           
   645                           ;SPI.c: 24:         TRISC3 = 0;
   646  0102  1187               	bcf	7,3	;volatile
   647  0103                     l109:	
   648                           ;SPI.c: 25:     }
   649                           
   650                           
   651                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   652  0103  1283               	bcf	3,5	;RP0=0, select bank0
   653  0104  1303               	bcf	3,6	;RP1=0, select bank0
   654  0105  0820               	movf	spiInit@sType,w
   655  0106  0475               	iorwf	spiInit@sClockIdle,w
   656  0107  0094               	movwf	20	;volatile
   657  0108                     l110:
   658  0108  0008               	return
   659  0109                     __end_of_spiInit:
   660                           
   661                           	psect	text2
   662  00B7                     __ptext2:	
   663 ;; *************** function _config *****************
   664 ;; Defined at:
   665 ;;		line 80 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    3
   686 ;; This function calls:
   687 ;;		_ADCconfig
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _config
   695  00B7                     _config:
   696  00B7                     l1029:	
   697                           ;incstack = 0
   698                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   699                           
   700                           
   701                           ;main.c: 82:     ANSEL = 0X03;
   702  00B7  3003               	movlw	3
   703  00B8  1683               	bsf	3,5	;RP0=1, select bank3
   704  00B9  1703               	bsf	3,6	;RP1=1, select bank3
   705  00BA  0088               	movwf	8	;volatile
   706  00BB                     l1031:
   707                           
   708                           ;main.c: 83:     ANSELH = 0X00;
   709  00BB  0189               	clrf	9	;volatile
   710  00BC                     l1033:
   711                           
   712                           ;main.c: 84:     TRISAbits.TRISA0 = 1;
   713  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   714  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   715  00BE  1405               	bsf	5,0	;volatile
   716  00BF                     l1035:
   717                           
   718                           ;main.c: 85:     TRISAbits.TRISA1 = 1;
   719  00BF  1485               	bsf	5,1	;volatile
   720  00C0                     l1037:
   721                           
   722                           ;main.c: 86:     TRISB = 0X00;
   723  00C0  0186               	clrf	6	;volatile
   724  00C1                     l1039:
   725                           
   726                           ;main.c: 87:     TRISD = 0X00;
   727  00C1  0188               	clrf	8	;volatile
   728  00C2                     l1041:
   729                           
   730                           ;main.c: 88:     TRISE = 0X00;
   731  00C2  0189               	clrf	9	;volatile
   732  00C3                     l1043:
   733                           
   734                           ;main.c: 89:     PORTA = 0X00;
   735  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   736  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   737  00C5  0185               	clrf	5	;volatile
   738  00C6                     l1045:
   739                           
   740                           ;main.c: 90:     PORTB = 0X00;
   741  00C6  0186               	clrf	6	;volatile
   742  00C7                     l1047:
   743                           
   744                           ;main.c: 91:     PORTD = 0X00;
   745  00C7  0188               	clrf	8	;volatile
   746  00C8                     l1049:
   747                           
   748                           ;main.c: 92:     PORTE = 0X00;
   749  00C8  0189               	clrf	9	;volatile
   750  00C9                     l1051:
   751                           
   752                           ;main.c: 95:     OSCCONbits.IRCF = 0b111;
   753  00C9  3070               	movlw	112
   754  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   755  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   756  00CC  048F               	iorwf	15,f	;volatile
   757  00CD                     l1053:
   758                           
   759                           ;main.c: 96:     OSCCONbits.SCS = 0b1;
   760  00CD  140F               	bsf	15,0	;volatile
   761  00CE                     l1055:
   762                           
   763                           ;main.c: 99:     INTCONbits.GIE = 1;
   764  00CE  178B               	bsf	11,7	;volatile
   765  00CF                     l1057:
   766                           
   767                           ;main.c: 100:     INTCONbits.PEIE = 1;
   768  00CF  170B               	bsf	11,6	;volatile
   769  00D0                     l1059:
   770                           
   771                           ;main.c: 101:     INTCONbits.T0IF = 0;
   772  00D0  110B               	bcf	11,2	;volatile
   773  00D1                     l1061:
   774                           
   775                           ;main.c: 102:     INTCONbits.T0IE = 1;
   776  00D1  168B               	bsf	11,5	;volatile
   777  00D2                     l1063:
   778                           
   779                           ;main.c: 103:     PIR1bits.SSPIF = 0;
   780  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   781  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   782  00D4  118C               	bcf	12,3	;volatile
   783  00D5                     l1065:
   784                           
   785                           ;main.c: 104:     PIE1bits.SSPIE = 1;
   786  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   787  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   788  00D7  158C               	bsf	12,3	;volatile
   789  00D8                     l1067:
   790                           
   791                           ;main.c: 107:     OPTION_REGbits.T0CS = 0;
   792  00D8  1281               	bcf	1,5	;volatile
   793  00D9                     l1069:
   794                           
   795                           ;main.c: 108:     OPTION_REGbits.PSA = 0;
   796  00D9  1181               	bcf	1,3	;volatile
   797  00DA                     l1071:
   798                           
   799                           ;main.c: 109:     OPTION_REGbits.PS2 = 1;
   800  00DA  1501               	bsf	1,2	;volatile
   801  00DB                     l1073:
   802                           
   803                           ;main.c: 110:     OPTION_REGbits.PS1 = 1;
   804  00DB  1481               	bsf	1,1	;volatile
   805  00DC                     l1075:
   806                           
   807                           ;main.c: 111:     OPTION_REGbits.PS0 = 0;
   808  00DC  1001               	bcf	1,0	;volatile
   809  00DD                     l1077:
   810                           
   811                           ;main.c: 114:     ADCconfig(0,0);
   812  00DD  01F4               	clrf	ADCconfig@just
   813  00DE  3000               	movlw	0
   814  00DF  120A  118A  2070  120A  118A  	fcall	_ADCconfig
   815  00E4                     l1079:
   816                           
   817                           ;main.c: 116:     PIR1bits.ADIF = 0;
   818  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   819  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   820  00E6  130C               	bcf	12,6	;volatile
   821  00E7                     l1081:
   822                           
   823                           ;main.c: 117:     PIE1bits.ADIE = 1;
   824  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   825  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   826  00E9  170C               	bsf	12,6	;volatile
   827  00EA                     l75:
   828  00EA  0008               	return
   829  00EB                     __end_of_config:
   830                           
   831                           	psect	text3
   832  0070                     __ptext3:	
   833 ;; *************** function _ADCconfig *****************
   834 ;; Defined at:
   835 ;;		line 10 in file "ADC.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  canal           1    wreg     unsigned char 
   838 ;;  just            1    4[COMMON] unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  canal           1    0[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         1       0       0       0       0
   851 ;;      Locals:         0       1       0       0       0
   852 ;;      Temps:          2       0       0       0       0
   853 ;;      Totals:         3       1       0       0       0
   854 ;;Total ram usage:        4 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    2
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_config
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _ADCconfig
   866  0070                     _ADCconfig:
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
   870                           ;ADCconfig@canal stored from wreg
   871  0070  1283               	bcf	3,5	;RP0=0, select bank0
   872  0071  1303               	bcf	3,6	;RP1=0, select bank0
   873  0072  00A0               	movwf	ADCconfig@canal
   874  0073                     l997:
   875                           
   876                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
   877  0073  288C               	goto	l1009
   878  0074                     l999:
   879                           
   880                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
   881  0074  303F               	movlw	-193
   882  0075  1283               	bcf	3,5	;RP0=0, select bank0
   883  0076  1303               	bcf	3,6	;RP1=0, select bank0
   884  0077  059F               	andwf	31,f	;volatile
   885                           
   886                           ;ADC.c: 18:             break;
   887  0078  28A2               	goto	l1011
   888  0079                     l1001:
   889                           
   890                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
   891  0079  1283               	bcf	3,5	;RP0=0, select bank0
   892  007A  1303               	bcf	3,6	;RP1=0, select bank0
   893  007B  081F               	movf	31,w	;volatile
   894  007C  393F               	andlw	-193
   895  007D  3840               	iorlw	64
   896  007E  009F               	movwf	31	;volatile
   897                           
   898                           ;ADC.c: 21:             break;
   899  007F  28A2               	goto	l1011
   900  0080                     l1003:
   901                           
   902                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
   903  0080  1283               	bcf	3,5	;RP0=0, select bank0
   904  0081  1303               	bcf	3,6	;RP1=0, select bank0
   905  0082  081F               	movf	31,w	;volatile
   906  0083  393F               	andlw	-193
   907  0084  3880               	iorlw	128
   908  0085  009F               	movwf	31	;volatile
   909                           
   910                           ;ADC.c: 24:             break;
   911  0086  28A2               	goto	l1011
   912  0087                     l1005:
   913                           
   914                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
   915  0087  30C0               	movlw	192
   916  0088  1283               	bcf	3,5	;RP0=0, select bank0
   917  0089  1303               	bcf	3,6	;RP1=0, select bank0
   918  008A  049F               	iorwf	31,f	;volatile
   919                           
   920                           ;ADC.c: 27:             break;
   921  008B  28A2               	goto	l1011
   922  008C                     l1009:
   923  008C  1683               	bsf	3,5	;RP0=1, select bank1
   924  008D  1303               	bcf	3,6	;RP1=0, select bank1
   925  008E  0E0F               	swapf	15,w	;volatile
   926  008F  3907               	andlw	7
   927  0090  00F5               	movwf	??_ADCconfig
   928  0091  01F6               	clrf	??_ADCconfig+1
   929                           
   930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   931                           ; Switch size 1, requested type "simple"
   932                           ; Number of cases is 1, Range of values is 0 to 0
   933                           ; switch strategies available:
   934                           ; Name         Instructions Cycles
   935                           ; simple_byte            4     3 (average)
   936                           ; direct_byte           11     8 (fixed)
   937                           ; jumptable            260     6 (fixed)
   938                           ;	Chosen strategy is simple_byte
   939  0092  0876               	movf	??_ADCconfig+1,w
   940  0093  3A00               	xorlw	0	; case 0
   941  0094  1903               	skipnz
   942  0095  2897               	goto	l1131
   943  0096  2887               	goto	l1005
   944  0097                     l1131:
   945                           
   946                           ; Switch size 1, requested type "simple"
   947                           ; Number of cases is 3, Range of values is 4 to 7
   948                           ; switch strategies available:
   949                           ; Name         Instructions Cycles
   950                           ; simple_byte           10     6 (average)
   951                           ; direct_byte           23    11 (fixed)
   952                           ; jumptable            263     9 (fixed)
   953                           ;	Chosen strategy is simple_byte
   954  0097  0875               	movf	??_ADCconfig,w
   955  0098  3A04               	xorlw	4	; case 4
   956  0099  1903               	skipnz
   957  009A  2874               	goto	l999
   958  009B  3A02               	xorlw	2	; case 6
   959  009C  1903               	skipnz
   960  009D  2879               	goto	l1001
   961  009E  3A01               	xorlw	1	; case 7
   962  009F  1903               	skipnz
   963  00A0  2880               	goto	l1003
   964  00A1  2887               	goto	l1005
   965  00A2                     l1011:
   966                           
   967                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
   968  00A2  0820               	movf	ADCconfig@canal,w
   969  00A3  00F5               	movwf	??_ADCconfig
   970  00A4  0DF5               	rlf	??_ADCconfig,f
   971  00A5  0DF5               	rlf	??_ADCconfig,f
   972  00A6  081F               	movf	31,w	;volatile
   973  00A7  0675               	xorwf	??_ADCconfig,w
   974  00A8  39C3               	andlw	-61
   975  00A9  0675               	xorwf	??_ADCconfig,w
   976  00AA  009F               	movwf	31	;volatile
   977  00AB                     l1013:
   978                           
   979                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
   980  00AB  109F               	bcf	31,1	;volatile
   981  00AC                     l1015:
   982                           
   983                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
   984  00AC  141F               	bsf	31,0	;volatile
   985  00AD                     l1017:
   986                           
   987                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
   988  00AD  0C74               	rrf	ADCconfig@just,w
   989  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   990  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   991  00B0  1C03               	skipc
   992  00B1  139F               	bcf	31,7	;volatile
   993  00B2  1803               	skipnc
   994  00B3  179F               	bsf	31,7	;volatile
   995  00B4                     l1019:
   996                           
   997                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
   998  00B4  129F               	bcf	31,5	;volatile
   999  00B5                     l1021:
  1000                           
  1001                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  1002  00B5  121F               	bcf	31,4	;volatile
  1003  00B6                     l90:
  1004  00B6  0008               	return
  1005  00B7                     __end_of_ADCconfig:
  1006                           
  1007                           	psect	text4
  1008  0016                     __ptext4:	
  1009 ;; *************** function _interrupcion *****************
  1010 ;; Defined at:
  1011 ;;		line 43 in file "main.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, pclath, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0
  1027 ;;      Temps:          3       0       0       0       0
  1028 ;;      Totals:         3       0       0       0       0
  1029 ;;Total ram usage:        3 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    1
  1032 ;; This function calls:
  1033 ;;		_readSPI
  1034 ;;		_sendSPI
  1035 ;; This function is called by:
  1036 ;;		Interrupt level 1
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _interrupcion
  1042  0016                     _interrupcion:
  1043  0016                     i1l813:
  1044                           
  1045                           ;main.c: 44:     if(PIR1bits.ADIF){
  1046  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0018  1F0C               	btfss	12,6	;volatile
  1049  0019  281B               	goto	u3_21
  1050  001A  281C               	goto	u3_20
  1051  001B                     u3_21:
  1052  001B  2837               	goto	i1l825
  1053  001C                     u3_20:
  1054  001C                     i1l815:
  1055                           
  1056                           ;main.c: 45:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  1057  001C  1003               	clrc
  1058  001D  1D1F               	btfss	31,2	;volatile
  1059  001E  1403               	setc
  1060  001F  1803               	btfsc	3,0
  1061  0020  2822               	goto	u4_21
  1062  0021  2826               	goto	u4_20
  1063  0022                     u4_21:
  1064  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0024  151F               	bsf	31,2	;volatile
  1067  0025  2829               	goto	u5_24
  1068  0026                     u4_20:
  1069  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0028  111F               	bcf	31,2	;volatile
  1072  0029                     u5_24:
  1073  0029                     i1l817:
  1074                           
  1075                           ;main.c: 46:         PIR1bits.ADIF = 0;
  1076  0029  130C               	bcf	12,6	;volatile
  1077  002A                     i1l819:
  1078                           
  1079                           ;main.c: 47:         if(!ADCON0bits.CHS0)pot1 = ADRESH;
  1080  002A  191F               	btfsc	31,2	;volatile
  1081  002B  282D               	goto	u6_21
  1082  002C  282E               	goto	u6_20
  1083  002D                     u6_21:
  1084  002D  2833               	goto	i1l823
  1085  002E                     u6_20:
  1086  002E                     i1l821:
  1087  002E  081E               	movf	30,w	;volatile
  1088  002F  00F1               	movwf	??_interrupcion
  1089  0030  0871               	movf	??_interrupcion,w
  1090  0031  00F9               	movwf	_pot1
  1091  0032  2837               	goto	i1l825
  1092  0033                     i1l823:
  1093  0033  081E               	movf	30,w	;volatile
  1094  0034  00F1               	movwf	??_interrupcion
  1095  0035  0871               	movf	??_interrupcion,w
  1096  0036  00F8               	movwf	_pot2
  1097  0037                     i1l825:
  1098                           
  1099                           ;main.c: 51:     if(INTCONbits.T0IF){
  1100  0037  1D0B               	btfss	11,2	;volatile
  1101  0038  283A               	goto	u7_21
  1102  0039  283B               	goto	u7_20
  1103  003A                     u7_21:
  1104  003A  2841               	goto	i1l58
  1105  003B                     u7_20:
  1106  003B                     i1l827:
  1107                           
  1108                           ;main.c: 52:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  1109  003B  189F               	btfsc	31,1	;volatile
  1110  003C  283E               	goto	u8_21
  1111  003D  283F               	goto	u8_20
  1112  003E                     u8_21:
  1113  003E  2840               	goto	i1l59
  1114  003F                     u8_20:
  1115  003F                     i1l829:
  1116  003F  149F               	bsf	31,1	;volatile
  1117  0040                     i1l59:
  1118                           
  1119                           ;main.c: 53:         INTCONbits.T0IF = 0;
  1120  0040  110B               	bcf	11,2	;volatile
  1121  0041                     i1l58:	
  1122                           ;main.c: 54:     }
  1123                           
  1124                           
  1125                           ;main.c: 56:     if(PIR1bits.SSPIF){
  1126  0041  1D8C               	btfss	12,3	;volatile
  1127  0042  2844               	goto	u9_21
  1128  0043  2845               	goto	u9_20
  1129  0044                     u9_21:
  1130  0044  2869               	goto	i1l64
  1131  0045                     u9_20:
  1132  0045                     i1l831:
  1133                           
  1134                           ;main.c: 57:         dato = readSPI();
  1135  0045  120A  118A  2121  120A  118A  	fcall	_readSPI
  1136  004A  00F1               	movwf	??_interrupcion
  1137  004B  0871               	movf	??_interrupcion,w
  1138  004C  00F7               	movwf	_dato
  1139  004D                     i1l833:
  1140                           
  1141                           ;main.c: 58:         if(dato == '1') sendSPI(pot1);
  1142  004D  3031               	movlw	49
  1143  004E  0677               	xorwf	_dato,w
  1144  004F  1D03               	btfss	3,2
  1145  0050  2852               	goto	u10_21
  1146  0051  2853               	goto	u10_20
  1147  0052                     u10_21:
  1148  0052  285A               	goto	i1l837
  1149  0053                     u10_20:
  1150  0053                     i1l835:
  1151  0053  0879               	movf	_pot1,w
  1152  0054  120A  118A  212B  120A  118A  	fcall	_sendSPI
  1153  0059  2866               	goto	i1l841
  1154  005A                     i1l837:
  1155  005A  3032               	movlw	50
  1156  005B  0677               	xorwf	_dato,w
  1157  005C  1D03               	btfss	3,2
  1158  005D  285F               	goto	u11_21
  1159  005E  2860               	goto	u11_20
  1160  005F                     u11_21:
  1161  005F  2866               	goto	i1l841
  1162  0060                     u11_20:
  1163  0060                     i1l839:
  1164  0060  0878               	movf	_pot2,w
  1165  0061  120A  118A  212B  120A  118A  	fcall	_sendSPI
  1166  0066                     i1l841:
  1167                           
  1168                           ;main.c: 60:         PIR1bits.SSPIF = 0;
  1169  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0068  118C               	bcf	12,3	;volatile
  1172  0069                     i1l64:
  1173  0069  0873               	movf	??_interrupcion+2,w
  1174  006A  008A               	movwf	10
  1175  006B  0E72               	swapf	??_interrupcion+1,w
  1176  006C  0083               	movwf	3
  1177  006D  0EFE               	swapf	btemp,f
  1178  006E  0E7E               	swapf	btemp,w
  1179  006F  0009               	retfie
  1180  0070                     __end_of_interrupcion:
  1181                           
  1182                           	psect	intentry
  1183  0004                     __pintentry:	
  1184                           ;incstack = 0
  1185                           ; Regs used in _interrupcion: [wreg+status,2+status,0+pclath+cstack]
  1186                           
  1187  0004                     interrupt_function:
  1188  007E                     saved_w	set	btemp
  1189  0004  00FE               	movwf	btemp
  1190  0005  0E03               	swapf	3,w
  1191  0006  00F2               	movwf	??_interrupcion+1
  1192  0007  080A               	movf	10,w
  1193  0008  00F3               	movwf	??_interrupcion+2
  1194  0009  120A  118A  2816   	ljmp	_interrupcion
  1195                           
  1196                           	psect	text5
  1197  012B                     __ptext5:	
  1198 ;; *************** function _sendSPI *****************
  1199 ;; Defined at:
  1200 ;;		line 30 in file "SPI.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  valor           1    wreg     unsigned char 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  valor           1    0[COMMON] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         1       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0
  1217 ;;      Totals:         1       0       0       0       0
  1218 ;;Total ram usage:        1 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_interrupcion
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _sendSPI
  1229  012B                     _sendSPI:
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _sendSPI: [wreg]
  1233                           ;sendSPI@valor stored from wreg
  1234  012B  00F0               	movwf	sendSPI@valor
  1235  012C                     i1l747:
  1236                           
  1237                           ;SPI.c: 31:     SSPBUF = valor;
  1238  012C  0870               	movf	sendSPI@valor,w
  1239  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1240  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1241  012F  0093               	movwf	19	;volatile
  1242  0130                     i1l113:
  1243  0130  0008               	return
  1244  0131                     __end_of_sendSPI:
  1245                           
  1246                           	psect	text6
  1247  0121                     __ptext6:	
  1248 ;; *************** function _readSPI *****************
  1249 ;; Defined at:
  1250 ;;		line 34 in file "SPI.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_interrupcion
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _readSPI
  1279  0121                     _readSPI:
  1280  0121                     i1l741:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _readSPI: [wreg]
  1283                           
  1284  0121                     i1l116:	
  1285                           ;SPI.c: 35:     while(!SSPSTATbits.BF);
  1286                           
  1287  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0123  1C14               	btfss	20,0	;volatile
  1290  0124  2926               	goto	u1_21
  1291  0125  2927               	goto	u1_20
  1292  0126                     u1_21:
  1293  0126  2921               	goto	i1l116
  1294  0127                     u1_20:
  1295  0127                     i1l743:
  1296                           
  1297                           ;SPI.c: 36:     return(SSPBUF);
  1298  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0129  0813               	movf	19,w	;volatile
  1301  012A                     i1l119:
  1302  012A  0008               	return
  1303  012B                     __end_of_readSPI:
  1304  007E                     btemp	set	126	;btemp
  1305  007E                     wtemp0	set	126
  1306                           
  1307                           	psect	config
  1308                           
  1309                           ;Config register CONFIG1 @ 0x2007
  1310                           ;	Oscillator Selection bits
  1311                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1312                           ;	Watchdog Timer Enable bit
  1313                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1314                           ;	Power-up Timer Enable bit
  1315                           ;	PWRTE = OFF, PWRT disabled
  1316                           ;	RE3/MCLR pin function select bit
  1317                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1318                           ;	Code Protection bit
  1319                           ;	CP = OFF, Program memory code protection is disabled
  1320                           ;	Data Code Protection bit
  1321                           ;	CPD = OFF, Data memory code protection is disabled
  1322                           ;	Brown Out Reset Selection bits
  1323                           ;	BOREN = OFF, BOR disabled
  1324                           ;	Internal External Switchover bit
  1325                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1326                           ;	Fail-Safe Clock Monitor Enabled bit
  1327                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1328                           ;	Low Voltage Programming Enable bit
  1329                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1330                           ;	In-Circuit Debugger Mode bit
  1331                           ;	DEBUG = 0x1, unprogrammed default
  1332  2007                     	org	8199
  1333  2007  20F4               	dw	8436
  1334                           
  1335                           ;Config register CONFIG2 @ 0x2008
  1336                           ;	Brown-out Reset Selection bit
  1337                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1338                           ;	Flash Program Memory Self Write Enable bits
  1339                           ;	WRT = OFF, Write protection off
  1340  2008                     	org	8200
  1341  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit
    _config->_ADCconfig

Critical Paths under _interrupcion in COMMON

    _interrupcion->_sendSPI

Critical Paths under _main in BANK0

    _main->_spiInit
    _config->_ADCconfig

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     608
                             _config
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     152
                          _ADCconfig
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     152
                                              4 COMMON     3     2      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupcion                                         3     3      0      15
                                              1 COMMON     3     3      0
                            _readSPI
                            _sendSPI
 ---------------------------------------------------------------------------------
 (4) _sendSPI                                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _readSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _ADCconfig
   _spiInit

 _interrupcion (ROOT)
   _readSPI
   _sendSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 16:32:10 2021

            _SSPSTATbits 0094                       l90 00B6                       l75 00EA  
                    l110 0108                      l109 0103                      l997 0073  
                    l999 0074       __size_of_ADCconfig 0047                      u140 00F7  
                    u141 00F6                     l1001 0079                     l1003 0080  
                   l1011 00A2                     l1021 00B5                     l1013 00AB  
                   l1005 0087                     l1015 00AC                     l1031 00BB  
                   l1017 00AD                     l1009 008C                     l1041 00C2  
                   l1033 00BC                     l1019 00B4                     l1131 0097  
                   l1051 00C9                     l1043 00C3                     l1035 00BF  
                   l1061 00D1                     l1053 00CD                     l1045 00C6  
                   l1037 00C0                     l1029 00B7                     l1071 00DA  
                   l1063 00D2                     l1055 00CE                     l1047 00C7  
                   l1039 00C1                     l1081 00E7                     l1073 00DB  
                   l1065 00D5                     l1057 00CF                     l1049 00C8  
                   l1075 00DC                     l1067 00D8                     l1059 00D0  
                   l1091 0102                     l1083 00EE                     l1077 00DD  
                   l1069 00D9                     l1085 00F7                     l1093 0109  
                   l1079 00E4                     l1087 00FB                     l1095 010E  
                   l1089 00FD                     l1097 0117                     l1099 011B  
                   i1l64 0069                     i1l58 0041                     i1l59 0040  
                   u1_20 0127                     u1_21 0126                     u3_20 001C  
                   u3_21 001B                     u4_20 0026                     u4_21 0022  
                   u5_24 0029                     u6_20 002E                     u6_21 002D  
                   u7_20 003B                     u7_21 003A                     u8_20 003F  
                   u8_21 003E                     u9_20 0045                     u9_21 0044  
                   _dato 0077                     _main 0109                     _pot1 0079  
                   _pot2 0078                     btemp 007E                     start 000C  
                  ?_main 0070                    _ANSEL 0188                    i1l113 0130  
                  i1l116 0121                    i1l119 012A                    i1l741 0121  
                  i1l821 002E                    i1l813 0016                    i1l743 0127  
                  i1l831 0045                    i1l823 0033                    i1l815 001C  
                  i1l841 0066                    i1l833 004D                    i1l817 0029  
                  i1l825 0037                    i1l747 012C                    i1l835 0053  
                  i1l827 003B                    i1l819 002A                    i1l837 005A  
                  i1l829 003F                    i1l839 0060                    u10_20 0053  
                  u10_21 0052                    u11_20 0060                    u11_21 005F  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089          __end_of_readSPI 012B          __end_of_sendSPI 0131  
                  pclath 000A          __end_of_spiInit 0109                    status 0003  
                  wtemp0 007E        __end_of_ADCconfig 00B7          __initialization 000F  
           __end_of_main 0121                   ??_main 0077                   _ADRESH 001E  
                 _ANSELH 0189            ADCconfig@just 0074                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _config 00B7                ??_readSPI 0070                ??_sendSPI 0070  
                 saved_w 007E                ??_spiInit 0077  __end_of__initialization 0012  
         __pcstackCOMMON 0070            ?_interrupcion 0070           _OPTION_REGbits 0081  
         ??_interrupcion 0071               __pmaintext 0109               __pintentry 0004  
                ?_config 0070           ADCconfig@canal 0020                  _SSPSTAT 0094  
              _ADCconfig 0070          __size_of_config 0034                  __ptext1 00EB  
                __ptext2 00B7                  __ptext3 0070                  __ptext4 0016  
                __ptext5 012B                  __ptext6 0121                  _readSPI 0121  
                _sendSPI 012B                  _spiInit 00EB     end_of_initialization 0012  
             ?_ADCconfig 0074                _TRISAbits 0085     __end_of_interrupcion 0070  
         __end_of_config 00EB      start_initialization 000F              ??_ADCconfig 0075  
           sendSPI@valor 0070                 ??_config 0077              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020    __size_of_interrupcion 005A  
               ?_readSPI 0070                 ?_sendSPI 0070                 ?_spiInit 0074  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C             _interrupcion 0016  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_readSPI 000A  
       __size_of_sendSPI 0006         __size_of_spiInit 001E            __size_of_main 0018  
           spiInit@sType 0020        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
