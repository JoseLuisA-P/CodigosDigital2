

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 12:21:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0019                     _TXREG	set	25
   469  0018                     _RCSTAbits	set	24
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  000B                     _INTCONbits	set	11
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  001A                     _RCREG	set	26
   479  000C                     _PIR1bits	set	12
   480  0039                     _RC1	set	57
   481  0038                     _RC0	set	56
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  0087                     _TRISCbits	set	135
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008C                     _PIE1bits	set	140
   488  008F                     _OSCCONbits	set	143
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISC	set	135
   492  0086                     _TRISB	set	134
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_5:
   514  0806  3450               	retlw	80	;'P'
   515  0807  344F               	retlw	79	;'O'
   516  0808  3454               	retlw	84	;'T'
   517  0809  3431               	retlw	49	;'1'
   518  080A  3420               	retlw	32	;' '
   519  080B  3420               	retlw	32	;' '
   520  080C  3450               	retlw	80	;'P'
   521  080D  344F               	retlw	79	;'O'
   522  080E  3454               	retlw	84	;'T'
   523  080F  3432               	retlw	50	;'2'
   524  0810  3420               	retlw	32	;' '
   525  0811  3420               	retlw	32	;' '
   526  0812  3455               	retlw	85	;'U'
   527  0813  3441               	retlw	65	;'A'
   528  0814  3452               	retlw	82	;'R'
   529  0815  3454               	retlw	84	;'T'
   530  0816  3400               	retlw	0
   531  0817                     STR_1:
   532  0817  3450               	retlw	80	;'P'
   533  0818  344F               	retlw	79	;'O'
   534  0819  3454               	retlw	84	;'T'
   535  081A  3431               	retlw	49	;'1'
   536  081B  343A               	retlw	58	;':'
   537  081C  3420               	retlw	32	;' '
   538  081D  340D               	retlw	13
   539  081E  3400               	retlw	0
   540  081F                     STR_2:
   541  081F  3450               	retlw	80	;'P'
   542  0820  344F               	retlw	79	;'O'
   543  0821  3454               	retlw	84	;'T'
   544  0822  3432               	retlw	50	;'2'
   545  0823  343A               	retlw	58	;':'
   546  0824  3420               	retlw	32	;' '
   547  0825  340D               	retlw	13
   548  0826  3400               	retlw	0
   549  0827                     STR_3:
   550  0827  3455               	retlw	85	;'U'
   551  0828  3441               	retlw	65	;'A'
   552  0829  3452               	retlw	82	;'R'
   553  082A  3454               	retlw	84	;'T'
   554  082B  343A               	retlw	58	;':'
   555  082C  3420               	retlw	32	;' '
   556  082D  340D               	retlw	13
   557  082E  3400               	retlw	0
   558  082F                     STR_4:
   559  082F  340D               	retlw	13
   560  0830  340D               	retlw	13
   561  0831  340D               	retlw	13
   562  0832  340D               	retlw	13
   563  0833  340D               	retlw	13
   564  0834  3400               	retlw	0
   565  0835                     STR_6:
   566  0835  342E               	retlw	46	;'.'
   567  0836  3400               	retlw	0
   568  0833                     
   569                           	psect	cinit
   570  000F                     start_initialization:	
   571                           ; #config settings
   572                           
   573  000F                     __initialization:
   574                           
   575                           ; Clear objects allocated to COMMON
   576  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   577                           
   578                           ; Clear objects allocated to BANK0
   579  0010  1383               	bcf	3,7	;select IRP bank0
   580  0011  305E               	movlw	low __pbssBANK0
   581  0012  0084               	movwf	4
   582  0013  306F               	movlw	low (__pbssBANK0+17)
   583  0014  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   584                           
   585                           ; Clear objects allocated to BANK1
   586  0019  1683               	bsf	3,5	;RP0=1, select bank1
   587  001A  1303               	bcf	3,6	;RP1=0, select bank1
   588  001B  01A0               	clrf	__pbssBANK1& (0+127)
   589  001C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   590  001D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   591  001E                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594  001E                     __end_of__initialization:
   595  001E  0183               	clrf	3
   596  001F  120A  118A  2E13   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMMON
   599  007A                     __pbssCOMMON:
   600  007A                     _UARTdat:
   601  007A                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604  005E                     __pbssBANK0:
   605  005E                     _val2:
   606  005E                     	ds	4
   607  0062                     _val1:
   608  0062                     	ds	4
   609  0066                     _disp2:
   610  0066                     	ds	3
   611  0069                     _disp1:
   612  0069                     	ds	3
   613  006C                     _UARTval:
   614  006C                     	ds	1
   615  006D                     _pot2:
   616  006D                     	ds	1
   617  006E                     _pot1:
   618  006E                     	ds	1
   619                           
   620                           	psect	bssBANK1
   621  00A0                     __pbssBANK1:
   622  00A0                     _disp3:
   623  00A0                     	ds	3
   624                           
   625                           	psect	clrtext
   626  07F7                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  07F8                     clrloop0:
   632  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  07F9  0A84               	incf	4,f	;increment pointer
   634  07FA  0604               	xorwf	4,w	;XOR with final address
   635  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   636  07FC  3400               	retlw	0	;all done for this memory range, return
   637  07FD  0604               	xorwf	4,w	;XOR again to restore value
   638  07FE  2FF8               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackBANK1
   641  00A3                     __pcstackBANK1:
   642  00A3                     ??_main:
   643                           
   644                           ; 1 bytes @ 0x0
   645  00A3                     	ds	3
   646                           
   647                           	psect	cstackCOMMON
   648  0070                     __pcstackCOMMON:
   649  0070                     ?_configuracion:
   650  0070                     ?_initLCD:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_sendString:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_sendhex:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_LCDstring:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_dispCHAR:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_configUART:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_comandoLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_interrupcion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_interrupcion:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_main:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_send1dato:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685  0070                     	ds	3
   686  0073                     ??_dispCHAR:
   687  0073                     ??_configUART:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_ADCconfig:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??_comandoLCD:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ??_send1dato:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ?___bmul:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ?__Umul8_16:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ?___awdiv:	
   706                           ; 2 bytes @ 0x3
   707                           
   708  0073                     ?___xxtofl:	
   709                           ; 2 bytes @ 0x3
   710                           
   711  0073                     ADCconfig@just:	
   712                           ; 4 bytes @ 0x3
   713                           
   714  0073                     send1dato@dato:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ___bmul@multiplicand:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ___fladd@signs:	
   721                           ; 1 bytes @ 0x3
   722                           
   723  0073                     __Umul8_16@multiplicand:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ___awdiv@divisor:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ___xxtofl@val:	
   730                           ; 2 bytes @ 0x3
   731                           
   732                           
   733                           ; 4 bytes @ 0x3
   734  0073                     	ds	1
   735  0074                     ??_sendString:
   736  0074                     ??_ADCconfig:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     ??___bmul:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     dispCHAR@b:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ___fladd@aexp:	
   746                           ; 1 bytes @ 0x4
   747                           
   748                           
   749                           ; 1 bytes @ 0x4
   750  0074                     	ds	1
   751  0075                     ??_LCDstring:
   752  0075                     ??__Umul8_16:	
   753                           ; 1 bytes @ 0x5
   754                           
   755  0075                     sendString@mensaje:	
   756                           ; 1 bytes @ 0x5
   757                           
   758  0075                     comandoLCD@cmd:	
   759                           ; 1 bytes @ 0x5
   760                           
   761  0075                     ___bmul@product:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ___fladd@bexp:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     ___awdiv@dividend:	
   768                           ; 1 bytes @ 0x5
   769                           
   770                           
   771                           ; 2 bytes @ 0x5
   772  0075                     	ds	1
   773  0076                     ??_initLCD:
   774  0076                     ?_cursorLCD:	
   775                           ; 1 bytes @ 0x6
   776                           
   777  0076                     ADCconfig@canal:	
   778                           ; 1 bytes @ 0x6
   779                           
   780  0076                     cursorLCD@columna:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0076                     LCDstring@mensaje:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     ___bmul@multiplier:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ___fladd@grs:	
   790                           ; 1 bytes @ 0x6
   791                           
   792                           
   793                           ; 1 bytes @ 0x6
   794  0076                     	ds	1
   795  0077                     ??_configuracion:
   796  0077                     ??_cursorLCD:	
   797                           ; 1 bytes @ 0x7
   798                           
   799  0077                     ??___awdiv:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     ??___flsub:	
   803                           ; 1 bytes @ 0x7
   804                           
   805  0077                     CONVdec@lectura:	
   806                           ; 1 bytes @ 0x7
   807                           
   808  0077                     ___fltol@sign1:	
   809                           ; 1 bytes @ 0x7
   810                           
   811                           
   812                           ; 1 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ?_division:
   815  0078                     division@un:	
   816                           ; 1 bytes @ 0x8
   817                           
   818  0078                     divisiondecimal@conteo:	
   819                           ; 1 bytes @ 0x8
   820                           
   821  0078                     cursorLCD@fila:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0078                     ___fltol@exp1:	
   825                           ; 1 bytes @ 0x8
   826                           
   827                           
   828                           ; 1 bytes @ 0x8
   829  0078                     	ds	1
   830  0079                     division@dec:
   831  0079                     divisiondecimal@div:	
   832                           ; 1 bytes @ 0x9
   833                           
   834  0079                     cursorLCD@temp:	
   835                           ; 1 bytes @ 0x9
   836                           
   837                           
   838                           ; 1 bytes @ 0x9
   839  0079                     	ds	1
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:
   843  0020                     ??___xxtofl:
   844  0020                     ?___fladd:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ___awdiv@counter:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0020                     __Umul8_16@product:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___fladd@b:	
   854                           ; 2 bytes @ 0x0
   855                           
   856                           
   857                           ; 4 bytes @ 0x0
   858  0020                     	ds	1
   859  0021                     ___awdiv@sign:
   860                           
   861                           ; 1 bytes @ 0x1
   862  0021                     	ds	1
   863  0022                     ___awdiv@quotient:
   864  0022                     __Umul8_16@word_mpld:	
   865                           ; 2 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	2
   870  0024                     ??_division:
   871  0024                     ?_divisiondecimal:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0024                     divisiondecimal@un:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0024                     __Umul8_16@multiplier:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0024                     ___xxtofl@sign:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0024                     ___fladd@a:	
   884                           ; 1 bytes @ 0x4
   885                           
   886                           
   887                           ; 4 bytes @ 0x4
   888  0024                     	ds	1
   889  0025                     divisiondecimal@dec:
   890  0025                     ___xxtofl@exp:	
   891                           ; 1 bytes @ 0x5
   892                           
   893                           
   894                           ; 1 bytes @ 0x5
   895  0025                     	ds	1
   896  0026                     divisiondecimal@cent:
   897  0026                     ___xxtofl@arg:	
   898                           ; 1 bytes @ 0x6
   899                           
   900                           
   901                           ; 4 bytes @ 0x6
   902  0026                     	ds	1
   903  0027                     ??_divisiondecimal:
   904  0027                     division@conteo:	
   905                           ; 1 bytes @ 0x7
   906                           
   907                           
   908                           ; 1 bytes @ 0x7
   909  0027                     	ds	1
   910  0028                     ??___fladd:
   911  0028                     division@div:	
   912                           ; 1 bytes @ 0x8
   913                           
   914                           
   915                           ; 1 bytes @ 0x8
   916  0028                     	ds	2
   917  002A                     ??_sendhex:
   918  002A                     ?_hexTochar:	
   919                           ; 1 bytes @ 0xA
   920                           
   921  002A                     ?___flmul:	
   922                           ; 1 bytes @ 0xA
   923                           
   924  002A                     hexTochar@conv:	
   925                           ; 4 bytes @ 0xA
   926                           
   927  002A                     ___flmul@b:	
   928                           ; 1 bytes @ 0xA
   929                           
   930                           
   931                           ; 4 bytes @ 0xA
   932  002A                     	ds	1
   933  002B                     ??_hexTochar:
   934                           
   935                           ; 1 bytes @ 0xB
   936  002B                     	ds	2
   937  002D                     sendhex@valor:
   938                           
   939                           ; 1 bytes @ 0xD
   940  002D                     	ds	1
   941  002E                     sendhex@unidad:
   942  002E                     hexTochar@valor:	
   943                           ; 1 bytes @ 0xE
   944                           
   945  002E                     ___flmul@a:	
   946                           ; 1 bytes @ 0xE
   947                           
   948                           
   949                           ; 4 bytes @ 0xE
   950  002E                     	ds	1
   951  002F                     sendhex@centena:
   952  002F                     hexTochar@unidad:	
   953                           ; 1 bytes @ 0xF
   954                           
   955                           
   956                           ; 1 bytes @ 0xF
   957  002F                     	ds	1
   958  0030                     ?___flsub:
   959  0030                     sendhex@decena:	
   960                           ; 4 bytes @ 0x10
   961                           
   962  0030                     hexTochar@centena:	
   963                           ; 1 bytes @ 0x10
   964                           
   965  0030                     ___flsub@a:	
   966                           ; 1 bytes @ 0x10
   967                           
   968                           
   969                           ; 4 bytes @ 0x10
   970  0030                     	ds	1
   971  0031                     hexTochar@decena:
   972                           
   973                           ; 1 bytes @ 0x11
   974  0031                     	ds	1
   975  0032                     ??___flmul:
   976                           
   977                           ; 1 bytes @ 0x12
   978  0032                     	ds	2
   979  0034                     ___flsub@b:
   980                           
   981                           ; 4 bytes @ 0x14
   982  0034                     	ds	3
   983  0037                     ___flmul@sign:
   984                           
   985                           ; 1 bytes @ 0x17
   986  0037                     	ds	1
   987  0038                     ___flmul@aexp:
   988                           
   989                           ; 1 bytes @ 0x18
   990  0038                     	ds	1
   991  0039                     ___flmul@grs:
   992                           
   993                           ; 4 bytes @ 0x19
   994  0039                     	ds	4
   995  003D                     ___flmul@bexp:
   996                           
   997                           ; 1 bytes @ 0x1D
   998  003D                     	ds	1
   999  003E                     ___flmul@prod:
  1000                           
  1001                           ; 4 bytes @ 0x1E
  1002  003E                     	ds	4
  1003  0042                     ___flmul@temp:
  1004                           
  1005                           ; 2 bytes @ 0x22
  1006  0042                     	ds	2
  1007  0044                     ?_CONVdec:
  1008  0044                     ?___fltol:	
  1009                           ; 1 bytes @ 0x24
  1010                           
  1011  0044                     CONVdec@equiv:	
  1012                           ; 4 bytes @ 0x24
  1013                           
  1014  0044                     ___fltol@f1:	
  1015                           ; 1 bytes @ 0x24
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x24
  1019  0044                     	ds	1
  1020  0045                     ??_CONVdec:
  1021                           
  1022                           ; 1 bytes @ 0x25
  1023  0045                     	ds	3
  1024  0048                     ??___fltol:
  1025                           
  1026                           ; 1 bytes @ 0x28
  1027  0048                     	ds	5
  1028  004D                     ?_sendfloat:
  1029  004D                     ?_floTochar:	
  1030                           ; 1 bytes @ 0x2D
  1031                           
  1032  004D                     sendfloat@valor:	
  1033                           ; 1 bytes @ 0x2D
  1034                           
  1035  004D                     floTochar@valor:	
  1036                           ; 4 bytes @ 0x2D
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x2D
  1040  004D                     	ds	4
  1041  0051                     ??_sendfloat:
  1042  0051                     floTochar@conv:	
  1043                           ; 1 bytes @ 0x31
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x31
  1047  0051                     	ds	1
  1048  0052                     ??_floTochar:
  1049                           
  1050                           ; 1 bytes @ 0x32
  1051  0052                     	ds	3
  1052  0055                     sendfloat@temp:
  1053                           
  1054                           ; 4 bytes @ 0x35
  1055  0055                     	ds	1
  1056  0056                     floTochar@temp:
  1057                           
  1058                           ; 4 bytes @ 0x36
  1059  0056                     	ds	3
  1060  0059                     sendfloat@decimal:
  1061                           
  1062                           ; 1 bytes @ 0x39
  1063  0059                     	ds	1
  1064  005A                     sendfloat@entero:
  1065  005A                     floTochar@decimal:	
  1066                           ; 1 bytes @ 0x3A
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x3A
  1070  005A                     	ds	1
  1071  005B                     sendfloat@digdecimal:
  1072  005B                     floTochar@entero:	
  1073                           ; 1 bytes @ 0x3B
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x3B
  1077  005B                     	ds	1
  1078  005C                     floTochar@digdecimal:
  1079                           
  1080                           ; 2 bytes @ 0x3C
  1081  005C                     	ds	2
  1082                           
  1083                           	psect	maintext
  1084  0613                     __pmaintext:	
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 77 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : B00/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       3       0       0
  1107 ;;      Totals:         0       0       3       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_CONVdec
  1112 ;;		_LCDstring
  1113 ;;		_configuracion
  1114 ;;		_cursorLCD
  1115 ;;		_dispCHAR
  1116 ;;		_floTochar
  1117 ;;		_hexTochar
  1118 ;;		_initLCD
  1119 ;;		_sendString
  1120 ;;		_sendfloat
  1121 ;;		_sendhex
  1122 ;; This function is called by:
  1123 ;;		Startup code after reset
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _main
  1129  0613                     _main:
  1130  0613                     l3042:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1133                           
  1134                           
  1135                           ;main.c: 78:     configuracion();
  1136  0613  120A  158A  23AB  120A  118A  	fcall	_configuracion
  1137  0618                     l3044:
  1138                           
  1139                           ;main.c: 79:     initLCD();
  1140  0618  120A  158A  24AF  120A  118A  	fcall	_initLCD
  1141  061D                     l3046:
  1142                           
  1143                           ;main.c: 81:         sendString("POT1: \r");
  1144  061D  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145  061E  120A  158A  22BC  120A  118A  	fcall	_sendString
  1146  0623                     l3048:
  1147                           
  1148                           ;main.c: 82:         CONVdec(&pot1,&val1);
  1149  0623  3062               	movlw	(low (_val1| 0))& (0+255)
  1150  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0626  00A3               	movwf	??_main^(0+128)
  1153  0627  0823               	movf	??_main^(0+128),w
  1154  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1156  062A  00C4               	movwf	CONVdec@equiv
  1157  062B  306E               	movlw	(low (_pot1| 0))& (0+255)
  1158  062C  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1159  0631                     l3050:
  1160                           
  1161                           ;main.c: 83:         sendfloat(val1);
  1162  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0633  0865               	movf	_val1+3,w
  1165  0634  00D0               	movwf	sendfloat@valor+3
  1166  0635  0864               	movf	_val1+2,w
  1167  0636  00CF               	movwf	sendfloat@valor+2
  1168  0637  0863               	movf	_val1+1,w
  1169  0638  00CE               	movwf	sendfloat@valor+1
  1170  0639  0862               	movf	_val1,w
  1171  063A  00CD               	movwf	sendfloat@valor
  1172  063B  120A  118A  274E  120A  118A  	fcall	_sendfloat
  1173  0640                     l3052:
  1174                           
  1175                           ;main.c: 84:         sendString("POT2: \r");
  1176  0640  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1177  0641  120A  158A  22BC  120A  118A  	fcall	_sendString
  1178  0646                     l3054:
  1179                           
  1180                           ;main.c: 85:         CONVdec(&pot2,&val2);
  1181  0646  305E               	movlw	(low (_val2| 0))& (0+255)
  1182  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0649  00A3               	movwf	??_main^(0+128)
  1185  064A  0823               	movf	??_main^(0+128),w
  1186  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1187  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1188  064D  00C4               	movwf	CONVdec@equiv
  1189  064E  306D               	movlw	(low (_pot2| 0))& (0+255)
  1190  064F  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1191  0654                     l3056:
  1192                           
  1193                           ;main.c: 86:         sendfloat(val2);
  1194  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0656  0861               	movf	_val2+3,w
  1197  0657  00D0               	movwf	sendfloat@valor+3
  1198  0658  0860               	movf	_val2+2,w
  1199  0659  00CF               	movwf	sendfloat@valor+2
  1200  065A  085F               	movf	_val2+1,w
  1201  065B  00CE               	movwf	sendfloat@valor+1
  1202  065C  085E               	movf	_val2,w
  1203  065D  00CD               	movwf	sendfloat@valor
  1204  065E  120A  118A  274E  120A  118A  	fcall	_sendfloat
  1205  0663                     l3058:
  1206                           
  1207                           ;main.c: 87:         sendString("UART: \r");
  1208  0663  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1209  0664  120A  158A  22BC  120A  118A  	fcall	_sendString
  1210  0669                     l3060:
  1211                           
  1212                           ;main.c: 88:         sendhex(&UARTval);
  1213  0669  306C               	movlw	(low (_UARTval| 0))& (0+255)
  1214  066A  120A  158A  2377  120A  118A  	fcall	_sendhex
  1215  066F                     l3062:
  1216                           
  1217                           ;main.c: 89:         sendString("\r\r\r\r\r");
  1218  066F  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1219  0670  120A  158A  22BC  120A  118A  	fcall	_sendString
  1220  0675                     l3064:
  1221                           
  1222                           ;main.c: 90:         floTochar(val1,&disp1);
  1223  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0677  0865               	movf	_val1+3,w
  1226  0678  00D0               	movwf	floTochar@valor+3
  1227  0679  0864               	movf	_val1+2,w
  1228  067A  00CF               	movwf	floTochar@valor+2
  1229  067B  0863               	movf	_val1+1,w
  1230  067C  00CE               	movwf	floTochar@valor+1
  1231  067D  0862               	movf	_val1,w
  1232  067E  00CD               	movwf	floTochar@valor
  1233  067F  3069               	movlw	(low (_disp1| 0))& (0+255)
  1234  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0682  00A3               	movwf	??_main^(0+128)
  1237  0683  0823               	movf	??_main^(0+128),w
  1238  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0686  00D1               	movwf	floTochar@conv
  1241  0687  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1242  068C                     l3066:
  1243                           
  1244                           ;main.c: 91:         floTochar(val2,&disp2);
  1245  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1246  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1247  068E  0861               	movf	_val2+3,w
  1248  068F  00D0               	movwf	floTochar@valor+3
  1249  0690  0860               	movf	_val2+2,w
  1250  0691  00CF               	movwf	floTochar@valor+2
  1251  0692  085F               	movf	_val2+1,w
  1252  0693  00CE               	movwf	floTochar@valor+1
  1253  0694  085E               	movf	_val2,w
  1254  0695  00CD               	movwf	floTochar@valor
  1255  0696  3066               	movlw	(low (_disp2| 0))& (0+255)
  1256  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0699  00A3               	movwf	??_main^(0+128)
  1259  069A  0823               	movf	??_main^(0+128),w
  1260  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1261  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1262  069D  00D1               	movwf	floTochar@conv
  1263  069E  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1264  06A3                     l3068:
  1265                           
  1266                           ;main.c: 92:         hexTochar(UARTval,&disp3);
  1267  06A3  30A0               	movlw	(low (_disp3| 0))& (0+255)
  1268  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1269  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1270  06A6  00A3               	movwf	??_main^(0+128)
  1271  06A7  0823               	movf	??_main^(0+128),w
  1272  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1273  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1274  06AA  00AA               	movwf	hexTochar@conv
  1275  06AB  086C               	movf	_UARTval,w
  1276  06AC  120A  158A  234B  120A  118A  	fcall	_hexTochar
  1277  06B1                     l3070:
  1278                           
  1279                           ;main.c: 93:         cursorLCD(1,1);
  1280  06B1  01F6               	clrf	cursorLCD@columna
  1281  06B2  0AF6               	incf	cursorLCD@columna,f
  1282  06B3  3001               	movlw	1
  1283  06B4  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1284                           
  1285                           ;main.c: 94:         LCDstring("POT1  POT2  UART");
  1286  06B9  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1287  06BA  120A  158A  229D  120A  118A  	fcall	_LCDstring
  1288  06BF                     l3072:
  1289                           
  1290                           ;main.c: 95:         cursorLCD(2,1);
  1291  06BF  01F6               	clrf	cursorLCD@columna
  1292  06C0  0AF6               	incf	cursorLCD@columna,f
  1293  06C1  3002               	movlw	2
  1294  06C2  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1295  06C7                     l3074:
  1296                           
  1297                           ;main.c: 96:         dispCHAR(disp1[0]+48);
  1298  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1299  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1300  06C9  0869               	movf	_disp1,w
  1301  06CA  3E30               	addlw	48
  1302  06CB  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1303  06D0                     l3076:
  1304                           
  1305                           ;main.c: 97:         dispCHAR('.');
  1306  06D0  302E               	movlw	46
  1307  06D1  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1308  06D6                     l3078:
  1309                           
  1310                           ;main.c: 98:         dispCHAR(disp1[1]+48);
  1311  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1312  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1313  06D8  086A               	movf	_disp1+1,w
  1314  06D9  3E30               	addlw	48
  1315  06DA  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1316  06DF                     l3080:
  1317                           
  1318                           ;main.c: 99:         dispCHAR(disp1[2]+48);
  1319  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1320  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1321  06E1  086B               	movf	_disp1+2,w
  1322  06E2  3E30               	addlw	48
  1323  06E3  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1324  06E8                     l3082:
  1325                           
  1326                           ;main.c: 100:         cursorLCD(2,7);
  1327  06E8  3007               	movlw	7
  1328  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1329  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1330  06EB  00A3               	movwf	??_main^(0+128)
  1331  06EC  0823               	movf	??_main^(0+128),w
  1332  06ED  00F6               	movwf	cursorLCD@columna
  1333  06EE  3002               	movlw	2
  1334  06EF  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1335  06F4                     l3084:
  1336                           
  1337                           ;main.c: 101:         dispCHAR(disp2[0]+48);
  1338  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1339  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1340  06F6  0866               	movf	_disp2,w
  1341  06F7  3E30               	addlw	48
  1342  06F8  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1343  06FD                     l3086:
  1344                           
  1345                           ;main.c: 102:         dispCHAR('.');
  1346  06FD  302E               	movlw	46
  1347  06FE  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1348  0703                     l3088:
  1349                           
  1350                           ;main.c: 103:         dispCHAR(disp2[1]+48);
  1351  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0705  0867               	movf	_disp2+1,w
  1354  0706  3E30               	addlw	48
  1355  0707  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1356  070C                     l3090:
  1357                           
  1358                           ;main.c: 104:         dispCHAR(disp2[2]+48);
  1359  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1360  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1361  070E  0868               	movf	_disp2+2,w
  1362  070F  3E30               	addlw	48
  1363  0710  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1364  0715                     l3092:
  1365                           
  1366                           ;main.c: 105:         cursorLCD(2,13);
  1367  0715  300D               	movlw	13
  1368  0716  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0717  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0718  00A3               	movwf	??_main^(0+128)
  1371  0719  0823               	movf	??_main^(0+128),w
  1372  071A  00F6               	movwf	cursorLCD@columna
  1373  071B  3002               	movlw	2
  1374  071C  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1375  0721                     l3094:
  1376                           
  1377                           ;main.c: 106:         dispCHAR(disp3[2]+48);
  1378  0721  1683               	bsf	3,5	;RP0=1, select bank1
  1379  0722  1303               	bcf	3,6	;RP1=0, select bank1
  1380  0723  0822               	movf	(_disp3^(0+128)+2),w
  1381  0724  3E30               	addlw	48
  1382  0725  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1383  072A                     l3096:
  1384                           
  1385                           ;main.c: 107:         dispCHAR(disp3[1]+48);
  1386  072A  1683               	bsf	3,5	;RP0=1, select bank1
  1387  072B  1303               	bcf	3,6	;RP1=0, select bank1
  1388  072C  0821               	movf	(_disp3^(0+128)+1),w
  1389  072D  3E30               	addlw	48
  1390  072E  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1391  0733                     l3098:
  1392                           
  1393                           ;main.c: 108:         dispCHAR(disp3[0]+48);
  1394  0733  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0734  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0735  0820               	movf	_disp3^(0+128),w
  1397  0736  3E30               	addlw	48
  1398  0737  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1399  073C                     l3100:
  1400                           
  1401                           ;main.c: 109:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1402  073C  3006               	movlw	6
  1403  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1404  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1405  073F  00A5               	movwf	(??_main^(0+128)+2)
  1406  0740  3013               	movlw	19
  1407  0741  00A4               	movwf	(??_main^(0+128)+1)
  1408  0742  30AD               	movlw	173
  1409  0743  00A3               	movwf	??_main^(0+128)
  1410  0744                     u4057:
  1411  0744  0BA3               	decfsz	??_main^(0+128),f
  1412  0745  2F44               	goto	u4057
  1413  0746  0BA4               	decfsz	(??_main^(0+128)+1),f
  1414  0747  2F44               	goto	u4057
  1415  0748  0BA5               	decfsz	(??_main^(0+128)+2),f
  1416  0749  2F44               	goto	u4057
  1417  074A  2E1D               	goto	l3046
  1418  074B  120A  118A  280C   	ljmp	start
  1419  074E                     __end_of_main:
  1420                           
  1421                           	psect	text1
  1422  0B77                     __ptext1:	
  1423 ;; *************** function _sendhex *****************
  1424 ;; Defined at:
  1425 ;;		line 81 in file "ComSerial.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  valor           1    wreg     PTR unsigned char 
  1428 ;;		 -> UARTval(1), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  valor           1   13[BANK0 ] PTR unsigned char 
  1431 ;;		 -> UARTval(1), 
  1432 ;;  decena          1   16[BANK0 ] unsigned char 
  1433 ;;  centena         1   15[BANK0 ] unsigned char 
  1434 ;;  unidad          1   14[BANK0 ] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       0       0       0
  1445 ;;      Locals:         0       4       0       0       0
  1446 ;;      Temps:          0       3       0       0       0
  1447 ;;      Totals:         0       7       0       0       0
  1448 ;;Total ram usage:        7 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		_divisiondecimal
  1453 ;;		_send1dato
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _sendhex
  1461  0B77                     _sendhex:
  1462                           
  1463                           ;incstack = 0
  1464                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1465                           ;sendhex@valor stored from wreg
  1466  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0B79  00AD               	movwf	sendhex@valor
  1469  0B7A                     l3014:
  1470                           
  1471                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(*valor,&unidad,&decena,&ce
      +                          ntena);
  1472  0B7A  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
  1473  0B7B  00AA               	movwf	??_sendhex
  1474  0B7C  082A               	movf	??_sendhex,w
  1475  0B7D  00A4               	movwf	divisiondecimal@un
  1476  0B7E  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
  1477  0B7F  00AB               	movwf	??_sendhex+1
  1478  0B80  082B               	movf	??_sendhex+1,w
  1479  0B81  00A5               	movwf	divisiondecimal@dec
  1480  0B82  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
  1481  0B83  00AC               	movwf	??_sendhex+2
  1482  0B84  082C               	movf	??_sendhex+2,w
  1483  0B85  00A6               	movwf	divisiondecimal@cent
  1484  0B86  082D               	movf	sendhex@valor,w
  1485  0B87  0084               	movwf	4
  1486  0B88  1383               	bcf	3,7	;select IRP bank0
  1487  0B89  0800               	movf	0,w
  1488  0B8A  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  1489  0B8F                     l3016:
  1490                           
  1491                           ;ComSerial.c: 87:     send1dato(centena +48);
  1492  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0B91  082F               	movf	sendhex@centena,w
  1495  0B92  3E30               	addlw	48
  1496  0B93  120A  158A  2246  120A  158A  	fcall	_send1dato
  1497  0B98                     l3018:
  1498                           
  1499                           ;ComSerial.c: 88:     send1dato(decena +48);
  1500  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0B9A  0830               	movf	sendhex@decena,w
  1503  0B9B  3E30               	addlw	48
  1504  0B9C  120A  158A  2246  120A  158A  	fcall	_send1dato
  1505  0BA1                     l3020:
  1506                           
  1507                           ;ComSerial.c: 89:     send1dato(unidad +48);
  1508  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0BA3  082E               	movf	sendhex@unidad,w
  1511  0BA4  3E30               	addlw	48
  1512  0BA5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1513  0BAA                     l169:
  1514  0BAA  0008               	return
  1515  0BAB                     __end_of_sendhex:
  1516                           
  1517                           	psect	text2
  1518  074E                     __ptext2:	
  1519 ;; *************** function _sendfloat *****************
  1520 ;; Defined at:
  1521 ;;		line 39 in file "ComSerial.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  valor           4   45[BANK0 ] const float 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  temp            4   53[BANK0 ] float 
  1526 ;;  digdecimal      1   59[BANK0 ] unsigned char [1]
  1527 ;;  entero          1   58[BANK0 ] unsigned char 
  1528 ;;  decimal         1   57[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       4       0       0       0
  1539 ;;      Locals:         0       7       0       0       0
  1540 ;;      Temps:          0       4       0       0       0
  1541 ;;      Totals:         0      15       0       0       0
  1542 ;;Total ram usage:       15 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    3
  1545 ;; This function calls:
  1546 ;;		___flmul
  1547 ;;		___flsub
  1548 ;;		___fltol
  1549 ;;		___xxtofl
  1550 ;;		_division
  1551 ;;		_send1dato
  1552 ;;		_sendString
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _sendfloat
  1560  074E                     _sendfloat:
  1561  074E                     l3000:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _sendfloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1564                           
  1565                           
  1566                           ;ComSerial.c: 40:     uint8_t entero;;ComSerial.c: 41:     uint8_t decimal;;ComSerial.c:
      +                           42:     float temp;;ComSerial.c: 43:     unsigned char digdecimal[1];;ComSerial.c: 49: 
      +                              entero = valor;
  1567  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1568  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0750  0850               	movf	sendfloat@valor+3,w
  1570  0751  00C7               	movwf	___fltol@f1+3
  1571  0752  084F               	movf	sendfloat@valor+2,w
  1572  0753  00C6               	movwf	___fltol@f1+2
  1573  0754  084E               	movf	sendfloat@valor+1,w
  1574  0755  00C5               	movwf	___fltol@f1+1
  1575  0756  084D               	movf	sendfloat@valor,w
  1576  0757  00C4               	movwf	___fltol@f1
  1577  0758  120A  158A  25AF  120A  118A  	fcall	___fltol
  1578  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1579  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1580  075F  0844               	movf	?___fltol,w
  1581  0760  00D1               	movwf	??_sendfloat
  1582  0761  0851               	movf	??_sendfloat,w
  1583  0762  00DA               	movwf	sendfloat@entero
  1584  0763                     l3002:
  1585                           
  1586                           ;ComSerial.c: 50:     temp = valor-(float)entero;
  1587  0763  085A               	movf	sendfloat@entero,w
  1588  0764  00D1               	movwf	??_sendfloat
  1589  0765  01D2               	clrf	??_sendfloat+1
  1590  0766  01D3               	clrf	??_sendfloat+2
  1591  0767  01D4               	clrf	??_sendfloat+3
  1592  0768  0854               	movf	??_sendfloat+3,w
  1593  0769  00F6               	movwf	___xxtofl@val+3
  1594  076A  0853               	movf	??_sendfloat+2,w
  1595  076B  00F5               	movwf	___xxtofl@val+2
  1596  076C  0852               	movf	??_sendfloat+1,w
  1597  076D  00F4               	movwf	___xxtofl@val+1
  1598  076E  0851               	movf	??_sendfloat,w
  1599  076F  00F3               	movwf	___xxtofl@val
  1600  0770  3000               	movlw	0
  1601  0771  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1602  0776  0876               	movf	?___xxtofl+3,w
  1603  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0779  00B3               	movwf	___flsub@a+3
  1606  077A  0875               	movf	?___xxtofl+2,w
  1607  077B  00B2               	movwf	___flsub@a+2
  1608  077C  0874               	movf	?___xxtofl+1,w
  1609  077D  00B1               	movwf	___flsub@a+1
  1610  077E  0873               	movf	?___xxtofl,w
  1611  077F  00B0               	movwf	___flsub@a
  1612  0780  0850               	movf	sendfloat@valor+3,w
  1613  0781  00B7               	movwf	___flsub@b+3
  1614  0782  084F               	movf	sendfloat@valor+2,w
  1615  0783  00B6               	movwf	___flsub@b+2
  1616  0784  084E               	movf	sendfloat@valor+1,w
  1617  0785  00B5               	movwf	___flsub@b+1
  1618  0786  084D               	movf	sendfloat@valor,w
  1619  0787  00B4               	movwf	___flsub@b
  1620  0788  120A  158A  22FE  120A  118A  	fcall	___flsub
  1621  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1622  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1623  078F  0833               	movf	?___flsub+3,w
  1624  0790  00D8               	movwf	sendfloat@temp+3
  1625  0791  0832               	movf	?___flsub+2,w
  1626  0792  00D7               	movwf	sendfloat@temp+2
  1627  0793  0831               	movf	?___flsub+1,w
  1628  0794  00D6               	movwf	sendfloat@temp+1
  1629  0795  0830               	movf	?___flsub,w
  1630  0796  00D5               	movwf	sendfloat@temp
  1631  0797                     l3004:
  1632                           
  1633                           ;ComSerial.c: 51:     decimal = (temp*100);
  1634  0797  0858               	movf	sendfloat@temp+3,w
  1635  0798  00B1               	movwf	___flmul@a+3
  1636  0799  0857               	movf	sendfloat@temp+2,w
  1637  079A  00B0               	movwf	___flmul@a+2
  1638  079B  0856               	movf	sendfloat@temp+1,w
  1639  079C  00AF               	movwf	___flmul@a+1
  1640  079D  0855               	movf	sendfloat@temp,w
  1641  079E  00AE               	movwf	___flmul@a
  1642  079F  3042               	movlw	66
  1643  07A0  00AD               	movwf	___flmul@b+3
  1644  07A1  30C8               	movlw	200
  1645  07A2  00AC               	movwf	___flmul@b+2
  1646  07A3  3000               	movlw	0
  1647  07A4  00AB               	movwf	___flmul@b+1
  1648  07A5  3000               	movlw	0
  1649  07A6  00AA               	movwf	___flmul@b
  1650  07A7  120A  118A  2022  120A  118A  	fcall	___flmul
  1651  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1652  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1653  07AE  082D               	movf	?___flmul+3,w
  1654  07AF  00C7               	movwf	___fltol@f1+3
  1655  07B0  082C               	movf	?___flmul+2,w
  1656  07B1  00C6               	movwf	___fltol@f1+2
  1657  07B2  082B               	movf	?___flmul+1,w
  1658  07B3  00C5               	movwf	___fltol@f1+1
  1659  07B4  082A               	movf	?___flmul,w
  1660  07B5  00C4               	movwf	___fltol@f1
  1661  07B6  120A  158A  25AF  120A  118A  	fcall	___fltol
  1662  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1663  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1664  07BD  0844               	movf	?___fltol,w
  1665  07BE  00D1               	movwf	??_sendfloat
  1666  07BF  0851               	movf	??_sendfloat,w
  1667  07C0  00D9               	movwf	sendfloat@decimal
  1668  07C1                     l3006:
  1669                           
  1670                           ;ComSerial.c: 52:     division(decimal,&digdecimal[0],&digdecimal[1]);
  1671  07C1  305B               	movlw	(low (sendfloat@digdecimal| 0))& (0+255)
  1672  07C2  00D1               	movwf	??_sendfloat
  1673  07C3  0851               	movf	??_sendfloat,w
  1674  07C4  00F8               	movwf	division@un
  1675  07C5  305C               	movlw	(low ((sendfloat@digdecimal| 0+1)))& (0+255)
  1676  07C6  00D2               	movwf	??_sendfloat+1
  1677  07C7  0852               	movf	??_sendfloat+1,w
  1678  07C8  00F9               	movwf	division@dec
  1679  07C9  0859               	movf	sendfloat@decimal,w
  1680  07CA  120A  158A  2467  120A  118A  	fcall	_division
  1681  07CF                     l3008:
  1682                           
  1683                           ;ComSerial.c: 53:     send1dato(entero+48);
  1684  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1685  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1686  07D1  085A               	movf	sendfloat@entero,w
  1687  07D2  3E30               	addlw	48
  1688  07D3  120A  158A  2246  120A  118A  	fcall	_send1dato
  1689                           
  1690                           ;ComSerial.c: 54:     sendString(".");
  1691  07D8  3030               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1692  07D9  120A  158A  22BC  120A  118A  	fcall	_sendString
  1693  07DE                     l3010:
  1694                           
  1695                           ;ComSerial.c: 55:     send1dato(digdecimal[1]+48);
  1696  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1697  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1698  07E0  085C               	movf	sendfloat@digdecimal+1,w
  1699  07E1  3E30               	addlw	48
  1700  07E2  120A  158A  2246  120A  118A  	fcall	_send1dato
  1701  07E7                     l3012:
  1702                           
  1703                           ;ComSerial.c: 56:     send1dato(digdecimal[0]+48);
  1704  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1705  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1706  07E9  085B               	movf	sendfloat@digdecimal,w
  1707  07EA  3E30               	addlw	48
  1708  07EB  120A  158A  2246  120A  118A  	fcall	_send1dato
  1709                           
  1710                           ;ComSerial.c: 57:     sendString("\r");
  1711  07F0  302E               	movlw	(low (((STR_4+4)-__stringbase)| (0+32768)))& (0+255)
  1712  07F1  120A  158A  22BC  120A  118A  	fcall	_sendString
  1713  07F6                     l163:
  1714  07F6  0008               	return
  1715  07F7                     __end_of_sendfloat:
  1716                           
  1717                           	psect	text3
  1718  0ABC                     __ptext3:	
  1719 ;; *************** function _sendString *****************
  1720 ;; Defined at:
  1721 ;;		line 31 in file "ComSerial.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  mensaje         1    wreg     PTR unsigned char 
  1724 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1725 ;;		 -> STR_2(8), STR_1(8), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  mensaje         1    5[COMMON] PTR unsigned char 
  1728 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1729 ;;		 -> STR_2(8), STR_1(8), 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         1       0       0       0       0
  1741 ;;      Temps:          1       0       0       0       0
  1742 ;;      Totals:         2       0       0       0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    2
  1746 ;; This function calls:
  1747 ;;		_send1dato
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;;		_sendfloat
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _sendString
  1756  0ABC                     _sendString:
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1760                           ;sendString@mensaje stored from wreg
  1761  0ABC  00F5               	movwf	sendString@mensaje
  1762  0ABD                     l1914:
  1763                           
  1764                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1765  0ABD  2ACE               	goto	l1920
  1766  0ABE                     l1916:
  1767                           
  1768                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1769  0ABE  0875               	movf	sendString@mensaje,w
  1770  0ABF  0084               	movwf	4
  1771  0AC0  120A  158A  2000  120A  158A  	fcall	stringdir
  1772  0AC5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1773  0ACA                     l1918:
  1774                           
  1775                           ;ComSerial.c: 34:         mensaje ++;
  1776  0ACA  3001               	movlw	1
  1777  0ACB  00F4               	movwf	??_sendString
  1778  0ACC  0874               	movf	??_sendString,w
  1779  0ACD  07F5               	addwf	sendString@mensaje,f
  1780  0ACE                     l1920:
  1781                           
  1782                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1783  0ACE  0875               	movf	sendString@mensaje,w
  1784  0ACF  0084               	movwf	4
  1785  0AD0  120A  158A  2000  120A  158A  	fcall	stringdir
  1786  0AD5  3A00               	xorlw	0
  1787  0AD6  1D03               	skipz
  1788  0AD7  2AD9               	goto	u2031
  1789  0AD8  2ADA               	goto	u2030
  1790  0AD9                     u2031:
  1791  0AD9  2ABE               	goto	l1916
  1792  0ADA                     u2030:
  1793  0ADA                     l160:
  1794  0ADA  0008               	return
  1795  0ADB                     __end_of_sendString:
  1796                           
  1797                           	psect	text4
  1798  0A46                     __ptext4:	
  1799 ;; *************** function _send1dato *****************
  1800 ;; Defined at:
  1801 ;;		line 26 in file "ComSerial.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  dato            1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  dato            1    3[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         1       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         1       0       0       0       0
  1819 ;;Total ram usage:        1 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_sendString
  1826 ;;		_sendfloat
  1827 ;;		_sendhex
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _send1dato
  1833  0A46                     _send1dato:
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _send1dato: [wreg]
  1837                           ;send1dato@dato stored from wreg
  1838  0A46  00F3               	movwf	send1dato@dato
  1839  0A47                     l1646:
  1840                           
  1841                           ;ComSerial.c: 27:     TXREG = dato;
  1842  0A47  0873               	movf	send1dato@dato,w
  1843  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0A4A  0099               	movwf	25	;volatile
  1846  0A4B                     l151:	
  1847                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1848                           
  1849  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  1850  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  1851  0A4D  1C98               	btfss	24,1	;volatile
  1852  0A4E  2A50               	goto	u1411
  1853  0A4F  2A51               	goto	u1410
  1854  0A50                     u1411:
  1855  0A50  2A4B               	goto	l151
  1856  0A51                     u1410:
  1857  0A51                     l154:
  1858  0A51  0008               	return
  1859  0A52                     __end_of_send1dato:
  1860                           
  1861                           	psect	text5
  1862  0CAF                     __ptext5:	
  1863 ;; *************** function _initLCD *****************
  1864 ;; Defined at:
  1865 ;;		line 20 in file "LCDD2.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          2       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    2
  1886 ;; This function calls:
  1887 ;;		_comandoLCD
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function _initLCD
  1895  0CAF                     _initLCD:
  1896  0CAF                     l2276:	
  1897                           ;incstack = 0
  1898                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1899                           
  1900                           
  1901                           ;LCDD2.c: 21:     RC0 = 0;
  1902  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0CB1  1007               	bcf	7,0	;volatile
  1905  0CB2                     l2278:
  1906                           
  1907                           ;LCDD2.c: 22:     PORTD = 0X00;
  1908  0CB2  0188               	clrf	8	;volatile
  1909  0CB3                     l2280:
  1910                           
  1911                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1912  0CB3  3082               	movlw	130
  1913  0CB4  00F7               	movwf	??_initLCD+1
  1914  0CB5  30DD               	movlw	221
  1915  0CB6  00F6               	movwf	??_initLCD
  1916  0CB7                     u4067:
  1917  0CB7  0BF6               	decfsz	??_initLCD,f
  1918  0CB8  2CB7               	goto	u4067
  1919  0CB9  0BF7               	decfsz	??_initLCD+1,f
  1920  0CBA  2CB7               	goto	u4067
  1921  0CBB  2CBC               	nop2
  1922  0CBC                     l2282:
  1923                           
  1924                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1925  0CBC  3030               	movlw	48
  1926  0CBD  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1927  0CC2                     l2284:
  1928                           
  1929                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1930  0CC2  300D               	movlw	13
  1931  0CC3  00F7               	movwf	??_initLCD+1
  1932  0CC4  30FB               	movlw	251
  1933  0CC5  00F6               	movwf	??_initLCD
  1934  0CC6                     u4077:
  1935  0CC6  0BF6               	decfsz	??_initLCD,f
  1936  0CC7  2CC6               	goto	u4077
  1937  0CC8  0BF7               	decfsz	??_initLCD+1,f
  1938  0CC9  2CC6               	goto	u4077
  1939  0CCA  2CCB               	nop2
  1940  0CCB                     l2286:
  1941                           
  1942                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1943  0CCB  3030               	movlw	48
  1944  0CCC  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1945  0CD1                     l2288:
  1946                           
  1947                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1948  0CD1  300D               	movlw	13
  1949  0CD2  00F7               	movwf	??_initLCD+1
  1950  0CD3  30FB               	movlw	251
  1951  0CD4  00F6               	movwf	??_initLCD
  1952  0CD5                     u4087:
  1953  0CD5  0BF6               	decfsz	??_initLCD,f
  1954  0CD6  2CD5               	goto	u4087
  1955  0CD7  0BF7               	decfsz	??_initLCD+1,f
  1956  0CD8  2CD5               	goto	u4087
  1957  0CD9  2CDA               	nop2
  1958  0CDA                     l2290:
  1959                           
  1960                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1961  0CDA  3030               	movlw	48
  1962  0CDB  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1963  0CE0                     l2292:
  1964                           
  1965                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1966  0CE0  3038               	movlw	56
  1967  0CE1  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1968  0CE6                     l2294:
  1969                           
  1970                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1971  0CE6  3006               	movlw	6
  1972  0CE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1973  0CEC                     l2296:
  1974                           
  1975                           ;LCDD2.c: 31:     comandoLCD(0X0E);
  1976  0CEC  300E               	movlw	14
  1977  0CED  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1978  0CF2                     l2298:
  1979                           
  1980                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1981  0CF2  3001               	movlw	1
  1982  0CF3  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1983  0CF8                     l200:
  1984  0CF8  0008               	return
  1985  0CF9                     __end_of_initLCD:
  1986                           
  1987                           	psect	text6
  1988  0B4B                     __ptext6:	
  1989 ;; *************** function _hexTochar *****************
  1990 ;; Defined at:
  1991 ;;		line 92 in file "ComSerial.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  valor           1    wreg     unsigned char 
  1994 ;;  conv            1   10[BANK0 ] PTR unsigned char 
  1995 ;;		 -> disp3(3), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  valor           1   14[BANK0 ] unsigned char 
  1998 ;;  decena          1   17[BANK0 ] unsigned char 
  1999 ;;  centena         1   16[BANK0 ] unsigned char 
  2000 ;;  unidad          1   15[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       1       0       0       0
  2011 ;;      Locals:         0       4       0       0       0
  2012 ;;      Temps:          0       3       0       0       0
  2013 ;;      Totals:         0       8       0       0       0
  2014 ;;Total ram usage:        8 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		_divisiondecimal
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _hexTochar
  2026  0B4B                     _hexTochar:
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _hexTochar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2030                           ;hexTochar@valor stored from wreg
  2031  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0B4D  00AE               	movwf	hexTochar@valor
  2034  0B4E                     l3034:
  2035                           
  2036                           ;ComSerial.c: 93:     uint8_t centena;;ComSerial.c: 94:     uint8_t decena;;ComSerial.c:
      +                           95:     uint8_t unidad;;ComSerial.c: 97:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  2037  0B4E  302F               	movlw	(low (hexTochar@unidad| 0))& (0+255)
  2038  0B4F  00AB               	movwf	??_hexTochar
  2039  0B50  082B               	movf	??_hexTochar,w
  2040  0B51  00A4               	movwf	divisiondecimal@un
  2041  0B52  3031               	movlw	(low (hexTochar@decena| 0))& (0+255)
  2042  0B53  00AC               	movwf	??_hexTochar+1
  2043  0B54  082C               	movf	??_hexTochar+1,w
  2044  0B55  00A5               	movwf	divisiondecimal@dec
  2045  0B56  3030               	movlw	(low (hexTochar@centena| 0))& (0+255)
  2046  0B57  00AD               	movwf	??_hexTochar+2
  2047  0B58  082D               	movf	??_hexTochar+2,w
  2048  0B59  00A6               	movwf	divisiondecimal@cent
  2049  0B5A  082E               	movf	hexTochar@valor,w
  2050  0B5B  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  2051  0B60                     l3036:
  2052                           
  2053                           ;ComSerial.c: 98:     conv[0]= unidad;
  2054  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0B62  082F               	movf	hexTochar@unidad,w
  2057  0B63  00AB               	movwf	??_hexTochar
  2058  0B64  082A               	movf	hexTochar@conv,w
  2059  0B65  0084               	movwf	4
  2060  0B66  082B               	movf	??_hexTochar,w
  2061  0B67  1383               	bcf	3,7	;select IRP bank0
  2062  0B68  0080               	movwf	0
  2063  0B69                     l3038:
  2064                           
  2065                           ;ComSerial.c: 99:     conv[1]= decena;
  2066  0B69  0831               	movf	hexTochar@decena,w
  2067  0B6A  00AB               	movwf	??_hexTochar
  2068  0B6B  0A2A               	incf	hexTochar@conv,w
  2069  0B6C  0084               	movwf	4
  2070  0B6D  082B               	movf	??_hexTochar,w
  2071  0B6E  0080               	movwf	0
  2072  0B6F                     l3040:
  2073                           
  2074                           ;ComSerial.c: 100:     conv[2]= centena;
  2075  0B6F  0830               	movf	hexTochar@centena,w
  2076  0B70  00AB               	movwf	??_hexTochar
  2077  0B71  082A               	movf	hexTochar@conv,w
  2078  0B72  3E02               	addlw	2
  2079  0B73  0084               	movwf	4
  2080  0B74  082B               	movf	??_hexTochar,w
  2081  0B75  0080               	movwf	0
  2082  0B76                     l172:
  2083  0B76  0008               	return
  2084  0B77                     __end_of_hexTochar:
  2085                           
  2086                           	psect	text7
  2087  0E2B                     __ptext7:	
  2088 ;; *************** function _divisiondecimal *****************
  2089 ;; Defined at:
  2090 ;;		line 120 in file "ComSerial.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  conteo          1    wreg     unsigned char 
  2093 ;;  un              1    4[BANK0 ] PTR unsigned char 
  2094 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  2095 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  2096 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  2097 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  2098 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  conteo          1    8[COMMON] unsigned char 
  2101 ;;  div             1    9[COMMON] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       3       0       0       0
  2112 ;;      Locals:         2       0       0       0       0
  2113 ;;      Temps:          0       3       0       0       0
  2114 ;;      Totals:         2       6       0       0       0
  2115 ;;Total ram usage:        8 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    2
  2118 ;; This function calls:
  2119 ;;		___awdiv
  2120 ;;		___bmul
  2121 ;; This function is called by:
  2122 ;;		_sendhex
  2123 ;;		_hexTochar
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _divisiondecimal
  2129  0E2B                     _divisiondecimal:
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2133                           ;divisiondecimal@conteo stored from wreg
  2134  0E2B  00F8               	movwf	divisiondecimal@conteo
  2135  0E2C                     l2754:
  2136                           
  2137                           ;ComSerial.c: 121:     uint8_t div = conteo;
  2138  0E2C  0878               	movf	divisiondecimal@conteo,w
  2139  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0E2F  00A7               	movwf	??_divisiondecimal
  2142  0E30  0827               	movf	??_divisiondecimal,w
  2143  0E31  00F9               	movwf	divisiondecimal@div
  2144  0E32                     l2756:
  2145                           
  2146                           ;ComSerial.c: 122:     *un = 0;
  2147  0E32  0824               	movf	divisiondecimal@un,w
  2148  0E33  0084               	movwf	4
  2149  0E34  1383               	bcf	3,7	;select IRP bank0
  2150  0E35  0180               	clrf	0
  2151  0E36                     l2758:
  2152                           
  2153                           ;ComSerial.c: 123:     *dec = 0;
  2154  0E36  0825               	movf	divisiondecimal@dec,w
  2155  0E37  0084               	movwf	4
  2156  0E38  0180               	clrf	0
  2157  0E39                     l2760:
  2158                           
  2159                           ;ComSerial.c: 124:     *cent = 0;
  2160  0E39  0826               	movf	divisiondecimal@cent,w
  2161  0E3A  0084               	movwf	4
  2162  0E3B  0180               	clrf	0
  2163                           
  2164                           ;ComSerial.c: 127:     while(div >= 100){
  2165  0E3C  2E68               	goto	l2764
  2166  0E3D                     l2762:
  2167                           
  2168                           ;ComSerial.c: 128:     *cent = div/100;
  2169  0E3D  3064               	movlw	100
  2170  0E3E  00F3               	movwf	___awdiv@divisor
  2171  0E3F  3000               	movlw	0
  2172  0E40  00F4               	movwf	___awdiv@divisor+1
  2173  0E41  0879               	movf	divisiondecimal@div,w
  2174  0E42  00A7               	movwf	??_divisiondecimal
  2175  0E43  01A8               	clrf	??_divisiondecimal+1
  2176  0E44  0827               	movf	??_divisiondecimal,w
  2177  0E45  00F5               	movwf	___awdiv@dividend
  2178  0E46  0828               	movf	??_divisiondecimal+1,w
  2179  0E47  00F6               	movwf	___awdiv@dividend+1
  2180  0E48  120A  158A  2546  120A  158A  	fcall	___awdiv
  2181  0E4D  0873               	movf	?___awdiv,w
  2182  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0E50  00A9               	movwf	??_divisiondecimal+2
  2185  0E51  0826               	movf	divisiondecimal@cent,w
  2186  0E52  0084               	movwf	4
  2187  0E53  0829               	movf	??_divisiondecimal+2,w
  2188  0E54  1383               	bcf	3,7	;select IRP bank0
  2189  0E55  0080               	movwf	0
  2190                           
  2191                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  2192  0E56  309C               	movlw	156
  2193  0E57  00A7               	movwf	??_divisiondecimal
  2194  0E58  0827               	movf	??_divisiondecimal,w
  2195  0E59  00F3               	movwf	___bmul@multiplicand
  2196  0E5A  0826               	movf	divisiondecimal@cent,w
  2197  0E5B  0084               	movwf	4
  2198  0E5C  0800               	movf	0,w
  2199  0E5D  120A  158A  2288  120A  158A  	fcall	___bmul
  2200  0E62  0779               	addwf	divisiondecimal@div,w
  2201  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0E65  00A8               	movwf	??_divisiondecimal+1
  2204  0E66  0828               	movf	??_divisiondecimal+1,w
  2205  0E67  00F9               	movwf	divisiondecimal@div
  2206  0E68                     l2764:
  2207                           
  2208                           ;ComSerial.c: 127:     while(div >= 100){
  2209  0E68  3064               	movlw	100
  2210  0E69  0279               	subwf	divisiondecimal@div,w
  2211  0E6A  1803               	skipnc
  2212  0E6B  2E6D               	goto	u3421
  2213  0E6C  2E6E               	goto	u3420
  2214  0E6D                     u3421:
  2215  0E6D  2E3D               	goto	l2762
  2216  0E6E                     u3420:
  2217  0E6E  2E9A               	goto	l2768
  2218  0E6F                     l2766:
  2219                           
  2220                           ;ComSerial.c: 133:     *dec = div/10;
  2221  0E6F  300A               	movlw	10
  2222  0E70  00F3               	movwf	___awdiv@divisor
  2223  0E71  3000               	movlw	0
  2224  0E72  00F4               	movwf	___awdiv@divisor+1
  2225  0E73  0879               	movf	divisiondecimal@div,w
  2226  0E74  00A7               	movwf	??_divisiondecimal
  2227  0E75  01A8               	clrf	??_divisiondecimal+1
  2228  0E76  0827               	movf	??_divisiondecimal,w
  2229  0E77  00F5               	movwf	___awdiv@dividend
  2230  0E78  0828               	movf	??_divisiondecimal+1,w
  2231  0E79  00F6               	movwf	___awdiv@dividend+1
  2232  0E7A  120A  158A  2546  120A  158A  	fcall	___awdiv
  2233  0E7F  0873               	movf	?___awdiv,w
  2234  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0E82  00A9               	movwf	??_divisiondecimal+2
  2237  0E83  0825               	movf	divisiondecimal@dec,w
  2238  0E84  0084               	movwf	4
  2239  0E85  0829               	movf	??_divisiondecimal+2,w
  2240  0E86  1383               	bcf	3,7	;select IRP bank0
  2241  0E87  0080               	movwf	0
  2242                           
  2243                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  2244  0E88  30F6               	movlw	246
  2245  0E89  00A7               	movwf	??_divisiondecimal
  2246  0E8A  0827               	movf	??_divisiondecimal,w
  2247  0E8B  00F3               	movwf	___bmul@multiplicand
  2248  0E8C  0825               	movf	divisiondecimal@dec,w
  2249  0E8D  0084               	movwf	4
  2250  0E8E  0800               	movf	0,w
  2251  0E8F  120A  158A  2288  120A  158A  	fcall	___bmul
  2252  0E94  0779               	addwf	divisiondecimal@div,w
  2253  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0E97  00A8               	movwf	??_divisiondecimal+1
  2256  0E98  0828               	movf	??_divisiondecimal+1,w
  2257  0E99  00F9               	movwf	divisiondecimal@div
  2258  0E9A                     l2768:
  2259                           
  2260                           ;ComSerial.c: 132:     while (div >= 10){
  2261  0E9A  300A               	movlw	10
  2262  0E9B  0279               	subwf	divisiondecimal@div,w
  2263  0E9C  1803               	skipnc
  2264  0E9D  2E9F               	goto	u3431
  2265  0E9E  2EA0               	goto	u3430
  2266  0E9F                     u3431:
  2267  0E9F  2E6F               	goto	l2766
  2268  0EA0                     u3430:
  2269  0EA0                     l2770:
  2270                           
  2271                           ;ComSerial.c: 137:     *un = div;
  2272  0EA0  0879               	movf	divisiondecimal@div,w
  2273  0EA1  00A7               	movwf	??_divisiondecimal
  2274  0EA2  0824               	movf	divisiondecimal@un,w
  2275  0EA3  0084               	movwf	4
  2276  0EA4  0827               	movf	??_divisiondecimal,w
  2277  0EA5  1383               	bcf	3,7	;select IRP bank0
  2278  0EA6  0080               	movwf	0
  2279  0EA7                     l187:
  2280  0EA7  0008               	return
  2281  0EA8                     __end_of_divisiondecimal:
  2282                           
  2283                           	psect	text8
  2284  0EA8                     __ptext8:	
  2285 ;; *************** function _floTochar *****************
  2286 ;; Defined at:
  2287 ;;		line 61 in file "ComSerial.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  valor           4   45[BANK0 ] const float 
  2290 ;;  conv            1   49[BANK0 ] PTR unsigned char 
  2291 ;;		 -> disp2(3), disp1(3), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  temp            4   54[BANK0 ] float 
  2294 ;;  digdecimal      2   60[BANK0 ] unsigned char [2]
  2295 ;;  entero          1   59[BANK0 ] unsigned char 
  2296 ;;  decimal         1   58[BANK0 ] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       5       0       0       0
  2307 ;;      Locals:         0       8       0       0       0
  2308 ;;      Temps:          0       4       0       0       0
  2309 ;;      Totals:         0      17       0       0       0
  2310 ;;Total ram usage:       17 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		___flmul
  2315 ;;		___flsub
  2316 ;;		___fltol
  2317 ;;		___xxtofl
  2318 ;;		_division
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _floTochar
  2326  0EA8                     _floTochar:
  2327  0EA8                     l3022:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _floTochar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2330                           
  2331                           
  2332                           ;ComSerial.c: 62:     uint8_t entero;;ComSerial.c: 63:     uint8_t decimal;;ComSerial.c:
      +                           64:     float temp;;ComSerial.c: 65:     unsigned char digdecimal[2];;ComSerial.c: 71: 
      +                              entero = valor;
  2333  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0EAA  0850               	movf	floTochar@valor+3,w
  2336  0EAB  00C7               	movwf	___fltol@f1+3
  2337  0EAC  084F               	movf	floTochar@valor+2,w
  2338  0EAD  00C6               	movwf	___fltol@f1+2
  2339  0EAE  084E               	movf	floTochar@valor+1,w
  2340  0EAF  00C5               	movwf	___fltol@f1+1
  2341  0EB0  084D               	movf	floTochar@valor,w
  2342  0EB1  00C4               	movwf	___fltol@f1
  2343  0EB2  120A  158A  25AF  120A  158A  	fcall	___fltol
  2344  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0EB9  0844               	movf	?___fltol,w
  2347  0EBA  00D2               	movwf	??_floTochar
  2348  0EBB  0852               	movf	??_floTochar,w
  2349  0EBC  00DB               	movwf	floTochar@entero
  2350  0EBD                     l3024:
  2351                           
  2352                           ;ComSerial.c: 72:     digdecimal[2] = entero;
  2353  0EBD  085B               	movf	floTochar@entero,w
  2354  0EBE  00D2               	movwf	??_floTochar
  2355  0EBF  0852               	movf	??_floTochar,w
  2356  0EC0  00DE               	movwf	floTochar@digdecimal+2
  2357  0EC1                     l3026:
  2358                           
  2359                           ;ComSerial.c: 73:     temp = valor-(float)entero;
  2360  0EC1  085B               	movf	floTochar@entero,w
  2361  0EC2  00D2               	movwf	??_floTochar
  2362  0EC3  01D3               	clrf	??_floTochar+1
  2363  0EC4  01D4               	clrf	??_floTochar+2
  2364  0EC5  01D5               	clrf	??_floTochar+3
  2365  0EC6  0855               	movf	??_floTochar+3,w
  2366  0EC7  00F6               	movwf	___xxtofl@val+3
  2367  0EC8  0854               	movf	??_floTochar+2,w
  2368  0EC9  00F5               	movwf	___xxtofl@val+2
  2369  0ECA  0853               	movf	??_floTochar+1,w
  2370  0ECB  00F4               	movwf	___xxtofl@val+1
  2371  0ECC  0852               	movf	??_floTochar,w
  2372  0ECD  00F3               	movwf	___xxtofl@val
  2373  0ECE  3000               	movlw	0
  2374  0ECF  120A  158A  2744  120A  158A  	fcall	___xxtofl
  2375  0ED4  0876               	movf	?___xxtofl+3,w
  2376  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0ED7  00B3               	movwf	___flsub@a+3
  2379  0ED8  0875               	movf	?___xxtofl+2,w
  2380  0ED9  00B2               	movwf	___flsub@a+2
  2381  0EDA  0874               	movf	?___xxtofl+1,w
  2382  0EDB  00B1               	movwf	___flsub@a+1
  2383  0EDC  0873               	movf	?___xxtofl,w
  2384  0EDD  00B0               	movwf	___flsub@a
  2385  0EDE  0850               	movf	floTochar@valor+3,w
  2386  0EDF  00B7               	movwf	___flsub@b+3
  2387  0EE0  084F               	movf	floTochar@valor+2,w
  2388  0EE1  00B6               	movwf	___flsub@b+2
  2389  0EE2  084E               	movf	floTochar@valor+1,w
  2390  0EE3  00B5               	movwf	___flsub@b+1
  2391  0EE4  084D               	movf	floTochar@valor,w
  2392  0EE5  00B4               	movwf	___flsub@b
  2393  0EE6  120A  158A  22FE  120A  158A  	fcall	___flsub
  2394  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0EED  0833               	movf	?___flsub+3,w
  2397  0EEE  00D9               	movwf	floTochar@temp+3
  2398  0EEF  0832               	movf	?___flsub+2,w
  2399  0EF0  00D8               	movwf	floTochar@temp+2
  2400  0EF1  0831               	movf	?___flsub+1,w
  2401  0EF2  00D7               	movwf	floTochar@temp+1
  2402  0EF3  0830               	movf	?___flsub,w
  2403  0EF4  00D6               	movwf	floTochar@temp
  2404  0EF5                     l3028:
  2405                           
  2406                           ;ComSerial.c: 74:     decimal = (temp*100);
  2407  0EF5  0859               	movf	floTochar@temp+3,w
  2408  0EF6  00B1               	movwf	___flmul@a+3
  2409  0EF7  0858               	movf	floTochar@temp+2,w
  2410  0EF8  00B0               	movwf	___flmul@a+2
  2411  0EF9  0857               	movf	floTochar@temp+1,w
  2412  0EFA  00AF               	movwf	___flmul@a+1
  2413  0EFB  0856               	movf	floTochar@temp,w
  2414  0EFC  00AE               	movwf	___flmul@a
  2415  0EFD  3042               	movlw	66
  2416  0EFE  00AD               	movwf	___flmul@b+3
  2417  0EFF  30C8               	movlw	200
  2418  0F00  00AC               	movwf	___flmul@b+2
  2419  0F01  3000               	movlw	0
  2420  0F02  00AB               	movwf	___flmul@b+1
  2421  0F03  3000               	movlw	0
  2422  0F04  00AA               	movwf	___flmul@b
  2423  0F05  120A  118A  2022  120A  158A  	fcall	___flmul
  2424  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0F0C  082D               	movf	?___flmul+3,w
  2427  0F0D  00C7               	movwf	___fltol@f1+3
  2428  0F0E  082C               	movf	?___flmul+2,w
  2429  0F0F  00C6               	movwf	___fltol@f1+2
  2430  0F10  082B               	movf	?___flmul+1,w
  2431  0F11  00C5               	movwf	___fltol@f1+1
  2432  0F12  082A               	movf	?___flmul,w
  2433  0F13  00C4               	movwf	___fltol@f1
  2434  0F14  120A  158A  25AF  120A  158A  	fcall	___fltol
  2435  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0F1B  0844               	movf	?___fltol,w
  2438  0F1C  00D2               	movwf	??_floTochar
  2439  0F1D  0852               	movf	??_floTochar,w
  2440  0F1E  00DA               	movwf	floTochar@decimal
  2441  0F1F                     l3030:
  2442                           
  2443                           ;ComSerial.c: 75:     division(decimal,&digdecimal[0],&digdecimal[1]);
  2444  0F1F  305C               	movlw	(low (floTochar@digdecimal| 0))& (0+255)
  2445  0F20  00D2               	movwf	??_floTochar
  2446  0F21  0852               	movf	??_floTochar,w
  2447  0F22  00F8               	movwf	division@un
  2448  0F23  305D               	movlw	(low ((floTochar@digdecimal| 0+1)))& (0+255)
  2449  0F24  00D3               	movwf	??_floTochar+1
  2450  0F25  0853               	movf	??_floTochar+1,w
  2451  0F26  00F9               	movwf	division@dec
  2452  0F27  085A               	movf	floTochar@decimal,w
  2453  0F28  120A  158A  2467  120A  158A  	fcall	_division
  2454                           
  2455                           ;ComSerial.c: 76:     conv[0] = entero;
  2456  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0F2F  085B               	movf	floTochar@entero,w
  2459  0F30  00D2               	movwf	??_floTochar
  2460  0F31  0851               	movf	floTochar@conv,w
  2461  0F32  0084               	movwf	4
  2462  0F33  0852               	movf	??_floTochar,w
  2463  0F34  1383               	bcf	3,7	;select IRP bank0
  2464  0F35  0080               	movwf	0
  2465                           
  2466                           ;ComSerial.c: 77:     conv[1] = digdecimal[1];
  2467  0F36  085D               	movf	floTochar@digdecimal+1,w
  2468  0F37  00D2               	movwf	??_floTochar
  2469  0F38  0A51               	incf	floTochar@conv,w
  2470  0F39  0084               	movwf	4
  2471  0F3A  0852               	movf	??_floTochar,w
  2472  0F3B  0080               	movwf	0
  2473  0F3C                     l3032:
  2474                           
  2475                           ;ComSerial.c: 78:     conv[2] = digdecimal[0];
  2476  0F3C  085C               	movf	floTochar@digdecimal,w
  2477  0F3D  00D2               	movwf	??_floTochar
  2478  0F3E  0851               	movf	floTochar@conv,w
  2479  0F3F  3E02               	addlw	2
  2480  0F40  0084               	movwf	4
  2481  0F41  0852               	movf	??_floTochar,w
  2482  0F42  0080               	movwf	0
  2483  0F43                     l166:
  2484  0F43  0008               	return
  2485  0F44                     __end_of_floTochar:
  2486                           
  2487                           	psect	text9
  2488  0C67                     __ptext9:	
  2489 ;; *************** function _division *****************
  2490 ;; Defined at:
  2491 ;;		line 106 in file "ComSerial.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  conteo          1    wreg     unsigned char 
  2494 ;;  un              1    8[COMMON] PTR unsigned char 
  2495 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2496 ;;  dec             1    9[COMMON] PTR unsigned char 
  2497 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  conteo          1    7[BANK0 ] unsigned char 
  2500 ;;  div             1    8[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         2       0       0       0       0
  2511 ;;      Locals:         0       2       0       0       0
  2512 ;;      Temps:          0       3       0       0       0
  2513 ;;      Totals:         2       5       0       0       0
  2514 ;;Total ram usage:        7 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		___awdiv
  2519 ;;		___bmul
  2520 ;; This function is called by:
  2521 ;;		_sendfloat
  2522 ;;		_floTochar
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _division
  2528  0C67                     _division:
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2532                           ;division@conteo stored from wreg
  2533  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0C69  00A7               	movwf	division@conteo
  2536  0C6A                     l2742:
  2537                           
  2538                           ;ComSerial.c: 107:     uint8_t div = conteo;
  2539  0C6A  0827               	movf	division@conteo,w
  2540  0C6B  00A4               	movwf	??_division
  2541  0C6C  0824               	movf	??_division,w
  2542  0C6D  00A8               	movwf	division@div
  2543  0C6E                     l2744:
  2544                           
  2545                           ;ComSerial.c: 108:     *un = 0;
  2546  0C6E  0878               	movf	division@un,w
  2547  0C6F  0084               	movwf	4
  2548  0C70  1383               	bcf	3,7	;select IRP bank0
  2549  0C71  0180               	clrf	0
  2550  0C72                     l2746:
  2551                           
  2552                           ;ComSerial.c: 109:     *dec = 0;
  2553  0C72  0879               	movf	division@dec,w
  2554  0C73  0084               	movwf	4
  2555  0C74  0180               	clrf	0
  2556                           
  2557                           ;ComSerial.c: 112:     while (div >= 10){
  2558  0C75  2CA1               	goto	l2750
  2559  0C76                     l2748:
  2560                           
  2561                           ;ComSerial.c: 113:     *dec = div/10;
  2562  0C76  300A               	movlw	10
  2563  0C77  00F3               	movwf	___awdiv@divisor
  2564  0C78  3000               	movlw	0
  2565  0C79  00F4               	movwf	___awdiv@divisor+1
  2566  0C7A  0828               	movf	division@div,w
  2567  0C7B  00A4               	movwf	??_division
  2568  0C7C  01A5               	clrf	??_division+1
  2569  0C7D  0824               	movf	??_division,w
  2570  0C7E  00F5               	movwf	___awdiv@dividend
  2571  0C7F  0825               	movf	??_division+1,w
  2572  0C80  00F6               	movwf	___awdiv@dividend+1
  2573  0C81  120A  158A  2546  120A  158A  	fcall	___awdiv
  2574  0C86  0873               	movf	?___awdiv,w
  2575  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0C89  00A6               	movwf	??_division+2
  2578  0C8A  0879               	movf	division@dec,w
  2579  0C8B  0084               	movwf	4
  2580  0C8C  0826               	movf	??_division+2,w
  2581  0C8D  1383               	bcf	3,7	;select IRP bank0
  2582  0C8E  0080               	movwf	0
  2583                           
  2584                           ;ComSerial.c: 114:     div = div - (*dec)*(10);
  2585  0C8F  30F6               	movlw	246
  2586  0C90  00A4               	movwf	??_division
  2587  0C91  0824               	movf	??_division,w
  2588  0C92  00F3               	movwf	___bmul@multiplicand
  2589  0C93  0879               	movf	division@dec,w
  2590  0C94  0084               	movwf	4
  2591  0C95  0800               	movf	0,w
  2592  0C96  120A  158A  2288  120A  158A  	fcall	___bmul
  2593  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0C9D  0728               	addwf	division@div,w
  2596  0C9E  00A5               	movwf	??_division+1
  2597  0C9F  0825               	movf	??_division+1,w
  2598  0CA0  00A8               	movwf	division@div
  2599  0CA1                     l2750:
  2600                           
  2601                           ;ComSerial.c: 112:     while (div >= 10){
  2602  0CA1  300A               	movlw	10
  2603  0CA2  0228               	subwf	division@div,w
  2604  0CA3  1803               	skipnc
  2605  0CA4  2CA6               	goto	u3411
  2606  0CA5  2CA7               	goto	u3410
  2607  0CA6                     u3411:
  2608  0CA6  2C76               	goto	l2748
  2609  0CA7                     u3410:
  2610  0CA7                     l2752:
  2611                           
  2612                           ;ComSerial.c: 117:     *un = div;
  2613  0CA7  0828               	movf	division@div,w
  2614  0CA8  00A4               	movwf	??_division
  2615  0CA9  0878               	movf	division@un,w
  2616  0CAA  0084               	movwf	4
  2617  0CAB  0824               	movf	??_division,w
  2618  0CAC  1383               	bcf	3,7	;select IRP bank0
  2619  0CAD  0080               	movwf	0
  2620  0CAE                     l178:
  2621  0CAE  0008               	return
  2622  0CAF                     __end_of_division:
  2623                           
  2624                           	psect	text10
  2625  0A88                     __ptext10:	
  2626 ;; *************** function ___bmul *****************
  2627 ;; Defined at:
  2628 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  multiplier      1    wreg     unsigned char 
  2631 ;;  multiplicand    1    3[COMMON] unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  multiplier      1    6[COMMON] unsigned char 
  2634 ;;  product         1    5[COMMON] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         1       0       0       0       0
  2645 ;;      Locals:         2       0       0       0       0
  2646 ;;      Temps:          1       0       0       0       0
  2647 ;;      Totals:         4       0       0       0       0
  2648 ;;Total ram usage:        4 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_division
  2655 ;;		_divisiondecimal
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function ___bmul
  2661  0A88                     ___bmul:
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2665                           ;___bmul@multiplier stored from wreg
  2666  0A88  00F6               	movwf	___bmul@multiplier
  2667  0A89                     l2476:
  2668  0A89  01F5               	clrf	___bmul@product
  2669  0A8A                     l2478:
  2670  0A8A  1C76               	btfss	___bmul@multiplier,0
  2671  0A8B  2A8D               	goto	u2801
  2672  0A8C  2A8E               	goto	u2800
  2673  0A8D                     u2801:
  2674  0A8D  2A92               	goto	l2482
  2675  0A8E                     u2800:
  2676  0A8E                     l2480:
  2677  0A8E  0873               	movf	___bmul@multiplicand,w
  2678  0A8F  00F4               	movwf	??___bmul
  2679  0A90  0874               	movf	??___bmul,w
  2680  0A91  07F5               	addwf	___bmul@product,f
  2681  0A92                     l2482:
  2682  0A92  1003               	clrc
  2683  0A93  0DF3               	rlf	___bmul@multiplicand,f
  2684  0A94                     l2484:
  2685  0A94  1003               	clrc
  2686  0A95  0CF6               	rrf	___bmul@multiplier,f
  2687  0A96  0876               	movf	___bmul@multiplier,w
  2688  0A97  1D03               	btfss	3,2
  2689  0A98  2A9A               	goto	u2811
  2690  0A99  2A9B               	goto	u2810
  2691  0A9A                     u2811:
  2692  0A9A  2A8A               	goto	l2478
  2693  0A9B                     u2810:
  2694  0A9B                     l2486:
  2695  0A9B  0875               	movf	___bmul@product,w
  2696  0A9C                     l332:
  2697  0A9C  0008               	return
  2698  0A9D                     __end_of___bmul:
  2699                           
  2700                           	psect	text11
  2701  0D46                     __ptext11:	
  2702 ;; *************** function ___awdiv *****************
  2703 ;; Defined at:
  2704 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  divisor         2    3[COMMON] int 
  2707 ;;  dividend        2    5[COMMON] int 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  quotient        2    2[BANK0 ] int 
  2710 ;;  sign            1    1[BANK0 ] unsigned char 
  2711 ;;  counter         1    0[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    3[COMMON] int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         4       0       0       0       0
  2722 ;;      Locals:         0       4       0       0       0
  2723 ;;      Temps:          1       0       0       0       0
  2724 ;;      Totals:         5       4       0       0       0
  2725 ;;Total ram usage:        9 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_division
  2732 ;;		_divisiondecimal
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function ___awdiv
  2738  0D46                     ___awdiv:
  2739  0D46                     l2490:	
  2740                           ;incstack = 0
  2741                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2742                           
  2743  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0D48  01A1               	clrf	___awdiv@sign
  2746  0D49                     l2492:
  2747  0D49  1FF4               	btfss	___awdiv@divisor+1,7
  2748  0D4A  2D4C               	goto	u2821
  2749  0D4B  2D4D               	goto	u2820
  2750  0D4C                     u2821:
  2751  0D4C  2D54               	goto	l2498
  2752  0D4D                     u2820:
  2753  0D4D                     l2494:
  2754  0D4D  09F3               	comf	___awdiv@divisor,f
  2755  0D4E  09F4               	comf	___awdiv@divisor+1,f
  2756  0D4F  0AF3               	incf	___awdiv@divisor,f
  2757  0D50  1903               	skipnz
  2758  0D51  0AF4               	incf	___awdiv@divisor+1,f
  2759  0D52                     l2496:
  2760  0D52  01A1               	clrf	___awdiv@sign
  2761  0D53  0AA1               	incf	___awdiv@sign,f
  2762  0D54                     l2498:
  2763  0D54  1FF6               	btfss	___awdiv@dividend+1,7
  2764  0D55  2D57               	goto	u2831
  2765  0D56  2D58               	goto	u2830
  2766  0D57                     u2831:
  2767  0D57  2D61               	goto	l2504
  2768  0D58                     u2830:
  2769  0D58                     l2500:
  2770  0D58  09F5               	comf	___awdiv@dividend,f
  2771  0D59  09F6               	comf	___awdiv@dividend+1,f
  2772  0D5A  0AF5               	incf	___awdiv@dividend,f
  2773  0D5B  1903               	skipnz
  2774  0D5C  0AF6               	incf	___awdiv@dividend+1,f
  2775  0D5D                     l2502:
  2776  0D5D  3001               	movlw	1
  2777  0D5E  00F7               	movwf	??___awdiv
  2778  0D5F  0877               	movf	??___awdiv,w
  2779  0D60  06A1               	xorwf	___awdiv@sign,f
  2780  0D61                     l2504:
  2781  0D61  01A2               	clrf	___awdiv@quotient
  2782  0D62  01A3               	clrf	___awdiv@quotient+1
  2783  0D63                     l2506:
  2784  0D63  0873               	movf	___awdiv@divisor,w
  2785  0D64  0474               	iorwf	___awdiv@divisor+1,w
  2786  0D65  1903               	btfsc	3,2
  2787  0D66  2D68               	goto	u2841
  2788  0D67  2D69               	goto	u2840
  2789  0D68                     u2841:
  2790  0D68  2DA0               	goto	l2526
  2791  0D69                     u2840:
  2792  0D69                     l2508:
  2793  0D69  01A0               	clrf	___awdiv@counter
  2794  0D6A  0AA0               	incf	___awdiv@counter,f
  2795  0D6B  2D77               	goto	l2514
  2796  0D6C                     l2510:
  2797  0D6C  3001               	movlw	1
  2798  0D6D                     u2855:
  2799  0D6D  1003               	clrc
  2800  0D6E  0DF3               	rlf	___awdiv@divisor,f
  2801  0D6F  0DF4               	rlf	___awdiv@divisor+1,f
  2802  0D70  3EFF               	addlw	-1
  2803  0D71  1D03               	skipz
  2804  0D72  2D6D               	goto	u2855
  2805  0D73                     l2512:
  2806  0D73  3001               	movlw	1
  2807  0D74  00F7               	movwf	??___awdiv
  2808  0D75  0877               	movf	??___awdiv,w
  2809  0D76  07A0               	addwf	___awdiv@counter,f
  2810  0D77                     l2514:
  2811  0D77  1FF4               	btfss	___awdiv@divisor+1,7
  2812  0D78  2D7A               	goto	u2861
  2813  0D79  2D7B               	goto	u2860
  2814  0D7A                     u2861:
  2815  0D7A  2D6C               	goto	l2510
  2816  0D7B                     u2860:
  2817  0D7B                     l2516:
  2818  0D7B  3001               	movlw	1
  2819  0D7C                     u2875:
  2820  0D7C  1003               	clrc
  2821  0D7D  0DA2               	rlf	___awdiv@quotient,f
  2822  0D7E  0DA3               	rlf	___awdiv@quotient+1,f
  2823  0D7F  3EFF               	addlw	-1
  2824  0D80  1D03               	skipz
  2825  0D81  2D7C               	goto	u2875
  2826  0D82  0874               	movf	___awdiv@divisor+1,w
  2827  0D83  0276               	subwf	___awdiv@dividend+1,w
  2828  0D84  1D03               	skipz
  2829  0D85  2D88               	goto	u2885
  2830  0D86  0873               	movf	___awdiv@divisor,w
  2831  0D87  0275               	subwf	___awdiv@dividend,w
  2832  0D88                     u2885:
  2833  0D88  1C03               	skipc
  2834  0D89  2D8B               	goto	u2881
  2835  0D8A  2D8C               	goto	u2880
  2836  0D8B                     u2881:
  2837  0D8B  2D93               	goto	l2522
  2838  0D8C                     u2880:
  2839  0D8C                     l2518:
  2840  0D8C  0873               	movf	___awdiv@divisor,w
  2841  0D8D  02F5               	subwf	___awdiv@dividend,f
  2842  0D8E  0874               	movf	___awdiv@divisor+1,w
  2843  0D8F  1C03               	skipc
  2844  0D90  03F6               	decf	___awdiv@dividend+1,f
  2845  0D91  02F6               	subwf	___awdiv@dividend+1,f
  2846  0D92                     l2520:
  2847  0D92  1422               	bsf	___awdiv@quotient,0
  2848  0D93                     l2522:
  2849  0D93  3001               	movlw	1
  2850  0D94                     u2895:
  2851  0D94  1003               	clrc
  2852  0D95  0CF4               	rrf	___awdiv@divisor+1,f
  2853  0D96  0CF3               	rrf	___awdiv@divisor,f
  2854  0D97  3EFF               	addlw	-1
  2855  0D98  1D03               	skipz
  2856  0D99  2D94               	goto	u2895
  2857  0D9A                     l2524:
  2858  0D9A  3001               	movlw	1
  2859  0D9B  02A0               	subwf	___awdiv@counter,f
  2860  0D9C  1D03               	btfss	3,2
  2861  0D9D  2D9F               	goto	u2901
  2862  0D9E  2DA0               	goto	u2900
  2863  0D9F                     u2901:
  2864  0D9F  2D7B               	goto	l2516
  2865  0DA0                     u2900:
  2866  0DA0                     l2526:
  2867  0DA0  0821               	movf	___awdiv@sign,w
  2868  0DA1  1903               	btfsc	3,2
  2869  0DA2  2DA4               	goto	u2911
  2870  0DA3  2DA5               	goto	u2910
  2871  0DA4                     u2911:
  2872  0DA4  2DAA               	goto	l2530
  2873  0DA5                     u2910:
  2874  0DA5                     l2528:
  2875  0DA5  09A2               	comf	___awdiv@quotient,f
  2876  0DA6  09A3               	comf	___awdiv@quotient+1,f
  2877  0DA7  0AA2               	incf	___awdiv@quotient,f
  2878  0DA8  1903               	skipnz
  2879  0DA9  0AA3               	incf	___awdiv@quotient+1,f
  2880  0DAA                     l2530:
  2881  0DAA  0823               	movf	___awdiv@quotient+1,w
  2882  0DAB  00F4               	movwf	?___awdiv+1
  2883  0DAC  0822               	movf	___awdiv@quotient,w
  2884  0DAD  00F3               	movwf	?___awdiv
  2885  0DAE                     l459:
  2886  0DAE  0008               	return
  2887  0DAF                     __end_of___awdiv:
  2888                           
  2889                           	psect	text12
  2890  0DAF                     __ptext12:	
  2891 ;; *************** function ___fltol *****************
  2892 ;; Defined at:
  2893 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  f1              4   36[BANK0 ] int 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  exp1            1    8[COMMON] unsigned char 
  2898 ;;  sign1           1    7[COMMON] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  4   36[BANK0 ] long 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       4       0       0       0
  2909 ;;      Locals:         2       0       0       0       0
  2910 ;;      Temps:          0       5       0       0       0
  2911 ;;      Totals:         2       9       0       0       0
  2912 ;;Total ram usage:       11 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_sendfloat
  2919 ;;		_floTochar
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function ___fltol
  2925  0DAF                     ___fltol:
  2926  0DAF                     l2772:	
  2927                           ;incstack = 0
  2928                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2929                           
  2930  0DAF  1003               	clrc
  2931  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0DB2  0D46               	rlf	___fltol@f1+2,w
  2934  0DB3  0D47               	rlf	___fltol@f1+3,w
  2935  0DB4  00C8               	movwf	??___fltol
  2936  0DB5  0848               	movf	??___fltol,w
  2937  0DB6  00F8               	movwf	___fltol@exp1
  2938  0DB7  0878               	movf	___fltol@exp1,w
  2939  0DB8  1D03               	btfss	3,2
  2940  0DB9  2DBB               	goto	u3441
  2941  0DBA  2DBC               	goto	u3440
  2942  0DBB                     u3441:
  2943  0DBB  2DC5               	goto	l2778
  2944  0DBC                     u3440:
  2945  0DBC                     l2774:
  2946  0DBC  3000               	movlw	0
  2947  0DBD  00C7               	movwf	?___fltol+3
  2948  0DBE  3000               	movlw	0
  2949  0DBF  00C6               	movwf	?___fltol+2
  2950  0DC0  3000               	movlw	0
  2951  0DC1  00C5               	movwf	?___fltol+1
  2952  0DC2  3000               	movlw	0
  2953  0DC3  00C4               	movwf	?___fltol
  2954  0DC4  2E2A               	goto	l492
  2955  0DC5                     l2778:
  2956  0DC5  0844               	movf	___fltol@f1,w
  2957  0DC6  00C8               	movwf	??___fltol
  2958  0DC7  0845               	movf	___fltol@f1+1,w
  2959  0DC8  00C9               	movwf	??___fltol+1
  2960  0DC9  0846               	movf	___fltol@f1+2,w
  2961  0DCA  00CA               	movwf	??___fltol+2
  2962  0DCB  0847               	movf	___fltol@f1+3,w
  2963  0DCC  00CB               	movwf	??___fltol+3
  2964  0DCD  301F               	movlw	31
  2965  0DCE                     u3455:
  2966  0DCE  1003               	clrc
  2967  0DCF  0CCB               	rrf	??___fltol+3,f
  2968  0DD0  0CCA               	rrf	??___fltol+2,f
  2969  0DD1  0CC9               	rrf	??___fltol+1,f
  2970  0DD2  0CC8               	rrf	??___fltol,f
  2971  0DD3                     u3450:
  2972  0DD3  3EFF               	addlw	-1
  2973  0DD4  1D03               	skipz
  2974  0DD5  2DCE               	goto	u3455
  2975  0DD6  0848               	movf	??___fltol,w
  2976  0DD7  00CC               	movwf	??___fltol+4
  2977  0DD8  084C               	movf	??___fltol+4,w
  2978  0DD9  00F7               	movwf	___fltol@sign1
  2979  0DDA                     l2780:
  2980  0DDA  17C6               	bsf	___fltol@f1+2,7
  2981  0DDB                     l2782:
  2982  0DDB  30FF               	movlw	255
  2983  0DDC  05C4               	andwf	___fltol@f1,f
  2984  0DDD  30FF               	movlw	255
  2985  0DDE  05C5               	andwf	___fltol@f1+1,f
  2986  0DDF  30FF               	movlw	255
  2987  0DE0  05C6               	andwf	___fltol@f1+2,f
  2988  0DE1  3000               	movlw	0
  2989  0DE2  05C7               	andwf	___fltol@f1+3,f
  2990  0DE3                     l2784:
  2991  0DE3  3096               	movlw	150
  2992  0DE4  02F8               	subwf	___fltol@exp1,f
  2993  0DE5                     l2786:
  2994  0DE5  1FF8               	btfss	___fltol@exp1,7
  2995  0DE6  2DE8               	goto	u3461
  2996  0DE7  2DE9               	goto	u3460
  2997  0DE8                     u3461:
  2998  0DE8  2E03               	goto	l2796
  2999  0DE9                     u3460:
  3000  0DE9                     l2788:
  3001  0DE9  0878               	movf	___fltol@exp1,w
  3002  0DEA  3A80               	xorlw	128
  3003  0DEB  3E97               	addlw	151
  3004  0DEC  1803               	skipnc
  3005  0DED  2DEF               	goto	u3471
  3006  0DEE  2DF0               	goto	u3470
  3007  0DEF                     u3471:
  3008  0DEF  2DF1               	goto	l2794
  3009  0DF0                     u3470:
  3010  0DF0  2DBC               	goto	l2774
  3011  0DF1                     l2794:
  3012  0DF1  3001               	movlw	1
  3013  0DF2                     u3485:
  3014  0DF2  1003               	clrc
  3015  0DF3  0CC7               	rrf	___fltol@f1+3,f
  3016  0DF4  0CC6               	rrf	___fltol@f1+2,f
  3017  0DF5  0CC5               	rrf	___fltol@f1+1,f
  3018  0DF6  0CC4               	rrf	___fltol@f1,f
  3019  0DF7  3EFF               	addlw	-1
  3020  0DF8  1D03               	skipz
  3021  0DF9  2DF2               	goto	u3485
  3022  0DFA  3001               	movlw	1
  3023  0DFB  00C8               	movwf	??___fltol
  3024  0DFC  0848               	movf	??___fltol,w
  3025  0DFD  07F8               	addwf	___fltol@exp1,f
  3026  0DFE  1D03               	btfss	3,2
  3027  0DFF  2E01               	goto	u3491
  3028  0E00  2E02               	goto	u3490
  3029  0E01                     u3491:
  3030  0E01  2DF1               	goto	l2794
  3031  0E02                     u3490:
  3032  0E02  2E1A               	goto	l2804
  3033  0E03                     l2796:
  3034  0E03  3020               	movlw	32
  3035  0E04  0278               	subwf	___fltol@exp1,w
  3036  0E05  1C03               	skipc
  3037  0E06  2E08               	goto	u3501
  3038  0E07  2E09               	goto	u3500
  3039  0E08                     u3501:
  3040  0E08  2E15               	goto	l499
  3041  0E09                     u3500:
  3042  0E09  2DBC               	goto	l2774
  3043  0E0A                     l2802:
  3044  0E0A  3001               	movlw	1
  3045  0E0B  00C8               	movwf	??___fltol
  3046  0E0C                     u3515:
  3047  0E0C  1003               	clrc
  3048  0E0D  0DC4               	rlf	___fltol@f1,f
  3049  0E0E  0DC5               	rlf	___fltol@f1+1,f
  3050  0E0F  0DC6               	rlf	___fltol@f1+2,f
  3051  0E10  0DC7               	rlf	___fltol@f1+3,f
  3052  0E11  0BC8               	decfsz	??___fltol,f
  3053  0E12  2E0C               	goto	u3515
  3054  0E13  3001               	movlw	1
  3055  0E14  02F8               	subwf	___fltol@exp1,f
  3056  0E15                     l499:
  3057  0E15  0878               	movf	___fltol@exp1,w
  3058  0E16  1D03               	btfss	3,2
  3059  0E17  2E19               	goto	u3521
  3060  0E18  2E1A               	goto	u3520
  3061  0E19                     u3521:
  3062  0E19  2E0A               	goto	l2802
  3063  0E1A                     u3520:
  3064  0E1A                     l2804:
  3065  0E1A  0877               	movf	___fltol@sign1,w
  3066  0E1B  1903               	btfsc	3,2
  3067  0E1C  2E1E               	goto	u3531
  3068  0E1D  2E1F               	goto	u3530
  3069  0E1E                     u3531:
  3070  0E1E  2E2A               	goto	l502
  3071  0E1F                     u3530:
  3072  0E1F                     l2806:
  3073  0E1F  09C4               	comf	___fltol@f1,f
  3074  0E20  09C5               	comf	___fltol@f1+1,f
  3075  0E21  09C6               	comf	___fltol@f1+2,f
  3076  0E22  09C7               	comf	___fltol@f1+3,f
  3077  0E23  0AC4               	incf	___fltol@f1,f
  3078  0E24  1903               	skipnz
  3079  0E25  0AC5               	incf	___fltol@f1+1,f
  3080  0E26  1903               	skipnz
  3081  0E27  0AC6               	incf	___fltol@f1+2,f
  3082  0E28  1903               	skipnz
  3083  0E29  0AC7               	incf	___fltol@f1+3,f
  3084  0E2A                     l502:
  3085  0E2A                     l492:
  3086  0E2A  0008               	return
  3087  0E2B                     __end_of___fltol:
  3088                           
  3089                           	psect	text13
  3090  0AFE                     __ptext13:	
  3091 ;; *************** function ___flsub *****************
  3092 ;; Defined at:
  3093 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  a               4   16[BANK0 ] long 
  3096 ;;  b               4   20[BANK0 ] long 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  4   16[BANK0 ] long 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       8       0       0       0
  3109 ;;      Locals:         0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         0       8       0       0       0
  3112 ;;Total ram usage:        8 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    2
  3115 ;; This function calls:
  3116 ;;		___fladd
  3117 ;; This function is called by:
  3118 ;;		_sendfloat
  3119 ;;		_floTochar
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function ___flsub
  3125  0AFE                     ___flsub:
  3126  0AFE                     l2808:	
  3127                           ;incstack = 0
  3128                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3129                           
  3130  0AFE  3080               	movlw	128
  3131  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0B01  06B3               	xorwf	___flsub@a+3,f
  3134  0B02                     l2810:
  3135  0B02  0837               	movf	___flsub@b+3,w
  3136  0B03  00A3               	movwf	___fladd@b+3
  3137  0B04  0836               	movf	___flsub@b+2,w
  3138  0B05  00A2               	movwf	___fladd@b+2
  3139  0B06  0835               	movf	___flsub@b+1,w
  3140  0B07  00A1               	movwf	___fladd@b+1
  3141  0B08  0834               	movf	___flsub@b,w
  3142  0B09  00A0               	movwf	___fladd@b
  3143  0B0A  0833               	movf	___flsub@a+3,w
  3144  0B0B  00A7               	movwf	___fladd@a+3
  3145  0B0C  0832               	movf	___flsub@a+2,w
  3146  0B0D  00A6               	movwf	___fladd@a+2
  3147  0B0E  0831               	movf	___flsub@a+1,w
  3148  0B0F  00A5               	movwf	___fladd@a+1
  3149  0B10  0830               	movf	___flsub@a,w
  3150  0B11  00A4               	movwf	___fladd@a
  3151  0B12  120A  118A  2383  120A  158A  	fcall	___fladd
  3152  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0B19  0823               	movf	?___fladd+3,w
  3155  0B1A  00B3               	movwf	?___flsub+3
  3156  0B1B  0822               	movf	?___fladd+2,w
  3157  0B1C  00B2               	movwf	?___flsub+2
  3158  0B1D  0821               	movf	?___fladd+1,w
  3159  0B1E  00B1               	movwf	?___flsub+1
  3160  0B1F  0820               	movf	?___fladd,w
  3161  0B20  00B0               	movwf	?___flsub
  3162  0B21                     l645:
  3163  0B21  0008               	return
  3164  0B22                     __end_of___flsub:
  3165                           
  3166                           	psect	text14
  3167  0383                     __ptext14:	
  3168 ;; *************** function ___fladd *****************
  3169 ;; Defined at:
  3170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  b               4    0[BANK0 ] long 
  3173 ;;  a               4    4[BANK0 ] long 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  grs             1    6[COMMON] unsigned char 
  3176 ;;  bexp            1    5[COMMON] unsigned char 
  3177 ;;  aexp            1    4[COMMON] unsigned char 
  3178 ;;  signs           1    3[COMMON] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  4    0[BANK0 ] unsigned char 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, btemp+1
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       8       0       0       0
  3189 ;;      Locals:         4       0       0       0       0
  3190 ;;      Temps:          0       8       0       0       0
  3191 ;;      Totals:         4      16       0       0       0
  3192 ;;Total ram usage:       20 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		___flsub
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function ___fladd
  3204  0383                     ___fladd:
  3205  0383                     l2534:	
  3206                           ;incstack = 0
  3207                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3208                           
  3209  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0385  0823               	movf	___fladd@b+3,w
  3212  0386  3980               	andlw	128
  3213  0387  00A8               	movwf	??___fladd
  3214  0388  0828               	movf	??___fladd,w
  3215  0389  00F3               	movwf	___fladd@signs
  3216  038A                     l2536:
  3217  038A  0823               	movf	___fladd@b+3,w
  3218  038B  00A8               	movwf	??___fladd
  3219  038C  0728               	addwf	??___fladd,w
  3220  038D  00A9               	movwf	??___fladd+1
  3221  038E  0829               	movf	??___fladd+1,w
  3222  038F  00F5               	movwf	___fladd@bexp
  3223  0390                     l2538:
  3224  0390  1FA2               	btfss	___fladd@b+2,7
  3225  0391  2B93               	goto	u2921
  3226  0392  2B94               	goto	u2920
  3227  0393                     u2921:
  3228  0393  2B95               	goto	l2542
  3229  0394                     u2920:
  3230  0394                     l2540:
  3231  0394  1475               	bsf	___fladd@bexp,0
  3232  0395                     l2542:
  3233  0395  0875               	movf	___fladd@bexp,w
  3234  0396  1903               	btfsc	3,2
  3235  0397  2B99               	goto	u2931
  3236  0398  2B9A               	goto	u2930
  3237  0399                     u2931:
  3238  0399  2BAA               	goto	l2552
  3239  039A                     u2930:
  3240  039A                     l2544:
  3241  039A  0A75               	incf	___fladd@bexp,w
  3242  039B  1D03               	btfss	3,2
  3243  039C  2B9E               	goto	u2941
  3244  039D  2B9F               	goto	u2940
  3245  039E                     u2941:
  3246  039E  2BA7               	goto	l2548
  3247  039F                     u2940:
  3248  039F                     l2546:
  3249  039F  3000               	movlw	0
  3250  03A0  00A3               	movwf	___fladd@b+3
  3251  03A1  3000               	movlw	0
  3252  03A2  00A2               	movwf	___fladd@b+2
  3253  03A3  3000               	movlw	0
  3254  03A4  00A1               	movwf	___fladd@b+1
  3255  03A5  3000               	movlw	0
  3256  03A6  00A0               	movwf	___fladd@b
  3257  03A7                     l2548:
  3258  03A7  17A2               	bsf	___fladd@b+2,7
  3259  03A8                     l2550:
  3260  03A8  01A3               	clrf	___fladd@b+3
  3261  03A9  2BB2               	goto	l2554
  3262  03AA                     l2552:
  3263  03AA  3000               	movlw	0
  3264  03AB  00A3               	movwf	___fladd@b+3
  3265  03AC  3000               	movlw	0
  3266  03AD  00A2               	movwf	___fladd@b+2
  3267  03AE  3000               	movlw	0
  3268  03AF  00A1               	movwf	___fladd@b+1
  3269  03B0  3000               	movlw	0
  3270  03B1  00A0               	movwf	___fladd@b
  3271  03B2                     l2554:
  3272  03B2  0827               	movf	___fladd@a+3,w
  3273  03B3  3980               	andlw	128
  3274  03B4  00A8               	movwf	??___fladd
  3275  03B5  0828               	movf	??___fladd,w
  3276  03B6  00F4               	movwf	___fladd@aexp
  3277  03B7                     l2556:
  3278  03B7  0874               	movf	___fladd@aexp,w
  3279  03B8  0673               	xorwf	___fladd@signs,w
  3280  03B9  1903               	skipnz
  3281  03BA  2BBC               	goto	u2951
  3282  03BB  2BBD               	goto	u2950
  3283  03BC                     u2951:
  3284  03BC  2BBE               	goto	l2560
  3285  03BD                     u2950:
  3286  03BD                     l2558:
  3287  03BD  1773               	bsf	___fladd@signs,6
  3288  03BE                     l2560:
  3289  03BE  0827               	movf	___fladd@a+3,w
  3290  03BF  00A8               	movwf	??___fladd
  3291  03C0  0728               	addwf	??___fladd,w
  3292  03C1  00A9               	movwf	??___fladd+1
  3293  03C2  0829               	movf	??___fladd+1,w
  3294  03C3  00F4               	movwf	___fladd@aexp
  3295  03C4                     l2562:
  3296  03C4  1FA6               	btfss	___fladd@a+2,7
  3297  03C5  2BC7               	goto	u2961
  3298  03C6  2BC8               	goto	u2960
  3299  03C7                     u2961:
  3300  03C7  2BC9               	goto	l2566
  3301  03C8                     u2960:
  3302  03C8                     l2564:
  3303  03C8  1474               	bsf	___fladd@aexp,0
  3304  03C9                     l2566:
  3305  03C9  0874               	movf	___fladd@aexp,w
  3306  03CA  1903               	btfsc	3,2
  3307  03CB  2BCD               	goto	u2971
  3308  03CC  2BCE               	goto	u2970
  3309  03CD                     u2971:
  3310  03CD  2BDE               	goto	l2576
  3311  03CE                     u2970:
  3312  03CE                     l2568:
  3313  03CE  0A74               	incf	___fladd@aexp,w
  3314  03CF  1D03               	btfss	3,2
  3315  03D0  2BD2               	goto	u2981
  3316  03D1  2BD3               	goto	u2980
  3317  03D2                     u2981:
  3318  03D2  2BDB               	goto	l2572
  3319  03D3                     u2980:
  3320  03D3                     l2570:
  3321  03D3  3000               	movlw	0
  3322  03D4  00A7               	movwf	___fladd@a+3
  3323  03D5  3000               	movlw	0
  3324  03D6  00A6               	movwf	___fladd@a+2
  3325  03D7  3000               	movlw	0
  3326  03D8  00A5               	movwf	___fladd@a+1
  3327  03D9  3000               	movlw	0
  3328  03DA  00A4               	movwf	___fladd@a
  3329  03DB                     l2572:
  3330  03DB  17A6               	bsf	___fladd@a+2,7
  3331  03DC                     l2574:
  3332  03DC  01A7               	clrf	___fladd@a+3
  3333  03DD  2BE6               	goto	l599
  3334  03DE                     l2576:
  3335  03DE  3000               	movlw	0
  3336  03DF  00A7               	movwf	___fladd@a+3
  3337  03E0  3000               	movlw	0
  3338  03E1  00A6               	movwf	___fladd@a+2
  3339  03E2  3000               	movlw	0
  3340  03E3  00A5               	movwf	___fladd@a+1
  3341  03E4  3000               	movlw	0
  3342  03E5  00A4               	movwf	___fladd@a
  3343  03E6                     l599:
  3344  03E6  0875               	movf	___fladd@bexp,w
  3345  03E7  0274               	subwf	___fladd@aexp,w
  3346  03E8  1803               	skipnc
  3347  03E9  2BEB               	goto	u2991
  3348  03EA  2BEC               	goto	u2990
  3349  03EB                     u2991:
  3350  03EB  2C30               	goto	l2612
  3351  03EC                     u2990:
  3352  03EC                     l2578:
  3353  03EC  1F73               	btfss	___fladd@signs,6
  3354  03ED  2BEF               	goto	u3001
  3355  03EE  2BF0               	goto	u3000
  3356  03EF                     u3001:
  3357  03EF  2BF4               	goto	l2582
  3358  03F0                     u3000:
  3359  03F0                     l2580:
  3360  03F0  3080               	movlw	128
  3361  03F1  00A8               	movwf	??___fladd
  3362  03F2  0828               	movf	??___fladd,w
  3363  03F3  06F3               	xorwf	___fladd@signs,f
  3364  03F4                     l2582:
  3365  03F4  0875               	movf	___fladd@bexp,w
  3366  03F5  00A8               	movwf	??___fladd
  3367  03F6  0828               	movf	??___fladd,w
  3368  03F7  00F6               	movwf	___fladd@grs
  3369  03F8                     l2584:
  3370  03F8  0874               	movf	___fladd@aexp,w
  3371  03F9  00A8               	movwf	??___fladd
  3372  03FA  0828               	movf	??___fladd,w
  3373  03FB  00F5               	movwf	___fladd@bexp
  3374  03FC                     l2586:
  3375  03FC  0876               	movf	___fladd@grs,w
  3376  03FD  00A8               	movwf	??___fladd
  3377  03FE  0828               	movf	??___fladd,w
  3378  03FF  00F4               	movwf	___fladd@aexp
  3379  0400                     l2588:
  3380  0400  0820               	movf	___fladd@b,w
  3381  0401  00A8               	movwf	??___fladd
  3382  0402  0828               	movf	??___fladd,w
  3383  0403  00F6               	movwf	___fladd@grs
  3384  0404                     l2590:
  3385  0404  0824               	movf	___fladd@a,w
  3386  0405  00A8               	movwf	??___fladd
  3387  0406  0828               	movf	??___fladd,w
  3388  0407  00A0               	movwf	___fladd@b
  3389  0408                     l2592:
  3390  0408  0876               	movf	___fladd@grs,w
  3391  0409  00A8               	movwf	??___fladd
  3392  040A  0828               	movf	??___fladd,w
  3393  040B  00A4               	movwf	___fladd@a
  3394  040C                     l2594:
  3395  040C  0821               	movf	___fladd@b+1,w
  3396  040D  00A8               	movwf	??___fladd
  3397  040E  0828               	movf	??___fladd,w
  3398  040F  00F6               	movwf	___fladd@grs
  3399  0410                     l2596:
  3400  0410  0825               	movf	___fladd@a+1,w
  3401  0411  00A8               	movwf	??___fladd
  3402  0412  0828               	movf	??___fladd,w
  3403  0413  00A1               	movwf	___fladd@b+1
  3404  0414                     l2598:
  3405  0414  0876               	movf	___fladd@grs,w
  3406  0415  00A8               	movwf	??___fladd
  3407  0416  0828               	movf	??___fladd,w
  3408  0417  00A5               	movwf	___fladd@a+1
  3409  0418                     l2600:
  3410  0418  0822               	movf	___fladd@b+2,w
  3411  0419  00A8               	movwf	??___fladd
  3412  041A  0828               	movf	??___fladd,w
  3413  041B  00F6               	movwf	___fladd@grs
  3414  041C                     l2602:
  3415  041C  0826               	movf	___fladd@a+2,w
  3416  041D  00A8               	movwf	??___fladd
  3417  041E  0828               	movf	??___fladd,w
  3418  041F  00A2               	movwf	___fladd@b+2
  3419  0420                     l2604:
  3420  0420  0876               	movf	___fladd@grs,w
  3421  0421  00A8               	movwf	??___fladd
  3422  0422  0828               	movf	??___fladd,w
  3423  0423  00A6               	movwf	___fladd@a+2
  3424  0424                     l2606:
  3425  0424  0823               	movf	___fladd@b+3,w
  3426  0425  00A8               	movwf	??___fladd
  3427  0426  0828               	movf	??___fladd,w
  3428  0427  00F6               	movwf	___fladd@grs
  3429  0428                     l2608:
  3430  0428  0827               	movf	___fladd@a+3,w
  3431  0429  00A8               	movwf	??___fladd
  3432  042A  0828               	movf	??___fladd,w
  3433  042B  00A3               	movwf	___fladd@b+3
  3434  042C                     l2610:
  3435  042C  0876               	movf	___fladd@grs,w
  3436  042D  00A8               	movwf	??___fladd
  3437  042E  0828               	movf	??___fladd,w
  3438  042F  00A7               	movwf	___fladd@a+3
  3439  0430                     l2612:
  3440  0430  01F6               	clrf	___fladd@grs
  3441  0431                     l2614:
  3442  0431  0874               	movf	___fladd@aexp,w
  3443  0432  00A8               	movwf	??___fladd
  3444  0433  01A9               	clrf	??___fladd+1
  3445  0434  0829               	movf	??___fladd+1,w
  3446  0435  00AB               	movwf	??___fladd+3
  3447  0436  0875               	movf	___fladd@bexp,w
  3448  0437  0228               	subwf	??___fladd,w
  3449  0438  00AA               	movwf	??___fladd+2
  3450  0439  1C03               	skipc
  3451  043A  03AB               	decf	??___fladd+3,f
  3452  043B  082B               	movf	??___fladd+3,w
  3453  043C  3A80               	xorlw	128
  3454  043D  00FF               	movwf	btemp+1
  3455  043E  3080               	movlw	128
  3456  043F  027F               	subwf	btemp+1,w
  3457  0440  1D03               	skipz
  3458  0441  2C44               	goto	u3015
  3459  0442  301A               	movlw	26
  3460  0443  022A               	subwf	??___fladd+2,w
  3461  0444                     u3015:
  3462  0444  1C03               	skipc
  3463  0445  2C47               	goto	u3011
  3464  0446  2C48               	goto	u3010
  3465  0447                     u3011:
  3466  0447  2C89               	goto	l2630
  3467  0448                     u3010:
  3468  0448                     l2616:
  3469  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3471  044A  0823               	movf	___fladd@b+3,w
  3472  044B  0422               	iorwf	___fladd@b+2,w
  3473  044C  0421               	iorwf	___fladd@b+1,w
  3474  044D  0420               	iorwf	___fladd@b,w
  3475  044E  1D03               	skipz
  3476  044F  2C51               	goto	u3021
  3477  0450  2C53               	goto	u3020
  3478  0451                     u3021:
  3479  0451  3001               	movlw	1
  3480  0452  2C54               	goto	u3030
  3481  0453                     u3020:
  3482  0453  3000               	movlw	0
  3483  0454                     u3030:
  3484  0454  00A8               	movwf	??___fladd
  3485  0455  0828               	movf	??___fladd,w
  3486  0456  00F6               	movwf	___fladd@grs
  3487  0457  3000               	movlw	0
  3488  0458  00A3               	movwf	___fladd@b+3
  3489  0459  3000               	movlw	0
  3490  045A  00A2               	movwf	___fladd@b+2
  3491  045B  3000               	movlw	0
  3492  045C  00A1               	movwf	___fladd@b+1
  3493  045D  3000               	movlw	0
  3494  045E  00A0               	movwf	___fladd@b
  3495  045F  0874               	movf	___fladd@aexp,w
  3496  0460  00A8               	movwf	??___fladd
  3497  0461  0828               	movf	??___fladd,w
  3498  0462  00F5               	movwf	___fladd@bexp
  3499  0463  2C8F               	goto	l603
  3500  0464                     l605:
  3501  0464  1C76               	btfss	___fladd@grs,0
  3502  0465  2C67               	goto	u3041
  3503  0466  2C68               	goto	u3040
  3504  0467                     u3041:
  3505  0467  2C73               	goto	l2620
  3506  0468                     u3040:
  3507  0468                     l2618:
  3508  0468  0876               	movf	___fladd@grs,w
  3509  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3510  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3511  046B  00A8               	movwf	??___fladd
  3512  046C  1003               	clrc
  3513  046D  0C28               	rrf	??___fladd,w
  3514  046E  3801               	iorlw	1
  3515  046F  00A9               	movwf	??___fladd+1
  3516  0470  0829               	movf	??___fladd+1,w
  3517  0471  00F6               	movwf	___fladd@grs
  3518  0472  2C75               	goto	l2622
  3519  0473                     l2620:
  3520  0473  1003               	clrc
  3521  0474  0CF6               	rrf	___fladd@grs,f
  3522  0475                     l2622:
  3523  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0477  1C20               	btfss	___fladd@b,0
  3526  0478  2C7A               	goto	u3051
  3527  0479  2C7B               	goto	u3050
  3528  047A                     u3051:
  3529  047A  2C7C               	goto	l2626
  3530  047B                     u3050:
  3531  047B                     l2624:
  3532  047B  17F6               	bsf	___fladd@grs,7
  3533  047C                     l2626:
  3534  047C  3001               	movlw	1
  3535  047D  00A8               	movwf	??___fladd
  3536  047E                     u3065:
  3537  047E  0D23               	rlf	___fladd@b+3,w
  3538  047F  0CA3               	rrf	___fladd@b+3,f
  3539  0480  0CA2               	rrf	___fladd@b+2,f
  3540  0481  0CA1               	rrf	___fladd@b+1,f
  3541  0482  0CA0               	rrf	___fladd@b,f
  3542  0483  0BA8               	decfsz	??___fladd& (0+127),f
  3543  0484  2C7E               	goto	u3065
  3544  0485                     l2628:
  3545  0485  3001               	movlw	1
  3546  0486  00A8               	movwf	??___fladd
  3547  0487  0828               	movf	??___fladd,w
  3548  0488  07F5               	addwf	___fladd@bexp,f
  3549  0489                     l2630:
  3550  0489  0874               	movf	___fladd@aexp,w
  3551  048A  0275               	subwf	___fladd@bexp,w
  3552  048B  1C03               	skipc
  3553  048C  2C8E               	goto	u3071
  3554  048D  2C8F               	goto	u3070
  3555  048E                     u3071:
  3556  048E  2C64               	goto	l605
  3557  048F                     u3070:
  3558  048F                     l603:
  3559  048F  1B73               	btfsc	___fladd@signs,6
  3560  0490  2C92               	goto	u3081
  3561  0491  2C93               	goto	u3080
  3562  0492                     u3081:
  3563  0492  2CE2               	goto	l2656
  3564  0493                     u3080:
  3565  0493                     l2632:
  3566  0493  0875               	movf	___fladd@bexp,w
  3567  0494  1D03               	btfss	3,2
  3568  0495  2C97               	goto	u3091
  3569  0496  2C98               	goto	u3090
  3570  0497                     u3091:
  3571  0497  2CA3               	goto	l2638
  3572  0498                     u3090:
  3573  0498                     l2634:
  3574  0498  3000               	movlw	0
  3575  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3576  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3577  049B  00A3               	movwf	?___fladd+3
  3578  049C  3000               	movlw	0
  3579  049D  00A2               	movwf	?___fladd+2
  3580  049E  3000               	movlw	0
  3581  049F  00A1               	movwf	?___fladd+1
  3582  04A0  3000               	movlw	0
  3583  04A1  00A0               	movwf	?___fladd
  3584  04A2  2E12               	goto	l612
  3585  04A3                     l2638:
  3586  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3587  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3588  04A5  0824               	movf	___fladd@a,w
  3589  04A6  07A0               	addwf	___fladd@b,f
  3590  04A7  0825               	movf	___fladd@a+1,w
  3591  04A8  1103               	clrz
  3592  04A9  1803               	skipnc
  3593  04AA  3E01               	addlw	1
  3594  04AB  1903               	skipnz
  3595  04AC  2CAE               	goto	u3101
  3596  04AD  07A1               	addwf	___fladd@b+1,f
  3597  04AE                     u3101:
  3598  04AE  0826               	movf	___fladd@a+2,w
  3599  04AF  1103               	clrz
  3600  04B0  1803               	skipnc
  3601  04B1  3E01               	addlw	1
  3602  04B2  1903               	skipnz
  3603  04B3  2CB5               	goto	u3102
  3604  04B4  07A2               	addwf	___fladd@b+2,f
  3605  04B5                     u3102:
  3606  04B5  0827               	movf	___fladd@a+3,w
  3607  04B6  1103               	clrz
  3608  04B7  1803               	skipnc
  3609  04B8  3E01               	addlw	1
  3610  04B9  1903               	skipnz
  3611  04BA  2CBC               	goto	u3103
  3612  04BB  07A3               	addwf	___fladd@b+3,f
  3613  04BC                     u3103:
  3614  04BC                     l2640:
  3615  04BC  1C23               	btfss	___fladd@b+3,0
  3616  04BD  2CBF               	goto	u3111
  3617  04BE  2CC0               	goto	u3110
  3618  04BF                     u3111:
  3619  04BF  2D98               	goto	l2690
  3620  04C0                     u3110:
  3621  04C0                     l2642:
  3622  04C0  1C76               	btfss	___fladd@grs,0
  3623  04C1  2CC3               	goto	u3121
  3624  04C2  2CC4               	goto	u3120
  3625  04C3                     u3121:
  3626  04C3  2CCD               	goto	l2646
  3627  04C4                     u3120:
  3628  04C4                     l2644:
  3629  04C4  0876               	movf	___fladd@grs,w
  3630  04C5  00A8               	movwf	??___fladd
  3631  04C6  1003               	clrc
  3632  04C7  0C28               	rrf	??___fladd,w
  3633  04C8  3801               	iorlw	1
  3634  04C9  00A9               	movwf	??___fladd+1
  3635  04CA  0829               	movf	??___fladd+1,w
  3636  04CB  00F6               	movwf	___fladd@grs
  3637  04CC  2CCF               	goto	l2648
  3638  04CD                     l2646:
  3639  04CD  1003               	clrc
  3640  04CE  0CF6               	rrf	___fladd@grs,f
  3641  04CF                     l2648:
  3642  04CF  1C20               	btfss	___fladd@b,0
  3643  04D0  2CD2               	goto	u3131
  3644  04D1  2CD3               	goto	u3130
  3645  04D2                     u3131:
  3646  04D2  2CD4               	goto	l2652
  3647  04D3                     u3130:
  3648  04D3                     l2650:
  3649  04D3  17F6               	bsf	___fladd@grs,7
  3650  04D4                     l2652:
  3651  04D4  3001               	movlw	1
  3652  04D5  00A8               	movwf	??___fladd
  3653  04D6                     u3145:
  3654  04D6  0D23               	rlf	___fladd@b+3,w
  3655  04D7  0CA3               	rrf	___fladd@b+3,f
  3656  04D8  0CA2               	rrf	___fladd@b+2,f
  3657  04D9  0CA1               	rrf	___fladd@b+1,f
  3658  04DA  0CA0               	rrf	___fladd@b,f
  3659  04DB  0BA8               	decfsz	??___fladd& (0+127),f
  3660  04DC  2CD6               	goto	u3145
  3661  04DD                     l2654:
  3662  04DD  3001               	movlw	1
  3663  04DE  00A8               	movwf	??___fladd
  3664  04DF  0828               	movf	??___fladd,w
  3665  04E0  07F5               	addwf	___fladd@bexp,f
  3666  04E1  2D98               	goto	l2690
  3667  04E2                     l2656:
  3668  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3669  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3670  04E4  0823               	movf	___fladd@b+3,w
  3671  04E5  3A80               	xorlw	128
  3672  04E6  00FF               	movwf	btemp+1
  3673  04E7  0827               	movf	___fladd@a+3,w
  3674  04E8  3A80               	xorlw	128
  3675  04E9  027F               	subwf	btemp+1,w
  3676  04EA  1D03               	skipz
  3677  04EB  2CF6               	goto	u3153
  3678  04EC  0826               	movf	___fladd@a+2,w
  3679  04ED  0222               	subwf	___fladd@b+2,w
  3680  04EE  1D03               	skipz
  3681  04EF  2CF6               	goto	u3153
  3682  04F0  0825               	movf	___fladd@a+1,w
  3683  04F1  0221               	subwf	___fladd@b+1,w
  3684  04F2  1D03               	skipz
  3685  04F3  2CF6               	goto	u3153
  3686  04F4  0824               	movf	___fladd@a,w
  3687  04F5  0220               	subwf	___fladd@b,w
  3688  04F6                     u3153:
  3689  04F6  1803               	skipnc
  3690  04F7  2CF9               	goto	u3151
  3691  04F8  2CFA               	goto	u3150
  3692  04F9                     u3151:
  3693  04F9  2D52               	goto	l2666
  3694  04FA                     u3150:
  3695  04FA                     l2658:
  3696  04FA  30FF               	movlw	255
  3697  04FB  00A8               	movwf	??___fladd
  3698  04FC  30FF               	movlw	255
  3699  04FD  00A9               	movwf	??___fladd+1
  3700  04FE  30FF               	movlw	255
  3701  04FF  00AA               	movwf	??___fladd+2
  3702  0500  30FF               	movlw	255
  3703  0501  00AB               	movwf	??___fladd+3
  3704  0502  0824               	movf	___fladd@a,w
  3705  0503  00AC               	movwf	??___fladd+4
  3706  0504  0825               	movf	___fladd@a+1,w
  3707  0505  00AD               	movwf	??___fladd+5
  3708  0506  0826               	movf	___fladd@a+2,w
  3709  0507  00AE               	movwf	??___fladd+6
  3710  0508  0827               	movf	___fladd@a+3,w
  3711  0509  00AF               	movwf	??___fladd+7
  3712  050A  0820               	movf	___fladd@b,w
  3713  050B  02AC               	subwf	??___fladd+4,f
  3714  050C  0821               	movf	___fladd@b+1,w
  3715  050D  1C03               	skipc
  3716  050E  0F21               	incfsz	___fladd@b+1,w
  3717  050F  2D11               	goto	u3161
  3718  0510  2D12               	goto	u3162
  3719  0511                     u3161:
  3720  0511  02AD               	subwf	??___fladd+5,f
  3721  0512                     u3162:
  3722  0512  0822               	movf	___fladd@b+2,w
  3723  0513  1C03               	skipc
  3724  0514  0F22               	incfsz	___fladd@b+2,w
  3725  0515  2D17               	goto	u3163
  3726  0516  2D18               	goto	u3164
  3727  0517                     u3163:
  3728  0517  02AE               	subwf	??___fladd+6,f
  3729  0518                     u3164:
  3730  0518  0823               	movf	___fladd@b+3,w
  3731  0519  1C03               	skipc
  3732  051A  0F23               	incfsz	___fladd@b+3,w
  3733  051B  2D1D               	goto	u3165
  3734  051C  2D1E               	goto	u3166
  3735  051D                     u3165:
  3736  051D  02AF               	subwf	??___fladd+7,f
  3737  051E                     u3166:
  3738  051E  082C               	movf	??___fladd+4,w
  3739  051F  07A8               	addwf	??___fladd,f
  3740  0520  082D               	movf	??___fladd+5,w
  3741  0521  1803               	skipnc
  3742  0522  0F2D               	incfsz	??___fladd+5,w
  3743  0523  2D25               	goto	u3170
  3744  0524  2D26               	goto	u3171
  3745  0525                     u3170:
  3746  0525  07A9               	addwf	??___fladd+1,f
  3747  0526                     u3171:
  3748  0526  082E               	movf	??___fladd+6,w
  3749  0527  1803               	skipnc
  3750  0528  0F2E               	incfsz	??___fladd+6,w
  3751  0529  2D2B               	goto	u3172
  3752  052A  2D2C               	goto	u3173
  3753  052B                     u3172:
  3754  052B  07AA               	addwf	??___fladd+2,f
  3755  052C                     u3173:
  3756  052C  082F               	movf	??___fladd+7,w
  3757  052D  1803               	skipnc
  3758  052E  0A2F               	incf	??___fladd+7,w
  3759  052F  07AB               	addwf	??___fladd+3,f
  3760  0530  082B               	movf	??___fladd+3,w
  3761  0531  00A3               	movwf	___fladd@b+3
  3762  0532  082A               	movf	??___fladd+2,w
  3763  0533  00A2               	movwf	___fladd@b+2
  3764  0534  0829               	movf	??___fladd+1,w
  3765  0535  00A1               	movwf	___fladd@b+1
  3766  0536  0828               	movf	??___fladd,w
  3767  0537  00A0               	movwf	___fladd@b
  3768  0538                     l2660:
  3769  0538  3080               	movlw	128
  3770  0539  00A8               	movwf	??___fladd
  3771  053A  0828               	movf	??___fladd,w
  3772  053B  06F3               	xorwf	___fladd@signs,f
  3773  053C  09F6               	comf	___fladd@grs,f
  3774  053D  0AF6               	incf	___fladd@grs,f
  3775  053E                     l2662:
  3776  053E  0876               	movf	___fladd@grs,w
  3777  053F  1D03               	btfss	3,2
  3778  0540  2D42               	goto	u3181
  3779  0541  2D43               	goto	u3180
  3780  0542                     u3181:
  3781  0542  2D60               	goto	l620
  3782  0543                     u3180:
  3783  0543                     l2664:
  3784  0543  3001               	movlw	1
  3785  0544  07A0               	addwf	___fladd@b,f
  3786  0545  3000               	movlw	0
  3787  0546  1803               	skipnc
  3788  0547  3001               	movlw	1
  3789  0548  07A1               	addwf	___fladd@b+1,f
  3790  0549  3000               	movlw	0
  3791  054A  1803               	skipnc
  3792  054B  3001               	movlw	1
  3793  054C  07A2               	addwf	___fladd@b+2,f
  3794  054D  3000               	movlw	0
  3795  054E  1803               	skipnc
  3796  054F  3001               	movlw	1
  3797  0550  07A3               	addwf	___fladd@b+3,f
  3798  0551  2D60               	goto	l620
  3799  0552                     l2666:
  3800  0552  0824               	movf	___fladd@a,w
  3801  0553  02A0               	subwf	___fladd@b,f
  3802  0554  0825               	movf	___fladd@a+1,w
  3803  0555  1C03               	skipc
  3804  0556  0F25               	incfsz	___fladd@a+1,w
  3805  0557  02A1               	subwf	___fladd@b+1,f
  3806  0558  0826               	movf	___fladd@a+2,w
  3807  0559  1C03               	skipc
  3808  055A  0F26               	incfsz	___fladd@a+2,w
  3809  055B  02A2               	subwf	___fladd@b+2,f
  3810  055C  0827               	movf	___fladd@a+3,w
  3811  055D  1C03               	skipc
  3812  055E  0F27               	incfsz	___fladd@a+3,w
  3813  055F  02A3               	subwf	___fladd@b+3,f
  3814  0560                     l620:
  3815  0560  0823               	movf	___fladd@b+3,w
  3816  0561  0422               	iorwf	___fladd@b+2,w
  3817  0562  0421               	iorwf	___fladd@b+1,w
  3818  0563  0420               	iorwf	___fladd@b,w
  3819  0564  1D03               	skipz
  3820  0565  2D67               	goto	u3191
  3821  0566  2D68               	goto	u3190
  3822  0567                     u3191:
  3823  0567  2D94               	goto	l2688
  3824  0568                     u3190:
  3825  0568                     l2668:
  3826  0568  0876               	movf	___fladd@grs,w
  3827  0569  1D03               	btfss	3,2
  3828  056A  2D6C               	goto	u3201
  3829  056B  2D6D               	goto	u3200
  3830  056C                     u3201:
  3831  056C  2D94               	goto	l2688
  3832  056D                     u3200:
  3833  056D                     l2670:
  3834  056D  3000               	movlw	0
  3835  056E  00A3               	movwf	?___fladd+3
  3836  056F  3000               	movlw	0
  3837  0570  00A2               	movwf	?___fladd+2
  3838  0571  3000               	movlw	0
  3839  0572  00A1               	movwf	?___fladd+1
  3840  0573  3000               	movlw	0
  3841  0574  00A0               	movwf	?___fladd
  3842  0575  2E12               	goto	l612
  3843  0576                     l2674:
  3844  0576  3001               	movlw	1
  3845  0577  00A8               	movwf	??___fladd
  3846  0578                     u3215:
  3847  0578  1003               	clrc
  3848  0579  0DA0               	rlf	___fladd@b,f
  3849  057A  0DA1               	rlf	___fladd@b+1,f
  3850  057B  0DA2               	rlf	___fladd@b+2,f
  3851  057C  0DA3               	rlf	___fladd@b+3,f
  3852  057D  0BA8               	decfsz	??___fladd,f
  3853  057E  2D78               	goto	u3215
  3854  057F                     l2676:
  3855  057F  1FF6               	btfss	___fladd@grs,7
  3856  0580  2D82               	goto	u3221
  3857  0581  2D83               	goto	u3220
  3858  0582                     u3221:
  3859  0582  2D84               	goto	l624
  3860  0583                     u3220:
  3861  0583                     l2678:
  3862  0583  1420               	bsf	___fladd@b,0
  3863  0584                     l624:
  3864  0584  1C76               	btfss	___fladd@grs,0
  3865  0585  2D87               	goto	u3231
  3866  0586  2D88               	goto	u3230
  3867  0587                     u3231:
  3868  0587  2D8B               	goto	l2682
  3869  0588                     u3230:
  3870  0588                     l2680:
  3871  0588  1403               	setc
  3872  0589  0DF6               	rlf	___fladd@grs,f
  3873  058A  2D8D               	goto	l2684
  3874  058B                     l2682:
  3875  058B  1003               	clrc
  3876  058C  0DF6               	rlf	___fladd@grs,f
  3877  058D                     l2684:
  3878  058D  0875               	movf	___fladd@bexp,w
  3879  058E  1903               	btfsc	3,2
  3880  058F  2D91               	goto	u3241
  3881  0590  2D92               	goto	u3240
  3882  0591                     u3241:
  3883  0591  2D94               	goto	l2688
  3884  0592                     u3240:
  3885  0592                     l2686:
  3886  0592  3001               	movlw	1
  3887  0593  02F5               	subwf	___fladd@bexp,f
  3888  0594                     l2688:
  3889  0594  1FA2               	btfss	___fladd@b+2,7
  3890  0595  2D97               	goto	u3251
  3891  0596  2D98               	goto	u3250
  3892  0597                     u3251:
  3893  0597  2D76               	goto	l2674
  3894  0598                     u3250:
  3895  0598                     l2690:
  3896  0598  01F4               	clrf	___fladd@aexp
  3897  0599                     l2692:
  3898  0599  1FF6               	btfss	___fladd@grs,7
  3899  059A  2D9C               	goto	u3261
  3900  059B  2D9D               	goto	u3260
  3901  059C                     u3261:
  3902  059C  2DAB               	goto	l2700
  3903  059D                     u3260:
  3904  059D                     l2694:
  3905  059D  0876               	movf	___fladd@grs,w
  3906  059E  397F               	andlw	127
  3907  059F  1903               	btfsc	3,2
  3908  05A0  2DA2               	goto	u3271
  3909  05A1  2DA3               	goto	u3270
  3910  05A2                     u3271:
  3911  05A2  2DA6               	goto	l630
  3912  05A3                     u3270:
  3913  05A3                     l2696:
  3914  05A3  01F4               	clrf	___fladd@aexp
  3915  05A4  0AF4               	incf	___fladd@aexp,f
  3916  05A5  2DAB               	goto	l2700
  3917  05A6                     l630:
  3918  05A6  1C20               	btfss	___fladd@b,0
  3919  05A7  2DA9               	goto	u3281
  3920  05A8  2DAA               	goto	u3280
  3921  05A9                     u3281:
  3922  05A9  2DAB               	goto	l2700
  3923  05AA                     u3280:
  3924  05AA  2DA3               	goto	l2696
  3925  05AB                     l2700:
  3926  05AB  0874               	movf	___fladd@aexp,w
  3927  05AC  1903               	btfsc	3,2
  3928  05AD  2DAF               	goto	u3291
  3929  05AE  2DB0               	goto	u3290
  3930  05AF                     u3291:
  3931  05AF  2DE4               	goto	l633
  3932  05B0                     u3290:
  3933  05B0                     l2702:
  3934  05B0  3001               	movlw	1
  3935  05B1  07A0               	addwf	___fladd@b,f
  3936  05B2  3000               	movlw	0
  3937  05B3  1803               	skipnc
  3938  05B4  3001               	movlw	1
  3939  05B5  07A1               	addwf	___fladd@b+1,f
  3940  05B6  3000               	movlw	0
  3941  05B7  1803               	skipnc
  3942  05B8  3001               	movlw	1
  3943  05B9  07A2               	addwf	___fladd@b+2,f
  3944  05BA  3000               	movlw	0
  3945  05BB  1803               	skipnc
  3946  05BC  3001               	movlw	1
  3947  05BD  07A3               	addwf	___fladd@b+3,f
  3948  05BE                     l2704:
  3949  05BE  1C23               	btfss	___fladd@b+3,0
  3950  05BF  2DC1               	goto	u3301
  3951  05C0  2DC2               	goto	u3300
  3952  05C1                     u3301:
  3953  05C1  2DE4               	goto	l633
  3954  05C2                     u3300:
  3955  05C2                     l2706:
  3956  05C2  0820               	movf	___fladd@b,w
  3957  05C3  00A8               	movwf	??___fladd
  3958  05C4  0821               	movf	___fladd@b+1,w
  3959  05C5  00A9               	movwf	??___fladd+1
  3960  05C6  0822               	movf	___fladd@b+2,w
  3961  05C7  00AA               	movwf	??___fladd+2
  3962  05C8  0823               	movf	___fladd@b+3,w
  3963  05C9  00AB               	movwf	??___fladd+3
  3964  05CA  3001               	movlw	1
  3965  05CB  00AC               	movwf	??___fladd+4
  3966  05CC                     u3315:
  3967  05CC  0D2B               	rlf	??___fladd+3,w
  3968  05CD  0CAB               	rrf	??___fladd+3,f
  3969  05CE  0CAA               	rrf	??___fladd+2,f
  3970  05CF  0CA9               	rrf	??___fladd+1,f
  3971  05D0  0CA8               	rrf	??___fladd,f
  3972  05D1                     u3310:
  3973  05D1  0BAC               	decfsz	??___fladd+4,f
  3974  05D2  2DCC               	goto	u3315
  3975  05D3  082B               	movf	??___fladd+3,w
  3976  05D4  00A3               	movwf	___fladd@b+3
  3977  05D5  082A               	movf	??___fladd+2,w
  3978  05D6  00A2               	movwf	___fladd@b+2
  3979  05D7  0829               	movf	??___fladd+1,w
  3980  05D8  00A1               	movwf	___fladd@b+1
  3981  05D9  0828               	movf	??___fladd,w
  3982  05DA  00A0               	movwf	___fladd@b
  3983  05DB  0A75               	incf	___fladd@bexp,w
  3984  05DC  1903               	btfsc	3,2
  3985  05DD  2DDF               	goto	u3321
  3986  05DE  2DE0               	goto	u3320
  3987  05DF                     u3321:
  3988  05DF  2DE4               	goto	l633
  3989  05E0                     u3320:
  3990  05E0                     l2708:
  3991  05E0  3001               	movlw	1
  3992  05E1  00A8               	movwf	??___fladd
  3993  05E2  0828               	movf	??___fladd,w
  3994  05E3  07F5               	addwf	___fladd@bexp,f
  3995  05E4                     l633:
  3996  05E4  0A75               	incf	___fladd@bexp,w
  3997  05E5  1903               	btfsc	3,2
  3998  05E6  2DE8               	goto	u3331
  3999  05E7  2DE9               	goto	u3330
  4000  05E8                     u3331:
  4001  05E8  2DEE               	goto	l2712
  4002  05E9                     u3330:
  4003  05E9                     l2710:
  4004  05E9  0875               	movf	___fladd@bexp,w
  4005  05EA  1D03               	btfss	3,2
  4006  05EB  2DED               	goto	u3341
  4007  05EC  2DEE               	goto	u3340
  4008  05ED                     u3341:
  4009  05ED  2DFC               	goto	l2718
  4010  05EE                     u3340:
  4011  05EE                     l2712:
  4012  05EE  3000               	movlw	0
  4013  05EF  00A3               	movwf	___fladd@b+3
  4014  05F0  3000               	movlw	0
  4015  05F1  00A2               	movwf	___fladd@b+2
  4016  05F2  3000               	movlw	0
  4017  05F3  00A1               	movwf	___fladd@b+1
  4018  05F4  3000               	movlw	0
  4019  05F5  00A0               	movwf	___fladd@b
  4020  05F6                     l2714:
  4021  05F6  0875               	movf	___fladd@bexp,w
  4022  05F7  1D03               	btfss	3,2
  4023  05F8  2DFA               	goto	u3351
  4024  05F9  2DFB               	goto	u3350
  4025  05FA                     u3351:
  4026  05FA  2DFC               	goto	l2718
  4027  05FB                     u3350:
  4028  05FB                     l2716:
  4029  05FB  01F3               	clrf	___fladd@signs
  4030  05FC                     l2718:
  4031  05FC  1C75               	btfss	___fladd@bexp,0
  4032  05FD  2DFF               	goto	u3361
  4033  05FE  2E00               	goto	u3360
  4034  05FF                     u3361:
  4035  05FF  2E02               	goto	l2722
  4036  0600                     u3360:
  4037  0600                     l2720:
  4038  0600  17A2               	bsf	___fladd@b+2,7
  4039  0601  2E06               	goto	l641
  4040  0602                     l2722:
  4041  0602  307F               	movlw	127
  4042  0603  00A8               	movwf	??___fladd
  4043  0604  0828               	movf	??___fladd,w
  4044  0605  05A2               	andwf	___fladd@b+2,f
  4045  0606                     l641:
  4046  0606  0875               	movf	___fladd@bexp,w
  4047  0607  00A8               	movwf	??___fladd
  4048  0608  1003               	clrc
  4049  0609  0C28               	rrf	??___fladd,w
  4050  060A  00A9               	movwf	??___fladd+1
  4051  060B  0829               	movf	??___fladd+1,w
  4052  060C  00A3               	movwf	___fladd@b+3
  4053  060D                     l2724:
  4054  060D  1FF3               	btfss	___fladd@signs,7
  4055  060E  2E10               	goto	u3371
  4056  060F  2E11               	goto	u3370
  4057  0610                     u3371:
  4058  0610  2E12               	goto	l642
  4059  0611                     u3370:
  4060  0611                     l2726:
  4061  0611  17A3               	bsf	___fladd@b+3,7
  4062  0612                     l642:
  4063  0612                     l612:
  4064  0612  0008               	return
  4065  0613                     __end_of___fladd:
  4066                           
  4067                           	psect	text15
  4068  0ADB                     __ptext15:	
  4069 ;; *************** function _cursorLCD *****************
  4070 ;; Defined at:
  4071 ;;		line 50 in file "LCDD2.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  fila            1    wreg     unsigned char 
  4074 ;;  columna         1    6[COMMON] unsigned char 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  fila            1    8[COMMON] unsigned char 
  4077 ;;  temp            1    9[COMMON] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         1       0       0       0       0
  4088 ;;      Locals:         2       0       0       0       0
  4089 ;;      Temps:          1       0       0       0       0
  4090 ;;      Totals:         4       0       0       0       0
  4091 ;;Total ram usage:        4 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		_comandoLCD
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _cursorLCD
  4103  0ADB                     _cursorLCD:
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4107                           ;cursorLCD@fila stored from wreg
  4108  0ADB  00F8               	movwf	cursorLCD@fila
  4109  0ADC                     l2344:
  4110                           
  4111                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  4112  0ADC  0378               	decf	cursorLCD@fila,w
  4113  0ADD  1D03               	btfss	3,2
  4114  0ADE  2AE0               	goto	u2681
  4115  0ADF  2AE1               	goto	u2680
  4116  0AE0                     u2681:
  4117  0AE0  2AEC               	goto	l2350
  4118  0AE1                     u2680:
  4119  0AE1                     l2346:
  4120                           
  4121                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  4122  0AE1  0876               	movf	cursorLCD@columna,w
  4123  0AE2  3E7F               	addlw	127
  4124  0AE3  00F7               	movwf	??_cursorLCD
  4125  0AE4  0877               	movf	??_cursorLCD,w
  4126  0AE5  00F9               	movwf	cursorLCD@temp
  4127  0AE6                     l2348:
  4128                           
  4129                           ;LCDD2.c: 54:         comandoLCD(temp);
  4130  0AE6  0879               	movf	cursorLCD@temp,w
  4131  0AE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4132  0AEC                     l2350:
  4133                           
  4134                           ;LCDD2.c: 57:     if(fila == 2){
  4135  0AEC  3002               	movlw	2
  4136  0AED  0678               	xorwf	cursorLCD@fila,w
  4137  0AEE  1D03               	btfss	3,2
  4138  0AEF  2AF1               	goto	u2691
  4139  0AF0  2AF2               	goto	u2690
  4140  0AF1                     u2691:
  4141  0AF1  2AFD               	goto	l208
  4142  0AF2                     u2690:
  4143  0AF2                     l2352:
  4144                           
  4145                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  4146  0AF2  0876               	movf	cursorLCD@columna,w
  4147  0AF3  3EBF               	addlw	191
  4148  0AF4  00F7               	movwf	??_cursorLCD
  4149  0AF5  0877               	movf	??_cursorLCD,w
  4150  0AF6  00F9               	movwf	cursorLCD@temp
  4151  0AF7                     l2354:
  4152                           
  4153                           ;LCDD2.c: 59:         comandoLCD(temp);
  4154  0AF7  0879               	movf	cursorLCD@temp,w
  4155  0AF8  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4156  0AFD                     l208:
  4157  0AFD  0008               	return
  4158  0AFE                     __end_of_cursorLCD:
  4159                           
  4160                           	psect	text16
  4161  0A74                     __ptext16:	
  4162 ;; *************** function _comandoLCD *****************
  4163 ;; Defined at:
  4164 ;;		line 63 in file "LCDD2.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  cmd             1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  cmd             1    5[COMMON] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         1       0       0       0       0
  4180 ;;      Temps:          2       0       0       0       0
  4181 ;;      Totals:         3       0       0       0       0
  4182 ;;Total ram usage:        3 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_initLCD
  4189 ;;		_cursorLCD
  4190 ;;		_ClearLCD
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _comandoLCD
  4196  0A74                     _comandoLCD:
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _comandoLCD: [wreg]
  4200                           ;comandoLCD@cmd stored from wreg
  4201  0A74  00F5               	movwf	comandoLCD@cmd
  4202  0A75                     l2004:
  4203                           
  4204                           ;LCDD2.c: 64:     RC0 = 0;
  4205  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  4206  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  4207  0A77  1007               	bcf	7,0	;volatile
  4208  0A78                     l2006:
  4209                           
  4210                           ;LCDD2.c: 65:     PORTD = cmd;
  4211  0A78  0875               	movf	comandoLCD@cmd,w
  4212  0A79  0088               	movwf	8	;volatile
  4213  0A7A                     l2008:
  4214                           
  4215                           ;LCDD2.c: 66:     RC1 = 1;
  4216  0A7A  1487               	bsf	7,1	;volatile
  4217                           
  4218                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4219  0A7B  300B               	movlw	11
  4220  0A7C  00F4               	movwf	??_comandoLCD+1
  4221  0A7D  3062               	movlw	98
  4222  0A7E  00F3               	movwf	??_comandoLCD
  4223  0A7F                     u4097:
  4224  0A7F  0BF3               	decfsz	??_comandoLCD,f
  4225  0A80  2A7F               	goto	u4097
  4226  0A81  0BF4               	decfsz	??_comandoLCD+1,f
  4227  0A82  2A7F               	goto	u4097
  4228  0A83  0000               	nop
  4229  0A84                     l2010:
  4230                           
  4231                           ;LCDD2.c: 68:     RC1 = 0;
  4232  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0A86  1087               	bcf	7,1	;volatile
  4235  0A87                     l211:
  4236  0A87  0008               	return
  4237  0A88                     __end_of_comandoLCD:
  4238                           
  4239                           	psect	text17
  4240  0BAB                     __ptext17:	
  4241 ;; *************** function _configuracion *****************
  4242 ;; Defined at:
  4243 ;;		line 116 in file "main.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		_ADCconfig
  4266 ;;		_configUART
  4267 ;; This function is called by:
  4268 ;;		_main
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           
  4273                           ;psect for function _configuracion
  4274  0BAB                     _configuracion:
  4275  0BAB                     l2238:	
  4276                           ;incstack = 0
  4277                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4278                           
  4279                           
  4280                           ;main.c: 118:     ANSEL = 0X03;
  4281  0BAB  3003               	movlw	3
  4282  0BAC  1683               	bsf	3,5	;RP0=1, select bank3
  4283  0BAD  1703               	bsf	3,6	;RP1=1, select bank3
  4284  0BAE  0088               	movwf	8	;volatile
  4285  0BAF                     l2240:
  4286                           
  4287                           ;main.c: 119:     ANSELH = 0X00;
  4288  0BAF  0189               	clrf	9	;volatile
  4289  0BB0                     l2242:
  4290                           
  4291                           ;main.c: 120:     TRISA = 0X03;
  4292  0BB0  3003               	movlw	3
  4293  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0BB3  0085               	movwf	5	;volatile
  4296                           
  4297                           ;main.c: 121:     TRISB = 0X00;
  4298  0BB4  0186               	clrf	6	;volatile
  4299                           
  4300                           ;main.c: 122:     TRISC = 0X00;
  4301  0BB5  0187               	clrf	7	;volatile
  4302                           
  4303                           ;main.c: 123:     TRISD = 0X00;
  4304  0BB6  0188               	clrf	8	;volatile
  4305                           
  4306                           ;main.c: 124:     TRISE = 0X00;
  4307  0BB7  0189               	clrf	9	;volatile
  4308                           
  4309                           ;main.c: 125:     PORTA = 0X00;
  4310  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0BBA  0185               	clrf	5	;volatile
  4313                           
  4314                           ;main.c: 126:     PORTB = 0X00;
  4315  0BBB  0186               	clrf	6	;volatile
  4316                           
  4317                           ;main.c: 127:     PORTC = 0X00;
  4318  0BBC  0187               	clrf	7	;volatile
  4319                           
  4320                           ;main.c: 128:     PORTD = 0X00;
  4321  0BBD  0188               	clrf	8	;volatile
  4322                           
  4323                           ;main.c: 129:     PORTE = 0X00;
  4324  0BBE  0189               	clrf	9	;volatile
  4325  0BBF                     l2244:
  4326                           
  4327                           ;main.c: 132:     configUART();
  4328  0BBF  120A  158A  2262  120A  158A  	fcall	_configUART
  4329  0BC4                     l2246:
  4330                           
  4331                           ;main.c: 135:     OSCCONbits.IRCF = 0b111;
  4332  0BC4  3070               	movlw	112
  4333  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  4335  0BC7  048F               	iorwf	15,f	;volatile
  4336  0BC8                     l2248:
  4337                           
  4338                           ;main.c: 136:     OSCCONbits.SCS = 0b1;
  4339  0BC8  140F               	bsf	15,0	;volatile
  4340  0BC9                     l2250:
  4341                           
  4342                           ;main.c: 139:     INTCONbits.GIE = 1;
  4343  0BC9  178B               	bsf	11,7	;volatile
  4344  0BCA                     l2252:
  4345                           
  4346                           ;main.c: 140:     INTCONbits.PEIE = 1;
  4347  0BCA  170B               	bsf	11,6	;volatile
  4348  0BCB                     l2254:
  4349                           
  4350                           ;main.c: 141:     INTCONbits.T0IF = 0;
  4351  0BCB  110B               	bcf	11,2	;volatile
  4352  0BCC                     l2256:
  4353                           
  4354                           ;main.c: 142:     INTCONbits.T0IE = 1;
  4355  0BCC  168B               	bsf	11,5	;volatile
  4356  0BCD                     l2258:
  4357                           
  4358                           ;main.c: 143:     PIE1bits.RCIE = 1;
  4359  0BCD  168C               	bsf	12,5	;volatile
  4360  0BCE                     l2260:
  4361                           
  4362                           ;main.c: 146:     OPTION_REGbits.T0CS = 0;
  4363  0BCE  1281               	bcf	1,5	;volatile
  4364  0BCF                     l2262:
  4365                           
  4366                           ;main.c: 147:     OPTION_REGbits.PSA = 0;
  4367  0BCF  1181               	bcf	1,3	;volatile
  4368  0BD0                     l2264:
  4369                           
  4370                           ;main.c: 148:     OPTION_REGbits.PS2 = 1;
  4371  0BD0  1501               	bsf	1,2	;volatile
  4372  0BD1                     l2266:
  4373                           
  4374                           ;main.c: 149:     OPTION_REGbits.PS1 = 1;
  4375  0BD1  1481               	bsf	1,1	;volatile
  4376  0BD2                     l2268:
  4377                           
  4378                           ;main.c: 150:     OPTION_REGbits.PS0 = 0;
  4379  0BD2  1001               	bcf	1,0	;volatile
  4380  0BD3                     l2270:
  4381                           
  4382                           ;main.c: 155:     ADCconfig(0,0);
  4383  0BD3  01F3               	clrf	ADCconfig@just
  4384  0BD4  3000               	movlw	0
  4385  0BD5  120A  158A  2422  120A  158A  	fcall	_ADCconfig
  4386  0BDA                     l2272:
  4387                           
  4388                           ;main.c: 157:     PIR1bits.ADIF = 0;
  4389  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0BDC  130C               	bcf	12,6	;volatile
  4392  0BDD                     l2274:
  4393                           
  4394                           ;main.c: 158:     PIE1bits.ADIE = 1;
  4395  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4396  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  4397  0BDF  170C               	bsf	12,6	;volatile
  4398  0BE0                     l110:
  4399  0BE0  0008               	return
  4400  0BE1                     __end_of_configuracion:
  4401                           
  4402                           	psect	text18
  4403  0A62                     __ptext18:	
  4404 ;; *************** function _configUART *****************
  4405 ;; Defined at:
  4406 ;;		line 11 in file "ComSerial.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_configuracion
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _configUART
  4436  0A62                     _configUART:
  4437  0A62                     l1930:	
  4438                           ;incstack = 0
  4439                           ; Regs used in _configUART: [wreg]
  4440                           
  4441                           
  4442                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  4443  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  4444  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  4445  0A64  1307               	bcf	7,6	;volatile
  4446                           
  4447                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  4448  0A65  1787               	bsf	7,7	;volatile
  4449  0A66                     l1932:
  4450                           
  4451                           ;ComSerial.c: 15:     SPBRG = 12;
  4452  0A66  300C               	movlw	12
  4453  0A67  0099               	movwf	25	;volatile
  4454  0A68                     l1934:
  4455                           
  4456                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  4457  0A68  1118               	bcf	24,2	;volatile
  4458  0A69                     l1936:
  4459                           
  4460                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  4461  0A69  1698               	bsf	24,5	;volatile
  4462  0A6A                     l1938:
  4463                           
  4464                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  4465  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0A6C  1618               	bsf	24,4	;volatile
  4468  0A6D                     l1940:
  4469                           
  4470                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  4471  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  4472  0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  4473  0A6F  1218               	bcf	24,4	;volatile
  4474  0A70                     l1942:
  4475                           
  4476                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  4477  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0A72  1798               	bsf	24,7	;volatile
  4480  0A73                     l148:
  4481  0A73  0008               	return
  4482  0A74                     __end_of_configUART:
  4483                           
  4484                           	psect	text19
  4485  0C22                     __ptext19:	
  4486 ;; *************** function _ADCconfig *****************
  4487 ;; Defined at:
  4488 ;;		line 10 in file "ADC.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  canal           1    wreg     unsigned char 
  4491 ;;  just            1    3[COMMON] unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  canal           1    6[COMMON] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         1       0       0       0       0
  4504 ;;      Locals:         1       0       0       0       0
  4505 ;;      Temps:          2       0       0       0       0
  4506 ;;      Totals:         4       0       0       0       0
  4507 ;;Total ram usage:        4 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_configuracion
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           
  4518                           ;psect for function _ADCconfig
  4519  0C22                     _ADCconfig:
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
  4523                           ;ADCconfig@canal stored from wreg
  4524  0C22  00F6               	movwf	ADCconfig@canal
  4525  0C23                     l1944:
  4526                           
  4527                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
  4528  0C23  2C3C               	goto	l1956
  4529  0C24                     l1946:
  4530                           
  4531                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
  4532  0C24  303F               	movlw	-193
  4533  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0C27  059F               	andwf	31,f	;volatile
  4536                           
  4537                           ;ADC.c: 18:             break;
  4538  0C28  2C52               	goto	l1958
  4539  0C29                     l1948:
  4540                           
  4541                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
  4542  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0C2B  081F               	movf	31,w	;volatile
  4545  0C2C  393F               	andlw	-193
  4546  0C2D  3840               	iorlw	64
  4547  0C2E  009F               	movwf	31	;volatile
  4548                           
  4549                           ;ADC.c: 21:             break;
  4550  0C2F  2C52               	goto	l1958
  4551  0C30                     l1950:
  4552                           
  4553                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
  4554  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0C32  081F               	movf	31,w	;volatile
  4557  0C33  393F               	andlw	-193
  4558  0C34  3880               	iorlw	128
  4559  0C35  009F               	movwf	31	;volatile
  4560                           
  4561                           ;ADC.c: 24:             break;
  4562  0C36  2C52               	goto	l1958
  4563  0C37                     l1952:
  4564                           
  4565                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  4566  0C37  30C0               	movlw	192
  4567  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0C3A  049F               	iorwf	31,f	;volatile
  4570                           
  4571                           ;ADC.c: 27:             break;
  4572  0C3B  2C52               	goto	l1958
  4573  0C3C                     l1956:
  4574  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  4575  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  4576  0C3E  0E0F               	swapf	15,w	;volatile
  4577  0C3F  3907               	andlw	7
  4578  0C40  00F4               	movwf	??_ADCconfig
  4579  0C41  01F5               	clrf	??_ADCconfig+1
  4580                           
  4581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4582                           ; Switch size 1, requested type "simple"
  4583                           ; Number of cases is 1, Range of values is 0 to 0
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ; direct_byte           11     8 (fixed)
  4588                           ; jumptable            260     6 (fixed)
  4589                           ;	Chosen strategy is simple_byte
  4590  0C42  0875               	movf	??_ADCconfig+1,w
  4591  0C43  3A00               	xorlw	0	; case 0
  4592  0C44  1903               	skipnz
  4593  0C45  2C47               	goto	l3122
  4594  0C46  2C37               	goto	l1952
  4595  0C47                     l3122:
  4596                           
  4597                           ; Switch size 1, requested type "simple"
  4598                           ; Number of cases is 3, Range of values is 4 to 7
  4599                           ; switch strategies available:
  4600                           ; Name         Instructions Cycles
  4601                           ; simple_byte           10     6 (average)
  4602                           ; direct_byte           23    11 (fixed)
  4603                           ; jumptable            263     9 (fixed)
  4604                           ;	Chosen strategy is simple_byte
  4605  0C47  0874               	movf	??_ADCconfig,w
  4606  0C48  3A04               	xorlw	4	; case 4
  4607  0C49  1903               	skipnz
  4608  0C4A  2C24               	goto	l1946
  4609  0C4B  3A02               	xorlw	2	; case 6
  4610  0C4C  1903               	skipnz
  4611  0C4D  2C29               	goto	l1948
  4612  0C4E  3A01               	xorlw	1	; case 7
  4613  0C4F  1903               	skipnz
  4614  0C50  2C30               	goto	l1950
  4615  0C51  2C37               	goto	l1952
  4616  0C52                     l1958:
  4617                           
  4618                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
  4619  0C52  0876               	movf	ADCconfig@canal,w
  4620  0C53  00F4               	movwf	??_ADCconfig
  4621  0C54  0DF4               	rlf	??_ADCconfig,f
  4622  0C55  0DF4               	rlf	??_ADCconfig,f
  4623  0C56  081F               	movf	31,w	;volatile
  4624  0C57  0674               	xorwf	??_ADCconfig,w
  4625  0C58  39C3               	andlw	-61
  4626  0C59  0674               	xorwf	??_ADCconfig,w
  4627  0C5A  009F               	movwf	31	;volatile
  4628  0C5B                     l1960:
  4629                           
  4630                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
  4631  0C5B  109F               	bcf	31,1	;volatile
  4632  0C5C                     l1962:
  4633                           
  4634                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
  4635  0C5C  141F               	bsf	31,0	;volatile
  4636  0C5D                     l1964:
  4637                           
  4638                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
  4639  0C5D  0C73               	rrf	ADCconfig@just,w
  4640  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4641  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4642  0C60  1C03               	skipc
  4643  0C61  139F               	bcf	31,7	;volatile
  4644  0C62  1803               	skipnc
  4645  0C63  179F               	bsf	31,7	;volatile
  4646  0C64                     l1966:
  4647                           
  4648                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
  4649  0C64  129F               	bcf	31,5	;volatile
  4650  0C65                     l1968:
  4651                           
  4652                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  4653  0C65  121F               	bcf	31,4	;volatile
  4654  0C66                     l125:
  4655  0C66  0008               	return
  4656  0C67                     __end_of_ADCconfig:
  4657                           
  4658                           	psect	text20
  4659  0A9D                     __ptext20:	
  4660 ;; *************** function _LCDstring *****************
  4661 ;; Defined at:
  4662 ;;		line 75 in file "LCDD2.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  mensaje         1    wreg     PTR unsigned char 
  4665 ;;		 -> STR_5(17), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  mensaje         1    6[COMMON] PTR unsigned char 
  4668 ;;		 -> STR_5(17), 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4678 ;;      Params:         0       0       0       0       0
  4679 ;;      Locals:         1       0       0       0       0
  4680 ;;      Temps:          1       0       0       0       0
  4681 ;;      Totals:         2       0       0       0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    2
  4685 ;; This function calls:
  4686 ;;		_dispCHAR
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _LCDstring
  4694  0A9D                     _LCDstring:
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4698                           ;LCDstring@mensaje stored from wreg
  4699  0A9D  00F6               	movwf	LCDstring@mensaje
  4700  0A9E                     l2356:
  4701                           
  4702                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4703  0A9E  2AAF               	goto	l2362
  4704  0A9F                     l2358:
  4705                           
  4706                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  4707  0A9F  0876               	movf	LCDstring@mensaje,w
  4708  0AA0  0084               	movwf	4
  4709  0AA1  120A  158A  2000  120A  158A  	fcall	stringdir
  4710  0AA6  120A  158A  2252  120A  158A  	fcall	_dispCHAR
  4711  0AAB                     l2360:
  4712                           
  4713                           ;LCDD2.c: 78:         mensaje ++;
  4714  0AAB  3001               	movlw	1
  4715  0AAC  00F5               	movwf	??_LCDstring
  4716  0AAD  0875               	movf	??_LCDstring,w
  4717  0AAE  07F6               	addwf	LCDstring@mensaje,f
  4718  0AAF                     l2362:
  4719                           
  4720                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4721  0AAF  0876               	movf	LCDstring@mensaje,w
  4722  0AB0  0084               	movwf	4
  4723  0AB1  120A  158A  2000  120A  158A  	fcall	stringdir
  4724  0AB6  3A00               	xorlw	0
  4725  0AB7  1D03               	skipz
  4726  0AB8  2ABA               	goto	u2701
  4727  0AB9  2ABB               	goto	u2700
  4728  0ABA                     u2701:
  4729  0ABA  2A9F               	goto	l2358
  4730  0ABB                     u2700:
  4731  0ABB                     l220:
  4732  0ABB  0008               	return
  4733  0ABC                     __end_of_LCDstring:
  4734                           
  4735                           	psect	text21
  4736  0A52                     __ptext21:	
  4737 ;; *************** function _dispCHAR *****************
  4738 ;; Defined at:
  4739 ;;		line 40 in file "LCDD2.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  b               1    wreg     unsigned char 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  b               1    4[COMMON] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4753 ;;      Params:         0       0       0       0       0
  4754 ;;      Locals:         1       0       0       0       0
  4755 ;;      Temps:          1       0       0       0       0
  4756 ;;      Totals:         2       0       0       0       0
  4757 ;;Total ram usage:        2 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;;		_LCDstring
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _dispCHAR
  4770  0A52                     _dispCHAR:
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in _dispCHAR: [wreg]
  4774                           ;dispCHAR@b stored from wreg
  4775  0A52  00F4               	movwf	dispCHAR@b
  4776  0A53                     l1922:
  4777                           
  4778                           ;LCDD2.c: 42:     RC0 = 1;
  4779  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0A55  1407               	bsf	7,0	;volatile
  4782  0A56                     l1924:
  4783                           
  4784                           ;LCDD2.c: 43:     PORTD = b;
  4785  0A56  0874               	movf	dispCHAR@b,w
  4786  0A57  0088               	movwf	8	;volatile
  4787  0A58                     l1926:
  4788                           
  4789                           ;LCDD2.c: 44:     RC1 = 1;
  4790  0A58  1487               	bsf	7,1	;volatile
  4791                           
  4792                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4793  0A59  301A               	movlw	26
  4794  0A5A  00F3               	movwf	??_dispCHAR
  4795  0A5B                     u4107:
  4796  0A5B  0BF3               	decfsz	??_dispCHAR,f
  4797  0A5C  2A5B               	goto	u4107
  4798  0A5D  0000               	nop
  4799  0A5E                     l1928:
  4800                           
  4801                           ;LCDD2.c: 46:     RC1 = 0;
  4802  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0A60  1087               	bcf	7,1	;volatile
  4805  0A61                     l203:
  4806  0A61  0008               	return
  4807  0A62                     __end_of_dispCHAR:
  4808                           
  4809                           	psect	text22
  4810  0BE1                     __ptext22:	
  4811 ;; *************** function _CONVdec *****************
  4812 ;; Defined at:
  4813 ;;		line 52 in file "ADC.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  lectura         1    wreg     PTR unsigned char 
  4816 ;;		 -> pot2(1), pot1(1), 
  4817 ;;  equiv           1   36[BANK0 ] PTR float 
  4818 ;;		 -> val2(4), val1(4), 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  lectura         1    7[COMMON] PTR unsigned char 
  4821 ;;		 -> pot2(1), pot1(1), 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         0       1       0       0       0
  4832 ;;      Locals:         1       0       0       0       0
  4833 ;;      Temps:          0       4       0       0       0
  4834 ;;      Totals:         1       5       0       0       0
  4835 ;;Total ram usage:        6 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    3
  4838 ;; This function calls:
  4839 ;;		___flmul
  4840 ;;		___xxtofl
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function _CONVdec
  4848  0BE1                     _CONVdec:
  4849                           
  4850                           ;incstack = 0
  4851                           ; Regs used in _CONVdec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4852                           ;CONVdec@lectura stored from wreg
  4853  0BE1  00F7               	movwf	CONVdec@lectura
  4854  0BE2                     l2998:
  4855                           
  4856                           ;ADC.c: 54:     *equiv = (float)(0.01961)*(*lectura);
  4857  0BE2  303C               	movlw	60
  4858  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0BE5  00AD               	movwf	___flmul@b+3
  4861  0BE6  30A0               	movlw	160
  4862  0BE7  00AC               	movwf	___flmul@b+2
  4863  0BE8  30A5               	movlw	165
  4864  0BE9  00AB               	movwf	___flmul@b+1
  4865  0BEA  3027               	movlw	39
  4866  0BEB  00AA               	movwf	___flmul@b
  4867  0BEC  0877               	movf	CONVdec@lectura,w
  4868  0BED  0084               	movwf	4
  4869  0BEE  1383               	bcf	3,7	;select IRP bank0
  4870  0BEF  0800               	movf	0,w
  4871  0BF0  00C5               	movwf	??_CONVdec
  4872  0BF1  01C6               	clrf	??_CONVdec+1
  4873  0BF2  01C7               	clrf	??_CONVdec+2
  4874  0BF3  01C8               	clrf	??_CONVdec+3
  4875  0BF4  0848               	movf	??_CONVdec+3,w
  4876  0BF5  00F6               	movwf	___xxtofl@val+3
  4877  0BF6  0847               	movf	??_CONVdec+2,w
  4878  0BF7  00F5               	movwf	___xxtofl@val+2
  4879  0BF8  0846               	movf	??_CONVdec+1,w
  4880  0BF9  00F4               	movwf	___xxtofl@val+1
  4881  0BFA  0845               	movf	??_CONVdec,w
  4882  0BFB  00F3               	movwf	___xxtofl@val
  4883  0BFC  3001               	movlw	1
  4884  0BFD  120A  158A  2744  120A  158A  	fcall	___xxtofl
  4885  0C02  0876               	movf	?___xxtofl+3,w
  4886  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0C05  00B1               	movwf	___flmul@a+3
  4889  0C06  0875               	movf	?___xxtofl+2,w
  4890  0C07  00B0               	movwf	___flmul@a+2
  4891  0C08  0874               	movf	?___xxtofl+1,w
  4892  0C09  00AF               	movwf	___flmul@a+1
  4893  0C0A  0873               	movf	?___xxtofl,w
  4894  0C0B  00AE               	movwf	___flmul@a
  4895  0C0C  120A  118A  2022  120A  158A  	fcall	___flmul
  4896  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0C13  0844               	movf	CONVdec@equiv,w
  4899  0C14  0084               	movwf	4
  4900  0C15  082A               	movf	?___flmul,w
  4901  0C16  1383               	bcf	3,7	;select IRP bank0
  4902  0C17  0080               	movwf	0
  4903  0C18  0A84               	incf	4,f
  4904  0C19  082B               	movf	?___flmul+1,w
  4905  0C1A  0080               	movwf	0
  4906  0C1B  0A84               	incf	4,f
  4907  0C1C  082C               	movf	?___flmul+2,w
  4908  0C1D  0080               	movwf	0
  4909  0C1E  0A84               	incf	4,f
  4910  0C1F  082D               	movf	?___flmul+3,w
  4911  0C20  0080               	movwf	0
  4912  0C21                     l131:
  4913  0C21  0008               	return
  4914  0C22                     __end_of_CONVdec:
  4915                           
  4916                           	psect	text23
  4917  0F44                     __ptext23:	
  4918 ;; *************** function ___xxtofl *****************
  4919 ;; Defined at:
  4920 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  sign            1    wreg     unsigned char 
  4923 ;;  val             4    3[COMMON] long 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  sign            1    4[BANK0 ] unsigned char 
  4926 ;;  arg             4    6[BANK0 ] unsigned long 
  4927 ;;  exp             1    5[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  4    3[COMMON] unsigned char 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4937 ;;      Params:         4       0       0       0       0
  4938 ;;      Locals:         0       6       0       0       0
  4939 ;;      Temps:          0       4       0       0       0
  4940 ;;      Totals:         4      10       0       0       0
  4941 ;;Total ram usage:       14 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_CONVdec
  4948 ;;		_sendfloat
  4949 ;;		_floTochar
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function ___xxtofl
  4955  0F44                     ___xxtofl:
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4959                           ;___xxtofl@sign stored from wreg
  4960  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4961  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4962  0F46  00A4               	movwf	___xxtofl@sign
  4963  0F47                     l2954:
  4964  0F47  0824               	movf	___xxtofl@sign,w
  4965  0F48  1903               	btfsc	3,2
  4966  0F49  2F4B               	goto	u3911
  4967  0F4A  2F4C               	goto	u3910
  4968  0F4B                     u3911:
  4969  0F4B  2F60               	goto	l2960
  4970  0F4C                     u3910:
  4971  0F4C                     l2956:
  4972  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  4973  0F4D  2F4F               	goto	u3921
  4974  0F4E  2F50               	goto	u3920
  4975  0F4F                     u3921:
  4976  0F4F  2F60               	goto	l2960
  4977  0F50                     u3920:
  4978  0F50                     l2958:
  4979  0F50  0973               	comf	___xxtofl@val,w
  4980  0F51  00A6               	movwf	___xxtofl@arg
  4981  0F52  0974               	comf	___xxtofl@val+1,w
  4982  0F53  00A7               	movwf	___xxtofl@arg+1
  4983  0F54  0975               	comf	___xxtofl@val+2,w
  4984  0F55  00A8               	movwf	___xxtofl@arg+2
  4985  0F56  0976               	comf	___xxtofl@val+3,w
  4986  0F57  00A9               	movwf	___xxtofl@arg+3
  4987  0F58  0AA6               	incf	___xxtofl@arg,f
  4988  0F59  1903               	skipnz
  4989  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  4990  0F5B  1903               	skipnz
  4991  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  4992  0F5D  1903               	skipnz
  4993  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  4994  0F5F  2F68               	goto	l739
  4995  0F60                     l2960:
  4996  0F60  0876               	movf	___xxtofl@val+3,w
  4997  0F61  00A9               	movwf	___xxtofl@arg+3
  4998  0F62  0875               	movf	___xxtofl@val+2,w
  4999  0F63  00A8               	movwf	___xxtofl@arg+2
  5000  0F64  0874               	movf	___xxtofl@val+1,w
  5001  0F65  00A7               	movwf	___xxtofl@arg+1
  5002  0F66  0873               	movf	___xxtofl@val,w
  5003  0F67  00A6               	movwf	___xxtofl@arg
  5004  0F68                     l739:
  5005  0F68  0876               	movf	___xxtofl@val+3,w
  5006  0F69  0475               	iorwf	___xxtofl@val+2,w
  5007  0F6A  0474               	iorwf	___xxtofl@val+1,w
  5008  0F6B  0473               	iorwf	___xxtofl@val,w
  5009  0F6C  1D03               	skipz
  5010  0F6D  2F6F               	goto	u3931
  5011  0F6E  2F70               	goto	u3930
  5012  0F6F                     u3931:
  5013  0F6F  2F79               	goto	l2966
  5014  0F70                     u3930:
  5015  0F70                     l2962:
  5016  0F70  3000               	movlw	0
  5017  0F71  00F6               	movwf	?___xxtofl+3
  5018  0F72  3000               	movlw	0
  5019  0F73  00F5               	movwf	?___xxtofl+2
  5020  0F74  3000               	movlw	0
  5021  0F75  00F4               	movwf	?___xxtofl+1
  5022  0F76  3000               	movlw	0
  5023  0F77  00F3               	movwf	?___xxtofl
  5024  0F78  2FFF               	goto	l741
  5025  0F79                     l2966:
  5026  0F79  3096               	movlw	150
  5027  0F7A  00A0               	movwf	??___xxtofl
  5028  0F7B  0820               	movf	??___xxtofl,w
  5029  0F7C  00A5               	movwf	___xxtofl@exp
  5030  0F7D  2F8B               	goto	l2970
  5031  0F7E                     l2968:
  5032  0F7E  3001               	movlw	1
  5033  0F7F  00A0               	movwf	??___xxtofl
  5034  0F80  0820               	movf	??___xxtofl,w
  5035  0F81  07A5               	addwf	___xxtofl@exp,f
  5036  0F82  3001               	movlw	1
  5037  0F83                     u3945:
  5038  0F83  1003               	clrc
  5039  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  5040  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  5041  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  5042  0F87  0CA6               	rrf	___xxtofl@arg,f
  5043  0F88  3EFF               	addlw	-1
  5044  0F89  1D03               	skipz
  5045  0F8A  2F83               	goto	u3945
  5046  0F8B                     l2970:
  5047  0F8B  30FE               	movlw	254
  5048  0F8C  0529               	andwf	___xxtofl@arg+3,w
  5049  0F8D  1D03               	btfss	3,2
  5050  0F8E  2F90               	goto	u3951
  5051  0F8F  2F91               	goto	u3950
  5052  0F90                     u3951:
  5053  0F90  2F7E               	goto	l2968
  5054  0F91                     u3950:
  5055  0F91  2FAD               	goto	l745
  5056  0F92                     l2972:
  5057  0F92  3001               	movlw	1
  5058  0F93  00A0               	movwf	??___xxtofl
  5059  0F94  0820               	movf	??___xxtofl,w
  5060  0F95  07A5               	addwf	___xxtofl@exp,f
  5061  0F96                     l2974:
  5062  0F96  3001               	movlw	1
  5063  0F97  07A6               	addwf	___xxtofl@arg,f
  5064  0F98  3000               	movlw	0
  5065  0F99  1803               	skipnc
  5066  0F9A  3001               	movlw	1
  5067  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  5068  0F9C  3000               	movlw	0
  5069  0F9D  1803               	skipnc
  5070  0F9E  3001               	movlw	1
  5071  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  5072  0FA0  3000               	movlw	0
  5073  0FA1  1803               	skipnc
  5074  0FA2  3001               	movlw	1
  5075  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  5076  0FA4                     l2976:
  5077  0FA4  3001               	movlw	1
  5078  0FA5                     u3965:
  5079  0FA5  1003               	clrc
  5080  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  5081  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  5082  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  5083  0FA9  0CA6               	rrf	___xxtofl@arg,f
  5084  0FAA  3EFF               	addlw	-1
  5085  0FAB  1D03               	skipz
  5086  0FAC  2FA5               	goto	u3965
  5087  0FAD                     l745:
  5088  0FAD  30FF               	movlw	255
  5089  0FAE  0529               	andwf	___xxtofl@arg+3,w
  5090  0FAF  1D03               	btfss	3,2
  5091  0FB0  2FB2               	goto	u3971
  5092  0FB1  2FB3               	goto	u3970
  5093  0FB2                     u3971:
  5094  0FB2  2F92               	goto	l2972
  5095  0FB3                     u3970:
  5096  0FB3  2FBF               	goto	l2980
  5097  0FB4                     l2978:
  5098  0FB4  3001               	movlw	1
  5099  0FB5  02A5               	subwf	___xxtofl@exp,f
  5100  0FB6  3001               	movlw	1
  5101  0FB7  00A0               	movwf	??___xxtofl
  5102  0FB8                     u3985:
  5103  0FB8  1003               	clrc
  5104  0FB9  0DA6               	rlf	___xxtofl@arg,f
  5105  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  5106  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  5107  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  5108  0FBD  0BA0               	decfsz	??___xxtofl,f
  5109  0FBE  2FB8               	goto	u3985
  5110  0FBF                     l2980:
  5111  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  5112  0FC0  2FC2               	goto	u3991
  5113  0FC1  2FC3               	goto	u3990
  5114  0FC2                     u3991:
  5115  0FC2  2FC9               	goto	l752
  5116  0FC3                     u3990:
  5117  0FC3                     l2982:
  5118  0FC3  3002               	movlw	2
  5119  0FC4  0225               	subwf	___xxtofl@exp,w
  5120  0FC5  1803               	skipnc
  5121  0FC6  2FC8               	goto	u4001
  5122  0FC7  2FC9               	goto	u4000
  5123  0FC8                     u4001:
  5124  0FC8  2FB4               	goto	l2978
  5125  0FC9                     u4000:
  5126  0FC9                     l752:
  5127  0FC9  1825               	btfsc	___xxtofl@exp,0
  5128  0FCA  2FCC               	goto	u4011
  5129  0FCB  2FCD               	goto	u4010
  5130  0FCC                     u4011:
  5131  0FCC  2FD5               	goto	l753
  5132  0FCD                     u4010:
  5133  0FCD                     l2984:
  5134  0FCD  30FF               	movlw	255
  5135  0FCE  05A6               	andwf	___xxtofl@arg,f
  5136  0FCF  30FF               	movlw	255
  5137  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  5138  0FD1  307F               	movlw	127
  5139  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  5140  0FD3  30FF               	movlw	255
  5141  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  5142  0FD5                     l753:
  5143  0FD5  1003               	clrc
  5144  0FD6  0CA5               	rrf	___xxtofl@exp,f
  5145  0FD7                     l2986:
  5146  0FD7  0825               	movf	___xxtofl@exp,w
  5147  0FD8  00A0               	movwf	??___xxtofl
  5148  0FD9  01A1               	clrf	??___xxtofl+1
  5149  0FDA  01A2               	clrf	??___xxtofl+2
  5150  0FDB  01A3               	clrf	??___xxtofl+3
  5151  0FDC  3018               	movlw	24
  5152  0FDD                     u4025:
  5153  0FDD  1003               	clrc
  5154  0FDE  0DA0               	rlf	??___xxtofl,f
  5155  0FDF  0DA1               	rlf	??___xxtofl+1,f
  5156  0FE0  0DA2               	rlf	??___xxtofl+2,f
  5157  0FE1  0DA3               	rlf	??___xxtofl+3,f
  5158  0FE2                     u4020:
  5159  0FE2  3EFF               	addlw	-1
  5160  0FE3  1D03               	skipz
  5161  0FE4  2FDD               	goto	u4025
  5162  0FE5  0820               	movf	??___xxtofl,w
  5163  0FE6  04A6               	iorwf	___xxtofl@arg,f
  5164  0FE7  0821               	movf	??___xxtofl+1,w
  5165  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  5166  0FE9  0822               	movf	??___xxtofl+2,w
  5167  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  5168  0FEB  0823               	movf	??___xxtofl+3,w
  5169  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  5170  0FED                     l2988:
  5171  0FED  0824               	movf	___xxtofl@sign,w
  5172  0FEE  1903               	btfsc	3,2
  5173  0FEF  2FF1               	goto	u4031
  5174  0FF0  2FF2               	goto	u4030
  5175  0FF1                     u4031:
  5176  0FF1  2FF7               	goto	l2994
  5177  0FF2                     u4030:
  5178  0FF2                     l2990:
  5179  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  5180  0FF3  2FF5               	goto	u4041
  5181  0FF4  2FF6               	goto	u4040
  5182  0FF5                     u4041:
  5183  0FF5  2FF7               	goto	l2994
  5184  0FF6                     u4040:
  5185  0FF6                     l2992:
  5186  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  5187  0FF7                     l2994:
  5188  0FF7  0829               	movf	___xxtofl@arg+3,w
  5189  0FF8  00F6               	movwf	?___xxtofl+3
  5190  0FF9  0828               	movf	___xxtofl@arg+2,w
  5191  0FFA  00F5               	movwf	?___xxtofl+2
  5192  0FFB  0827               	movf	___xxtofl@arg+1,w
  5193  0FFC  00F4               	movwf	?___xxtofl+1
  5194  0FFD  0826               	movf	___xxtofl@arg,w
  5195  0FFE  00F3               	movwf	?___xxtofl
  5196  0FFF                     l741:
  5197  0FFF  0008               	return
  5198  1000                     __end_of___xxtofl:
  5199                           
  5200                           	psect	text24
  5201  0022                     __ptext24:	
  5202 ;; *************** function ___flmul *****************
  5203 ;; Defined at:
  5204 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  b               4   10[BANK0 ] unsigned char 
  5207 ;;  a               4   14[BANK0 ] unsigned char 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  prod            4   30[BANK0 ] struct .
  5210 ;;  grs             4   25[BANK0 ] unsigned long 
  5211 ;;  temp            2   34[BANK0 ] struct .
  5212 ;;  bexp            1   29[BANK0 ] unsigned char 
  5213 ;;  aexp            1   24[BANK0 ] unsigned char 
  5214 ;;  sign            1   23[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  4   10[BANK0 ] unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         0       8       0       0       0
  5225 ;;      Locals:         0      13       0       0       0
  5226 ;;      Temps:          0       5       0       0       0
  5227 ;;      Totals:         0      26       0       0       0
  5228 ;;Total ram usage:       26 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    2
  5231 ;; This function calls:
  5232 ;;		__Umul8_16
  5233 ;; This function is called by:
  5234 ;;		_CONVdec
  5235 ;;		_sendfloat
  5236 ;;		_floTochar
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function ___flmul
  5242  0022                     ___flmul:
  5243  0022                     l2814:	
  5244                           ;incstack = 0
  5245                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5246                           
  5247  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0024  082D               	movf	___flmul@b+3,w
  5250  0025  3980               	andlw	128
  5251  0026  00B2               	movwf	??___flmul
  5252  0027  0832               	movf	??___flmul,w
  5253  0028  00B7               	movwf	___flmul@sign
  5254  0029                     l2816:
  5255  0029  082D               	movf	___flmul@b+3,w
  5256  002A  00B2               	movwf	??___flmul
  5257  002B  0732               	addwf	??___flmul,w
  5258  002C  00B3               	movwf	??___flmul+1
  5259  002D  0833               	movf	??___flmul+1,w
  5260  002E  00BD               	movwf	___flmul@bexp
  5261  002F                     l2818:
  5262  002F  1FAC               	btfss	___flmul@b+2,7
  5263  0030  2832               	goto	u3541
  5264  0031  2833               	goto	u3540
  5265  0032                     u3541:
  5266  0032  2834               	goto	l2822
  5267  0033                     u3540:
  5268  0033                     l2820:
  5269  0033  143D               	bsf	___flmul@bexp,0
  5270  0034                     l2822:
  5271  0034  083D               	movf	___flmul@bexp,w
  5272  0035  1903               	btfsc	3,2
  5273  0036  2838               	goto	u3551
  5274  0037  2839               	goto	u3550
  5275  0038                     u3551:
  5276  0038  2848               	goto	l2830
  5277  0039                     u3550:
  5278  0039                     l2824:
  5279  0039  0A3D               	incf	___flmul@bexp,w
  5280  003A  1D03               	btfss	3,2
  5281  003B  283D               	goto	u3561
  5282  003C  283E               	goto	u3560
  5283  003D                     u3561:
  5284  003D  2846               	goto	l2828
  5285  003E                     u3560:
  5286  003E                     l2826:
  5287  003E  3000               	movlw	0
  5288  003F  00AD               	movwf	___flmul@b+3
  5289  0040  3000               	movlw	0
  5290  0041  00AC               	movwf	___flmul@b+2
  5291  0042  3000               	movlw	0
  5292  0043  00AB               	movwf	___flmul@b+1
  5293  0044  3000               	movlw	0
  5294  0045  00AA               	movwf	___flmul@b
  5295  0046                     l2828:
  5296  0046  17AC               	bsf	___flmul@b+2,7
  5297  0047  2850               	goto	l2832
  5298  0048                     l2830:
  5299  0048  3000               	movlw	0
  5300  0049  00AD               	movwf	___flmul@b+3
  5301  004A  3000               	movlw	0
  5302  004B  00AC               	movwf	___flmul@b+2
  5303  004C  3000               	movlw	0
  5304  004D  00AB               	movwf	___flmul@b+1
  5305  004E  3000               	movlw	0
  5306  004F  00AA               	movwf	___flmul@b
  5307  0050                     l2832:
  5308  0050  0831               	movf	___flmul@a+3,w
  5309  0051  3980               	andlw	128
  5310  0052  00B2               	movwf	??___flmul
  5311  0053  0832               	movf	??___flmul,w
  5312  0054  06B7               	xorwf	___flmul@sign,f
  5313  0055                     l2834:
  5314  0055  0831               	movf	___flmul@a+3,w
  5315  0056  00B2               	movwf	??___flmul
  5316  0057  0732               	addwf	??___flmul,w
  5317  0058  00B3               	movwf	??___flmul+1
  5318  0059  0833               	movf	??___flmul+1,w
  5319  005A  00B8               	movwf	___flmul@aexp
  5320  005B                     l2836:
  5321  005B  1FB0               	btfss	___flmul@a+2,7
  5322  005C  285E               	goto	u3571
  5323  005D  285F               	goto	u3570
  5324  005E                     u3571:
  5325  005E  2860               	goto	l2840
  5326  005F                     u3570:
  5327  005F                     l2838:
  5328  005F  1438               	bsf	___flmul@aexp,0
  5329  0060                     l2840:
  5330  0060  0838               	movf	___flmul@aexp,w
  5331  0061  1903               	btfsc	3,2
  5332  0062  2864               	goto	u3581
  5333  0063  2865               	goto	u3580
  5334  0064                     u3581:
  5335  0064  2874               	goto	l2848
  5336  0065                     u3580:
  5337  0065                     l2842:
  5338  0065  0A38               	incf	___flmul@aexp,w
  5339  0066  1D03               	btfss	3,2
  5340  0067  2869               	goto	u3591
  5341  0068  286A               	goto	u3590
  5342  0069                     u3591:
  5343  0069  2872               	goto	l2846
  5344  006A                     u3590:
  5345  006A                     l2844:
  5346  006A  3000               	movlw	0
  5347  006B  00B1               	movwf	___flmul@a+3
  5348  006C  3000               	movlw	0
  5349  006D  00B0               	movwf	___flmul@a+2
  5350  006E  3000               	movlw	0
  5351  006F  00AF               	movwf	___flmul@a+1
  5352  0070  3000               	movlw	0
  5353  0071  00AE               	movwf	___flmul@a
  5354  0072                     l2846:
  5355  0072  17B0               	bsf	___flmul@a+2,7
  5356  0073  287C               	goto	l2850
  5357  0074                     l2848:
  5358  0074  3000               	movlw	0
  5359  0075  00B1               	movwf	___flmul@a+3
  5360  0076  3000               	movlw	0
  5361  0077  00B0               	movwf	___flmul@a+2
  5362  0078  3000               	movlw	0
  5363  0079  00AF               	movwf	___flmul@a+1
  5364  007A  3000               	movlw	0
  5365  007B  00AE               	movwf	___flmul@a
  5366  007C                     l2850:
  5367  007C  0838               	movf	___flmul@aexp,w
  5368  007D  1903               	btfsc	3,2
  5369  007E  2880               	goto	u3601
  5370  007F  2881               	goto	u3600
  5371  0080                     u3601:
  5372  0080  2886               	goto	l2854
  5373  0081                     u3600:
  5374  0081                     l2852:
  5375  0081  083D               	movf	___flmul@bexp,w
  5376  0082  1D03               	btfss	3,2
  5377  0083  2885               	goto	u3611
  5378  0084  2886               	goto	u3610
  5379  0085                     u3611:
  5380  0085  288F               	goto	l2858
  5381  0086                     u3610:
  5382  0086                     l2854:
  5383  0086  3000               	movlw	0
  5384  0087  00AD               	movwf	?___flmul+3
  5385  0088  3000               	movlw	0
  5386  0089  00AC               	movwf	?___flmul+2
  5387  008A  3000               	movlw	0
  5388  008B  00AB               	movwf	?___flmul+1
  5389  008C  3000               	movlw	0
  5390  008D  00AA               	movwf	?___flmul
  5391  008E  2B82               	goto	l695
  5392  008F                     l2858:
  5393  008F  082A               	movf	___flmul@b,w
  5394  0090  00B2               	movwf	??___flmul
  5395  0091  0832               	movf	??___flmul,w
  5396  0092  00F3               	movwf	__Umul8_16@multiplicand
  5397  0093  0830               	movf	___flmul@a+2,w
  5398  0094  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5399  0099  0874               	movf	?__Umul8_16+1,w
  5400  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5401  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5402  009C  00C3               	movwf	___flmul@temp+1
  5403  009D  0873               	movf	?__Umul8_16,w
  5404  009E  00C2               	movwf	___flmul@temp
  5405  009F                     l2860:
  5406  009F  0842               	movf	___flmul@temp,w
  5407  00A0  00B2               	movwf	??___flmul
  5408  00A1  01B3               	clrf	??___flmul+1
  5409  00A2  01B4               	clrf	??___flmul+2
  5410  00A3  01B5               	clrf	??___flmul+3
  5411  00A4  0835               	movf	??___flmul+3,w
  5412  00A5  00BC               	movwf	___flmul@grs+3
  5413  00A6  0834               	movf	??___flmul+2,w
  5414  00A7  00BB               	movwf	___flmul@grs+2
  5415  00A8  0833               	movf	??___flmul+1,w
  5416  00A9  00BA               	movwf	___flmul@grs+1
  5417  00AA  0832               	movf	??___flmul,w
  5418  00AB  00B9               	movwf	___flmul@grs
  5419  00AC                     l2862:
  5420  00AC  0843               	movf	___flmul@temp+1,w
  5421  00AD  00B2               	movwf	??___flmul
  5422  00AE  01B3               	clrf	??___flmul+1
  5423  00AF  01B4               	clrf	??___flmul+2
  5424  00B0  01B5               	clrf	??___flmul+3
  5425  00B1  0835               	movf	??___flmul+3,w
  5426  00B2  00C1               	movwf	___flmul@prod+3
  5427  00B3  0834               	movf	??___flmul+2,w
  5428  00B4  00C0               	movwf	___flmul@prod+2
  5429  00B5  0833               	movf	??___flmul+1,w
  5430  00B6  00BF               	movwf	___flmul@prod+1
  5431  00B7  0832               	movf	??___flmul,w
  5432  00B8  00BE               	movwf	___flmul@prod
  5433  00B9  082B               	movf	___flmul@b+1,w
  5434  00BA  00B2               	movwf	??___flmul
  5435  00BB  0832               	movf	??___flmul,w
  5436  00BC  00F3               	movwf	__Umul8_16@multiplicand
  5437  00BD  082F               	movf	___flmul@a+1,w
  5438  00BE  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5439  00C3  0874               	movf	?__Umul8_16+1,w
  5440  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5441  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5442  00C6  00C3               	movwf	___flmul@temp+1
  5443  00C7  0873               	movf	?__Umul8_16,w
  5444  00C8  00C2               	movwf	___flmul@temp
  5445  00C9                     l2864:
  5446  00C9  0842               	movf	___flmul@temp,w
  5447  00CA  00B2               	movwf	??___flmul
  5448  00CB  01B3               	clrf	??___flmul+1
  5449  00CC  01B4               	clrf	??___flmul+2
  5450  00CD  01B5               	clrf	??___flmul+3
  5451  00CE  0832               	movf	??___flmul,w
  5452  00CF  07B9               	addwf	___flmul@grs,f
  5453  00D0  0833               	movf	??___flmul+1,w
  5454  00D1  1103               	clrz
  5455  00D2  1803               	skipnc
  5456  00D3  3E01               	addlw	1
  5457  00D4  1903               	skipnz
  5458  00D5  28D7               	goto	u3621
  5459  00D6  07BA               	addwf	___flmul@grs+1,f
  5460  00D7                     u3621:
  5461  00D7  0834               	movf	??___flmul+2,w
  5462  00D8  1103               	clrz
  5463  00D9  1803               	skipnc
  5464  00DA  3E01               	addlw	1
  5465  00DB  1903               	skipnz
  5466  00DC  28DE               	goto	u3622
  5467  00DD  07BB               	addwf	___flmul@grs+2,f
  5468  00DE                     u3622:
  5469  00DE  0835               	movf	??___flmul+3,w
  5470  00DF  1103               	clrz
  5471  00E0  1803               	skipnc
  5472  00E1  3E01               	addlw	1
  5473  00E2  1903               	skipnz
  5474  00E3  28E5               	goto	u3623
  5475  00E4  07BC               	addwf	___flmul@grs+3,f
  5476  00E5                     u3623:
  5477  00E5                     l2866:
  5478  00E5  0843               	movf	___flmul@temp+1,w
  5479  00E6  00B2               	movwf	??___flmul
  5480  00E7  01B3               	clrf	??___flmul+1
  5481  00E8  01B4               	clrf	??___flmul+2
  5482  00E9  01B5               	clrf	??___flmul+3
  5483  00EA  0832               	movf	??___flmul,w
  5484  00EB  07BE               	addwf	___flmul@prod,f
  5485  00EC  0833               	movf	??___flmul+1,w
  5486  00ED  1103               	clrz
  5487  00EE  1803               	skipnc
  5488  00EF  3E01               	addlw	1
  5489  00F0  1903               	skipnz
  5490  00F1  28F3               	goto	u3631
  5491  00F2  07BF               	addwf	___flmul@prod+1,f
  5492  00F3                     u3631:
  5493  00F3  0834               	movf	??___flmul+2,w
  5494  00F4  1103               	clrz
  5495  00F5  1803               	skipnc
  5496  00F6  3E01               	addlw	1
  5497  00F7  1903               	skipnz
  5498  00F8  28FA               	goto	u3632
  5499  00F9  07C0               	addwf	___flmul@prod+2,f
  5500  00FA                     u3632:
  5501  00FA  0835               	movf	??___flmul+3,w
  5502  00FB  1103               	clrz
  5503  00FC  1803               	skipnc
  5504  00FD  3E01               	addlw	1
  5505  00FE  1903               	skipnz
  5506  00FF  2901               	goto	u3633
  5507  0100  07C1               	addwf	___flmul@prod+3,f
  5508  0101                     u3633:
  5509  0101  082C               	movf	___flmul@b+2,w
  5510  0102  00B2               	movwf	??___flmul
  5511  0103  0832               	movf	??___flmul,w
  5512  0104  00F3               	movwf	__Umul8_16@multiplicand
  5513  0105  082E               	movf	___flmul@a,w
  5514  0106  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5515  010B  0874               	movf	?__Umul8_16+1,w
  5516  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5517  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5518  010E  00C3               	movwf	___flmul@temp+1
  5519  010F  0873               	movf	?__Umul8_16,w
  5520  0110  00C2               	movwf	___flmul@temp
  5521  0111                     l2868:
  5522  0111  0842               	movf	___flmul@temp,w
  5523  0112  00B2               	movwf	??___flmul
  5524  0113  01B3               	clrf	??___flmul+1
  5525  0114  01B4               	clrf	??___flmul+2
  5526  0115  01B5               	clrf	??___flmul+3
  5527  0116  0832               	movf	??___flmul,w
  5528  0117  07B9               	addwf	___flmul@grs,f
  5529  0118  0833               	movf	??___flmul+1,w
  5530  0119  1103               	clrz
  5531  011A  1803               	skipnc
  5532  011B  3E01               	addlw	1
  5533  011C  1903               	skipnz
  5534  011D  291F               	goto	u3641
  5535  011E  07BA               	addwf	___flmul@grs+1,f
  5536  011F                     u3641:
  5537  011F  0834               	movf	??___flmul+2,w
  5538  0120  1103               	clrz
  5539  0121  1803               	skipnc
  5540  0122  3E01               	addlw	1
  5541  0123  1903               	skipnz
  5542  0124  2926               	goto	u3642
  5543  0125  07BB               	addwf	___flmul@grs+2,f
  5544  0126                     u3642:
  5545  0126  0835               	movf	??___flmul+3,w
  5546  0127  1103               	clrz
  5547  0128  1803               	skipnc
  5548  0129  3E01               	addlw	1
  5549  012A  1903               	skipnz
  5550  012B  292D               	goto	u3643
  5551  012C  07BC               	addwf	___flmul@grs+3,f
  5552  012D                     u3643:
  5553  012D                     l2870:
  5554  012D  0843               	movf	___flmul@temp+1,w
  5555  012E  00B2               	movwf	??___flmul
  5556  012F  01B3               	clrf	??___flmul+1
  5557  0130  01B4               	clrf	??___flmul+2
  5558  0131  01B5               	clrf	??___flmul+3
  5559  0132  0832               	movf	??___flmul,w
  5560  0133  07BE               	addwf	___flmul@prod,f
  5561  0134  0833               	movf	??___flmul+1,w
  5562  0135  1103               	clrz
  5563  0136  1803               	skipnc
  5564  0137  3E01               	addlw	1
  5565  0138  1903               	skipnz
  5566  0139  293B               	goto	u3651
  5567  013A  07BF               	addwf	___flmul@prod+1,f
  5568  013B                     u3651:
  5569  013B  0834               	movf	??___flmul+2,w
  5570  013C  1103               	clrz
  5571  013D  1803               	skipnc
  5572  013E  3E01               	addlw	1
  5573  013F  1903               	skipnz
  5574  0140  2942               	goto	u3652
  5575  0141  07C0               	addwf	___flmul@prod+2,f
  5576  0142                     u3652:
  5577  0142  0835               	movf	??___flmul+3,w
  5578  0143  1103               	clrz
  5579  0144  1803               	skipnc
  5580  0145  3E01               	addlw	1
  5581  0146  1903               	skipnz
  5582  0147  2949               	goto	u3653
  5583  0148  07C1               	addwf	___flmul@prod+3,f
  5584  0149                     u3653:
  5585  0149                     l2872:
  5586  0149  3008               	movlw	8
  5587  014A  00B2               	movwf	??___flmul
  5588  014B                     u3665:
  5589  014B  1003               	clrc
  5590  014C  0DB9               	rlf	___flmul@grs,f
  5591  014D  0DBA               	rlf	___flmul@grs+1,f
  5592  014E  0DBB               	rlf	___flmul@grs+2,f
  5593  014F  0DBC               	rlf	___flmul@grs+3,f
  5594  0150  0BB2               	decfsz	??___flmul,f
  5595  0151  294B               	goto	u3665
  5596  0152                     l2874:
  5597  0152  082B               	movf	___flmul@b+1,w
  5598  0153  00B2               	movwf	??___flmul
  5599  0154  0832               	movf	??___flmul,w
  5600  0155  00F3               	movwf	__Umul8_16@multiplicand
  5601  0156  082E               	movf	___flmul@a,w
  5602  0157  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5603  015C  0874               	movf	?__Umul8_16+1,w
  5604  015D  1283               	bcf	3,5	;RP0=0, select bank0
  5605  015E  1303               	bcf	3,6	;RP1=0, select bank0
  5606  015F  00C3               	movwf	___flmul@temp+1
  5607  0160  0873               	movf	?__Umul8_16,w
  5608  0161  00C2               	movwf	___flmul@temp
  5609  0162                     l2876:
  5610  0162  0842               	movf	___flmul@temp,w
  5611  0163  00B2               	movwf	??___flmul
  5612  0164  0843               	movf	___flmul@temp+1,w
  5613  0165  00B3               	movwf	??___flmul+1
  5614  0166  01B4               	clrf	??___flmul+2
  5615  0167  01B5               	clrf	??___flmul+3
  5616  0168  0832               	movf	??___flmul,w
  5617  0169  07B9               	addwf	___flmul@grs,f
  5618  016A  0833               	movf	??___flmul+1,w
  5619  016B  1103               	clrz
  5620  016C  1803               	skipnc
  5621  016D  3E01               	addlw	1
  5622  016E  1903               	skipnz
  5623  016F  2971               	goto	u3671
  5624  0170  07BA               	addwf	___flmul@grs+1,f
  5625  0171                     u3671:
  5626  0171  0834               	movf	??___flmul+2,w
  5627  0172  1103               	clrz
  5628  0173  1803               	skipnc
  5629  0174  3E01               	addlw	1
  5630  0175  1903               	skipnz
  5631  0176  2978               	goto	u3672
  5632  0177  07BB               	addwf	___flmul@grs+2,f
  5633  0178                     u3672:
  5634  0178  0835               	movf	??___flmul+3,w
  5635  0179  1103               	clrz
  5636  017A  1803               	skipnc
  5637  017B  3E01               	addlw	1
  5638  017C  1903               	skipnz
  5639  017D  297F               	goto	u3673
  5640  017E  07BC               	addwf	___flmul@grs+3,f
  5641  017F                     u3673:
  5642  017F                     l2878:
  5643  017F  082A               	movf	___flmul@b,w
  5644  0180  00B2               	movwf	??___flmul
  5645  0181  0832               	movf	??___flmul,w
  5646  0182  00F3               	movwf	__Umul8_16@multiplicand
  5647  0183  082F               	movf	___flmul@a+1,w
  5648  0184  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5649  0189  0874               	movf	?__Umul8_16+1,w
  5650  018A  1283               	bcf	3,5	;RP0=0, select bank0
  5651  018B  1303               	bcf	3,6	;RP1=0, select bank0
  5652  018C  00C3               	movwf	___flmul@temp+1
  5653  018D  0873               	movf	?__Umul8_16,w
  5654  018E  00C2               	movwf	___flmul@temp
  5655  018F                     l2880:
  5656  018F  0842               	movf	___flmul@temp,w
  5657  0190  00B2               	movwf	??___flmul
  5658  0191  0843               	movf	___flmul@temp+1,w
  5659  0192  00B3               	movwf	??___flmul+1
  5660  0193  01B4               	clrf	??___flmul+2
  5661  0194  01B5               	clrf	??___flmul+3
  5662  0195  0832               	movf	??___flmul,w
  5663  0196  07B9               	addwf	___flmul@grs,f
  5664  0197  0833               	movf	??___flmul+1,w
  5665  0198  1103               	clrz
  5666  0199  1803               	skipnc
  5667  019A  3E01               	addlw	1
  5668  019B  1903               	skipnz
  5669  019C  299E               	goto	u3681
  5670  019D  07BA               	addwf	___flmul@grs+1,f
  5671  019E                     u3681:
  5672  019E  0834               	movf	??___flmul+2,w
  5673  019F  1103               	clrz
  5674  01A0  1803               	skipnc
  5675  01A1  3E01               	addlw	1
  5676  01A2  1903               	skipnz
  5677  01A3  29A5               	goto	u3682
  5678  01A4  07BB               	addwf	___flmul@grs+2,f
  5679  01A5                     u3682:
  5680  01A5  0835               	movf	??___flmul+3,w
  5681  01A6  1103               	clrz
  5682  01A7  1803               	skipnc
  5683  01A8  3E01               	addlw	1
  5684  01A9  1903               	skipnz
  5685  01AA  29AC               	goto	u3683
  5686  01AB  07BC               	addwf	___flmul@grs+3,f
  5687  01AC                     u3683:
  5688  01AC                     l2882:
  5689  01AC  3008               	movlw	8
  5690  01AD  00B2               	movwf	??___flmul
  5691  01AE                     u3695:
  5692  01AE  1003               	clrc
  5693  01AF  0DB9               	rlf	___flmul@grs,f
  5694  01B0  0DBA               	rlf	___flmul@grs+1,f
  5695  01B1  0DBB               	rlf	___flmul@grs+2,f
  5696  01B2  0DBC               	rlf	___flmul@grs+3,f
  5697  01B3  0BB2               	decfsz	??___flmul,f
  5698  01B4  29AE               	goto	u3695
  5699  01B5  082A               	movf	___flmul@b,w
  5700  01B6  00B2               	movwf	??___flmul
  5701  01B7  0832               	movf	??___flmul,w
  5702  01B8  00F3               	movwf	__Umul8_16@multiplicand
  5703  01B9  082E               	movf	___flmul@a,w
  5704  01BA  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5705  01BF  0874               	movf	?__Umul8_16+1,w
  5706  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5707  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5708  01C2  00C3               	movwf	___flmul@temp+1
  5709  01C3  0873               	movf	?__Umul8_16,w
  5710  01C4  00C2               	movwf	___flmul@temp
  5711  01C5                     l2884:
  5712  01C5  0842               	movf	___flmul@temp,w
  5713  01C6  00B2               	movwf	??___flmul
  5714  01C7  0843               	movf	___flmul@temp+1,w
  5715  01C8  00B3               	movwf	??___flmul+1
  5716  01C9  01B4               	clrf	??___flmul+2
  5717  01CA  01B5               	clrf	??___flmul+3
  5718  01CB  0832               	movf	??___flmul,w
  5719  01CC  07B9               	addwf	___flmul@grs,f
  5720  01CD  0833               	movf	??___flmul+1,w
  5721  01CE  1103               	clrz
  5722  01CF  1803               	skipnc
  5723  01D0  3E01               	addlw	1
  5724  01D1  1903               	skipnz
  5725  01D2  29D4               	goto	u3701
  5726  01D3  07BA               	addwf	___flmul@grs+1,f
  5727  01D4                     u3701:
  5728  01D4  0834               	movf	??___flmul+2,w
  5729  01D5  1103               	clrz
  5730  01D6  1803               	skipnc
  5731  01D7  3E01               	addlw	1
  5732  01D8  1903               	skipnz
  5733  01D9  29DB               	goto	u3702
  5734  01DA  07BB               	addwf	___flmul@grs+2,f
  5735  01DB                     u3702:
  5736  01DB  0835               	movf	??___flmul+3,w
  5737  01DC  1103               	clrz
  5738  01DD  1803               	skipnc
  5739  01DE  3E01               	addlw	1
  5740  01DF  1903               	skipnz
  5741  01E0  29E2               	goto	u3703
  5742  01E1  07BC               	addwf	___flmul@grs+3,f
  5743  01E2                     u3703:
  5744  01E2                     l2886:
  5745  01E2  082B               	movf	___flmul@b+1,w
  5746  01E3  00B2               	movwf	??___flmul
  5747  01E4  0832               	movf	??___flmul,w
  5748  01E5  00F3               	movwf	__Umul8_16@multiplicand
  5749  01E6  0830               	movf	___flmul@a+2,w
  5750  01E7  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5751  01EC  0874               	movf	?__Umul8_16+1,w
  5752  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5753  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5754  01EF  00C3               	movwf	___flmul@temp+1
  5755  01F0  0873               	movf	?__Umul8_16,w
  5756  01F1  00C2               	movwf	___flmul@temp
  5757  01F2  0842               	movf	___flmul@temp,w
  5758  01F3  00B2               	movwf	??___flmul
  5759  01F4  0843               	movf	___flmul@temp+1,w
  5760  01F5  00B3               	movwf	??___flmul+1
  5761  01F6  01B4               	clrf	??___flmul+2
  5762  01F7  01B5               	clrf	??___flmul+3
  5763  01F8  0832               	movf	??___flmul,w
  5764  01F9  07BE               	addwf	___flmul@prod,f
  5765  01FA  0833               	movf	??___flmul+1,w
  5766  01FB  1103               	clrz
  5767  01FC  1803               	skipnc
  5768  01FD  3E01               	addlw	1
  5769  01FE  1903               	skipnz
  5770  01FF  2A01               	goto	u3711
  5771  0200  07BF               	addwf	___flmul@prod+1,f
  5772  0201                     u3711:
  5773  0201  0834               	movf	??___flmul+2,w
  5774  0202  1103               	clrz
  5775  0203  1803               	skipnc
  5776  0204  3E01               	addlw	1
  5777  0205  1903               	skipnz
  5778  0206  2A08               	goto	u3712
  5779  0207  07C0               	addwf	___flmul@prod+2,f
  5780  0208                     u3712:
  5781  0208  0835               	movf	??___flmul+3,w
  5782  0209  1103               	clrz
  5783  020A  1803               	skipnc
  5784  020B  3E01               	addlw	1
  5785  020C  1903               	skipnz
  5786  020D  2A0F               	goto	u3713
  5787  020E  07C1               	addwf	___flmul@prod+3,f
  5788  020F                     u3713:
  5789  020F                     l2888:
  5790  020F  082C               	movf	___flmul@b+2,w
  5791  0210  00B2               	movwf	??___flmul
  5792  0211  0832               	movf	??___flmul,w
  5793  0212  00F3               	movwf	__Umul8_16@multiplicand
  5794  0213  082F               	movf	___flmul@a+1,w
  5795  0214  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5796  0219  0874               	movf	?__Umul8_16+1,w
  5797  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5798  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5799  021C  00C3               	movwf	___flmul@temp+1
  5800  021D  0873               	movf	?__Umul8_16,w
  5801  021E  00C2               	movwf	___flmul@temp
  5802  021F                     l2890:
  5803  021F  0842               	movf	___flmul@temp,w
  5804  0220  00B2               	movwf	??___flmul
  5805  0221  0843               	movf	___flmul@temp+1,w
  5806  0222  00B3               	movwf	??___flmul+1
  5807  0223  01B4               	clrf	??___flmul+2
  5808  0224  01B5               	clrf	??___flmul+3
  5809  0225  0832               	movf	??___flmul,w
  5810  0226  07BE               	addwf	___flmul@prod,f
  5811  0227  0833               	movf	??___flmul+1,w
  5812  0228  1103               	clrz
  5813  0229  1803               	skipnc
  5814  022A  3E01               	addlw	1
  5815  022B  1903               	skipnz
  5816  022C  2A2E               	goto	u3721
  5817  022D  07BF               	addwf	___flmul@prod+1,f
  5818  022E                     u3721:
  5819  022E  0834               	movf	??___flmul+2,w
  5820  022F  1103               	clrz
  5821  0230  1803               	skipnc
  5822  0231  3E01               	addlw	1
  5823  0232  1903               	skipnz
  5824  0233  2A35               	goto	u3722
  5825  0234  07C0               	addwf	___flmul@prod+2,f
  5826  0235                     u3722:
  5827  0235  0835               	movf	??___flmul+3,w
  5828  0236  1103               	clrz
  5829  0237  1803               	skipnc
  5830  0238  3E01               	addlw	1
  5831  0239  1903               	skipnz
  5832  023A  2A3C               	goto	u3723
  5833  023B  07C1               	addwf	___flmul@prod+3,f
  5834  023C                     u3723:
  5835  023C  082C               	movf	___flmul@b+2,w
  5836  023D  00B2               	movwf	??___flmul
  5837  023E  0832               	movf	??___flmul,w
  5838  023F  00F3               	movwf	__Umul8_16@multiplicand
  5839  0240  0830               	movf	___flmul@a+2,w
  5840  0241  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5841  0246  0874               	movf	?__Umul8_16+1,w
  5842  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0248  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0249  00C3               	movwf	___flmul@temp+1
  5845  024A  0873               	movf	?__Umul8_16,w
  5846  024B  00C2               	movwf	___flmul@temp
  5847  024C                     l2892:
  5848  024C  0842               	movf	___flmul@temp,w
  5849  024D  00B2               	movwf	??___flmul
  5850  024E  0843               	movf	___flmul@temp+1,w
  5851  024F  00B3               	movwf	??___flmul+1
  5852  0250  01B4               	clrf	??___flmul+2
  5853  0251  01B5               	clrf	??___flmul+3
  5854  0252  3008               	movlw	8
  5855  0253                     u3735:
  5856  0253  1003               	clrc
  5857  0254  0DB2               	rlf	??___flmul,f
  5858  0255  0DB3               	rlf	??___flmul+1,f
  5859  0256  0DB4               	rlf	??___flmul+2,f
  5860  0257  0DB5               	rlf	??___flmul+3,f
  5861  0258                     u3730:
  5862  0258  3EFF               	addlw	-1
  5863  0259  1D03               	skipz
  5864  025A  2A53               	goto	u3735
  5865  025B  0832               	movf	??___flmul,w
  5866  025C  07BE               	addwf	___flmul@prod,f
  5867  025D  0833               	movf	??___flmul+1,w
  5868  025E  1103               	clrz
  5869  025F  1803               	skipnc
  5870  0260  3E01               	addlw	1
  5871  0261  1903               	skipnz
  5872  0262  2A64               	goto	u3741
  5873  0263  07BF               	addwf	___flmul@prod+1,f
  5874  0264                     u3741:
  5875  0264  0834               	movf	??___flmul+2,w
  5876  0265  1103               	clrz
  5877  0266  1803               	skipnc
  5878  0267  3E01               	addlw	1
  5879  0268  1903               	skipnz
  5880  0269  2A6B               	goto	u3742
  5881  026A  07C0               	addwf	___flmul@prod+2,f
  5882  026B                     u3742:
  5883  026B  0835               	movf	??___flmul+3,w
  5884  026C  1103               	clrz
  5885  026D  1803               	skipnc
  5886  026E  3E01               	addlw	1
  5887  026F  1903               	skipnz
  5888  0270  2A72               	goto	u3743
  5889  0271  07C1               	addwf	___flmul@prod+3,f
  5890  0272                     u3743:
  5891  0272                     l2894:
  5892  0272  0839               	movf	___flmul@grs,w
  5893  0273  00B2               	movwf	??___flmul
  5894  0274  083A               	movf	___flmul@grs+1,w
  5895  0275  00B3               	movwf	??___flmul+1
  5896  0276  083B               	movf	___flmul@grs+2,w
  5897  0277  00B4               	movwf	??___flmul+2
  5898  0278  083C               	movf	___flmul@grs+3,w
  5899  0279  00B5               	movwf	??___flmul+3
  5900  027A  3018               	movlw	24
  5901  027B                     u3755:
  5902  027B  1003               	clrc
  5903  027C  0CB5               	rrf	??___flmul+3,f
  5904  027D  0CB4               	rrf	??___flmul+2,f
  5905  027E  0CB3               	rrf	??___flmul+1,f
  5906  027F  0CB2               	rrf	??___flmul,f
  5907  0280                     u3750:
  5908  0280  3EFF               	addlw	-1
  5909  0281  1D03               	skipz
  5910  0282  2A7B               	goto	u3755
  5911  0283  0832               	movf	??___flmul,w
  5912  0284  07BE               	addwf	___flmul@prod,f
  5913  0285  0833               	movf	??___flmul+1,w
  5914  0286  1103               	clrz
  5915  0287  1803               	skipnc
  5916  0288  3E01               	addlw	1
  5917  0289  1903               	skipnz
  5918  028A  2A8C               	goto	u3761
  5919  028B  07BF               	addwf	___flmul@prod+1,f
  5920  028C                     u3761:
  5921  028C  0834               	movf	??___flmul+2,w
  5922  028D  1103               	clrz
  5923  028E  1803               	skipnc
  5924  028F  3E01               	addlw	1
  5925  0290  1903               	skipnz
  5926  0291  2A93               	goto	u3762
  5927  0292  07C0               	addwf	___flmul@prod+2,f
  5928  0293                     u3762:
  5929  0293  0835               	movf	??___flmul+3,w
  5930  0294  1103               	clrz
  5931  0295  1803               	skipnc
  5932  0296  3E01               	addlw	1
  5933  0297  1903               	skipnz
  5934  0298  2A9A               	goto	u3763
  5935  0299  07C1               	addwf	___flmul@prod+3,f
  5936  029A                     u3763:
  5937  029A                     l2896:
  5938  029A  3008               	movlw	8
  5939  029B  00B2               	movwf	??___flmul
  5940  029C                     u3775:
  5941  029C  1003               	clrc
  5942  029D  0DB9               	rlf	___flmul@grs,f
  5943  029E  0DBA               	rlf	___flmul@grs+1,f
  5944  029F  0DBB               	rlf	___flmul@grs+2,f
  5945  02A0  0DBC               	rlf	___flmul@grs+3,f
  5946  02A1  0BB2               	decfsz	??___flmul,f
  5947  02A2  2A9C               	goto	u3775
  5948  02A3                     l2898:
  5949  02A3  083D               	movf	___flmul@bexp,w
  5950  02A4  0738               	addwf	___flmul@aexp,w
  5951  02A5  00B2               	movwf	??___flmul
  5952  02A6  01B3               	clrf	??___flmul+1
  5953  02A7  0DB3               	rlf	??___flmul+1,f
  5954  02A8  0832               	movf	??___flmul,w
  5955  02A9  3E82               	addlw	130
  5956  02AA  00C2               	movwf	___flmul@temp
  5957  02AB  0833               	movf	??___flmul+1,w
  5958  02AC  1803               	skipnc
  5959  02AD  3E01               	addlw	1
  5960  02AE  3EFF               	addlw	255
  5961  02AF  00C3               	movwf	___flmul@temp+1
  5962  02B0  2ACE               	goto	l2910
  5963  02B1                     l2900:
  5964  02B1  3001               	movlw	1
  5965  02B2  00B2               	movwf	??___flmul
  5966  02B3                     u3785:
  5967  02B3  1003               	clrc
  5968  02B4  0DBE               	rlf	___flmul@prod,f
  5969  02B5  0DBF               	rlf	___flmul@prod+1,f
  5970  02B6  0DC0               	rlf	___flmul@prod+2,f
  5971  02B7  0DC1               	rlf	___flmul@prod+3,f
  5972  02B8  0BB2               	decfsz	??___flmul,f
  5973  02B9  2AB3               	goto	u3785
  5974  02BA                     l2902:
  5975  02BA  1FBC               	btfss	___flmul@grs+3,7
  5976  02BB  2ABD               	goto	u3791
  5977  02BC  2ABE               	goto	u3790
  5978  02BD                     u3791:
  5979  02BD  2ABF               	goto	l2906
  5980  02BE                     u3790:
  5981  02BE                     l2904:
  5982  02BE  143E               	bsf	___flmul@prod,0
  5983  02BF                     l2906:
  5984  02BF  3001               	movlw	1
  5985  02C0  00B2               	movwf	??___flmul
  5986  02C1                     u3805:
  5987  02C1  1003               	clrc
  5988  02C2  0DB9               	rlf	___flmul@grs,f
  5989  02C3  0DBA               	rlf	___flmul@grs+1,f
  5990  02C4  0DBB               	rlf	___flmul@grs+2,f
  5991  02C5  0DBC               	rlf	___flmul@grs+3,f
  5992  02C6  0BB2               	decfsz	??___flmul,f
  5993  02C7  2AC1               	goto	u3805
  5994  02C8                     l2908:
  5995  02C8  30FF               	movlw	255
  5996  02C9  07C2               	addwf	___flmul@temp,f
  5997  02CA  1803               	skipnc
  5998  02CB  0AC3               	incf	___flmul@temp+1,f
  5999  02CC  30FF               	movlw	255
  6000  02CD  07C3               	addwf	___flmul@temp+1,f
  6001  02CE                     l2910:
  6002  02CE  1FC0               	btfss	___flmul@prod+2,7
  6003  02CF  2AD1               	goto	u3811
  6004  02D0  2AD2               	goto	u3810
  6005  02D1                     u3811:
  6006  02D1  2AB1               	goto	l2900
  6007  02D2                     u3810:
  6008  02D2                     l2912:
  6009  02D2  01B8               	clrf	___flmul@aexp
  6010  02D3                     l2914:
  6011  02D3  1FBC               	btfss	___flmul@grs+3,7
  6012  02D4  2AD6               	goto	u3821
  6013  02D5  2AD7               	goto	u3820
  6014  02D6                     u3821:
  6015  02D6  2AF3               	goto	l2922
  6016  02D7                     u3820:
  6017  02D7                     l2916:
  6018  02D7  30FF               	movlw	255
  6019  02D8  0539               	andwf	___flmul@grs,w
  6020  02D9  00B2               	movwf	??___flmul
  6021  02DA  30FF               	movlw	255
  6022  02DB  053A               	andwf	___flmul@grs+1,w
  6023  02DC  00B3               	movwf	??___flmul+1
  6024  02DD  30FF               	movlw	255
  6025  02DE  053B               	andwf	___flmul@grs+2,w
  6026  02DF  00B4               	movwf	??___flmul+2
  6027  02E0  307F               	movlw	127
  6028  02E1  053C               	andwf	___flmul@grs+3,w
  6029  02E2  00B5               	movwf	??___flmul+3
  6030  02E3  0835               	movf	??___flmul+3,w
  6031  02E4  0434               	iorwf	??___flmul+2,w
  6032  02E5  0433               	iorwf	??___flmul+1,w
  6033  02E6  0432               	iorwf	??___flmul,w
  6034  02E7  1903               	skipnz
  6035  02E8  2AEA               	goto	u3831
  6036  02E9  2AEB               	goto	u3830
  6037  02EA                     u3831:
  6038  02EA  2AEE               	goto	l701
  6039  02EB                     u3830:
  6040  02EB                     l2918:
  6041  02EB  01B8               	clrf	___flmul@aexp
  6042  02EC  0AB8               	incf	___flmul@aexp,f
  6043  02ED  2AF3               	goto	l2922
  6044  02EE                     l701:
  6045  02EE  1C3E               	btfss	___flmul@prod,0
  6046  02EF  2AF1               	goto	u3841
  6047  02F0  2AF2               	goto	u3840
  6048  02F1                     u3841:
  6049  02F1  2AF3               	goto	l2922
  6050  02F2                     u3840:
  6051  02F2  2AEB               	goto	l2918
  6052  02F3                     l2922:
  6053  02F3  0838               	movf	___flmul@aexp,w
  6054  02F4  1903               	btfsc	3,2
  6055  02F5  2AF7               	goto	u3851
  6056  02F6  2AF8               	goto	u3850
  6057  02F7                     u3851:
  6058  02F7  2B29               	goto	l2932
  6059  02F8                     u3850:
  6060  02F8                     l2924:
  6061  02F8  3001               	movlw	1
  6062  02F9  07BE               	addwf	___flmul@prod,f
  6063  02FA  3000               	movlw	0
  6064  02FB  1803               	skipnc
  6065  02FC  3001               	movlw	1
  6066  02FD  07BF               	addwf	___flmul@prod+1,f
  6067  02FE  3000               	movlw	0
  6068  02FF  1803               	skipnc
  6069  0300  3001               	movlw	1
  6070  0301  07C0               	addwf	___flmul@prod+2,f
  6071  0302  3000               	movlw	0
  6072  0303  1803               	skipnc
  6073  0304  3001               	movlw	1
  6074  0305  07C1               	addwf	___flmul@prod+3,f
  6075  0306                     l2926:
  6076  0306  1C41               	btfss	___flmul@prod+3,0
  6077  0307  2B09               	goto	u3861
  6078  0308  2B0A               	goto	u3860
  6079  0309                     u3861:
  6080  0309  2B29               	goto	l2932
  6081  030A                     u3860:
  6082  030A                     l2928:
  6083  030A  083E               	movf	___flmul@prod,w
  6084  030B  00B2               	movwf	??___flmul
  6085  030C  083F               	movf	___flmul@prod+1,w
  6086  030D  00B3               	movwf	??___flmul+1
  6087  030E  0840               	movf	___flmul@prod+2,w
  6088  030F  00B4               	movwf	??___flmul+2
  6089  0310  0841               	movf	___flmul@prod+3,w
  6090  0311  00B5               	movwf	??___flmul+3
  6091  0312  3001               	movlw	1
  6092  0313  00B6               	movwf	??___flmul+4
  6093  0314                     u3875:
  6094  0314  0D35               	rlf	??___flmul+3,w
  6095  0315  0CB5               	rrf	??___flmul+3,f
  6096  0316  0CB4               	rrf	??___flmul+2,f
  6097  0317  0CB3               	rrf	??___flmul+1,f
  6098  0318  0CB2               	rrf	??___flmul,f
  6099  0319                     u3870:
  6100  0319  0BB6               	decfsz	??___flmul+4,f
  6101  031A  2B14               	goto	u3875
  6102  031B  0835               	movf	??___flmul+3,w
  6103  031C  00C1               	movwf	___flmul@prod+3
  6104  031D  0834               	movf	??___flmul+2,w
  6105  031E  00C0               	movwf	___flmul@prod+2
  6106  031F  0833               	movf	??___flmul+1,w
  6107  0320  00BF               	movwf	___flmul@prod+1
  6108  0321  0832               	movf	??___flmul,w
  6109  0322  00BE               	movwf	___flmul@prod
  6110  0323                     l2930:
  6111  0323  3001               	movlw	1
  6112  0324  07C2               	addwf	___flmul@temp,f
  6113  0325  1803               	skipnc
  6114  0326  0AC3               	incf	___flmul@temp+1,f
  6115  0327  3000               	movlw	0
  6116  0328  07C3               	addwf	___flmul@temp+1,f
  6117  0329                     l2932:
  6118  0329  0843               	movf	___flmul@temp+1,w
  6119  032A  3A80               	xorlw	128
  6120  032B  00FF               	movwf	btemp+1
  6121  032C  3080               	movlw	128
  6122  032D  027F               	subwf	btemp+1,w
  6123  032E  1D03               	skipz
  6124  032F  2B32               	goto	u3885
  6125  0330  30FF               	movlw	255
  6126  0331  0242               	subwf	___flmul@temp,w
  6127  0332                     u3885:
  6128  0332  1C03               	skipc
  6129  0333  2B35               	goto	u3881
  6130  0334  2B36               	goto	u3880
  6131  0335                     u3881:
  6132  0335  2B41               	goto	l2936
  6133  0336                     u3880:
  6134  0336                     l2934:
  6135  0336  307F               	movlw	127
  6136  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6137  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6138  0339  00C1               	movwf	___flmul@prod+3
  6139  033A  3080               	movlw	128
  6140  033B  00C0               	movwf	___flmul@prod+2
  6141  033C  3000               	movlw	0
  6142  033D  00BF               	movwf	___flmul@prod+1
  6143  033E  3000               	movlw	0
  6144  033F  00BE               	movwf	___flmul@prod
  6145  0340  2B76               	goto	l707
  6146  0341                     l2936:
  6147  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6148  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6149  0343  0843               	movf	___flmul@temp+1,w
  6150  0344  3A80               	xorlw	128
  6151  0345  00FF               	movwf	btemp+1
  6152  0346  3080               	movlw	128
  6153  0347  027F               	subwf	btemp+1,w
  6154  0348  1D03               	skipz
  6155  0349  2B4C               	goto	u3895
  6156  034A  3001               	movlw	1
  6157  034B  0242               	subwf	___flmul@temp,w
  6158  034C                     u3895:
  6159  034C  1803               	skipnc
  6160  034D  2B4F               	goto	u3891
  6161  034E  2B50               	goto	u3890
  6162  034F                     u3891:
  6163  034F  2B5C               	goto	l2942
  6164  0350                     u3890:
  6165  0350                     l2938:
  6166  0350  3000               	movlw	0
  6167  0351  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0352  1303               	bcf	3,6	;RP1=0, select bank0
  6169  0353  00C1               	movwf	___flmul@prod+3
  6170  0354  3000               	movlw	0
  6171  0355  00C0               	movwf	___flmul@prod+2
  6172  0356  3000               	movlw	0
  6173  0357  00BF               	movwf	___flmul@prod+1
  6174  0358  3000               	movlw	0
  6175  0359  00BE               	movwf	___flmul@prod
  6176  035A                     l2940:
  6177  035A  01B7               	clrf	___flmul@sign
  6178  035B  2B76               	goto	l707
  6179  035C                     l2942:
  6180  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6181  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6182  035E  0842               	movf	___flmul@temp,w
  6183  035F  00B2               	movwf	??___flmul
  6184  0360  0832               	movf	??___flmul,w
  6185  0361  00BD               	movwf	___flmul@bexp
  6186  0362  30FF               	movlw	255
  6187  0363  05BE               	andwf	___flmul@prod,f
  6188  0364  30FF               	movlw	255
  6189  0365  05BF               	andwf	___flmul@prod+1,f
  6190  0366  307F               	movlw	127
  6191  0367  05C0               	andwf	___flmul@prod+2,f
  6192  0368  3000               	movlw	0
  6193  0369  05C1               	andwf	___flmul@prod+3,f
  6194  036A                     l2944:
  6195  036A  1C3D               	btfss	___flmul@bexp,0
  6196  036B  2B6D               	goto	u3901
  6197  036C  2B6E               	goto	u3900
  6198  036D                     u3901:
  6199  036D  2B6F               	goto	l2948
  6200  036E                     u3900:
  6201  036E                     l2946:
  6202  036E  17C0               	bsf	___flmul@prod+2,7
  6203  036F                     l2948:
  6204  036F  083D               	movf	___flmul@bexp,w
  6205  0370  00B2               	movwf	??___flmul
  6206  0371  1003               	clrc
  6207  0372  0C32               	rrf	??___flmul,w
  6208  0373  00B3               	movwf	??___flmul+1
  6209  0374  0833               	movf	??___flmul+1,w
  6210  0375  00C1               	movwf	___flmul@prod+3
  6211  0376                     l707:
  6212  0376  0837               	movf	___flmul@sign,w
  6213  0377  00B2               	movwf	??___flmul
  6214  0378  0832               	movf	??___flmul,w
  6215  0379  04C1               	iorwf	___flmul@prod+3,f
  6216  037A                     l2950:
  6217  037A  0841               	movf	___flmul@prod+3,w
  6218  037B  00AD               	movwf	?___flmul+3
  6219  037C  0840               	movf	___flmul@prod+2,w
  6220  037D  00AC               	movwf	?___flmul+2
  6221  037E  083F               	movf	___flmul@prod+1,w
  6222  037F  00AB               	movwf	?___flmul+1
  6223  0380  083E               	movf	___flmul@prod,w
  6224  0381  00AA               	movwf	?___flmul
  6225  0382                     l695:
  6226  0382  0008               	return
  6227  0383                     __end_of___flmul:
  6228                           
  6229                           	psect	text25
  6230  0B22                     __ptext25:	
  6231 ;; *************** function __Umul8_16 *****************
  6232 ;; Defined at:
  6233 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  multiplier      1    wreg     unsigned char 
  6236 ;;  multiplicand    1    3[COMMON] unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6239 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6240 ;;  product         2    0[BANK0 ] unsigned int 
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  2    3[COMMON] unsigned int 
  6243 ;; Registers used:
  6244 ;;		wreg, status,2, status,0
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6250 ;;      Params:         2       0       0       0       0
  6251 ;;      Locals:         0       5       0       0       0
  6252 ;;      Temps:          2       0       0       0       0
  6253 ;;      Totals:         4       5       0       0       0
  6254 ;;Total ram usage:        9 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		___flmul
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function __Umul8_16
  6266  0B22                     __Umul8_16:
  6267                           
  6268                           ;incstack = 0
  6269                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6270                           ;__Umul8_16@multiplier stored from wreg
  6271  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  6273  0B24  00A4               	movwf	__Umul8_16@multiplier
  6274  0B25                     l2728:
  6275  0B25  01A0               	clrf	__Umul8_16@product
  6276  0B26  01A1               	clrf	__Umul8_16@product+1
  6277  0B27                     l2730:
  6278  0B27  0873               	movf	__Umul8_16@multiplicand,w
  6279  0B28  00F5               	movwf	??__Umul8_16
  6280  0B29  01F6               	clrf	??__Umul8_16+1
  6281  0B2A  0875               	movf	??__Umul8_16,w
  6282  0B2B  00A2               	movwf	__Umul8_16@word_mpld
  6283  0B2C  0876               	movf	??__Umul8_16+1,w
  6284  0B2D  00A3               	movwf	__Umul8_16@word_mpld+1
  6285  0B2E                     l2732:
  6286  0B2E  1C24               	btfss	__Umul8_16@multiplier,0
  6287  0B2F  2B31               	goto	u3381
  6288  0B30  2B32               	goto	u3380
  6289  0B31                     u3381:
  6290  0B31  2B38               	goto	l714
  6291  0B32                     u3380:
  6292  0B32                     l2734:
  6293  0B32  0822               	movf	__Umul8_16@word_mpld,w
  6294  0B33  07A0               	addwf	__Umul8_16@product,f
  6295  0B34  1803               	skipnc
  6296  0B35  0AA1               	incf	__Umul8_16@product+1,f
  6297  0B36  0823               	movf	__Umul8_16@word_mpld+1,w
  6298  0B37  07A1               	addwf	__Umul8_16@product+1,f
  6299  0B38                     l714:
  6300  0B38  3001               	movlw	1
  6301  0B39                     u3395:
  6302  0B39  1003               	clrc
  6303  0B3A  0DA2               	rlf	__Umul8_16@word_mpld,f
  6304  0B3B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6305  0B3C  3EFF               	addlw	-1
  6306  0B3D  1D03               	skipz
  6307  0B3E  2B39               	goto	u3395
  6308  0B3F  1003               	clrc
  6309  0B40  0CA4               	rrf	__Umul8_16@multiplier,f
  6310  0B41                     l2736:
  6311  0B41  0824               	movf	__Umul8_16@multiplier,w
  6312  0B42  1D03               	btfss	3,2
  6313  0B43  2B45               	goto	u3401
  6314  0B44  2B46               	goto	u3400
  6315  0B45                     u3401:
  6316  0B45  2B2E               	goto	l2732
  6317  0B46                     u3400:
  6318  0B46                     l2738:
  6319  0B46  0821               	movf	__Umul8_16@product+1,w
  6320  0B47  00F4               	movwf	?__Umul8_16+1
  6321  0B48  0820               	movf	__Umul8_16@product,w
  6322  0B49  00F3               	movwf	?__Umul8_16
  6323  0B4A                     l716:
  6324  0B4A  0008               	return
  6325  0B4B                     __end_of__Umul8_16:
  6326                           
  6327                           	psect	text26
  6328  0CF9                     __ptext26:	
  6329 ;; *************** function _interrupcion *****************
  6330 ;; Defined at:
  6331 ;;		line 52 in file "main.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6345 ;;      Params:         0       0       0       0       0
  6346 ;;      Locals:         0       0       0       0       0
  6347 ;;      Temps:          3       0       0       0       0
  6348 ;;      Totals:         3       0       0       0       0
  6349 ;;Total ram usage:        3 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; This function calls:
  6352 ;;		Nothing
  6353 ;; This function is called by:
  6354 ;;		Interrupt level 1
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _interrupcion
  6360  0CF9                     _interrupcion:
  6361  0CF9                     i1l2364:
  6362                           
  6363                           ;main.c: 54:     if(PIR1bits.RCIF){
  6364  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6365  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6366  0CFB  1E8C               	btfss	12,5	;volatile
  6367  0CFC  2CFE               	goto	u271_21
  6368  0CFD  2CFF               	goto	u271_20
  6369  0CFE                     u271_21:
  6370  0CFE  2D16               	goto	i1l2376
  6371  0CFF                     u271_20:
  6372  0CFF                     i1l2366:
  6373                           
  6374                           ;main.c: 55:         UARTdat = RCREG;
  6375  0CFF  081A               	movf	26,w	;volatile
  6376  0D00  00F0               	movwf	??_interrupcion
  6377  0D01  0870               	movf	??_interrupcion,w
  6378  0D02  00FA               	movwf	_UARTdat
  6379  0D03                     i1l2368:
  6380                           
  6381                           ;main.c: 56:         if(UARTdat == '+')UARTval++;
  6382  0D03  302B               	movlw	43
  6383  0D04  067A               	xorwf	_UARTdat,w
  6384  0D05  1D03               	btfss	3,2
  6385  0D06  2D08               	goto	u272_21
  6386  0D07  2D09               	goto	u272_20
  6387  0D08                     u272_21:
  6388  0D08  2D0D               	goto	i1l92
  6389  0D09                     u272_20:
  6390  0D09                     i1l2370:
  6391  0D09  3001               	movlw	1
  6392  0D0A  00F0               	movwf	??_interrupcion
  6393  0D0B  0870               	movf	??_interrupcion,w
  6394  0D0C  07EC               	addwf	_UARTval,f
  6395  0D0D                     i1l92:
  6396                           
  6397                           ;main.c: 57:         if(UARTdat == '-')UARTval--;
  6398  0D0D  302D               	movlw	45
  6399  0D0E  067A               	xorwf	_UARTdat,w
  6400  0D0F  1D03               	btfss	3,2
  6401  0D10  2D12               	goto	u273_21
  6402  0D11  2D13               	goto	u273_20
  6403  0D12                     u273_21:
  6404  0D12  2D15               	goto	i1l2374
  6405  0D13                     u273_20:
  6406  0D13                     i1l2372:
  6407  0D13  3001               	movlw	1
  6408  0D14  02EC               	subwf	_UARTval,f
  6409  0D15                     i1l2374:
  6410                           
  6411                           ;main.c: 58:         PIR1bits.RCIF = 0;
  6412  0D15  128C               	bcf	12,5	;volatile
  6413  0D16                     i1l2376:
  6414                           
  6415                           ;main.c: 61:     if(PIR1bits.ADIF){
  6416  0D16  1F0C               	btfss	12,6	;volatile
  6417  0D17  2D19               	goto	u274_21
  6418  0D18  2D1A               	goto	u274_20
  6419  0D19                     u274_21:
  6420  0D19  2D35               	goto	i1l2388
  6421  0D1A                     u274_20:
  6422  0D1A                     i1l2378:
  6423                           
  6424                           ;main.c: 62:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  6425  0D1A  1003               	clrc
  6426  0D1B  1D1F               	btfss	31,2	;volatile
  6427  0D1C  1403               	setc
  6428  0D1D  1803               	btfsc	3,0
  6429  0D1E  2D20               	goto	u275_21
  6430  0D1F  2D24               	goto	u275_20
  6431  0D20                     u275_21:
  6432  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  6433  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  6434  0D22  151F               	bsf	31,2	;volatile
  6435  0D23  2D27               	goto	u276_24
  6436  0D24                     u275_20:
  6437  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6438  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6439  0D26  111F               	bcf	31,2	;volatile
  6440  0D27                     u276_24:
  6441  0D27                     i1l2380:
  6442                           
  6443                           ;main.c: 63:         PIR1bits.ADIF = 0;
  6444  0D27  130C               	bcf	12,6	;volatile
  6445  0D28                     i1l2382:
  6446                           
  6447                           ;main.c: 64:         if(ADCON0bits.CHS0)pot1 = ADRESH;
  6448  0D28  1D1F               	btfss	31,2	;volatile
  6449  0D29  2D2B               	goto	u277_21
  6450  0D2A  2D2C               	goto	u277_20
  6451  0D2B                     u277_21:
  6452  0D2B  2D31               	goto	i1l2386
  6453  0D2C                     u277_20:
  6454  0D2C                     i1l2384:
  6455  0D2C  081E               	movf	30,w	;volatile
  6456  0D2D  00F0               	movwf	??_interrupcion
  6457  0D2E  0870               	movf	??_interrupcion,w
  6458  0D2F  00EE               	movwf	_pot1
  6459  0D30  2D35               	goto	i1l2388
  6460  0D31                     i1l2386:
  6461  0D31  081E               	movf	30,w	;volatile
  6462  0D32  00F0               	movwf	??_interrupcion
  6463  0D33  0870               	movf	??_interrupcion,w
  6464  0D34  00ED               	movwf	_pot2
  6465  0D35                     i1l2388:
  6466                           
  6467                           ;main.c: 68:     if(INTCONbits.T0IF){
  6468  0D35  1D0B               	btfss	11,2	;volatile
  6469  0D36  2D38               	goto	u278_21
  6470  0D37  2D39               	goto	u278_20
  6471  0D38                     u278_21:
  6472  0D38  2D3F               	goto	i1l99
  6473  0D39                     u278_20:
  6474  0D39                     i1l2390:
  6475                           
  6476                           ;main.c: 69:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  6477  0D39  189F               	btfsc	31,1	;volatile
  6478  0D3A  2D3C               	goto	u279_21
  6479  0D3B  2D3D               	goto	u279_20
  6480  0D3C                     u279_21:
  6481  0D3C  2D3E               	goto	i1l98
  6482  0D3D                     u279_20:
  6483  0D3D                     i1l2392:
  6484  0D3D  149F               	bsf	31,1	;volatile
  6485  0D3E                     i1l98:
  6486                           
  6487                           ;main.c: 70:         INTCONbits.T0IF = 0;
  6488  0D3E  110B               	bcf	11,2	;volatile
  6489  0D3F                     i1l99:
  6490  0D3F  0872               	movf	??_interrupcion+2,w
  6491  0D40  008A               	movwf	10
  6492  0D41  0E71               	swapf	??_interrupcion+1,w
  6493  0D42  0083               	movwf	3
  6494  0D43  0EFE               	swapf	btemp,f
  6495  0D44  0E7E               	swapf	btemp,w
  6496  0D45  0009               	retfie
  6497  0D46                     __end_of_interrupcion:
  6498  007E                     btemp	set	126	;btemp
  6499  007E                     wtemp0	set	126
  6500                           
  6501                           	psect	intentry
  6502  0004                     __pintentry:	
  6503                           ;incstack = 0
  6504                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  6505                           
  6506  0004                     interrupt_function:
  6507  007E                     saved_w	set	btemp
  6508  0004  00FE               	movwf	btemp
  6509  0005  0E03               	swapf	3,w
  6510  0006  00F1               	movwf	??_interrupcion+1
  6511  0007  080A               	movf	10,w
  6512  0008  00F2               	movwf	??_interrupcion+2
  6513  0009  120A  158A  2CF9   	ljmp	_interrupcion
  6514                           
  6515                           	psect	config
  6516                           
  6517                           ;Config register CONFIG1 @ 0x2007
  6518                           ;	Oscillator Selection bits
  6519                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6520                           ;	Watchdog Timer Enable bit
  6521                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6522                           ;	Power-up Timer Enable bit
  6523                           ;	PWRTE = OFF, PWRT disabled
  6524                           ;	RE3/MCLR pin function select bit
  6525                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6526                           ;	Code Protection bit
  6527                           ;	CP = OFF, Program memory code protection is disabled
  6528                           ;	Data Code Protection bit
  6529                           ;	CPD = OFF, Data memory code protection is disabled
  6530                           ;	Brown Out Reset Selection bits
  6531                           ;	BOREN = OFF, BOR disabled
  6532                           ;	Internal External Switchover bit
  6533                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6534                           ;	Fail-Safe Clock Monitor Enabled bit
  6535                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6536                           ;	Low Voltage Programming Enable bit
  6537                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6538                           ;	In-Circuit Debugger Mode bit
  6539                           ;	DEBUG = 0x1, unprogrammed default
  6540  2007                     	org	8199
  6541  2007  20F4               	dw	8436
  6542                           
  6543                           ;Config register CONFIG2 @ 0x2008
  6544                           ;	Brown-out Reset Selection bit
  6545                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6546                           ;	Flash Program Memory Self Write Enable bits
  6547                           ;	WRT = OFF, Write protection off
  6548  2008                     	org	8200
  6549  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     62      79
    BANK1            80      3       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[17]), 

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(BANK0[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(BANK0[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(BANK0[1]), sendhex@unidad(BANK0[1]), 

    division@dec	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    division@un	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    hexTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp3(BANK1[3]), 

    sendhex@valor	PTR unsigned char  size(1) Largest target is 1
		 -> UARTval(BANK0[1]), 

    floTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp2(BANK0[3]), disp1(BANK0[3]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_4(CODE[6]), STR_3(CODE[8]), 
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    CONVdec@lectura	PTR unsigned char  size(1) Largest target is 1
		 -> pot2(BANK0[1]), pot1(BANK0[1]), 

    CONVdec@equiv	PTR float  size(1) Largest target is 4
		 -> val2(BANK0[4]), val1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_cursorLCD
    _sendhex->_divisiondecimal
    _sendfloat->_division
    _sendString->_send1dato
    _initLCD->_comandoLCD
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->_division
    _division->___awdiv
    ___flsub->___fladd
    ___flsub->___xxtofl
    _cursorLCD->_comandoLCD
    _configuracion->_ADCconfig
    _LCDstring->_dispCHAR
    _CONVdec->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_floTochar
    _sendhex->_divisiondecimal
    _sendfloat->___fltol
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->___fltol
    _division->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _CONVdec->___flmul
    ___flmul->___xxtofl

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34619
                                              0 BANK1      3     3      0
                            _CONVdec
                          _LCDstring
                      _configuracion
                          _cursorLCD
                           _dispCHAR
                          _floTochar
                          _hexTochar
                            _initLCD
                         _sendString
                          _sendfloat
                            _sendhex
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2753
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _sendfloat                                           15    11      4   11586
                                             45 BANK0     15    11      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
                          _send1dato
                         _sendString
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     2      0     265
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              6 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _hexTochar                                            8     7      1    2878
                                             10 BANK0      8     7      1
                    _divisiondecimal
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              8 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _floTochar                                           17    12      5   11640
                                             45 BANK0     17    12      5
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             7     5      2    2067
                                              8 COMMON     2     0      2
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              3 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     460
                                              6 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     2      0     100
                                              5 COMMON     2     2      0
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (1) _dispCHAR                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CONVdec                                              6     5      1    4773
                                              7 COMMON     1     1      0
                                             36 BANK0      5     4      1
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVdec
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _LCDstring
     _dispCHAR
   _configuracion
     _ADCconfig
     _configUART
   _cursorLCD
     _comandoLCD
   _dispCHAR
   _floTochar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
   _hexTochar
     _divisiondecimal
       ___awdiv
       ___bmul
   _initLCD
     _comandoLCD
   _sendString
     _send1dato
   _sendfloat
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
     _send1dato
     _sendString
       _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       6       7        7.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 12:21:47 2021

                       pc 0002            ___bmul@product 0075              ___awdiv@sign 0021  
          ?_configuracion 0070                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0BE0                       l200 0CF8                       l131 0C21  
                     l203 0A61                       l211 0A87                       l220 0ABB  
                     l125 0C66                       l151 0A4B                       l208 0AFD  
                     l160 0ADA                       l154 0A51                       l163 07F6  
                     l148 0A73                       l332 0A9C                       l172 0B76  
                     l502 0E2A                       l166 0F43                       l169 0BAA  
                     l178 0CAE                       l603 048F                       l187 0EA7  
                     l620 0560                       l612 0612                       l701 02EE  
                     l605 0464                       l630 05A6                       l624 0584  
                     l641 0606                       l633 05E4                       l714 0B38  
                     l642 0612                       l707 0376                       l459 0DAE  
                     l716 0B4A                       l492 0E2A                       l741 0FFF  
                     l645 0B21                       l752 0FC9                       l753 0FD5  
                     l745 0FAD                       l739 0F68                       l499 0E15  
                     l695 0382                       l599 03E6        __size_of_ADCconfig 0045  
                     _RC0 0038                       _RC1 0039                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0038              ___flmul@bexp 003D  
            ___flmul@sign 0037              ___flmul@temp 0042              ___flmul@prod 003E  
         __end_of_CONVdec 0C22              ___fltol@exp1 0078                      l2010 0A84  
                    l2004 0A75                      l2006 0A78                      l2008 0A7A  
                    l3000 074E                      l3010 07DE                      l3002 0763  
                    l3012 07E7                      l3004 0797                      l3020 0BA1  
                    l3100 073C                      l3030 0F1F                      l3022 0EA8  
                    l3006 07C1                      l3014 0B7A                      l2240 0BAF  
                    l3032 0F3C                      l3024 0EBD                      l3040 0B6F  
                    l3008 07CF                      l3016 0B8F                      l3122 0C47  
                    l2250 0BC9                      l2242 0BB0                      l3026 0EC1  
                    l3034 0B4E                      l3018 0B98                      l3050 0631  
                    l3042 0613                      l2260 0BCE                      l2252 0BCA  
                    l2244 0BBF                      l2500 0D58                      l3028 0EF5  
                    l3036 0B60                      l3060 0669                      l3052 0640  
                    l3044 0618                      l2270 0BD3                      l2262 0BCF  
                    l2254 0BCB                      l2246 0BC4                      l2238 0BAB  
                    l2350 0AEC                      l2510 0D6C                      l2502 0D5D  
                    l3038 0B69                      l3070 06B1                      l3062 066F  
                    l3054 0646                      l3046 061D                      l2360 0AAB  
                    l2272 0BDA                      l2264 0BD0                      l2256 0BCC  
                    l2248 0BC8                      l2352 0AF2                      l2344 0ADC  
                    l2600 0418                      l2520 0D92                      l2512 0D73  
                    l2504 0D61                      l2280 0CB3                      l3080 06DF  
                    l3072 06BF                      l3064 0675                      l3056 0654  
                    l3048 0623                      l2362 0AAF                      l2274 0BDD  
                    l2266 0BD1                      l2258 0BCD                      l2354 0AF7  
                    l2346 0AE1                      l2610 042C                      l2602 041C  
                    l2530 0DAA                      l2522 0D93                      l2514 0D77  
                    l2506 0D63                      l2290 0CDA                      l2282 0CBC  
                    l3090 070C                      l3082 06E8                      l3074 06C7  
                    l3066 068C                      l3058 0663                      l2356 0A9E  
                    l2268 0BD2                      l2348 0AE6                      l2700 05AB  
                    l2620 0473                      l2604 0420                      l2612 0430  
                    l2540 0394                      l2524 0D9A                      l2516 0D7B  
                    l2508 0D69                      l2292 0CE0                      l2284 0CC2  
                    l2276 0CAF                      l3092 0715                      l3084 06F4  
                    l3076 06D0                      l3068 06A3                      l2358 0A9F  
                    l2710 05E9                      l2702 05B0                      l2622 0475  
                    l2630 0489                      l2614 0431                      l2606 0424  
                    l2550 03A8                      l2542 0395                      l2534 0383  
                    l2518 0D8C                      l2526 0DA0                      l2294 0CE6  
                    l2286 0CCB                      l2278 0CB2                      l1646 0A47  
                    l3094 0721                      l3086 06FD                      l3078 06D6  
                    l2720 0600                      l2712 05EE                      l2704 05BE  
                    l2640 04BC                      l2632 0493                      l2624 047B  
                    l2616 0448                      l2608 0428                      l2560 03BE  
                    l2544 039A                      l2552 03AA                      l2536 038A  
                    l2528 0DA5                      l2480 0A8E                      l2296 0CEC  
                    l2288 0CD1                      l1920 0ACE                      l3096 072A  
                    l3088 0703                      l2730 0B27                      l1922 0A53  
                    l1930 0A62                      l2722 0602                      l2714 05F6  
                    l2706 05C2                      l2650 04D3                      l2642 04C0  
                    l2634 0498                      l2626 047C                      l2618 0468  
                    l2570 03D3                      l2562 03C4                      l2554 03B2  
                    l2546 039F                      l2538 0390                      l2810 0B02  
                    l2802 0E0A                      l2490 0D46                      l2482 0A92  
                    l2298 0CF2                      l1914 0ABD                      l3098 0733  
                    l2732 0B2E                      l2900 02B1                      l2820 0033  
                    l1924 0A56                      l1940 0A6D                      l1932 0A66  
                    l2724 060D                      l2716 05FB                      l2708 05E0  
                    l2660 0538                      l2652 04D4                      l2644 04C4  
                    l2628 0485                      l2580 03F0                      l2572 03DB  
                    l2564 03C8                      l2556 03B7                      l2548 03A7  
                    l2804 0E1A                      l2492 0D49                      l2484 0A94  
                    l2476 0A89                      l1916 0ABE                      l2734 0B32  
                    l2902 02BA                      l2910 02CE                      l2830 0048  
                    l2822 0034                      l2814 0022                      l1926 0A58  
                    l1950 0C30                      l1942 0A70                      l1934 0A68  
                    l2726 0611                      l2718 05FC                      l2670 056D  
                    l2662 053E                      l2654 04DD                      l2646 04CD  
                    l2638 04A3                      l2590 0404                      l2582 03F4  
                    l2574 03DC                      l2566 03C9                      l2558 03BD  
                    l2806 0E1F                      l2494 0D4D                      l2486 0A9B  
                    l2478 0A8A                      l2750 0CA1                      l2742 0C6A  
                    l1918 0ACA                      l2736 0B41                      l2728 0B25  
                    l2912 02D2                      l2904 02BE                      l2840 0060  
                    l2832 0050                      l2824 0039                      l2816 0029  
                    l1928 0A5E                      l1960 0C5B                      l1952 0C37  
                    l1944 0C23                      l1936 0A69                      l2680 0588  
                    l2664 0543                      l2648 04CF                      l2656 04E2  
                    l2592 0408                      l2584 03F8                      l2568 03CE  
                    l2576 03DE                      l2808 0AFE                      l2496 0D52  
                    l2752 0CA7                      l2744 0C6E                      l2760 0E39  
                    l2738 0B46                      l2930 0323                      l2922 02F3  
                    l2914 02D3                      l2906 02BF                      l2850 007C  
                    l2842 0065                      l2834 0055                      l2826 003E  
                    l2818 002F                      l1962 0C5C                      l1946 0C24  
                    l1938 0A6A                      l2682 058B                      l2674 0576  
                    l2658 04FA                      l2666 0552                      l2690 0598  
                    l2594 040C                      l2586 03FC                      l2578 03EC  
                    l2498 0D54                      l2746 0C72                      l2770 0EA0  
                    l2762 0E3D                      l2754 0E2C                      l2940 035A  
                    l2924 02F8                      l2932 0329                      l2916 02D7  
                    l2908 02C8                      l2860 009F                      l2852 0081  
                    l2844 006A                      l2836 005B                      l2828 0046  
                    l1964 0C5D                      l1948 0C29                      l1956 0C3C  
                    l2692 0599                      l2684 058D                      l2676 057F  
                    l2668 0568                      l2596 0410                      l2588 0400  
                    l2780 0DDA                      l2772 0DAF                      l2748 0C76  
                    l2764 0E68                      l2756 0E32                      l2950 037A  
                    l2942 035C                      l2934 0336                      l2926 0306  
                    l2918 02EB                      l2870 012D                      l2862 00AC  
                    l2854 0086                      l2846 0072                      l2838 005F  
                    l1966 0C64                      l1958 0C52                      l2694 059D  
                    l2686 0592                      l2678 0583                      l2598 0414  
                    l2782 0DDB                      l2774 0DBC                      l2766 0E6F  
                    l2758 0E36                      l2944 036A                      l2936 0341  
                    l2928 030A                      l2880 018F                      l2872 0149  
                    l2864 00C9                      l2848 0074                      l2960 0F60  
                    l1968 0C65                      l2696 05A3                      l2688 0594  
                    l2784 0DE3                      l2768 0E9A                      l2946 036E  
                    l2938 0350                      l2890 021F                      l2882 01AC  
                    l2874 0152                      l2866 00E5                      l2858 008F  
                    l2970 0F8B                      l2962 0F70                      l2954 0F47  
                    l2794 0DF1                      l2786 0DE5                      l2778 0DC5  
                    l2948 036F                      l2892 024C                      l2884 01C5  
                    l2876 0162                      l2868 0111                      l2980 0FBF  
                    l2972 0F92                      l2956 0F4C                      l2788 0DE9  
                    l2796 0E03                      l2894 0272                      l2886 01E2  
                    l2878 017F                      l2990 0FF2                      l2982 0FC3  
                    l2974 0F96                      l2966 0F79                      l2958 0F50  
                    l2896 029A                      l2888 020F                      l2992 0FF6  
                    l2984 0FCD                      l2976 0FA4                      l2968 0F7E  
                    l2898 02A3                      l2994 0FF7                      l2986 0FD7  
                    l2978 0FB4                      l2988 0FED                      l2998 0BE2  
                    STR_1 0817                      STR_2 081F                      STR_3 0827  
                    STR_4 082F                      STR_5 0806                      STR_6 0835  
                    STR_7 0833                      u2030 0ADA                      u2031 0AD9  
                    u3000 03F0                      u3001 03EF                      u3010 0448  
                    u1410 0A51                      u3011 0447                      u1411 0A50  
                    u3020 0453                      u3101 04AE                      u3021 0451  
                    u3110 04C0                      u3102 04B5                      u3030 0454  
                    u3111 04BF                      u3103 04BC                      u3015 0444  
                    u4000 0FC9                      u3200 056D                      u3120 04C4  
                    u3040 0468                      u4001 0FC8                      u3201 056C  
                    u3121 04C3                      u3041 0467                      u4010 0FCD  
                    u3130 04D3                      u3050 047B                      u4011 0FCC  
                    u3131 04D2                      u3051 047A                      u4020 0FE2  
                    u3300 05C2                      u3220 0583                      u3301 05C1  
                    u3221 0582                      u4030 0FF2                      u3310 05D1  
                    u3230 0588                      u3150 04FA                      u3070 048F  
                    u4031 0FF1                      u3231 0587                      u3215 0578  
                    u3151 04F9                      u3071 048E                      u3400 0B46  
                    u4040 0FF6                      u3320 05E0                      u3240 0592  
                    u3080 0493                      u3401 0B45                      u4041 0FF5  
                    u4025 0FDD                      u3321 05DF                      u3241 0591  
                    u3161 0511                      u3153 04F6                      u3145 04D6  
                    u3081 0492                      u3065 047E                      u3330 05E9  
                    u3250 0598                      u3170 0525                      u3162 0512  
                    u3090 0498                      u3410 0CA7                      u4107 0A5B  
                    u3331 05E8                      u3315 05CC                      u3251 0597  
                    u3171 0526                      u3163 0517                      u3091 0497  
                    u3411 0CA6                      u2700 0ABB                      u3340 05EE  
                    u3260 059D                      u3180 0543                      u3172 052B  
                    u3164 0518                      u3500 0E09                      u3420 0E6E  
                    u2701 0ABA                      u3341 05ED                      u3261 059C  
                    u3181 0542                      u3173 052C                      u3165 051D  
                    u3501 0E08                      u3421 0E6D                      u3350 05FB  
                    u3270 05A3                      u3190 0568                      u3166 051E  
                    u3430 0EA0                      u3351 05FA                      u3271 05A2  
                    u3191 0567                      u3431 0E9F                      u3600 0081  
                    u3360 0600                      u3280 05AA                      u3520 0E1A  
                    u3440 0DBC                      u2800 0A8E                      u3601 0080  
                    u3361 05FF                      u3281 05A9                      u3521 0E19  
                    u3441 0DBB                      u2801 0A8D                      u4057 0744  
                    u3610 0086                      u3370 0611                      u3290 05B0  
                    u3530 0E1F                      u3450 0DD3                      u2810 0A9B  
                    u3611 0085                      u3371 0610                      u3291 05AF  
                    u3531 0E1E                      u3515 0E0C                      u2811 0A9A  
                    u4067 0CB7                      u3380 0B32                      u3540 0033  
                    u3460 0DE9                      u2900 0DA0                      u2820 0D4D  
                    u3381 0B31                      u3701 01D4                      u3621 00D7  
                    u3541 0032                      u3461 0DE8                      u2901 0D9F  
                    u2821 0D4C                      u4077 0CC6                      u3702 01DB  
                    u3622 00DE                      u3550 0039                      u3470 0DF0  
                    u2910 0DA5                      u2830 0D58                      u3711 0201  
                    u3703 01E2                      u3631 00F3                      u3623 00E5  
                    u3551 0038                      u3471 0DEF                      u3455 0DCE  
                    u2911 0DA4                      u2831 0D57                      u4087 0CD5  
                    u3712 0208                      u3632 00FA                      u3560 003E  
                    u2680 0AE1                      u2920 0394                      u2840 0D69  
                    u3721 022E                      u3713 020F                      u3641 011F  
                    u3633 0101                      u3561 003D                      u4097 0A7F  
                    u2681 0AE0                      u2921 0393                      u2841 0D68  
                    u3810 02D2                      u3730 0258                      u3722 0235  
                    u3642 0126                      u3570 005F                      u2690 0AF2  
                    u2930 039A                      u3490 0E02                      u3395 0B39  
                    u3811 02D1                      u3723 023C                      u3651 013B  
                    u3643 012D                      u3571 005E                      u2691 0AF1  
                    u2931 0399                      u3491 0E01                      u3900 036E  
                    u3820 02D7                      u3652 0142                      u3580 0065  
                    u2940 039F                      u2860 0D7B                      u3901 036D  
                    u3821 02D6                      u3805 02C1                      u3741 0264  
                    u3653 0149                      u3581 0064                      u2941 039E  
                    u3485 0DF2                      u2861 0D7A                      u3830 02EB  
                    u3750 0280                      u3742 026B                      u3590 006A  
                    u3910 0F4C                      u2950 03BD                      u3831 02EA  
                    u3743 0272                      u3735 0253                      u3671 0171  
                    u3591 0069                      u3911 0F4B                      u2951 03BC  
                    u2855 0D6D                      u3840 02F2                      u3672 0178  
                    u3920 0F50                      u2960 03C8                      u2880 0D8C  
                    u3841 02F1                      u3761 028C                      u3681 019E  
                    u3673 017F                      u3665 014B                      u3921 0F4F  
                    u2961 03C7                      u2881 0D8B                      u3850 02F8  
                    u3762 0293                      u3682 01A5                      u3930 0F70  
                    u2970 03CE                      u3851 02F7                      u3763 029A  
                    u3755 027B                      u3683 01AC                      u3931 0F6F  
                    u2971 03CD                      u2875 0D7C                      u3860 030A  
                    u2980 03D3                      u3861 0309                      u2981 03D2  
                    u2885 0D88                      u3870 0319                      u3790 02BE  
                    u3950 0F91                      u2990 03EC                      u3791 02BD  
                    u3775 029C                      u3695 01AE                      u3951 0F90  
                    u2991 03EB                      u2895 0D94                      u3880 0336  
                    u3881 0335                      u3785 02B3                      u3945 0F83  
                    u3890 0350                      u3970 0FB3                      u3891 034F  
                    u3875 0314                      u3971 0FB2                      i1l92 0D0D  
                    u3885 0332                      u3965 0FA5                      u3990 0FC3  
                    u3895 034C                      u3991 0FC2                      u3985 0FB8  
                    i1l98 0D3E                      i1l99 0D3F                      _main 0613  
                    _val1 0062                      _val2 005E                      _pot1 006E  
                    _pot2 006D                      btemp 007E           _divisiondecimal 0E2B  
                    start 000C         ___bmul@multiplier 0076               division@dec 0079  
             division@div 0028        __size_of_LCDstring 001F             ___fltol@sign1 0077  
         __end_of___fladd 0613                     ?_main 0070           __end_of___awdiv 0DAF  
         __end_of___flmul 0383           __end_of___flsub 0B22           __end_of___fltol 0E2B  
                   _ANSEL 0188           ___awdiv@divisor 0073           ___awdiv@counter 0020  
                   _RCREG 001A              CONVdec@equiv 0044             floTochar@conv 0051  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
           floTochar@temp 0056                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019             send1dato@dato 0073           __end_of_initLCD 0CF9  
                   _disp1 0069                     _disp2 0066                     _disp3 00A0  
         __end_of_sendhex 0BAB                     pclath 000A                     status 0003  
                   wtemp0 007E         __end_of_ADCconfig 0C67            sendhex@centena 002F  
         __initialization 000F              __end_of_main 074E           ??_configuracion 0077  
                  ??_main 00A3       divisiondecimal@cent 0026                 ??_CONVdec 0045  
                  _ADRESH 001E          ___awdiv@dividend 0075   __end_of_divisiondecimal 0EA8  
                  _ANSELH 0189                    i1l2370 0D09                    i1l2380 0D27  
                  i1l2372 0D13                    i1l2364 0CF9                    i1l2390 0D39  
                  i1l2382 0D28                    i1l2374 0D15                    i1l2366 0CFF  
                  i1l2392 0D3D                    i1l2384 0D2C                    i1l2368 0D03  
                  i1l2376 0D16                    i1l2386 0D31                    i1l2378 0D1A  
                  i1l2388 0D35         __end_of_LCDstring 0ABC                    u271_20 0CFF  
                  u271_21 0CFE                    u272_20 0D09                    u272_21 0D08  
                  u273_20 0D13                    u273_21 0D12                    u274_20 0D1A  
                  u274_21 0D19                    u275_20 0D24                    u275_21 0D20  
                  u276_24 0D27                    u277_20 0D2C                    u277_21 0D2B  
                  u278_20 0D39                    u278_21 0D38                    u279_20 0D3D  
                  u279_21 0D3C             ADCconfig@just 0073            floTochar@valor 004D  
          sendfloat@valor 004D          __end_of___xxtofl 1000             hexTochar@conv 002A  
        __end_of_dispCHAR 0A62                    ___bmul 0A88          __end_of_division 0CAF  
               ??___fladd 0028                 ??___awdiv 0077                 ??___flmul 0032  
               ??___flsub 0077                 ??___fltol 0048          ___awdiv@quotient 0022  
               ??_initLCD 0076        __size_of__Umul8_16 0029                    saved_w 007E  
               ??_sendhex 002A              ___xxtofl@arg 0026              ___xxtofl@exp 0025  
            ___xxtofl@val 0073   __end_of__initialization 001E                ___fltol@f1 0044  
     ___bmul@multiplicand 0073            __pcstackCOMMON 0070             ?_interrupcion 0070  
          _OPTION_REGbits 0081        __size_of_floTochar 009C        __size_of_hexTochar 002C  
        ?_divisiondecimal 0024                __pbssBANK0 005E                __pbssBANK1 00A0  
      __size_of_cursorLCD 0023         __end_of__Umul8_16 0B4B        __size_of_send1dato 000C  
          ??_interrupcion 0070                __pmaintext 0613                   ?___bmul 0073  
              __pintentry 0004        __size_of_sendfloat 00A9                _comandoLCD 0A74  
                 _CONVdec 0BE1                _configUART 0A62            ADCconfig@canal 0076  
               ?___xxtofl 0073            CONVdec@lectura 0077           floTochar@entero 005B  
               ?_dispCHAR 0070                   _UARTdat 007A           sendfloat@entero 005A  
                 _UARTval 006C                __stringtab 0800                 ?_division 0078  
          hexTochar@valor 002E         __end_of_floTochar 0F44                 _ADCconfig 0C22  
         __size_of___bmul 0015         __end_of_hexTochar 0B77                   ___fladd 0383  
                 ___awdiv 0D46                   ___flmul 0022                   ___flsub 0AFE  
                 ___fltol 0DAF                   __ptext1 0B77                   __ptext2 074E  
                 __ptext3 0ABC                   __ptext4 0A46                   __ptext5 0CAF  
                 __ptext6 0B4B                   __ptext7 0E2B                   __ptext8 0EA8  
                 __ptext9 0C67                   _initLCD 0CAF         __end_of_cursorLCD 0AFE  
              ??___xxtofl 0020                   _sendhex 0B77                ??_dispCHAR 0073  
       __end_of_send1dato 0A52                   clrloop0 07F8      end_of_initialization 001E  
              ??_division 0024         __end_of_sendfloat 07F7                _sendString 0ABC  
               _LCDstring 0A9D                 _RCSTAbits 0018                ?_ADCconfig 0073  
   __end_of_configuracion 0BE1               ?_comandoLCD 0070               ___fladd@grs 0076  
             ?_configUART 0070             ___xxtofl@sign 0024                 _TRISCbits 0087  
    __end_of_interrupcion 0D46               ___flmul@grs 0039                 _TXSTAbits 0098  
              ?_LCDstring 0070                division@un 0078          hexTochar@centena 0030  
          __end_of___bmul 0A9D       start_initialization 000F            division@conteo 0027  
           sendhex@decena 0030             sendhex@unidad 002E        divisiondecimal@dec 0025  
      divisiondecimal@div 0079               ?_sendString 0070             sendfloat@temp 0055  
     __size_of_comandoLCD 0014       __size_of_configUART 0012               ??_ADCconfig 0074  
                ??___bmul 0074                 __Umul8_16 0B22                 ___fladd@a 0024  
               ___fladd@b 0020                  ?_CONVdec 0044     divisiondecimal@conteo 0078  
               ___flmul@a 002E                 ___flmul@b 002A               __pbssCOMMON 007A  
               ___flsub@a 0030                 ___flsub@b 0034                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A3         __size_of___xxtofl 00BC  
       __size_of_dispCHAR 0010         __size_of_division 0048               ??_LCDstring 0075  
__size_of_divisiondecimal 007D                  ?___fladd 0020                  ?___awdiv 0073  
                ?___flmul 002A                  ?___flsub 0030                  ?___fltol 0044  
              ?__Umul8_16 0073                 _floTochar 0EA8                 __pstrings 0800  
               _hexTochar 0B4B       __size_of_sendString 001F     __size_of_interrupcion 004D  
                ?_initLCD 0070                  ?_sendhex 0070                 _cursorLCD 0ADB  
               _send1dato 0A46         interrupt_function 0004         sendString@mensaje 0075  
        floTochar@decimal 005A                 clear_ram0 07F7                  _PIE1bits 008C  
               dispCHAR@b 0074                 _sendfloat 074E                  _PIR1bits 000C  
        sendfloat@decimal 0059              _interrupcion 0CF9                ?_floTochar 004D  
              ?_hexTochar 002A                _ADCON0bits 001F               __stringbase 0805  
              _ADCON1bits 009F              ??_comandoLCD 0073              ??_configUART 0073  
        __size_of_CONVdec 0041           hexTochar@decena 0031                ?_cursorLCD 0076  
         hexTochar@unidad 002F                ?_send1dato 0070              sendhex@valor 002D  
       divisiondecimal@un 0024                ?_sendfloat 004D        __end_of_comandoLCD 0A88  
      __end_of_configUART 0A74       floTochar@digdecimal 005C               ??__Umul8_16 0075  
        __size_of___fladd 0290          __size_of___awdiv 0069          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C         ??_divisiondecimal 0027  
      __end_of__stringtab 0806          __size_of_initLCD 004A                  ___xxtofl 0F44  
                _dispCHAR 0A52          __size_of_sendhex 0034                  __ptext10 0A88  
                __ptext11 0D46                  __ptext20 0A9D                  __ptext12 0DAF  
                __ptext21 0A52                  __ptext13 0AFE                  __ptext22 0BE1  
                __ptext14 0383                  __ptext23 0F44                  __ptext15 0ADB  
                __ptext24 0022                  __ptext16 0A74                  __ptext25 0B22  
                __ptext17 0BAB                  __ptext26 0CF9                  __ptext18 0A62  
                __ptext19 0C22          LCDstring@mensaje 0076                  _division 0C67  
            ??_sendString 0074    __size_of_configuracion 0036             __size_of_main 013B  
           cursorLCD@fila 0078             cursorLCD@temp 0079               ??_floTochar 0052  
             ??_hexTochar 002B       sendfloat@digdecimal 005B        __end_of_sendString 0ADB  
              _INTCONbits 000B               ??_cursorLCD 0077                  intlevel1 0000  
             ??_send1dato 0073               ??_sendfloat 0051                 stringcode 0800  
              _OSCCONbits 008F             _configuracion 0BAB          cursorLCD@columna 0076  
  __Umul8_16@multiplicand 0073                  stringdir 0800                  stringtab 0800  
           ___fladd@signs 0073              ___fladd@aexp 0074              ___fladd@bexp 0075  
    __Umul8_16@multiplier 0024         __Umul8_16@product 0020             comandoLCD@cmd 0075  
