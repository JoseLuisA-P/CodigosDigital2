

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 12:54:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0019                     _TXREG	set	25
   469  0018                     _RCSTAbits	set	24
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  000B                     _INTCONbits	set	11
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  001A                     _RCREG	set	26
   479  000C                     _PIR1bits	set	12
   480  0039                     _RC1	set	57
   481  0038                     _RC0	set	56
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  0087                     _TRISCbits	set	135
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008C                     _PIE1bits	set	140
   488  008F                     _OSCCONbits	set	143
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISC	set	135
   492  0086                     _TRISB	set	134
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_5:
   514  0806  3450               	retlw	80	;'P'
   515  0807  344F               	retlw	79	;'O'
   516  0808  3454               	retlw	84	;'T'
   517  0809  3431               	retlw	49	;'1'
   518  080A  3420               	retlw	32	;' '
   519  080B  3420               	retlw	32	;' '
   520  080C  3450               	retlw	80	;'P'
   521  080D  344F               	retlw	79	;'O'
   522  080E  3454               	retlw	84	;'T'
   523  080F  3432               	retlw	50	;'2'
   524  0810  3420               	retlw	32	;' '
   525  0811  3420               	retlw	32	;' '
   526  0812  3455               	retlw	85	;'U'
   527  0813  3441               	retlw	65	;'A'
   528  0814  3452               	retlw	82	;'R'
   529  0815  3454               	retlw	84	;'T'
   530  0816  3400               	retlw	0
   531  0817                     STR_1:
   532  0817  3450               	retlw	80	;'P'
   533  0818  344F               	retlw	79	;'O'
   534  0819  3454               	retlw	84	;'T'
   535  081A  3431               	retlw	49	;'1'
   536  081B  343A               	retlw	58	;':'
   537  081C  3420               	retlw	32	;' '
   538  081D  340D               	retlw	13
   539  081E  3400               	retlw	0
   540  081F                     STR_2:
   541  081F  3450               	retlw	80	;'P'
   542  0820  344F               	retlw	79	;'O'
   543  0821  3454               	retlw	84	;'T'
   544  0822  3432               	retlw	50	;'2'
   545  0823  343A               	retlw	58	;':'
   546  0824  3420               	retlw	32	;' '
   547  0825  340D               	retlw	13
   548  0826  3400               	retlw	0
   549  0827                     STR_3:
   550  0827  3455               	retlw	85	;'U'
   551  0828  3441               	retlw	65	;'A'
   552  0829  3452               	retlw	82	;'R'
   553  082A  3454               	retlw	84	;'T'
   554  082B  343A               	retlw	58	;':'
   555  082C  3420               	retlw	32	;' '
   556  082D  340D               	retlw	13
   557  082E  3400               	retlw	0
   558  082F                     STR_4:
   559  082F  340D               	retlw	13
   560  0830  340D               	retlw	13
   561  0831  340D               	retlw	13
   562  0832  340D               	retlw	13
   563  0833  340D               	retlw	13
   564  0834  3400               	retlw	0
   565  0835                     STR_6:
   566  0835  342E               	retlw	46	;'.'
   567  0836  3400               	retlw	0
   568  0833                     
   569                           	psect	cinit
   570  000F                     start_initialization:	
   571                           ; #config settings
   572                           
   573  000F                     __initialization:
   574                           
   575                           ; Clear objects allocated to COMMON
   576  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   577                           
   578                           ; Clear objects allocated to BANK0
   579  0010  1383               	bcf	3,7	;select IRP bank0
   580  0011  305E               	movlw	low __pbssBANK0
   581  0012  0084               	movwf	4
   582  0013  306F               	movlw	low (__pbssBANK0+17)
   583  0014  120A  158A  223E  120A  118A  	fcall	clear_ram0
   584                           
   585                           ; Clear objects allocated to BANK1
   586  0019  1683               	bsf	3,5	;RP0=1, select bank1
   587  001A  1303               	bcf	3,6	;RP1=0, select bank1
   588  001B  01A0               	clrf	__pbssBANK1& (0+127)
   589  001C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   590  001D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   591  001E                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594  001E                     __end_of__initialization:
   595  001E  0183               	clrf	3
   596  001F  120A  118A  2E13   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMMON
   599  007A                     __pbssCOMMON:
   600  007A                     _UARTdat:
   601  007A                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604  005E                     __pbssBANK0:
   605  005E                     _val2:
   606  005E                     	ds	4
   607  0062                     _val1:
   608  0062                     	ds	4
   609  0066                     _disp2:
   610  0066                     	ds	3
   611  0069                     _disp1:
   612  0069                     	ds	3
   613  006C                     _UARTval:
   614  006C                     	ds	1
   615  006D                     _pot2:
   616  006D                     	ds	1
   617  006E                     _pot1:
   618  006E                     	ds	1
   619                           
   620                           	psect	bssBANK1
   621  00A0                     __pbssBANK1:
   622  00A0                     _disp3:
   623  00A0                     	ds	3
   624                           
   625                           	psect	clrtext
   626  0A3E                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0A3E  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0A3F                     clrloop0:
   632  0A3F  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0A40  0A84               	incf	4,f	;increment pointer
   634  0A41  0604               	xorwf	4,w	;XOR with final address
   635  0A42  1903               	btfsc	3,2	;have we reached the end yet?
   636  0A43  3400               	retlw	0	;all done for this memory range, return
   637  0A44  0604               	xorwf	4,w	;XOR again to restore value
   638  0A45  2A3F               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackBANK1
   641  00A3                     __pcstackBANK1:
   642  00A3                     ??_main:
   643                           
   644                           ; 1 bytes @ 0x0
   645  00A3                     	ds	2
   646                           
   647                           	psect	cstackCOMMON
   648  0070                     __pcstackCOMMON:
   649  0070                     ?_configuracion:
   650  0070                     ?_initLCD:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_sendString:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_sendhex:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_LCDstring:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_dispCHAR:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_configUART:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_comandoLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_interrupcion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_interrupcion:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_main:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_send1dato:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685  0070                     	ds	3
   686  0073                     ??_dispCHAR:
   687  0073                     ??_configUART:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_ADCconfig:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??_comandoLCD:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ??_send1dato:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ?___bmul:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ?__Umul8_16:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ?___awdiv:	
   706                           ; 2 bytes @ 0x3
   707                           
   708  0073                     ?___xxtofl:	
   709                           ; 2 bytes @ 0x3
   710                           
   711  0073                     ADCconfig@just:	
   712                           ; 4 bytes @ 0x3
   713                           
   714  0073                     send1dato@dato:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ___bmul@multiplicand:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ___fladd@signs:	
   721                           ; 1 bytes @ 0x3
   722                           
   723  0073                     __Umul8_16@multiplicand:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ___awdiv@divisor:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ___xxtofl@val:	
   730                           ; 2 bytes @ 0x3
   731                           
   732                           
   733                           ; 4 bytes @ 0x3
   734  0073                     	ds	1
   735  0074                     ??_sendString:
   736  0074                     ??_ADCconfig:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     ??___bmul:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     dispCHAR@b:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ___fladd@aexp:	
   746                           ; 1 bytes @ 0x4
   747                           
   748                           
   749                           ; 1 bytes @ 0x4
   750  0074                     	ds	1
   751  0075                     ??_LCDstring:
   752  0075                     ??__Umul8_16:	
   753                           ; 1 bytes @ 0x5
   754                           
   755  0075                     sendString@mensaje:	
   756                           ; 1 bytes @ 0x5
   757                           
   758  0075                     comandoLCD@cmd:	
   759                           ; 1 bytes @ 0x5
   760                           
   761  0075                     ___bmul@product:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ___fladd@bexp:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     ___awdiv@dividend:	
   768                           ; 1 bytes @ 0x5
   769                           
   770                           
   771                           ; 2 bytes @ 0x5
   772  0075                     	ds	1
   773  0076                     ??_initLCD:
   774  0076                     ?_cursorLCD:	
   775                           ; 1 bytes @ 0x6
   776                           
   777  0076                     ADCconfig@canal:	
   778                           ; 1 bytes @ 0x6
   779                           
   780  0076                     cursorLCD@columna:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0076                     LCDstring@mensaje:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     ___bmul@multiplier:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ___fladd@grs:	
   790                           ; 1 bytes @ 0x6
   791                           
   792                           
   793                           ; 1 bytes @ 0x6
   794  0076                     	ds	1
   795  0077                     ??_configuracion:
   796  0077                     ??_cursorLCD:	
   797                           ; 1 bytes @ 0x7
   798                           
   799  0077                     ??___awdiv:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     ??___flsub:	
   803                           ; 1 bytes @ 0x7
   804                           
   805  0077                     CONVdec@lectura:	
   806                           ; 1 bytes @ 0x7
   807                           
   808  0077                     ___fltol@sign1:	
   809                           ; 1 bytes @ 0x7
   810                           
   811                           
   812                           ; 1 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ?_division:
   815  0078                     division@un:	
   816                           ; 1 bytes @ 0x8
   817                           
   818  0078                     divisiondecimal@conteo:	
   819                           ; 1 bytes @ 0x8
   820                           
   821  0078                     cursorLCD@fila:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0078                     ___fltol@exp1:	
   825                           ; 1 bytes @ 0x8
   826                           
   827                           
   828                           ; 1 bytes @ 0x8
   829  0078                     	ds	1
   830  0079                     division@dec:
   831  0079                     divisiondecimal@div:	
   832                           ; 1 bytes @ 0x9
   833                           
   834  0079                     cursorLCD@temp:	
   835                           ; 1 bytes @ 0x9
   836                           
   837                           
   838                           ; 1 bytes @ 0x9
   839  0079                     	ds	1
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:
   843  0020                     ??___xxtofl:
   844  0020                     ?___fladd:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ___awdiv@counter:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0020                     __Umul8_16@product:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___fladd@b:	
   854                           ; 2 bytes @ 0x0
   855                           
   856                           
   857                           ; 4 bytes @ 0x0
   858  0020                     	ds	1
   859  0021                     ___awdiv@sign:
   860                           
   861                           ; 1 bytes @ 0x1
   862  0021                     	ds	1
   863  0022                     ___awdiv@quotient:
   864  0022                     __Umul8_16@word_mpld:	
   865                           ; 2 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	2
   870  0024                     ??_division:
   871  0024                     ?_divisiondecimal:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0024                     divisiondecimal@un:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0024                     __Umul8_16@multiplier:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0024                     ___xxtofl@sign:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0024                     ___fladd@a:	
   884                           ; 1 bytes @ 0x4
   885                           
   886                           
   887                           ; 4 bytes @ 0x4
   888  0024                     	ds	1
   889  0025                     divisiondecimal@dec:
   890  0025                     ___xxtofl@exp:	
   891                           ; 1 bytes @ 0x5
   892                           
   893                           
   894                           ; 1 bytes @ 0x5
   895  0025                     	ds	1
   896  0026                     divisiondecimal@cent:
   897  0026                     ___xxtofl@arg:	
   898                           ; 1 bytes @ 0x6
   899                           
   900                           
   901                           ; 4 bytes @ 0x6
   902  0026                     	ds	1
   903  0027                     ??_divisiondecimal:
   904  0027                     division@conteo:	
   905                           ; 1 bytes @ 0x7
   906                           
   907                           
   908                           ; 1 bytes @ 0x7
   909  0027                     	ds	1
   910  0028                     ??___fladd:
   911  0028                     division@div:	
   912                           ; 1 bytes @ 0x8
   913                           
   914                           
   915                           ; 1 bytes @ 0x8
   916  0028                     	ds	2
   917  002A                     ??_sendhex:
   918  002A                     ?_hexTochar:	
   919                           ; 1 bytes @ 0xA
   920                           
   921  002A                     ?___flmul:	
   922                           ; 1 bytes @ 0xA
   923                           
   924  002A                     hexTochar@conv:	
   925                           ; 4 bytes @ 0xA
   926                           
   927  002A                     ___flmul@b:	
   928                           ; 1 bytes @ 0xA
   929                           
   930                           
   931                           ; 4 bytes @ 0xA
   932  002A                     	ds	1
   933  002B                     ??_hexTochar:
   934                           
   935                           ; 1 bytes @ 0xB
   936  002B                     	ds	2
   937  002D                     sendhex@valor:
   938                           
   939                           ; 1 bytes @ 0xD
   940  002D                     	ds	1
   941  002E                     sendhex@unidad:
   942  002E                     hexTochar@valor:	
   943                           ; 1 bytes @ 0xE
   944                           
   945  002E                     ___flmul@a:	
   946                           ; 1 bytes @ 0xE
   947                           
   948                           
   949                           ; 4 bytes @ 0xE
   950  002E                     	ds	1
   951  002F                     sendhex@centena:
   952  002F                     hexTochar@unidad:	
   953                           ; 1 bytes @ 0xF
   954                           
   955                           
   956                           ; 1 bytes @ 0xF
   957  002F                     	ds	1
   958  0030                     ?___flsub:
   959  0030                     sendhex@decena:	
   960                           ; 4 bytes @ 0x10
   961                           
   962  0030                     hexTochar@centena:	
   963                           ; 1 bytes @ 0x10
   964                           
   965  0030                     ___flsub@a:	
   966                           ; 1 bytes @ 0x10
   967                           
   968                           
   969                           ; 4 bytes @ 0x10
   970  0030                     	ds	1
   971  0031                     hexTochar@decena:
   972                           
   973                           ; 1 bytes @ 0x11
   974  0031                     	ds	1
   975  0032                     ??___flmul:
   976                           
   977                           ; 1 bytes @ 0x12
   978  0032                     	ds	2
   979  0034                     ___flsub@b:
   980                           
   981                           ; 4 bytes @ 0x14
   982  0034                     	ds	3
   983  0037                     ___flmul@sign:
   984                           
   985                           ; 1 bytes @ 0x17
   986  0037                     	ds	1
   987  0038                     ___flmul@aexp:
   988                           
   989                           ; 1 bytes @ 0x18
   990  0038                     	ds	1
   991  0039                     ___flmul@grs:
   992                           
   993                           ; 4 bytes @ 0x19
   994  0039                     	ds	4
   995  003D                     ___flmul@bexp:
   996                           
   997                           ; 1 bytes @ 0x1D
   998  003D                     	ds	1
   999  003E                     ___flmul@prod:
  1000                           
  1001                           ; 4 bytes @ 0x1E
  1002  003E                     	ds	4
  1003  0042                     ___flmul@temp:
  1004                           
  1005                           ; 2 bytes @ 0x22
  1006  0042                     	ds	2
  1007  0044                     ?_CONVdec:
  1008  0044                     ?___fltol:	
  1009                           ; 1 bytes @ 0x24
  1010                           
  1011  0044                     CONVdec@equiv:	
  1012                           ; 4 bytes @ 0x24
  1013                           
  1014  0044                     ___fltol@f1:	
  1015                           ; 1 bytes @ 0x24
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x24
  1019  0044                     	ds	1
  1020  0045                     ??_CONVdec:
  1021                           
  1022                           ; 1 bytes @ 0x25
  1023  0045                     	ds	3
  1024  0048                     ??___fltol:
  1025                           
  1026                           ; 1 bytes @ 0x28
  1027  0048                     	ds	5
  1028  004D                     ?_sendfloat:
  1029  004D                     ?_floTochar:	
  1030                           ; 1 bytes @ 0x2D
  1031                           
  1032  004D                     sendfloat@valor:	
  1033                           ; 1 bytes @ 0x2D
  1034                           
  1035  004D                     floTochar@valor:	
  1036                           ; 4 bytes @ 0x2D
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x2D
  1040  004D                     	ds	4
  1041  0051                     ??_sendfloat:
  1042  0051                     floTochar@conv:	
  1043                           ; 1 bytes @ 0x31
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x31
  1047  0051                     	ds	1
  1048  0052                     ??_floTochar:
  1049                           
  1050                           ; 1 bytes @ 0x32
  1051  0052                     	ds	3
  1052  0055                     sendfloat@temp:
  1053                           
  1054                           ; 4 bytes @ 0x35
  1055  0055                     	ds	1
  1056  0056                     floTochar@temp:
  1057                           
  1058                           ; 4 bytes @ 0x36
  1059  0056                     	ds	3
  1060  0059                     sendfloat@decimal:
  1061                           
  1062                           ; 1 bytes @ 0x39
  1063  0059                     	ds	1
  1064  005A                     sendfloat@entero:
  1065  005A                     floTochar@decimal:	
  1066                           ; 1 bytes @ 0x3A
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x3A
  1070  005A                     	ds	1
  1071  005B                     sendfloat@digdecimal:
  1072  005B                     floTochar@entero:	
  1073                           ; 1 bytes @ 0x3B
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x3B
  1077  005B                     	ds	1
  1078  005C                     floTochar@digdecimal:
  1079                           
  1080                           ; 2 bytes @ 0x3C
  1081  005C                     	ds	2
  1082                           
  1083                           	psect	maintext
  1084  0613                     __pmaintext:	
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 78 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : B00/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       2       0       0
  1107 ;;      Totals:         0       0       2       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_CONVdec
  1112 ;;		_LCDstring
  1113 ;;		_configuracion
  1114 ;;		_cursorLCD
  1115 ;;		_dispCHAR
  1116 ;;		_floTochar
  1117 ;;		_hexTochar
  1118 ;;		_initLCD
  1119 ;;		_sendString
  1120 ;;		_sendfloat
  1121 ;;		_sendhex
  1122 ;; This function is called by:
  1123 ;;		Startup code after reset
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _main
  1129  0613                     _main:
  1130  0613                     l3050:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1133                           
  1134                           
  1135                           ;main.c: 79:     configuracion();
  1136  0613  120A  158A  23AB  120A  118A  	fcall	_configuracion
  1137  0618                     l3052:
  1138                           
  1139                           ;main.c: 80:     initLCD();
  1140  0618  120A  158A  24AF  120A  118A  	fcall	_initLCD
  1141  061D                     l3054:
  1142                           
  1143                           ;main.c: 83:         sendString("POT1: \r");
  1144  061D  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145  061E  120A  158A  22BC  120A  118A  	fcall	_sendString
  1146  0623                     l3056:
  1147                           
  1148                           ;main.c: 84:         CONVdec(&pot1,&val1);
  1149  0623  3062               	movlw	(low (_val1| 0))& (0+255)
  1150  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0626  00A3               	movwf	??_main^(0+128)
  1153  0627  0823               	movf	??_main^(0+128),w
  1154  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1156  062A  00C4               	movwf	CONVdec@equiv
  1157  062B  306E               	movlw	(low (_pot1| 0))& (0+255)
  1158  062C  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1159  0631                     l3058:
  1160                           
  1161                           ;main.c: 85:         sendfloat(val1);
  1162  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0633  0865               	movf	_val1+3,w
  1165  0634  00D0               	movwf	sendfloat@valor+3
  1166  0635  0864               	movf	_val1+2,w
  1167  0636  00CF               	movwf	sendfloat@valor+2
  1168  0637  0863               	movf	_val1+1,w
  1169  0638  00CE               	movwf	sendfloat@valor+1
  1170  0639  0862               	movf	_val1,w
  1171  063A  00CD               	movwf	sendfloat@valor
  1172  063B  120A  118A  2757  120A  118A  	fcall	_sendfloat
  1173  0640                     l3060:
  1174                           
  1175                           ;main.c: 86:         sendString("POT2: \r");
  1176  0640  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1177  0641  120A  158A  22BC  120A  118A  	fcall	_sendString
  1178  0646                     l3062:
  1179                           
  1180                           ;main.c: 87:         CONVdec(&pot2,&val2);
  1181  0646  305E               	movlw	(low (_val2| 0))& (0+255)
  1182  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0649  00A3               	movwf	??_main^(0+128)
  1185  064A  0823               	movf	??_main^(0+128),w
  1186  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1187  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1188  064D  00C4               	movwf	CONVdec@equiv
  1189  064E  306D               	movlw	(low (_pot2| 0))& (0+255)
  1190  064F  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1191  0654                     l3064:
  1192                           
  1193                           ;main.c: 88:         sendfloat(val2);
  1194  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0656  0861               	movf	_val2+3,w
  1197  0657  00D0               	movwf	sendfloat@valor+3
  1198  0658  0860               	movf	_val2+2,w
  1199  0659  00CF               	movwf	sendfloat@valor+2
  1200  065A  085F               	movf	_val2+1,w
  1201  065B  00CE               	movwf	sendfloat@valor+1
  1202  065C  085E               	movf	_val2,w
  1203  065D  00CD               	movwf	sendfloat@valor
  1204  065E  120A  118A  2757  120A  118A  	fcall	_sendfloat
  1205  0663                     l3066:
  1206                           
  1207                           ;main.c: 89:         sendString("UART: \r");
  1208  0663  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1209  0664  120A  158A  22BC  120A  118A  	fcall	_sendString
  1210  0669                     l3068:
  1211                           
  1212                           ;main.c: 90:         sendhex(&UARTval);
  1213  0669  306C               	movlw	(low (_UARTval| 0))& (0+255)
  1214  066A  120A  158A  2377  120A  118A  	fcall	_sendhex
  1215  066F                     l3070:
  1216                           
  1217                           ;main.c: 91:         sendString("\r\r\r\r\r");
  1218  066F  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1219  0670  120A  158A  22BC  120A  118A  	fcall	_sendString
  1220  0675                     l3072:
  1221                           
  1222                           ;main.c: 93:         floTochar(val1,&disp1);
  1223  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0677  0865               	movf	_val1+3,w
  1226  0678  00D0               	movwf	floTochar@valor+3
  1227  0679  0864               	movf	_val1+2,w
  1228  067A  00CF               	movwf	floTochar@valor+2
  1229  067B  0863               	movf	_val1+1,w
  1230  067C  00CE               	movwf	floTochar@valor+1
  1231  067D  0862               	movf	_val1,w
  1232  067E  00CD               	movwf	floTochar@valor
  1233  067F  3069               	movlw	(low (_disp1| 0))& (0+255)
  1234  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0682  00A3               	movwf	??_main^(0+128)
  1237  0683  0823               	movf	??_main^(0+128),w
  1238  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0686  00D1               	movwf	floTochar@conv
  1241  0687  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1242  068C                     l3074:
  1243                           
  1244                           ;main.c: 94:         floTochar(val2,&disp2);
  1245  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1246  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1247  068E  0861               	movf	_val2+3,w
  1248  068F  00D0               	movwf	floTochar@valor+3
  1249  0690  0860               	movf	_val2+2,w
  1250  0691  00CF               	movwf	floTochar@valor+2
  1251  0692  085F               	movf	_val2+1,w
  1252  0693  00CE               	movwf	floTochar@valor+1
  1253  0694  085E               	movf	_val2,w
  1254  0695  00CD               	movwf	floTochar@valor
  1255  0696  3066               	movlw	(low (_disp2| 0))& (0+255)
  1256  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0699  00A3               	movwf	??_main^(0+128)
  1259  069A  0823               	movf	??_main^(0+128),w
  1260  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1261  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1262  069D  00D1               	movwf	floTochar@conv
  1263  069E  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1264  06A3                     l3076:
  1265                           
  1266                           ;main.c: 95:         hexTochar(UARTval,&disp3);
  1267  06A3  30A0               	movlw	(low (_disp3| 0))& (0+255)
  1268  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1269  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1270  06A6  00A3               	movwf	??_main^(0+128)
  1271  06A7  0823               	movf	??_main^(0+128),w
  1272  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1273  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1274  06AA  00AA               	movwf	hexTochar@conv
  1275  06AB  086C               	movf	_UARTval,w
  1276  06AC  120A  158A  234B  120A  118A  	fcall	_hexTochar
  1277  06B1                     l3078:
  1278                           
  1279                           ;main.c: 97:         cursorLCD(1,1);
  1280  06B1  01F6               	clrf	cursorLCD@columna
  1281  06B2  0AF6               	incf	cursorLCD@columna,f
  1282  06B3  3001               	movlw	1
  1283  06B4  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1284                           
  1285                           ;main.c: 98:         LCDstring("POT1  POT2  UART");
  1286  06B9  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1287  06BA  120A  158A  229D  120A  118A  	fcall	_LCDstring
  1288  06BF                     l3080:
  1289                           
  1290                           ;main.c: 99:         cursorLCD(2,1);
  1291  06BF  01F6               	clrf	cursorLCD@columna
  1292  06C0  0AF6               	incf	cursorLCD@columna,f
  1293  06C1  3002               	movlw	2
  1294  06C2  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1295  06C7                     l3082:
  1296                           
  1297                           ;main.c: 100:         dispCHAR(disp1[0]+48);
  1298  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1299  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1300  06C9  0869               	movf	_disp1,w
  1301  06CA  3E30               	addlw	48
  1302  06CB  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1303  06D0                     l3084:
  1304                           
  1305                           ;main.c: 101:         dispCHAR('.');
  1306  06D0  302E               	movlw	46
  1307  06D1  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1308  06D6                     l3086:
  1309                           
  1310                           ;main.c: 102:         dispCHAR(disp1[1]+48);
  1311  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1312  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1313  06D8  086A               	movf	_disp1+1,w
  1314  06D9  3E30               	addlw	48
  1315  06DA  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1316  06DF                     l3088:
  1317                           
  1318                           ;main.c: 103:         dispCHAR(disp1[2]+48);
  1319  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1320  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1321  06E1  086B               	movf	_disp1+2,w
  1322  06E2  3E30               	addlw	48
  1323  06E3  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1324  06E8                     l3090:
  1325                           
  1326                           ;main.c: 104:         dispCHAR('V');
  1327  06E8  3056               	movlw	86
  1328  06E9  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1329  06EE                     l3092:
  1330                           
  1331                           ;main.c: 105:         cursorLCD(2,7);
  1332  06EE  3007               	movlw	7
  1333  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  1334  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  1335  06F1  00A3               	movwf	??_main^(0+128)
  1336  06F2  0823               	movf	??_main^(0+128),w
  1337  06F3  00F6               	movwf	cursorLCD@columna
  1338  06F4  3002               	movlw	2
  1339  06F5  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1340  06FA                     l3094:
  1341                           
  1342                           ;main.c: 106:         dispCHAR(disp2[0]+48);
  1343  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1344  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1345  06FC  0866               	movf	_disp2,w
  1346  06FD  3E30               	addlw	48
  1347  06FE  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1348  0703                     l3096:
  1349                           
  1350                           ;main.c: 107:         dispCHAR('.');
  1351  0703  302E               	movlw	46
  1352  0704  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1353  0709                     l3098:
  1354                           
  1355                           ;main.c: 108:         dispCHAR(disp2[1]+48);
  1356  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1357  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1358  070B  0867               	movf	_disp2+1,w
  1359  070C  3E30               	addlw	48
  1360  070D  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1361  0712                     l3100:
  1362                           
  1363                           ;main.c: 109:         dispCHAR(disp2[2]+48);
  1364  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0714  0868               	movf	_disp2+2,w
  1367  0715  3E30               	addlw	48
  1368  0716  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1369  071B                     l3102:
  1370                           
  1371                           ;main.c: 110:         dispCHAR('V');
  1372  071B  3056               	movlw	86
  1373  071C  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1374  0721                     l3104:
  1375                           
  1376                           ;main.c: 111:         cursorLCD(2,13);
  1377  0721  300D               	movlw	13
  1378  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1379  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1380  0724  00A3               	movwf	??_main^(0+128)
  1381  0725  0823               	movf	??_main^(0+128),w
  1382  0726  00F6               	movwf	cursorLCD@columna
  1383  0727  3002               	movlw	2
  1384  0728  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1385  072D                     l3106:
  1386                           
  1387                           ;main.c: 112:         dispCHAR(disp3[2]+48);
  1388  072D  1683               	bsf	3,5	;RP0=1, select bank1
  1389  072E  1303               	bcf	3,6	;RP1=0, select bank1
  1390  072F  0822               	movf	(_disp3^(0+128)+2),w
  1391  0730  3E30               	addlw	48
  1392  0731  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1393  0736                     l3108:
  1394                           
  1395                           ;main.c: 113:         dispCHAR(disp3[1]+48);
  1396  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0738  0821               	movf	(_disp3^(0+128)+1),w
  1399  0739  3E30               	addlw	48
  1400  073A  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1401  073F                     l3110:
  1402                           
  1403                           ;main.c: 114:         dispCHAR(disp3[0]+48);
  1404  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0741  0820               	movf	_disp3^(0+128),w
  1407  0742  3E30               	addlw	48
  1408  0743  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1409  0748                     l3112:
  1410                           
  1411                           ;main.c: 115:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1412  0748  301A               	movlw	26
  1413  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1414  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1415  074B  00A4               	movwf	(??_main^(0+128)+1)
  1416  074C  30F7               	movlw	247
  1417  074D  00A3               	movwf	??_main^(0+128)
  1418  074E                     u4057:
  1419  074E  0BA3               	decfsz	??_main^(0+128),f
  1420  074F  2F4E               	goto	u4057
  1421  0750  0BA4               	decfsz	(??_main^(0+128)+1),f
  1422  0751  2F4E               	goto	u4057
  1423  0752  2F53               	nop2
  1424  0753  2E1D               	goto	l3054
  1425  0754  120A  118A  280C   	ljmp	start
  1426  0757                     __end_of_main:
  1427                           
  1428                           	psect	text1
  1429  0B77                     __ptext1:	
  1430 ;; *************** function _sendhex *****************
  1431 ;; Defined at:
  1432 ;;		line 81 in file "ComSerial.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  valor           1    wreg     PTR unsigned char 
  1435 ;;		 -> UARTval(1), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  valor           1   13[BANK0 ] PTR unsigned char 
  1438 ;;		 -> UARTval(1), 
  1439 ;;  decena          1   16[BANK0 ] unsigned char 
  1440 ;;  centena         1   15[BANK0 ] unsigned char 
  1441 ;;  unidad          1   14[BANK0 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       4       0       0       0
  1453 ;;      Temps:          0       3       0       0       0
  1454 ;;      Totals:         0       7       0       0       0
  1455 ;;Total ram usage:        7 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    3
  1458 ;; This function calls:
  1459 ;;		_divisiondecimal
  1460 ;;		_send1dato
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _sendhex
  1468  0B77                     _sendhex:
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1472                           ;sendhex@valor stored from wreg
  1473  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0B79  00AD               	movwf	sendhex@valor
  1476  0B7A                     l3022:
  1477                           
  1478                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(*valor,&unidad,&decena,&ce
      +                          ntena);
  1479  0B7A  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
  1480  0B7B  00AA               	movwf	??_sendhex
  1481  0B7C  082A               	movf	??_sendhex,w
  1482  0B7D  00A4               	movwf	divisiondecimal@un
  1483  0B7E  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
  1484  0B7F  00AB               	movwf	??_sendhex+1
  1485  0B80  082B               	movf	??_sendhex+1,w
  1486  0B81  00A5               	movwf	divisiondecimal@dec
  1487  0B82  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
  1488  0B83  00AC               	movwf	??_sendhex+2
  1489  0B84  082C               	movf	??_sendhex+2,w
  1490  0B85  00A6               	movwf	divisiondecimal@cent
  1491  0B86  082D               	movf	sendhex@valor,w
  1492  0B87  0084               	movwf	4
  1493  0B88  1383               	bcf	3,7	;select IRP bank0
  1494  0B89  0800               	movf	0,w
  1495  0B8A  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  1496  0B8F                     l3024:
  1497                           
  1498                           ;ComSerial.c: 87:     send1dato(centena +48);
  1499  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0B91  082F               	movf	sendhex@centena,w
  1502  0B92  3E30               	addlw	48
  1503  0B93  120A  158A  2246  120A  158A  	fcall	_send1dato
  1504  0B98                     l3026:
  1505                           
  1506                           ;ComSerial.c: 88:     send1dato(decena +48);
  1507  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0B9A  0830               	movf	sendhex@decena,w
  1510  0B9B  3E30               	addlw	48
  1511  0B9C  120A  158A  2246  120A  158A  	fcall	_send1dato
  1512  0BA1                     l3028:
  1513                           
  1514                           ;ComSerial.c: 89:     send1dato(unidad +48);
  1515  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0BA3  082E               	movf	sendhex@unidad,w
  1518  0BA4  3E30               	addlw	48
  1519  0BA5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1520  0BAA                     l169:
  1521  0BAA  0008               	return
  1522  0BAB                     __end_of_sendhex:
  1523                           
  1524                           	psect	text2
  1525  0757                     __ptext2:	
  1526 ;; *************** function _sendfloat *****************
  1527 ;; Defined at:
  1528 ;;		line 39 in file "ComSerial.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  valor           4   45[BANK0 ] const float 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  temp            4   53[BANK0 ] float 
  1533 ;;  digdecimal      1   59[BANK0 ] unsigned char [1]
  1534 ;;  entero          1   58[BANK0 ] unsigned char 
  1535 ;;  decimal         1   57[BANK0 ] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       4       0       0       0
  1546 ;;      Locals:         0       7       0       0       0
  1547 ;;      Temps:          0       4       0       0       0
  1548 ;;      Totals:         0      15       0       0       0
  1549 ;;Total ram usage:       15 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		___flmul
  1554 ;;		___flsub
  1555 ;;		___fltol
  1556 ;;		___xxtofl
  1557 ;;		_division
  1558 ;;		_send1dato
  1559 ;;		_sendString
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _sendfloat
  1567  0757                     _sendfloat:
  1568  0757                     l3008:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _sendfloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1571                           
  1572                           
  1573                           ;ComSerial.c: 40:     uint8_t entero;;ComSerial.c: 41:     uint8_t decimal;;ComSerial.c:
      +                           42:     float temp;;ComSerial.c: 43:     unsigned char digdecimal[1];;ComSerial.c: 49: 
      +                              entero = valor;
  1574  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0759  0850               	movf	sendfloat@valor+3,w
  1577  075A  00C7               	movwf	___fltol@f1+3
  1578  075B  084F               	movf	sendfloat@valor+2,w
  1579  075C  00C6               	movwf	___fltol@f1+2
  1580  075D  084E               	movf	sendfloat@valor+1,w
  1581  075E  00C5               	movwf	___fltol@f1+1
  1582  075F  084D               	movf	sendfloat@valor,w
  1583  0760  00C4               	movwf	___fltol@f1
  1584  0761  120A  158A  25AF  120A  118A  	fcall	___fltol
  1585  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0768  0844               	movf	?___fltol,w
  1588  0769  00D1               	movwf	??_sendfloat
  1589  076A  0851               	movf	??_sendfloat,w
  1590  076B  00DA               	movwf	sendfloat@entero
  1591  076C                     l3010:
  1592                           
  1593                           ;ComSerial.c: 50:     temp = valor-(float)entero;
  1594  076C  085A               	movf	sendfloat@entero,w
  1595  076D  00D1               	movwf	??_sendfloat
  1596  076E  01D2               	clrf	??_sendfloat+1
  1597  076F  01D3               	clrf	??_sendfloat+2
  1598  0770  01D4               	clrf	??_sendfloat+3
  1599  0771  0854               	movf	??_sendfloat+3,w
  1600  0772  00F6               	movwf	___xxtofl@val+3
  1601  0773  0853               	movf	??_sendfloat+2,w
  1602  0774  00F5               	movwf	___xxtofl@val+2
  1603  0775  0852               	movf	??_sendfloat+1,w
  1604  0776  00F4               	movwf	___xxtofl@val+1
  1605  0777  0851               	movf	??_sendfloat,w
  1606  0778  00F3               	movwf	___xxtofl@val
  1607  0779  3000               	movlw	0
  1608  077A  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1609  077F  0876               	movf	?___xxtofl+3,w
  1610  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0782  00B3               	movwf	___flsub@a+3
  1613  0783  0875               	movf	?___xxtofl+2,w
  1614  0784  00B2               	movwf	___flsub@a+2
  1615  0785  0874               	movf	?___xxtofl+1,w
  1616  0786  00B1               	movwf	___flsub@a+1
  1617  0787  0873               	movf	?___xxtofl,w
  1618  0788  00B0               	movwf	___flsub@a
  1619  0789  0850               	movf	sendfloat@valor+3,w
  1620  078A  00B7               	movwf	___flsub@b+3
  1621  078B  084F               	movf	sendfloat@valor+2,w
  1622  078C  00B6               	movwf	___flsub@b+2
  1623  078D  084E               	movf	sendfloat@valor+1,w
  1624  078E  00B5               	movwf	___flsub@b+1
  1625  078F  084D               	movf	sendfloat@valor,w
  1626  0790  00B4               	movwf	___flsub@b
  1627  0791  120A  158A  22FE  120A  118A  	fcall	___flsub
  1628  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0798  0833               	movf	?___flsub+3,w
  1631  0799  00D8               	movwf	sendfloat@temp+3
  1632  079A  0832               	movf	?___flsub+2,w
  1633  079B  00D7               	movwf	sendfloat@temp+2
  1634  079C  0831               	movf	?___flsub+1,w
  1635  079D  00D6               	movwf	sendfloat@temp+1
  1636  079E  0830               	movf	?___flsub,w
  1637  079F  00D5               	movwf	sendfloat@temp
  1638  07A0                     l3012:
  1639                           
  1640                           ;ComSerial.c: 51:     decimal = (temp*100);
  1641  07A0  0858               	movf	sendfloat@temp+3,w
  1642  07A1  00B1               	movwf	___flmul@a+3
  1643  07A2  0857               	movf	sendfloat@temp+2,w
  1644  07A3  00B0               	movwf	___flmul@a+2
  1645  07A4  0856               	movf	sendfloat@temp+1,w
  1646  07A5  00AF               	movwf	___flmul@a+1
  1647  07A6  0855               	movf	sendfloat@temp,w
  1648  07A7  00AE               	movwf	___flmul@a
  1649  07A8  3042               	movlw	66
  1650  07A9  00AD               	movwf	___flmul@b+3
  1651  07AA  30C8               	movlw	200
  1652  07AB  00AC               	movwf	___flmul@b+2
  1653  07AC  3000               	movlw	0
  1654  07AD  00AB               	movwf	___flmul@b+1
  1655  07AE  3000               	movlw	0
  1656  07AF  00AA               	movwf	___flmul@b
  1657  07B0  120A  118A  2022  120A  118A  	fcall	___flmul
  1658  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1659  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1660  07B7  082D               	movf	?___flmul+3,w
  1661  07B8  00C7               	movwf	___fltol@f1+3
  1662  07B9  082C               	movf	?___flmul+2,w
  1663  07BA  00C6               	movwf	___fltol@f1+2
  1664  07BB  082B               	movf	?___flmul+1,w
  1665  07BC  00C5               	movwf	___fltol@f1+1
  1666  07BD  082A               	movf	?___flmul,w
  1667  07BE  00C4               	movwf	___fltol@f1
  1668  07BF  120A  158A  25AF  120A  118A  	fcall	___fltol
  1669  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1670  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1671  07C6  0844               	movf	?___fltol,w
  1672  07C7  00D1               	movwf	??_sendfloat
  1673  07C8  0851               	movf	??_sendfloat,w
  1674  07C9  00D9               	movwf	sendfloat@decimal
  1675  07CA                     l3014:
  1676                           
  1677                           ;ComSerial.c: 52:     division(decimal,&digdecimal[0],&digdecimal[1]);
  1678  07CA  305B               	movlw	(low (sendfloat@digdecimal| 0))& (0+255)
  1679  07CB  00D1               	movwf	??_sendfloat
  1680  07CC  0851               	movf	??_sendfloat,w
  1681  07CD  00F8               	movwf	division@un
  1682  07CE  305C               	movlw	(low ((sendfloat@digdecimal| 0+1)))& (0+255)
  1683  07CF  00D2               	movwf	??_sendfloat+1
  1684  07D0  0852               	movf	??_sendfloat+1,w
  1685  07D1  00F9               	movwf	division@dec
  1686  07D2  0859               	movf	sendfloat@decimal,w
  1687  07D3  120A  158A  2467  120A  118A  	fcall	_division
  1688  07D8                     l3016:
  1689                           
  1690                           ;ComSerial.c: 53:     send1dato(entero+48);
  1691  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1692  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1693  07DA  085A               	movf	sendfloat@entero,w
  1694  07DB  3E30               	addlw	48
  1695  07DC  120A  158A  2246  120A  118A  	fcall	_send1dato
  1696                           
  1697                           ;ComSerial.c: 54:     sendString(".");
  1698  07E1  3030               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1699  07E2  120A  158A  22BC  120A  118A  	fcall	_sendString
  1700  07E7                     l3018:
  1701                           
  1702                           ;ComSerial.c: 55:     send1dato(digdecimal[1]+48);
  1703  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1704  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1705  07E9  085C               	movf	sendfloat@digdecimal+1,w
  1706  07EA  3E30               	addlw	48
  1707  07EB  120A  158A  2246  120A  118A  	fcall	_send1dato
  1708  07F0                     l3020:
  1709                           
  1710                           ;ComSerial.c: 56:     send1dato(digdecimal[0]+48);
  1711  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1712  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1713  07F2  085B               	movf	sendfloat@digdecimal,w
  1714  07F3  3E30               	addlw	48
  1715  07F4  120A  158A  2246  120A  118A  	fcall	_send1dato
  1716                           
  1717                           ;ComSerial.c: 57:     sendString("\r");
  1718  07F9  302E               	movlw	(low (((STR_4+4)-__stringbase)| (0+32768)))& (0+255)
  1719  07FA  120A  158A  22BC  120A  118A  	fcall	_sendString
  1720  07FF                     l163:
  1721  07FF  0008               	return
  1722  0800                     __end_of_sendfloat:
  1723                           
  1724                           	psect	text3
  1725  0ABC                     __ptext3:	
  1726 ;; *************** function _sendString *****************
  1727 ;; Defined at:
  1728 ;;		line 31 in file "ComSerial.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  mensaje         1    wreg     PTR unsigned char 
  1731 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1732 ;;		 -> STR_2(8), STR_1(8), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  mensaje         1    5[COMMON] PTR unsigned char 
  1735 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1736 ;;		 -> STR_2(8), STR_1(8), 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0
  1748 ;;      Temps:          1       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    2
  1753 ;; This function calls:
  1754 ;;		_send1dato
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;;		_sendfloat
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _sendString
  1763  0ABC                     _sendString:
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1767                           ;sendString@mensaje stored from wreg
  1768  0ABC  00F5               	movwf	sendString@mensaje
  1769  0ABD                     l1918:
  1770                           
  1771                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1772  0ABD  2ACE               	goto	l1924
  1773  0ABE                     l1920:
  1774                           
  1775                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1776  0ABE  0875               	movf	sendString@mensaje,w
  1777  0ABF  0084               	movwf	4
  1778  0AC0  120A  158A  2000  120A  158A  	fcall	stringdir
  1779  0AC5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1780  0ACA                     l1922:
  1781                           
  1782                           ;ComSerial.c: 34:         mensaje ++;
  1783  0ACA  3001               	movlw	1
  1784  0ACB  00F4               	movwf	??_sendString
  1785  0ACC  0874               	movf	??_sendString,w
  1786  0ACD  07F5               	addwf	sendString@mensaje,f
  1787  0ACE                     l1924:
  1788                           
  1789                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1790  0ACE  0875               	movf	sendString@mensaje,w
  1791  0ACF  0084               	movwf	4
  1792  0AD0  120A  158A  2000  120A  158A  	fcall	stringdir
  1793  0AD5  3A00               	xorlw	0
  1794  0AD6  1D03               	skipz
  1795  0AD7  2AD9               	goto	u2031
  1796  0AD8  2ADA               	goto	u2030
  1797  0AD9                     u2031:
  1798  0AD9  2ABE               	goto	l1920
  1799  0ADA                     u2030:
  1800  0ADA                     l160:
  1801  0ADA  0008               	return
  1802  0ADB                     __end_of_sendString:
  1803                           
  1804                           	psect	text4
  1805  0A46                     __ptext4:	
  1806 ;; *************** function _send1dato *****************
  1807 ;; Defined at:
  1808 ;;		line 26 in file "ComSerial.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  dato            1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  dato            1    3[COMMON] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         1       0       0       0       0
  1826 ;;Total ram usage:        1 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_sendString
  1833 ;;		_sendfloat
  1834 ;;		_sendhex
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _send1dato
  1840  0A46                     _send1dato:
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _send1dato: [wreg]
  1844                           ;send1dato@dato stored from wreg
  1845  0A46  00F3               	movwf	send1dato@dato
  1846  0A47                     l1650:
  1847                           
  1848                           ;ComSerial.c: 27:     TXREG = dato;
  1849  0A47  0873               	movf	send1dato@dato,w
  1850  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0A4A  0099               	movwf	25	;volatile
  1853  0A4B                     l151:	
  1854                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1855                           
  1856  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0A4D  1C98               	btfss	24,1	;volatile
  1859  0A4E  2A50               	goto	u1411
  1860  0A4F  2A51               	goto	u1410
  1861  0A50                     u1411:
  1862  0A50  2A4B               	goto	l151
  1863  0A51                     u1410:
  1864  0A51                     l154:
  1865  0A51  0008               	return
  1866  0A52                     __end_of_send1dato:
  1867                           
  1868                           	psect	text5
  1869  0CAF                     __ptext5:	
  1870 ;; *************** function _initLCD *****************
  1871 ;; Defined at:
  1872 ;;		line 20 in file "LCDD2.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          2       0       0       0       0
  1889 ;;      Totals:         2       0       0       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		_comandoLCD
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _initLCD
  1902  0CAF                     _initLCD:
  1903  0CAF                     l2280:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;LCDD2.c: 21:     RC0 = 0;
  1909  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0CB1  1007               	bcf	7,0	;volatile
  1912  0CB2                     l2282:
  1913                           
  1914                           ;LCDD2.c: 22:     PORTD = 0X00;
  1915  0CB2  0188               	clrf	8	;volatile
  1916  0CB3                     l2284:
  1917                           
  1918                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1919  0CB3  3082               	movlw	130
  1920  0CB4  00F7               	movwf	??_initLCD+1
  1921  0CB5  30DD               	movlw	221
  1922  0CB6  00F6               	movwf	??_initLCD
  1923  0CB7                     u4067:
  1924  0CB7  0BF6               	decfsz	??_initLCD,f
  1925  0CB8  2CB7               	goto	u4067
  1926  0CB9  0BF7               	decfsz	??_initLCD+1,f
  1927  0CBA  2CB7               	goto	u4067
  1928  0CBB  2CBC               	nop2
  1929  0CBC                     l2286:
  1930                           
  1931                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1932  0CBC  3030               	movlw	48
  1933  0CBD  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1934  0CC2                     l2288:
  1935                           
  1936                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1937  0CC2  300D               	movlw	13
  1938  0CC3  00F7               	movwf	??_initLCD+1
  1939  0CC4  30FB               	movlw	251
  1940  0CC5  00F6               	movwf	??_initLCD
  1941  0CC6                     u4077:
  1942  0CC6  0BF6               	decfsz	??_initLCD,f
  1943  0CC7  2CC6               	goto	u4077
  1944  0CC8  0BF7               	decfsz	??_initLCD+1,f
  1945  0CC9  2CC6               	goto	u4077
  1946  0CCA  2CCB               	nop2
  1947  0CCB                     l2290:
  1948                           
  1949                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1950  0CCB  3030               	movlw	48
  1951  0CCC  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1952  0CD1                     l2292:
  1953                           
  1954                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1955  0CD1  300D               	movlw	13
  1956  0CD2  00F7               	movwf	??_initLCD+1
  1957  0CD3  30FB               	movlw	251
  1958  0CD4  00F6               	movwf	??_initLCD
  1959  0CD5                     u4087:
  1960  0CD5  0BF6               	decfsz	??_initLCD,f
  1961  0CD6  2CD5               	goto	u4087
  1962  0CD7  0BF7               	decfsz	??_initLCD+1,f
  1963  0CD8  2CD5               	goto	u4087
  1964  0CD9  2CDA               	nop2
  1965  0CDA                     l2294:
  1966                           
  1967                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1968  0CDA  3030               	movlw	48
  1969  0CDB  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1970  0CE0                     l2296:
  1971                           
  1972                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1973  0CE0  3038               	movlw	56
  1974  0CE1  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1975  0CE6                     l2298:
  1976                           
  1977                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1978  0CE6  3006               	movlw	6
  1979  0CE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1980  0CEC                     l2300:
  1981                           
  1982                           ;LCDD2.c: 31:     comandoLCD(0X0C);
  1983  0CEC  300C               	movlw	12
  1984  0CED  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1985  0CF2                     l2302:
  1986                           
  1987                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1988  0CF2  3001               	movlw	1
  1989  0CF3  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1990  0CF8                     l200:
  1991  0CF8  0008               	return
  1992  0CF9                     __end_of_initLCD:
  1993                           
  1994                           	psect	text6
  1995  0B4B                     __ptext6:	
  1996 ;; *************** function _hexTochar *****************
  1997 ;; Defined at:
  1998 ;;		line 92 in file "ComSerial.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  valor           1    wreg     unsigned char 
  2001 ;;  conv            1   10[BANK0 ] PTR unsigned char 
  2002 ;;		 -> disp3(3), 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  valor           1   14[BANK0 ] unsigned char 
  2005 ;;  decena          1   17[BANK0 ] unsigned char 
  2006 ;;  centena         1   16[BANK0 ] unsigned char 
  2007 ;;  unidad          1   15[BANK0 ] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       1       0       0       0
  2018 ;;      Locals:         0       4       0       0       0
  2019 ;;      Temps:          0       3       0       0       0
  2020 ;;      Totals:         0       8       0       0       0
  2021 ;;Total ram usage:        8 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    3
  2024 ;; This function calls:
  2025 ;;		_divisiondecimal
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _hexTochar
  2033  0B4B                     _hexTochar:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _hexTochar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2037                           ;hexTochar@valor stored from wreg
  2038  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0B4D  00AE               	movwf	hexTochar@valor
  2041  0B4E                     l3042:
  2042                           
  2043                           ;ComSerial.c: 93:     uint8_t centena;;ComSerial.c: 94:     uint8_t decena;;ComSerial.c:
      +                           95:     uint8_t unidad;;ComSerial.c: 97:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  2044  0B4E  302F               	movlw	(low (hexTochar@unidad| 0))& (0+255)
  2045  0B4F  00AB               	movwf	??_hexTochar
  2046  0B50  082B               	movf	??_hexTochar,w
  2047  0B51  00A4               	movwf	divisiondecimal@un
  2048  0B52  3031               	movlw	(low (hexTochar@decena| 0))& (0+255)
  2049  0B53  00AC               	movwf	??_hexTochar+1
  2050  0B54  082C               	movf	??_hexTochar+1,w
  2051  0B55  00A5               	movwf	divisiondecimal@dec
  2052  0B56  3030               	movlw	(low (hexTochar@centena| 0))& (0+255)
  2053  0B57  00AD               	movwf	??_hexTochar+2
  2054  0B58  082D               	movf	??_hexTochar+2,w
  2055  0B59  00A6               	movwf	divisiondecimal@cent
  2056  0B5A  082E               	movf	hexTochar@valor,w
  2057  0B5B  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  2058  0B60                     l3044:
  2059                           
  2060                           ;ComSerial.c: 98:     conv[0]= unidad;
  2061  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0B62  082F               	movf	hexTochar@unidad,w
  2064  0B63  00AB               	movwf	??_hexTochar
  2065  0B64  082A               	movf	hexTochar@conv,w
  2066  0B65  0084               	movwf	4
  2067  0B66  082B               	movf	??_hexTochar,w
  2068  0B67  1383               	bcf	3,7	;select IRP bank0
  2069  0B68  0080               	movwf	0
  2070  0B69                     l3046:
  2071                           
  2072                           ;ComSerial.c: 99:     conv[1]= decena;
  2073  0B69  0831               	movf	hexTochar@decena,w
  2074  0B6A  00AB               	movwf	??_hexTochar
  2075  0B6B  0A2A               	incf	hexTochar@conv,w
  2076  0B6C  0084               	movwf	4
  2077  0B6D  082B               	movf	??_hexTochar,w
  2078  0B6E  0080               	movwf	0
  2079  0B6F                     l3048:
  2080                           
  2081                           ;ComSerial.c: 100:     conv[2]= centena;
  2082  0B6F  0830               	movf	hexTochar@centena,w
  2083  0B70  00AB               	movwf	??_hexTochar
  2084  0B71  082A               	movf	hexTochar@conv,w
  2085  0B72  3E02               	addlw	2
  2086  0B73  0084               	movwf	4
  2087  0B74  082B               	movf	??_hexTochar,w
  2088  0B75  0080               	movwf	0
  2089  0B76                     l172:
  2090  0B76  0008               	return
  2091  0B77                     __end_of_hexTochar:
  2092                           
  2093                           	psect	text7
  2094  0E2B                     __ptext7:	
  2095 ;; *************** function _divisiondecimal *****************
  2096 ;; Defined at:
  2097 ;;		line 120 in file "ComSerial.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  conteo          1    wreg     unsigned char 
  2100 ;;  un              1    4[BANK0 ] PTR unsigned char 
  2101 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  2102 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  2103 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  2104 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  2105 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  conteo          1    8[COMMON] unsigned char 
  2108 ;;  div             1    9[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       3       0       0       0
  2119 ;;      Locals:         2       0       0       0       0
  2120 ;;      Temps:          0       3       0       0       0
  2121 ;;      Totals:         2       6       0       0       0
  2122 ;;Total ram usage:        8 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		___awdiv
  2127 ;;		___bmul
  2128 ;; This function is called by:
  2129 ;;		_sendhex
  2130 ;;		_hexTochar
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _divisiondecimal
  2136  0E2B                     _divisiondecimal:
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2140                           ;divisiondecimal@conteo stored from wreg
  2141  0E2B  00F8               	movwf	divisiondecimal@conteo
  2142  0E2C                     l2762:
  2143                           
  2144                           ;ComSerial.c: 121:     uint8_t div = conteo;
  2145  0E2C  0878               	movf	divisiondecimal@conteo,w
  2146  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0E2F  00A7               	movwf	??_divisiondecimal
  2149  0E30  0827               	movf	??_divisiondecimal,w
  2150  0E31  00F9               	movwf	divisiondecimal@div
  2151  0E32                     l2764:
  2152                           
  2153                           ;ComSerial.c: 122:     *un = 0;
  2154  0E32  0824               	movf	divisiondecimal@un,w
  2155  0E33  0084               	movwf	4
  2156  0E34  1383               	bcf	3,7	;select IRP bank0
  2157  0E35  0180               	clrf	0
  2158  0E36                     l2766:
  2159                           
  2160                           ;ComSerial.c: 123:     *dec = 0;
  2161  0E36  0825               	movf	divisiondecimal@dec,w
  2162  0E37  0084               	movwf	4
  2163  0E38  0180               	clrf	0
  2164  0E39                     l2768:
  2165                           
  2166                           ;ComSerial.c: 124:     *cent = 0;
  2167  0E39  0826               	movf	divisiondecimal@cent,w
  2168  0E3A  0084               	movwf	4
  2169  0E3B  0180               	clrf	0
  2170                           
  2171                           ;ComSerial.c: 127:     while(div >= 100){
  2172  0E3C  2E68               	goto	l2772
  2173  0E3D                     l2770:
  2174                           
  2175                           ;ComSerial.c: 128:     *cent = div/100;
  2176  0E3D  3064               	movlw	100
  2177  0E3E  00F3               	movwf	___awdiv@divisor
  2178  0E3F  3000               	movlw	0
  2179  0E40  00F4               	movwf	___awdiv@divisor+1
  2180  0E41  0879               	movf	divisiondecimal@div,w
  2181  0E42  00A7               	movwf	??_divisiondecimal
  2182  0E43  01A8               	clrf	??_divisiondecimal+1
  2183  0E44  0827               	movf	??_divisiondecimal,w
  2184  0E45  00F5               	movwf	___awdiv@dividend
  2185  0E46  0828               	movf	??_divisiondecimal+1,w
  2186  0E47  00F6               	movwf	___awdiv@dividend+1
  2187  0E48  120A  158A  2546  120A  158A  	fcall	___awdiv
  2188  0E4D  0873               	movf	?___awdiv,w
  2189  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0E50  00A9               	movwf	??_divisiondecimal+2
  2192  0E51  0826               	movf	divisiondecimal@cent,w
  2193  0E52  0084               	movwf	4
  2194  0E53  0829               	movf	??_divisiondecimal+2,w
  2195  0E54  1383               	bcf	3,7	;select IRP bank0
  2196  0E55  0080               	movwf	0
  2197                           
  2198                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  2199  0E56  309C               	movlw	156
  2200  0E57  00A7               	movwf	??_divisiondecimal
  2201  0E58  0827               	movf	??_divisiondecimal,w
  2202  0E59  00F3               	movwf	___bmul@multiplicand
  2203  0E5A  0826               	movf	divisiondecimal@cent,w
  2204  0E5B  0084               	movwf	4
  2205  0E5C  0800               	movf	0,w
  2206  0E5D  120A  158A  2288  120A  158A  	fcall	___bmul
  2207  0E62  0779               	addwf	divisiondecimal@div,w
  2208  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0E65  00A8               	movwf	??_divisiondecimal+1
  2211  0E66  0828               	movf	??_divisiondecimal+1,w
  2212  0E67  00F9               	movwf	divisiondecimal@div
  2213  0E68                     l2772:
  2214                           
  2215                           ;ComSerial.c: 127:     while(div >= 100){
  2216  0E68  3064               	movlw	100
  2217  0E69  0279               	subwf	divisiondecimal@div,w
  2218  0E6A  1803               	skipnc
  2219  0E6B  2E6D               	goto	u3421
  2220  0E6C  2E6E               	goto	u3420
  2221  0E6D                     u3421:
  2222  0E6D  2E3D               	goto	l2770
  2223  0E6E                     u3420:
  2224  0E6E  2E9A               	goto	l2776
  2225  0E6F                     l2774:
  2226                           
  2227                           ;ComSerial.c: 133:     *dec = div/10;
  2228  0E6F  300A               	movlw	10
  2229  0E70  00F3               	movwf	___awdiv@divisor
  2230  0E71  3000               	movlw	0
  2231  0E72  00F4               	movwf	___awdiv@divisor+1
  2232  0E73  0879               	movf	divisiondecimal@div,w
  2233  0E74  00A7               	movwf	??_divisiondecimal
  2234  0E75  01A8               	clrf	??_divisiondecimal+1
  2235  0E76  0827               	movf	??_divisiondecimal,w
  2236  0E77  00F5               	movwf	___awdiv@dividend
  2237  0E78  0828               	movf	??_divisiondecimal+1,w
  2238  0E79  00F6               	movwf	___awdiv@dividend+1
  2239  0E7A  120A  158A  2546  120A  158A  	fcall	___awdiv
  2240  0E7F  0873               	movf	?___awdiv,w
  2241  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0E82  00A9               	movwf	??_divisiondecimal+2
  2244  0E83  0825               	movf	divisiondecimal@dec,w
  2245  0E84  0084               	movwf	4
  2246  0E85  0829               	movf	??_divisiondecimal+2,w
  2247  0E86  1383               	bcf	3,7	;select IRP bank0
  2248  0E87  0080               	movwf	0
  2249                           
  2250                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  2251  0E88  30F6               	movlw	246
  2252  0E89  00A7               	movwf	??_divisiondecimal
  2253  0E8A  0827               	movf	??_divisiondecimal,w
  2254  0E8B  00F3               	movwf	___bmul@multiplicand
  2255  0E8C  0825               	movf	divisiondecimal@dec,w
  2256  0E8D  0084               	movwf	4
  2257  0E8E  0800               	movf	0,w
  2258  0E8F  120A  158A  2288  120A  158A  	fcall	___bmul
  2259  0E94  0779               	addwf	divisiondecimal@div,w
  2260  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0E97  00A8               	movwf	??_divisiondecimal+1
  2263  0E98  0828               	movf	??_divisiondecimal+1,w
  2264  0E99  00F9               	movwf	divisiondecimal@div
  2265  0E9A                     l2776:
  2266                           
  2267                           ;ComSerial.c: 132:     while (div >= 10){
  2268  0E9A  300A               	movlw	10
  2269  0E9B  0279               	subwf	divisiondecimal@div,w
  2270  0E9C  1803               	skipnc
  2271  0E9D  2E9F               	goto	u3431
  2272  0E9E  2EA0               	goto	u3430
  2273  0E9F                     u3431:
  2274  0E9F  2E6F               	goto	l2774
  2275  0EA0                     u3430:
  2276  0EA0                     l2778:
  2277                           
  2278                           ;ComSerial.c: 137:     *un = div;
  2279  0EA0  0879               	movf	divisiondecimal@div,w
  2280  0EA1  00A7               	movwf	??_divisiondecimal
  2281  0EA2  0824               	movf	divisiondecimal@un,w
  2282  0EA3  0084               	movwf	4
  2283  0EA4  0827               	movf	??_divisiondecimal,w
  2284  0EA5  1383               	bcf	3,7	;select IRP bank0
  2285  0EA6  0080               	movwf	0
  2286  0EA7                     l187:
  2287  0EA7  0008               	return
  2288  0EA8                     __end_of_divisiondecimal:
  2289                           
  2290                           	psect	text8
  2291  0EA8                     __ptext8:	
  2292 ;; *************** function _floTochar *****************
  2293 ;; Defined at:
  2294 ;;		line 61 in file "ComSerial.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  valor           4   45[BANK0 ] const float 
  2297 ;;  conv            1   49[BANK0 ] PTR unsigned char 
  2298 ;;		 -> disp2(3), disp1(3), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  temp            4   54[BANK0 ] float 
  2301 ;;  digdecimal      2   60[BANK0 ] unsigned char [2]
  2302 ;;  entero          1   59[BANK0 ] unsigned char 
  2303 ;;  decimal         1   58[BANK0 ] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       5       0       0       0
  2314 ;;      Locals:         0       8       0       0       0
  2315 ;;      Temps:          0       4       0       0       0
  2316 ;;      Totals:         0      17       0       0       0
  2317 ;;Total ram usage:       17 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    3
  2320 ;; This function calls:
  2321 ;;		___flmul
  2322 ;;		___flsub
  2323 ;;		___fltol
  2324 ;;		___xxtofl
  2325 ;;		_division
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _floTochar
  2333  0EA8                     _floTochar:
  2334  0EA8                     l3030:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _floTochar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2337                           
  2338                           
  2339                           ;ComSerial.c: 62:     uint8_t entero;;ComSerial.c: 63:     uint8_t decimal;;ComSerial.c:
      +                           64:     float temp;;ComSerial.c: 65:     unsigned char digdecimal[2];;ComSerial.c: 71: 
      +                              entero = valor;
  2340  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0EAA  0850               	movf	floTochar@valor+3,w
  2343  0EAB  00C7               	movwf	___fltol@f1+3
  2344  0EAC  084F               	movf	floTochar@valor+2,w
  2345  0EAD  00C6               	movwf	___fltol@f1+2
  2346  0EAE  084E               	movf	floTochar@valor+1,w
  2347  0EAF  00C5               	movwf	___fltol@f1+1
  2348  0EB0  084D               	movf	floTochar@valor,w
  2349  0EB1  00C4               	movwf	___fltol@f1
  2350  0EB2  120A  158A  25AF  120A  158A  	fcall	___fltol
  2351  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0EB9  0844               	movf	?___fltol,w
  2354  0EBA  00D2               	movwf	??_floTochar
  2355  0EBB  0852               	movf	??_floTochar,w
  2356  0EBC  00DB               	movwf	floTochar@entero
  2357  0EBD                     l3032:
  2358                           
  2359                           ;ComSerial.c: 72:     digdecimal[2] = entero;
  2360  0EBD  085B               	movf	floTochar@entero,w
  2361  0EBE  00D2               	movwf	??_floTochar
  2362  0EBF  0852               	movf	??_floTochar,w
  2363  0EC0  00DE               	movwf	floTochar@digdecimal+2
  2364  0EC1                     l3034:
  2365                           
  2366                           ;ComSerial.c: 73:     temp = valor-(float)entero;
  2367  0EC1  085B               	movf	floTochar@entero,w
  2368  0EC2  00D2               	movwf	??_floTochar
  2369  0EC3  01D3               	clrf	??_floTochar+1
  2370  0EC4  01D4               	clrf	??_floTochar+2
  2371  0EC5  01D5               	clrf	??_floTochar+3
  2372  0EC6  0855               	movf	??_floTochar+3,w
  2373  0EC7  00F6               	movwf	___xxtofl@val+3
  2374  0EC8  0854               	movf	??_floTochar+2,w
  2375  0EC9  00F5               	movwf	___xxtofl@val+2
  2376  0ECA  0853               	movf	??_floTochar+1,w
  2377  0ECB  00F4               	movwf	___xxtofl@val+1
  2378  0ECC  0852               	movf	??_floTochar,w
  2379  0ECD  00F3               	movwf	___xxtofl@val
  2380  0ECE  3000               	movlw	0
  2381  0ECF  120A  158A  2744  120A  158A  	fcall	___xxtofl
  2382  0ED4  0876               	movf	?___xxtofl+3,w
  2383  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0ED7  00B3               	movwf	___flsub@a+3
  2386  0ED8  0875               	movf	?___xxtofl+2,w
  2387  0ED9  00B2               	movwf	___flsub@a+2
  2388  0EDA  0874               	movf	?___xxtofl+1,w
  2389  0EDB  00B1               	movwf	___flsub@a+1
  2390  0EDC  0873               	movf	?___xxtofl,w
  2391  0EDD  00B0               	movwf	___flsub@a
  2392  0EDE  0850               	movf	floTochar@valor+3,w
  2393  0EDF  00B7               	movwf	___flsub@b+3
  2394  0EE0  084F               	movf	floTochar@valor+2,w
  2395  0EE1  00B6               	movwf	___flsub@b+2
  2396  0EE2  084E               	movf	floTochar@valor+1,w
  2397  0EE3  00B5               	movwf	___flsub@b+1
  2398  0EE4  084D               	movf	floTochar@valor,w
  2399  0EE5  00B4               	movwf	___flsub@b
  2400  0EE6  120A  158A  22FE  120A  158A  	fcall	___flsub
  2401  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0EED  0833               	movf	?___flsub+3,w
  2404  0EEE  00D9               	movwf	floTochar@temp+3
  2405  0EEF  0832               	movf	?___flsub+2,w
  2406  0EF0  00D8               	movwf	floTochar@temp+2
  2407  0EF1  0831               	movf	?___flsub+1,w
  2408  0EF2  00D7               	movwf	floTochar@temp+1
  2409  0EF3  0830               	movf	?___flsub,w
  2410  0EF4  00D6               	movwf	floTochar@temp
  2411  0EF5                     l3036:
  2412                           
  2413                           ;ComSerial.c: 74:     decimal = (temp*100);
  2414  0EF5  0859               	movf	floTochar@temp+3,w
  2415  0EF6  00B1               	movwf	___flmul@a+3
  2416  0EF7  0858               	movf	floTochar@temp+2,w
  2417  0EF8  00B0               	movwf	___flmul@a+2
  2418  0EF9  0857               	movf	floTochar@temp+1,w
  2419  0EFA  00AF               	movwf	___flmul@a+1
  2420  0EFB  0856               	movf	floTochar@temp,w
  2421  0EFC  00AE               	movwf	___flmul@a
  2422  0EFD  3042               	movlw	66
  2423  0EFE  00AD               	movwf	___flmul@b+3
  2424  0EFF  30C8               	movlw	200
  2425  0F00  00AC               	movwf	___flmul@b+2
  2426  0F01  3000               	movlw	0
  2427  0F02  00AB               	movwf	___flmul@b+1
  2428  0F03  3000               	movlw	0
  2429  0F04  00AA               	movwf	___flmul@b
  2430  0F05  120A  118A  2022  120A  158A  	fcall	___flmul
  2431  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0F0C  082D               	movf	?___flmul+3,w
  2434  0F0D  00C7               	movwf	___fltol@f1+3
  2435  0F0E  082C               	movf	?___flmul+2,w
  2436  0F0F  00C6               	movwf	___fltol@f1+2
  2437  0F10  082B               	movf	?___flmul+1,w
  2438  0F11  00C5               	movwf	___fltol@f1+1
  2439  0F12  082A               	movf	?___flmul,w
  2440  0F13  00C4               	movwf	___fltol@f1
  2441  0F14  120A  158A  25AF  120A  158A  	fcall	___fltol
  2442  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0F1B  0844               	movf	?___fltol,w
  2445  0F1C  00D2               	movwf	??_floTochar
  2446  0F1D  0852               	movf	??_floTochar,w
  2447  0F1E  00DA               	movwf	floTochar@decimal
  2448  0F1F                     l3038:
  2449                           
  2450                           ;ComSerial.c: 75:     division(decimal,&digdecimal[0],&digdecimal[1]);
  2451  0F1F  305C               	movlw	(low (floTochar@digdecimal| 0))& (0+255)
  2452  0F20  00D2               	movwf	??_floTochar
  2453  0F21  0852               	movf	??_floTochar,w
  2454  0F22  00F8               	movwf	division@un
  2455  0F23  305D               	movlw	(low ((floTochar@digdecimal| 0+1)))& (0+255)
  2456  0F24  00D3               	movwf	??_floTochar+1
  2457  0F25  0853               	movf	??_floTochar+1,w
  2458  0F26  00F9               	movwf	division@dec
  2459  0F27  085A               	movf	floTochar@decimal,w
  2460  0F28  120A  158A  2467  120A  158A  	fcall	_division
  2461                           
  2462                           ;ComSerial.c: 76:     conv[0] = entero;
  2463  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0F2F  085B               	movf	floTochar@entero,w
  2466  0F30  00D2               	movwf	??_floTochar
  2467  0F31  0851               	movf	floTochar@conv,w
  2468  0F32  0084               	movwf	4
  2469  0F33  0852               	movf	??_floTochar,w
  2470  0F34  1383               	bcf	3,7	;select IRP bank0
  2471  0F35  0080               	movwf	0
  2472                           
  2473                           ;ComSerial.c: 77:     conv[1] = digdecimal[1];
  2474  0F36  085D               	movf	floTochar@digdecimal+1,w
  2475  0F37  00D2               	movwf	??_floTochar
  2476  0F38  0A51               	incf	floTochar@conv,w
  2477  0F39  0084               	movwf	4
  2478  0F3A  0852               	movf	??_floTochar,w
  2479  0F3B  0080               	movwf	0
  2480  0F3C                     l3040:
  2481                           
  2482                           ;ComSerial.c: 78:     conv[2] = digdecimal[0];
  2483  0F3C  085C               	movf	floTochar@digdecimal,w
  2484  0F3D  00D2               	movwf	??_floTochar
  2485  0F3E  0851               	movf	floTochar@conv,w
  2486  0F3F  3E02               	addlw	2
  2487  0F40  0084               	movwf	4
  2488  0F41  0852               	movf	??_floTochar,w
  2489  0F42  0080               	movwf	0
  2490  0F43                     l166:
  2491  0F43  0008               	return
  2492  0F44                     __end_of_floTochar:
  2493                           
  2494                           	psect	text9
  2495  0C67                     __ptext9:	
  2496 ;; *************** function _division *****************
  2497 ;; Defined at:
  2498 ;;		line 106 in file "ComSerial.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  conteo          1    wreg     unsigned char 
  2501 ;;  un              1    8[COMMON] PTR unsigned char 
  2502 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2503 ;;  dec             1    9[COMMON] PTR unsigned char 
  2504 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  conteo          1    7[BANK0 ] unsigned char 
  2507 ;;  div             1    8[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         2       0       0       0       0
  2518 ;;      Locals:         0       2       0       0       0
  2519 ;;      Temps:          0       3       0       0       0
  2520 ;;      Totals:         2       5       0       0       0
  2521 ;;Total ram usage:        7 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    2
  2524 ;; This function calls:
  2525 ;;		___awdiv
  2526 ;;		___bmul
  2527 ;; This function is called by:
  2528 ;;		_sendfloat
  2529 ;;		_floTochar
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _division
  2535  0C67                     _division:
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2539                           ;division@conteo stored from wreg
  2540  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0C69  00A7               	movwf	division@conteo
  2543  0C6A                     l2750:
  2544                           
  2545                           ;ComSerial.c: 107:     uint8_t div = conteo;
  2546  0C6A  0827               	movf	division@conteo,w
  2547  0C6B  00A4               	movwf	??_division
  2548  0C6C  0824               	movf	??_division,w
  2549  0C6D  00A8               	movwf	division@div
  2550  0C6E                     l2752:
  2551                           
  2552                           ;ComSerial.c: 108:     *un = 0;
  2553  0C6E  0878               	movf	division@un,w
  2554  0C6F  0084               	movwf	4
  2555  0C70  1383               	bcf	3,7	;select IRP bank0
  2556  0C71  0180               	clrf	0
  2557  0C72                     l2754:
  2558                           
  2559                           ;ComSerial.c: 109:     *dec = 0;
  2560  0C72  0879               	movf	division@dec,w
  2561  0C73  0084               	movwf	4
  2562  0C74  0180               	clrf	0
  2563                           
  2564                           ;ComSerial.c: 112:     while (div >= 10){
  2565  0C75  2CA1               	goto	l2758
  2566  0C76                     l2756:
  2567                           
  2568                           ;ComSerial.c: 113:     *dec = div/10;
  2569  0C76  300A               	movlw	10
  2570  0C77  00F3               	movwf	___awdiv@divisor
  2571  0C78  3000               	movlw	0
  2572  0C79  00F4               	movwf	___awdiv@divisor+1
  2573  0C7A  0828               	movf	division@div,w
  2574  0C7B  00A4               	movwf	??_division
  2575  0C7C  01A5               	clrf	??_division+1
  2576  0C7D  0824               	movf	??_division,w
  2577  0C7E  00F5               	movwf	___awdiv@dividend
  2578  0C7F  0825               	movf	??_division+1,w
  2579  0C80  00F6               	movwf	___awdiv@dividend+1
  2580  0C81  120A  158A  2546  120A  158A  	fcall	___awdiv
  2581  0C86  0873               	movf	?___awdiv,w
  2582  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0C89  00A6               	movwf	??_division+2
  2585  0C8A  0879               	movf	division@dec,w
  2586  0C8B  0084               	movwf	4
  2587  0C8C  0826               	movf	??_division+2,w
  2588  0C8D  1383               	bcf	3,7	;select IRP bank0
  2589  0C8E  0080               	movwf	0
  2590                           
  2591                           ;ComSerial.c: 114:     div = div - (*dec)*(10);
  2592  0C8F  30F6               	movlw	246
  2593  0C90  00A4               	movwf	??_division
  2594  0C91  0824               	movf	??_division,w
  2595  0C92  00F3               	movwf	___bmul@multiplicand
  2596  0C93  0879               	movf	division@dec,w
  2597  0C94  0084               	movwf	4
  2598  0C95  0800               	movf	0,w
  2599  0C96  120A  158A  2288  120A  158A  	fcall	___bmul
  2600  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0C9D  0728               	addwf	division@div,w
  2603  0C9E  00A5               	movwf	??_division+1
  2604  0C9F  0825               	movf	??_division+1,w
  2605  0CA0  00A8               	movwf	division@div
  2606  0CA1                     l2758:
  2607                           
  2608                           ;ComSerial.c: 112:     while (div >= 10){
  2609  0CA1  300A               	movlw	10
  2610  0CA2  0228               	subwf	division@div,w
  2611  0CA3  1803               	skipnc
  2612  0CA4  2CA6               	goto	u3411
  2613  0CA5  2CA7               	goto	u3410
  2614  0CA6                     u3411:
  2615  0CA6  2C76               	goto	l2756
  2616  0CA7                     u3410:
  2617  0CA7                     l2760:
  2618                           
  2619                           ;ComSerial.c: 117:     *un = div;
  2620  0CA7  0828               	movf	division@div,w
  2621  0CA8  00A4               	movwf	??_division
  2622  0CA9  0878               	movf	division@un,w
  2623  0CAA  0084               	movwf	4
  2624  0CAB  0824               	movf	??_division,w
  2625  0CAC  1383               	bcf	3,7	;select IRP bank0
  2626  0CAD  0080               	movwf	0
  2627  0CAE                     l178:
  2628  0CAE  0008               	return
  2629  0CAF                     __end_of_division:
  2630                           
  2631                           	psect	text10
  2632  0A88                     __ptext10:	
  2633 ;; *************** function ___bmul *****************
  2634 ;; Defined at:
  2635 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  multiplier      1    wreg     unsigned char 
  2638 ;;  multiplicand    1    3[COMMON] unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  multiplier      1    6[COMMON] unsigned char 
  2641 ;;  product         1    5[COMMON] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      unsigned char 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         1       0       0       0       0
  2652 ;;      Locals:         2       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0
  2654 ;;      Totals:         4       0       0       0       0
  2655 ;;Total ram usage:        4 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_division
  2662 ;;		_divisiondecimal
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function ___bmul
  2668  0A88                     ___bmul:
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2672                           ;___bmul@multiplier stored from wreg
  2673  0A88  00F6               	movwf	___bmul@multiplier
  2674  0A89                     l2484:
  2675  0A89  01F5               	clrf	___bmul@product
  2676  0A8A                     l2486:
  2677  0A8A  1C76               	btfss	___bmul@multiplier,0
  2678  0A8B  2A8D               	goto	u2801
  2679  0A8C  2A8E               	goto	u2800
  2680  0A8D                     u2801:
  2681  0A8D  2A92               	goto	l2490
  2682  0A8E                     u2800:
  2683  0A8E                     l2488:
  2684  0A8E  0873               	movf	___bmul@multiplicand,w
  2685  0A8F  00F4               	movwf	??___bmul
  2686  0A90  0874               	movf	??___bmul,w
  2687  0A91  07F5               	addwf	___bmul@product,f
  2688  0A92                     l2490:
  2689  0A92  1003               	clrc
  2690  0A93  0DF3               	rlf	___bmul@multiplicand,f
  2691  0A94                     l2492:
  2692  0A94  1003               	clrc
  2693  0A95  0CF6               	rrf	___bmul@multiplier,f
  2694  0A96  0876               	movf	___bmul@multiplier,w
  2695  0A97  1D03               	btfss	3,2
  2696  0A98  2A9A               	goto	u2811
  2697  0A99  2A9B               	goto	u2810
  2698  0A9A                     u2811:
  2699  0A9A  2A8A               	goto	l2486
  2700  0A9B                     u2810:
  2701  0A9B                     l2494:
  2702  0A9B  0875               	movf	___bmul@product,w
  2703  0A9C                     l332:
  2704  0A9C  0008               	return
  2705  0A9D                     __end_of___bmul:
  2706                           
  2707                           	psect	text11
  2708  0D46                     __ptext11:	
  2709 ;; *************** function ___awdiv *****************
  2710 ;; Defined at:
  2711 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  divisor         2    3[COMMON] int 
  2714 ;;  dividend        2    5[COMMON] int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  quotient        2    2[BANK0 ] int 
  2717 ;;  sign            1    1[BANK0 ] unsigned char 
  2718 ;;  counter         1    0[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  2    3[COMMON] int 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         4       0       0       0       0
  2729 ;;      Locals:         0       4       0       0       0
  2730 ;;      Temps:          1       0       0       0       0
  2731 ;;      Totals:         5       4       0       0       0
  2732 ;;Total ram usage:        9 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    1
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_division
  2739 ;;		_divisiondecimal
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function ___awdiv
  2745  0D46                     ___awdiv:
  2746  0D46                     l2498:	
  2747                           ;incstack = 0
  2748                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2749                           
  2750  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0D48  01A1               	clrf	___awdiv@sign
  2753  0D49                     l2500:
  2754  0D49  1FF4               	btfss	___awdiv@divisor+1,7
  2755  0D4A  2D4C               	goto	u2821
  2756  0D4B  2D4D               	goto	u2820
  2757  0D4C                     u2821:
  2758  0D4C  2D54               	goto	l2506
  2759  0D4D                     u2820:
  2760  0D4D                     l2502:
  2761  0D4D  09F3               	comf	___awdiv@divisor,f
  2762  0D4E  09F4               	comf	___awdiv@divisor+1,f
  2763  0D4F  0AF3               	incf	___awdiv@divisor,f
  2764  0D50  1903               	skipnz
  2765  0D51  0AF4               	incf	___awdiv@divisor+1,f
  2766  0D52                     l2504:
  2767  0D52  01A1               	clrf	___awdiv@sign
  2768  0D53  0AA1               	incf	___awdiv@sign,f
  2769  0D54                     l2506:
  2770  0D54  1FF6               	btfss	___awdiv@dividend+1,7
  2771  0D55  2D57               	goto	u2831
  2772  0D56  2D58               	goto	u2830
  2773  0D57                     u2831:
  2774  0D57  2D61               	goto	l2512
  2775  0D58                     u2830:
  2776  0D58                     l2508:
  2777  0D58  09F5               	comf	___awdiv@dividend,f
  2778  0D59  09F6               	comf	___awdiv@dividend+1,f
  2779  0D5A  0AF5               	incf	___awdiv@dividend,f
  2780  0D5B  1903               	skipnz
  2781  0D5C  0AF6               	incf	___awdiv@dividend+1,f
  2782  0D5D                     l2510:
  2783  0D5D  3001               	movlw	1
  2784  0D5E  00F7               	movwf	??___awdiv
  2785  0D5F  0877               	movf	??___awdiv,w
  2786  0D60  06A1               	xorwf	___awdiv@sign,f
  2787  0D61                     l2512:
  2788  0D61  01A2               	clrf	___awdiv@quotient
  2789  0D62  01A3               	clrf	___awdiv@quotient+1
  2790  0D63                     l2514:
  2791  0D63  0873               	movf	___awdiv@divisor,w
  2792  0D64  0474               	iorwf	___awdiv@divisor+1,w
  2793  0D65  1903               	btfsc	3,2
  2794  0D66  2D68               	goto	u2841
  2795  0D67  2D69               	goto	u2840
  2796  0D68                     u2841:
  2797  0D68  2DA0               	goto	l2534
  2798  0D69                     u2840:
  2799  0D69                     l2516:
  2800  0D69  01A0               	clrf	___awdiv@counter
  2801  0D6A  0AA0               	incf	___awdiv@counter,f
  2802  0D6B  2D77               	goto	l2522
  2803  0D6C                     l2518:
  2804  0D6C  3001               	movlw	1
  2805  0D6D                     u2855:
  2806  0D6D  1003               	clrc
  2807  0D6E  0DF3               	rlf	___awdiv@divisor,f
  2808  0D6F  0DF4               	rlf	___awdiv@divisor+1,f
  2809  0D70  3EFF               	addlw	-1
  2810  0D71  1D03               	skipz
  2811  0D72  2D6D               	goto	u2855
  2812  0D73                     l2520:
  2813  0D73  3001               	movlw	1
  2814  0D74  00F7               	movwf	??___awdiv
  2815  0D75  0877               	movf	??___awdiv,w
  2816  0D76  07A0               	addwf	___awdiv@counter,f
  2817  0D77                     l2522:
  2818  0D77  1FF4               	btfss	___awdiv@divisor+1,7
  2819  0D78  2D7A               	goto	u2861
  2820  0D79  2D7B               	goto	u2860
  2821  0D7A                     u2861:
  2822  0D7A  2D6C               	goto	l2518
  2823  0D7B                     u2860:
  2824  0D7B                     l2524:
  2825  0D7B  3001               	movlw	1
  2826  0D7C                     u2875:
  2827  0D7C  1003               	clrc
  2828  0D7D  0DA2               	rlf	___awdiv@quotient,f
  2829  0D7E  0DA3               	rlf	___awdiv@quotient+1,f
  2830  0D7F  3EFF               	addlw	-1
  2831  0D80  1D03               	skipz
  2832  0D81  2D7C               	goto	u2875
  2833  0D82  0874               	movf	___awdiv@divisor+1,w
  2834  0D83  0276               	subwf	___awdiv@dividend+1,w
  2835  0D84  1D03               	skipz
  2836  0D85  2D88               	goto	u2885
  2837  0D86  0873               	movf	___awdiv@divisor,w
  2838  0D87  0275               	subwf	___awdiv@dividend,w
  2839  0D88                     u2885:
  2840  0D88  1C03               	skipc
  2841  0D89  2D8B               	goto	u2881
  2842  0D8A  2D8C               	goto	u2880
  2843  0D8B                     u2881:
  2844  0D8B  2D93               	goto	l2530
  2845  0D8C                     u2880:
  2846  0D8C                     l2526:
  2847  0D8C  0873               	movf	___awdiv@divisor,w
  2848  0D8D  02F5               	subwf	___awdiv@dividend,f
  2849  0D8E  0874               	movf	___awdiv@divisor+1,w
  2850  0D8F  1C03               	skipc
  2851  0D90  03F6               	decf	___awdiv@dividend+1,f
  2852  0D91  02F6               	subwf	___awdiv@dividend+1,f
  2853  0D92                     l2528:
  2854  0D92  1422               	bsf	___awdiv@quotient,0
  2855  0D93                     l2530:
  2856  0D93  3001               	movlw	1
  2857  0D94                     u2895:
  2858  0D94  1003               	clrc
  2859  0D95  0CF4               	rrf	___awdiv@divisor+1,f
  2860  0D96  0CF3               	rrf	___awdiv@divisor,f
  2861  0D97  3EFF               	addlw	-1
  2862  0D98  1D03               	skipz
  2863  0D99  2D94               	goto	u2895
  2864  0D9A                     l2532:
  2865  0D9A  3001               	movlw	1
  2866  0D9B  02A0               	subwf	___awdiv@counter,f
  2867  0D9C  1D03               	btfss	3,2
  2868  0D9D  2D9F               	goto	u2901
  2869  0D9E  2DA0               	goto	u2900
  2870  0D9F                     u2901:
  2871  0D9F  2D7B               	goto	l2524
  2872  0DA0                     u2900:
  2873  0DA0                     l2534:
  2874  0DA0  0821               	movf	___awdiv@sign,w
  2875  0DA1  1903               	btfsc	3,2
  2876  0DA2  2DA4               	goto	u2911
  2877  0DA3  2DA5               	goto	u2910
  2878  0DA4                     u2911:
  2879  0DA4  2DAA               	goto	l2538
  2880  0DA5                     u2910:
  2881  0DA5                     l2536:
  2882  0DA5  09A2               	comf	___awdiv@quotient,f
  2883  0DA6  09A3               	comf	___awdiv@quotient+1,f
  2884  0DA7  0AA2               	incf	___awdiv@quotient,f
  2885  0DA8  1903               	skipnz
  2886  0DA9  0AA3               	incf	___awdiv@quotient+1,f
  2887  0DAA                     l2538:
  2888  0DAA  0823               	movf	___awdiv@quotient+1,w
  2889  0DAB  00F4               	movwf	?___awdiv+1
  2890  0DAC  0822               	movf	___awdiv@quotient,w
  2891  0DAD  00F3               	movwf	?___awdiv
  2892  0DAE                     l459:
  2893  0DAE  0008               	return
  2894  0DAF                     __end_of___awdiv:
  2895                           
  2896                           	psect	text12
  2897  0DAF                     __ptext12:	
  2898 ;; *************** function ___fltol *****************
  2899 ;; Defined at:
  2900 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  f1              4   36[BANK0 ] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  exp1            1    8[COMMON] unsigned char 
  2905 ;;  sign1           1    7[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  4   36[BANK0 ] long 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       4       0       0       0
  2916 ;;      Locals:         2       0       0       0       0
  2917 ;;      Temps:          0       5       0       0       0
  2918 ;;      Totals:         2       9       0       0       0
  2919 ;;Total ram usage:       11 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_sendfloat
  2926 ;;		_floTochar
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function ___fltol
  2932  0DAF                     ___fltol:
  2933  0DAF                     l2780:	
  2934                           ;incstack = 0
  2935                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2936                           
  2937  0DAF  1003               	clrc
  2938  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0DB2  0D46               	rlf	___fltol@f1+2,w
  2941  0DB3  0D47               	rlf	___fltol@f1+3,w
  2942  0DB4  00C8               	movwf	??___fltol
  2943  0DB5  0848               	movf	??___fltol,w
  2944  0DB6  00F8               	movwf	___fltol@exp1
  2945  0DB7  0878               	movf	___fltol@exp1,w
  2946  0DB8  1D03               	btfss	3,2
  2947  0DB9  2DBB               	goto	u3441
  2948  0DBA  2DBC               	goto	u3440
  2949  0DBB                     u3441:
  2950  0DBB  2DC5               	goto	l2786
  2951  0DBC                     u3440:
  2952  0DBC                     l2782:
  2953  0DBC  3000               	movlw	0
  2954  0DBD  00C7               	movwf	?___fltol+3
  2955  0DBE  3000               	movlw	0
  2956  0DBF  00C6               	movwf	?___fltol+2
  2957  0DC0  3000               	movlw	0
  2958  0DC1  00C5               	movwf	?___fltol+1
  2959  0DC2  3000               	movlw	0
  2960  0DC3  00C4               	movwf	?___fltol
  2961  0DC4  2E2A               	goto	l492
  2962  0DC5                     l2786:
  2963  0DC5  0844               	movf	___fltol@f1,w
  2964  0DC6  00C8               	movwf	??___fltol
  2965  0DC7  0845               	movf	___fltol@f1+1,w
  2966  0DC8  00C9               	movwf	??___fltol+1
  2967  0DC9  0846               	movf	___fltol@f1+2,w
  2968  0DCA  00CA               	movwf	??___fltol+2
  2969  0DCB  0847               	movf	___fltol@f1+3,w
  2970  0DCC  00CB               	movwf	??___fltol+3
  2971  0DCD  301F               	movlw	31
  2972  0DCE                     u3455:
  2973  0DCE  1003               	clrc
  2974  0DCF  0CCB               	rrf	??___fltol+3,f
  2975  0DD0  0CCA               	rrf	??___fltol+2,f
  2976  0DD1  0CC9               	rrf	??___fltol+1,f
  2977  0DD2  0CC8               	rrf	??___fltol,f
  2978  0DD3                     u3450:
  2979  0DD3  3EFF               	addlw	-1
  2980  0DD4  1D03               	skipz
  2981  0DD5  2DCE               	goto	u3455
  2982  0DD6  0848               	movf	??___fltol,w
  2983  0DD7  00CC               	movwf	??___fltol+4
  2984  0DD8  084C               	movf	??___fltol+4,w
  2985  0DD9  00F7               	movwf	___fltol@sign1
  2986  0DDA                     l2788:
  2987  0DDA  17C6               	bsf	___fltol@f1+2,7
  2988  0DDB                     l2790:
  2989  0DDB  30FF               	movlw	255
  2990  0DDC  05C4               	andwf	___fltol@f1,f
  2991  0DDD  30FF               	movlw	255
  2992  0DDE  05C5               	andwf	___fltol@f1+1,f
  2993  0DDF  30FF               	movlw	255
  2994  0DE0  05C6               	andwf	___fltol@f1+2,f
  2995  0DE1  3000               	movlw	0
  2996  0DE2  05C7               	andwf	___fltol@f1+3,f
  2997  0DE3                     l2792:
  2998  0DE3  3096               	movlw	150
  2999  0DE4  02F8               	subwf	___fltol@exp1,f
  3000  0DE5                     l2794:
  3001  0DE5  1FF8               	btfss	___fltol@exp1,7
  3002  0DE6  2DE8               	goto	u3461
  3003  0DE7  2DE9               	goto	u3460
  3004  0DE8                     u3461:
  3005  0DE8  2E03               	goto	l2804
  3006  0DE9                     u3460:
  3007  0DE9                     l2796:
  3008  0DE9  0878               	movf	___fltol@exp1,w
  3009  0DEA  3A80               	xorlw	128
  3010  0DEB  3E97               	addlw	151
  3011  0DEC  1803               	skipnc
  3012  0DED  2DEF               	goto	u3471
  3013  0DEE  2DF0               	goto	u3470
  3014  0DEF                     u3471:
  3015  0DEF  2DF1               	goto	l2802
  3016  0DF0                     u3470:
  3017  0DF0  2DBC               	goto	l2782
  3018  0DF1                     l2802:
  3019  0DF1  3001               	movlw	1
  3020  0DF2                     u3485:
  3021  0DF2  1003               	clrc
  3022  0DF3  0CC7               	rrf	___fltol@f1+3,f
  3023  0DF4  0CC6               	rrf	___fltol@f1+2,f
  3024  0DF5  0CC5               	rrf	___fltol@f1+1,f
  3025  0DF6  0CC4               	rrf	___fltol@f1,f
  3026  0DF7  3EFF               	addlw	-1
  3027  0DF8  1D03               	skipz
  3028  0DF9  2DF2               	goto	u3485
  3029  0DFA  3001               	movlw	1
  3030  0DFB  00C8               	movwf	??___fltol
  3031  0DFC  0848               	movf	??___fltol,w
  3032  0DFD  07F8               	addwf	___fltol@exp1,f
  3033  0DFE  1D03               	btfss	3,2
  3034  0DFF  2E01               	goto	u3491
  3035  0E00  2E02               	goto	u3490
  3036  0E01                     u3491:
  3037  0E01  2DF1               	goto	l2802
  3038  0E02                     u3490:
  3039  0E02  2E1A               	goto	l2812
  3040  0E03                     l2804:
  3041  0E03  3020               	movlw	32
  3042  0E04  0278               	subwf	___fltol@exp1,w
  3043  0E05  1C03               	skipc
  3044  0E06  2E08               	goto	u3501
  3045  0E07  2E09               	goto	u3500
  3046  0E08                     u3501:
  3047  0E08  2E15               	goto	l499
  3048  0E09                     u3500:
  3049  0E09  2DBC               	goto	l2782
  3050  0E0A                     l2810:
  3051  0E0A  3001               	movlw	1
  3052  0E0B  00C8               	movwf	??___fltol
  3053  0E0C                     u3515:
  3054  0E0C  1003               	clrc
  3055  0E0D  0DC4               	rlf	___fltol@f1,f
  3056  0E0E  0DC5               	rlf	___fltol@f1+1,f
  3057  0E0F  0DC6               	rlf	___fltol@f1+2,f
  3058  0E10  0DC7               	rlf	___fltol@f1+3,f
  3059  0E11  0BC8               	decfsz	??___fltol,f
  3060  0E12  2E0C               	goto	u3515
  3061  0E13  3001               	movlw	1
  3062  0E14  02F8               	subwf	___fltol@exp1,f
  3063  0E15                     l499:
  3064  0E15  0878               	movf	___fltol@exp1,w
  3065  0E16  1D03               	btfss	3,2
  3066  0E17  2E19               	goto	u3521
  3067  0E18  2E1A               	goto	u3520
  3068  0E19                     u3521:
  3069  0E19  2E0A               	goto	l2810
  3070  0E1A                     u3520:
  3071  0E1A                     l2812:
  3072  0E1A  0877               	movf	___fltol@sign1,w
  3073  0E1B  1903               	btfsc	3,2
  3074  0E1C  2E1E               	goto	u3531
  3075  0E1D  2E1F               	goto	u3530
  3076  0E1E                     u3531:
  3077  0E1E  2E2A               	goto	l502
  3078  0E1F                     u3530:
  3079  0E1F                     l2814:
  3080  0E1F  09C4               	comf	___fltol@f1,f
  3081  0E20  09C5               	comf	___fltol@f1+1,f
  3082  0E21  09C6               	comf	___fltol@f1+2,f
  3083  0E22  09C7               	comf	___fltol@f1+3,f
  3084  0E23  0AC4               	incf	___fltol@f1,f
  3085  0E24  1903               	skipnz
  3086  0E25  0AC5               	incf	___fltol@f1+1,f
  3087  0E26  1903               	skipnz
  3088  0E27  0AC6               	incf	___fltol@f1+2,f
  3089  0E28  1903               	skipnz
  3090  0E29  0AC7               	incf	___fltol@f1+3,f
  3091  0E2A                     l502:
  3092  0E2A                     l492:
  3093  0E2A  0008               	return
  3094  0E2B                     __end_of___fltol:
  3095                           
  3096                           	psect	text13
  3097  0AFE                     __ptext13:	
  3098 ;; *************** function ___flsub *****************
  3099 ;; Defined at:
  3100 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  a               4   16[BANK0 ] long 
  3103 ;;  b               4   20[BANK0 ] long 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  4   16[BANK0 ] long 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       8       0       0       0
  3116 ;;      Locals:         0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0
  3118 ;;      Totals:         0       8       0       0       0
  3119 ;;Total ram usage:        8 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    2
  3122 ;; This function calls:
  3123 ;;		___fladd
  3124 ;; This function is called by:
  3125 ;;		_sendfloat
  3126 ;;		_floTochar
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function ___flsub
  3132  0AFE                     ___flsub:
  3133  0AFE                     l2816:	
  3134                           ;incstack = 0
  3135                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3136                           
  3137  0AFE  3080               	movlw	128
  3138  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0B01  06B3               	xorwf	___flsub@a+3,f
  3141  0B02                     l2818:
  3142  0B02  0837               	movf	___flsub@b+3,w
  3143  0B03  00A3               	movwf	___fladd@b+3
  3144  0B04  0836               	movf	___flsub@b+2,w
  3145  0B05  00A2               	movwf	___fladd@b+2
  3146  0B06  0835               	movf	___flsub@b+1,w
  3147  0B07  00A1               	movwf	___fladd@b+1
  3148  0B08  0834               	movf	___flsub@b,w
  3149  0B09  00A0               	movwf	___fladd@b
  3150  0B0A  0833               	movf	___flsub@a+3,w
  3151  0B0B  00A7               	movwf	___fladd@a+3
  3152  0B0C  0832               	movf	___flsub@a+2,w
  3153  0B0D  00A6               	movwf	___fladd@a+2
  3154  0B0E  0831               	movf	___flsub@a+1,w
  3155  0B0F  00A5               	movwf	___fladd@a+1
  3156  0B10  0830               	movf	___flsub@a,w
  3157  0B11  00A4               	movwf	___fladd@a
  3158  0B12  120A  118A  2383  120A  158A  	fcall	___fladd
  3159  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0B19  0823               	movf	?___fladd+3,w
  3162  0B1A  00B3               	movwf	?___flsub+3
  3163  0B1B  0822               	movf	?___fladd+2,w
  3164  0B1C  00B2               	movwf	?___flsub+2
  3165  0B1D  0821               	movf	?___fladd+1,w
  3166  0B1E  00B1               	movwf	?___flsub+1
  3167  0B1F  0820               	movf	?___fladd,w
  3168  0B20  00B0               	movwf	?___flsub
  3169  0B21                     l645:
  3170  0B21  0008               	return
  3171  0B22                     __end_of___flsub:
  3172                           
  3173                           	psect	text14
  3174  0383                     __ptext14:	
  3175 ;; *************** function ___fladd *****************
  3176 ;; Defined at:
  3177 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  b               4    0[BANK0 ] long 
  3180 ;;  a               4    4[BANK0 ] long 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  grs             1    6[COMMON] unsigned char 
  3183 ;;  bexp            1    5[COMMON] unsigned char 
  3184 ;;  aexp            1    4[COMMON] unsigned char 
  3185 ;;  signs           1    3[COMMON] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  4    0[BANK0 ] unsigned char 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, btemp+1
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       8       0       0       0
  3196 ;;      Locals:         4       0       0       0       0
  3197 ;;      Temps:          0       8       0       0       0
  3198 ;;      Totals:         4      16       0       0       0
  3199 ;;Total ram usage:       20 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		___flsub
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function ___fladd
  3211  0383                     ___fladd:
  3212  0383                     l2542:	
  3213                           ;incstack = 0
  3214                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3215                           
  3216  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0385  0823               	movf	___fladd@b+3,w
  3219  0386  3980               	andlw	128
  3220  0387  00A8               	movwf	??___fladd
  3221  0388  0828               	movf	??___fladd,w
  3222  0389  00F3               	movwf	___fladd@signs
  3223  038A                     l2544:
  3224  038A  0823               	movf	___fladd@b+3,w
  3225  038B  00A8               	movwf	??___fladd
  3226  038C  0728               	addwf	??___fladd,w
  3227  038D  00A9               	movwf	??___fladd+1
  3228  038E  0829               	movf	??___fladd+1,w
  3229  038F  00F5               	movwf	___fladd@bexp
  3230  0390                     l2546:
  3231  0390  1FA2               	btfss	___fladd@b+2,7
  3232  0391  2B93               	goto	u2921
  3233  0392  2B94               	goto	u2920
  3234  0393                     u2921:
  3235  0393  2B95               	goto	l2550
  3236  0394                     u2920:
  3237  0394                     l2548:
  3238  0394  1475               	bsf	___fladd@bexp,0
  3239  0395                     l2550:
  3240  0395  0875               	movf	___fladd@bexp,w
  3241  0396  1903               	btfsc	3,2
  3242  0397  2B99               	goto	u2931
  3243  0398  2B9A               	goto	u2930
  3244  0399                     u2931:
  3245  0399  2BAA               	goto	l2560
  3246  039A                     u2930:
  3247  039A                     l2552:
  3248  039A  0A75               	incf	___fladd@bexp,w
  3249  039B  1D03               	btfss	3,2
  3250  039C  2B9E               	goto	u2941
  3251  039D  2B9F               	goto	u2940
  3252  039E                     u2941:
  3253  039E  2BA7               	goto	l2556
  3254  039F                     u2940:
  3255  039F                     l2554:
  3256  039F  3000               	movlw	0
  3257  03A0  00A3               	movwf	___fladd@b+3
  3258  03A1  3000               	movlw	0
  3259  03A2  00A2               	movwf	___fladd@b+2
  3260  03A3  3000               	movlw	0
  3261  03A4  00A1               	movwf	___fladd@b+1
  3262  03A5  3000               	movlw	0
  3263  03A6  00A0               	movwf	___fladd@b
  3264  03A7                     l2556:
  3265  03A7  17A2               	bsf	___fladd@b+2,7
  3266  03A8                     l2558:
  3267  03A8  01A3               	clrf	___fladd@b+3
  3268  03A9  2BB2               	goto	l2562
  3269  03AA                     l2560:
  3270  03AA  3000               	movlw	0
  3271  03AB  00A3               	movwf	___fladd@b+3
  3272  03AC  3000               	movlw	0
  3273  03AD  00A2               	movwf	___fladd@b+2
  3274  03AE  3000               	movlw	0
  3275  03AF  00A1               	movwf	___fladd@b+1
  3276  03B0  3000               	movlw	0
  3277  03B1  00A0               	movwf	___fladd@b
  3278  03B2                     l2562:
  3279  03B2  0827               	movf	___fladd@a+3,w
  3280  03B3  3980               	andlw	128
  3281  03B4  00A8               	movwf	??___fladd
  3282  03B5  0828               	movf	??___fladd,w
  3283  03B6  00F4               	movwf	___fladd@aexp
  3284  03B7                     l2564:
  3285  03B7  0874               	movf	___fladd@aexp,w
  3286  03B8  0673               	xorwf	___fladd@signs,w
  3287  03B9  1903               	skipnz
  3288  03BA  2BBC               	goto	u2951
  3289  03BB  2BBD               	goto	u2950
  3290  03BC                     u2951:
  3291  03BC  2BBE               	goto	l2568
  3292  03BD                     u2950:
  3293  03BD                     l2566:
  3294  03BD  1773               	bsf	___fladd@signs,6
  3295  03BE                     l2568:
  3296  03BE  0827               	movf	___fladd@a+3,w
  3297  03BF  00A8               	movwf	??___fladd
  3298  03C0  0728               	addwf	??___fladd,w
  3299  03C1  00A9               	movwf	??___fladd+1
  3300  03C2  0829               	movf	??___fladd+1,w
  3301  03C3  00F4               	movwf	___fladd@aexp
  3302  03C4                     l2570:
  3303  03C4  1FA6               	btfss	___fladd@a+2,7
  3304  03C5  2BC7               	goto	u2961
  3305  03C6  2BC8               	goto	u2960
  3306  03C7                     u2961:
  3307  03C7  2BC9               	goto	l2574
  3308  03C8                     u2960:
  3309  03C8                     l2572:
  3310  03C8  1474               	bsf	___fladd@aexp,0
  3311  03C9                     l2574:
  3312  03C9  0874               	movf	___fladd@aexp,w
  3313  03CA  1903               	btfsc	3,2
  3314  03CB  2BCD               	goto	u2971
  3315  03CC  2BCE               	goto	u2970
  3316  03CD                     u2971:
  3317  03CD  2BDE               	goto	l2584
  3318  03CE                     u2970:
  3319  03CE                     l2576:
  3320  03CE  0A74               	incf	___fladd@aexp,w
  3321  03CF  1D03               	btfss	3,2
  3322  03D0  2BD2               	goto	u2981
  3323  03D1  2BD3               	goto	u2980
  3324  03D2                     u2981:
  3325  03D2  2BDB               	goto	l2580
  3326  03D3                     u2980:
  3327  03D3                     l2578:
  3328  03D3  3000               	movlw	0
  3329  03D4  00A7               	movwf	___fladd@a+3
  3330  03D5  3000               	movlw	0
  3331  03D6  00A6               	movwf	___fladd@a+2
  3332  03D7  3000               	movlw	0
  3333  03D8  00A5               	movwf	___fladd@a+1
  3334  03D9  3000               	movlw	0
  3335  03DA  00A4               	movwf	___fladd@a
  3336  03DB                     l2580:
  3337  03DB  17A6               	bsf	___fladd@a+2,7
  3338  03DC                     l2582:
  3339  03DC  01A7               	clrf	___fladd@a+3
  3340  03DD  2BE6               	goto	l599
  3341  03DE                     l2584:
  3342  03DE  3000               	movlw	0
  3343  03DF  00A7               	movwf	___fladd@a+3
  3344  03E0  3000               	movlw	0
  3345  03E1  00A6               	movwf	___fladd@a+2
  3346  03E2  3000               	movlw	0
  3347  03E3  00A5               	movwf	___fladd@a+1
  3348  03E4  3000               	movlw	0
  3349  03E5  00A4               	movwf	___fladd@a
  3350  03E6                     l599:
  3351  03E6  0875               	movf	___fladd@bexp,w
  3352  03E7  0274               	subwf	___fladd@aexp,w
  3353  03E8  1803               	skipnc
  3354  03E9  2BEB               	goto	u2991
  3355  03EA  2BEC               	goto	u2990
  3356  03EB                     u2991:
  3357  03EB  2C30               	goto	l2620
  3358  03EC                     u2990:
  3359  03EC                     l2586:
  3360  03EC  1F73               	btfss	___fladd@signs,6
  3361  03ED  2BEF               	goto	u3001
  3362  03EE  2BF0               	goto	u3000
  3363  03EF                     u3001:
  3364  03EF  2BF4               	goto	l2590
  3365  03F0                     u3000:
  3366  03F0                     l2588:
  3367  03F0  3080               	movlw	128
  3368  03F1  00A8               	movwf	??___fladd
  3369  03F2  0828               	movf	??___fladd,w
  3370  03F3  06F3               	xorwf	___fladd@signs,f
  3371  03F4                     l2590:
  3372  03F4  0875               	movf	___fladd@bexp,w
  3373  03F5  00A8               	movwf	??___fladd
  3374  03F6  0828               	movf	??___fladd,w
  3375  03F7  00F6               	movwf	___fladd@grs
  3376  03F8                     l2592:
  3377  03F8  0874               	movf	___fladd@aexp,w
  3378  03F9  00A8               	movwf	??___fladd
  3379  03FA  0828               	movf	??___fladd,w
  3380  03FB  00F5               	movwf	___fladd@bexp
  3381  03FC                     l2594:
  3382  03FC  0876               	movf	___fladd@grs,w
  3383  03FD  00A8               	movwf	??___fladd
  3384  03FE  0828               	movf	??___fladd,w
  3385  03FF  00F4               	movwf	___fladd@aexp
  3386  0400                     l2596:
  3387  0400  0820               	movf	___fladd@b,w
  3388  0401  00A8               	movwf	??___fladd
  3389  0402  0828               	movf	??___fladd,w
  3390  0403  00F6               	movwf	___fladd@grs
  3391  0404                     l2598:
  3392  0404  0824               	movf	___fladd@a,w
  3393  0405  00A8               	movwf	??___fladd
  3394  0406  0828               	movf	??___fladd,w
  3395  0407  00A0               	movwf	___fladd@b
  3396  0408                     l2600:
  3397  0408  0876               	movf	___fladd@grs,w
  3398  0409  00A8               	movwf	??___fladd
  3399  040A  0828               	movf	??___fladd,w
  3400  040B  00A4               	movwf	___fladd@a
  3401  040C                     l2602:
  3402  040C  0821               	movf	___fladd@b+1,w
  3403  040D  00A8               	movwf	??___fladd
  3404  040E  0828               	movf	??___fladd,w
  3405  040F  00F6               	movwf	___fladd@grs
  3406  0410                     l2604:
  3407  0410  0825               	movf	___fladd@a+1,w
  3408  0411  00A8               	movwf	??___fladd
  3409  0412  0828               	movf	??___fladd,w
  3410  0413  00A1               	movwf	___fladd@b+1
  3411  0414                     l2606:
  3412  0414  0876               	movf	___fladd@grs,w
  3413  0415  00A8               	movwf	??___fladd
  3414  0416  0828               	movf	??___fladd,w
  3415  0417  00A5               	movwf	___fladd@a+1
  3416  0418                     l2608:
  3417  0418  0822               	movf	___fladd@b+2,w
  3418  0419  00A8               	movwf	??___fladd
  3419  041A  0828               	movf	??___fladd,w
  3420  041B  00F6               	movwf	___fladd@grs
  3421  041C                     l2610:
  3422  041C  0826               	movf	___fladd@a+2,w
  3423  041D  00A8               	movwf	??___fladd
  3424  041E  0828               	movf	??___fladd,w
  3425  041F  00A2               	movwf	___fladd@b+2
  3426  0420                     l2612:
  3427  0420  0876               	movf	___fladd@grs,w
  3428  0421  00A8               	movwf	??___fladd
  3429  0422  0828               	movf	??___fladd,w
  3430  0423  00A6               	movwf	___fladd@a+2
  3431  0424                     l2614:
  3432  0424  0823               	movf	___fladd@b+3,w
  3433  0425  00A8               	movwf	??___fladd
  3434  0426  0828               	movf	??___fladd,w
  3435  0427  00F6               	movwf	___fladd@grs
  3436  0428                     l2616:
  3437  0428  0827               	movf	___fladd@a+3,w
  3438  0429  00A8               	movwf	??___fladd
  3439  042A  0828               	movf	??___fladd,w
  3440  042B  00A3               	movwf	___fladd@b+3
  3441  042C                     l2618:
  3442  042C  0876               	movf	___fladd@grs,w
  3443  042D  00A8               	movwf	??___fladd
  3444  042E  0828               	movf	??___fladd,w
  3445  042F  00A7               	movwf	___fladd@a+3
  3446  0430                     l2620:
  3447  0430  01F6               	clrf	___fladd@grs
  3448  0431                     l2622:
  3449  0431  0874               	movf	___fladd@aexp,w
  3450  0432  00A8               	movwf	??___fladd
  3451  0433  01A9               	clrf	??___fladd+1
  3452  0434  0829               	movf	??___fladd+1,w
  3453  0435  00AB               	movwf	??___fladd+3
  3454  0436  0875               	movf	___fladd@bexp,w
  3455  0437  0228               	subwf	??___fladd,w
  3456  0438  00AA               	movwf	??___fladd+2
  3457  0439  1C03               	skipc
  3458  043A  03AB               	decf	??___fladd+3,f
  3459  043B  082B               	movf	??___fladd+3,w
  3460  043C  3A80               	xorlw	128
  3461  043D  00FF               	movwf	btemp+1
  3462  043E  3080               	movlw	128
  3463  043F  027F               	subwf	btemp+1,w
  3464  0440  1D03               	skipz
  3465  0441  2C44               	goto	u3015
  3466  0442  301A               	movlw	26
  3467  0443  022A               	subwf	??___fladd+2,w
  3468  0444                     u3015:
  3469  0444  1C03               	skipc
  3470  0445  2C47               	goto	u3011
  3471  0446  2C48               	goto	u3010
  3472  0447                     u3011:
  3473  0447  2C89               	goto	l2638
  3474  0448                     u3010:
  3475  0448                     l2624:
  3476  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3478  044A  0823               	movf	___fladd@b+3,w
  3479  044B  0422               	iorwf	___fladd@b+2,w
  3480  044C  0421               	iorwf	___fladd@b+1,w
  3481  044D  0420               	iorwf	___fladd@b,w
  3482  044E  1D03               	skipz
  3483  044F  2C51               	goto	u3021
  3484  0450  2C53               	goto	u3020
  3485  0451                     u3021:
  3486  0451  3001               	movlw	1
  3487  0452  2C54               	goto	u3030
  3488  0453                     u3020:
  3489  0453  3000               	movlw	0
  3490  0454                     u3030:
  3491  0454  00A8               	movwf	??___fladd
  3492  0455  0828               	movf	??___fladd,w
  3493  0456  00F6               	movwf	___fladd@grs
  3494  0457  3000               	movlw	0
  3495  0458  00A3               	movwf	___fladd@b+3
  3496  0459  3000               	movlw	0
  3497  045A  00A2               	movwf	___fladd@b+2
  3498  045B  3000               	movlw	0
  3499  045C  00A1               	movwf	___fladd@b+1
  3500  045D  3000               	movlw	0
  3501  045E  00A0               	movwf	___fladd@b
  3502  045F  0874               	movf	___fladd@aexp,w
  3503  0460  00A8               	movwf	??___fladd
  3504  0461  0828               	movf	??___fladd,w
  3505  0462  00F5               	movwf	___fladd@bexp
  3506  0463  2C8F               	goto	l603
  3507  0464                     l605:
  3508  0464  1C76               	btfss	___fladd@grs,0
  3509  0465  2C67               	goto	u3041
  3510  0466  2C68               	goto	u3040
  3511  0467                     u3041:
  3512  0467  2C73               	goto	l2628
  3513  0468                     u3040:
  3514  0468                     l2626:
  3515  0468  0876               	movf	___fladd@grs,w
  3516  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3517  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3518  046B  00A8               	movwf	??___fladd
  3519  046C  1003               	clrc
  3520  046D  0C28               	rrf	??___fladd,w
  3521  046E  3801               	iorlw	1
  3522  046F  00A9               	movwf	??___fladd+1
  3523  0470  0829               	movf	??___fladd+1,w
  3524  0471  00F6               	movwf	___fladd@grs
  3525  0472  2C75               	goto	l2630
  3526  0473                     l2628:
  3527  0473  1003               	clrc
  3528  0474  0CF6               	rrf	___fladd@grs,f
  3529  0475                     l2630:
  3530  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0477  1C20               	btfss	___fladd@b,0
  3533  0478  2C7A               	goto	u3051
  3534  0479  2C7B               	goto	u3050
  3535  047A                     u3051:
  3536  047A  2C7C               	goto	l2634
  3537  047B                     u3050:
  3538  047B                     l2632:
  3539  047B  17F6               	bsf	___fladd@grs,7
  3540  047C                     l2634:
  3541  047C  3001               	movlw	1
  3542  047D  00A8               	movwf	??___fladd
  3543  047E                     u3065:
  3544  047E  0D23               	rlf	___fladd@b+3,w
  3545  047F  0CA3               	rrf	___fladd@b+3,f
  3546  0480  0CA2               	rrf	___fladd@b+2,f
  3547  0481  0CA1               	rrf	___fladd@b+1,f
  3548  0482  0CA0               	rrf	___fladd@b,f
  3549  0483  0BA8               	decfsz	??___fladd& (0+127),f
  3550  0484  2C7E               	goto	u3065
  3551  0485                     l2636:
  3552  0485  3001               	movlw	1
  3553  0486  00A8               	movwf	??___fladd
  3554  0487  0828               	movf	??___fladd,w
  3555  0488  07F5               	addwf	___fladd@bexp,f
  3556  0489                     l2638:
  3557  0489  0874               	movf	___fladd@aexp,w
  3558  048A  0275               	subwf	___fladd@bexp,w
  3559  048B  1C03               	skipc
  3560  048C  2C8E               	goto	u3071
  3561  048D  2C8F               	goto	u3070
  3562  048E                     u3071:
  3563  048E  2C64               	goto	l605
  3564  048F                     u3070:
  3565  048F                     l603:
  3566  048F  1B73               	btfsc	___fladd@signs,6
  3567  0490  2C92               	goto	u3081
  3568  0491  2C93               	goto	u3080
  3569  0492                     u3081:
  3570  0492  2CE2               	goto	l2664
  3571  0493                     u3080:
  3572  0493                     l2640:
  3573  0493  0875               	movf	___fladd@bexp,w
  3574  0494  1D03               	btfss	3,2
  3575  0495  2C97               	goto	u3091
  3576  0496  2C98               	goto	u3090
  3577  0497                     u3091:
  3578  0497  2CA3               	goto	l2646
  3579  0498                     u3090:
  3580  0498                     l2642:
  3581  0498  3000               	movlw	0
  3582  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3583  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3584  049B  00A3               	movwf	?___fladd+3
  3585  049C  3000               	movlw	0
  3586  049D  00A2               	movwf	?___fladd+2
  3587  049E  3000               	movlw	0
  3588  049F  00A1               	movwf	?___fladd+1
  3589  04A0  3000               	movlw	0
  3590  04A1  00A0               	movwf	?___fladd
  3591  04A2  2E12               	goto	l612
  3592  04A3                     l2646:
  3593  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3594  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3595  04A5  0824               	movf	___fladd@a,w
  3596  04A6  07A0               	addwf	___fladd@b,f
  3597  04A7  0825               	movf	___fladd@a+1,w
  3598  04A8  1103               	clrz
  3599  04A9  1803               	skipnc
  3600  04AA  3E01               	addlw	1
  3601  04AB  1903               	skipnz
  3602  04AC  2CAE               	goto	u3101
  3603  04AD  07A1               	addwf	___fladd@b+1,f
  3604  04AE                     u3101:
  3605  04AE  0826               	movf	___fladd@a+2,w
  3606  04AF  1103               	clrz
  3607  04B0  1803               	skipnc
  3608  04B1  3E01               	addlw	1
  3609  04B2  1903               	skipnz
  3610  04B3  2CB5               	goto	u3102
  3611  04B4  07A2               	addwf	___fladd@b+2,f
  3612  04B5                     u3102:
  3613  04B5  0827               	movf	___fladd@a+3,w
  3614  04B6  1103               	clrz
  3615  04B7  1803               	skipnc
  3616  04B8  3E01               	addlw	1
  3617  04B9  1903               	skipnz
  3618  04BA  2CBC               	goto	u3103
  3619  04BB  07A3               	addwf	___fladd@b+3,f
  3620  04BC                     u3103:
  3621  04BC                     l2648:
  3622  04BC  1C23               	btfss	___fladd@b+3,0
  3623  04BD  2CBF               	goto	u3111
  3624  04BE  2CC0               	goto	u3110
  3625  04BF                     u3111:
  3626  04BF  2D98               	goto	l2698
  3627  04C0                     u3110:
  3628  04C0                     l2650:
  3629  04C0  1C76               	btfss	___fladd@grs,0
  3630  04C1  2CC3               	goto	u3121
  3631  04C2  2CC4               	goto	u3120
  3632  04C3                     u3121:
  3633  04C3  2CCD               	goto	l2654
  3634  04C4                     u3120:
  3635  04C4                     l2652:
  3636  04C4  0876               	movf	___fladd@grs,w
  3637  04C5  00A8               	movwf	??___fladd
  3638  04C6  1003               	clrc
  3639  04C7  0C28               	rrf	??___fladd,w
  3640  04C8  3801               	iorlw	1
  3641  04C9  00A9               	movwf	??___fladd+1
  3642  04CA  0829               	movf	??___fladd+1,w
  3643  04CB  00F6               	movwf	___fladd@grs
  3644  04CC  2CCF               	goto	l2656
  3645  04CD                     l2654:
  3646  04CD  1003               	clrc
  3647  04CE  0CF6               	rrf	___fladd@grs,f
  3648  04CF                     l2656:
  3649  04CF  1C20               	btfss	___fladd@b,0
  3650  04D0  2CD2               	goto	u3131
  3651  04D1  2CD3               	goto	u3130
  3652  04D2                     u3131:
  3653  04D2  2CD4               	goto	l2660
  3654  04D3                     u3130:
  3655  04D3                     l2658:
  3656  04D3  17F6               	bsf	___fladd@grs,7
  3657  04D4                     l2660:
  3658  04D4  3001               	movlw	1
  3659  04D5  00A8               	movwf	??___fladd
  3660  04D6                     u3145:
  3661  04D6  0D23               	rlf	___fladd@b+3,w
  3662  04D7  0CA3               	rrf	___fladd@b+3,f
  3663  04D8  0CA2               	rrf	___fladd@b+2,f
  3664  04D9  0CA1               	rrf	___fladd@b+1,f
  3665  04DA  0CA0               	rrf	___fladd@b,f
  3666  04DB  0BA8               	decfsz	??___fladd& (0+127),f
  3667  04DC  2CD6               	goto	u3145
  3668  04DD                     l2662:
  3669  04DD  3001               	movlw	1
  3670  04DE  00A8               	movwf	??___fladd
  3671  04DF  0828               	movf	??___fladd,w
  3672  04E0  07F5               	addwf	___fladd@bexp,f
  3673  04E1  2D98               	goto	l2698
  3674  04E2                     l2664:
  3675  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3676  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3677  04E4  0823               	movf	___fladd@b+3,w
  3678  04E5  3A80               	xorlw	128
  3679  04E6  00FF               	movwf	btemp+1
  3680  04E7  0827               	movf	___fladd@a+3,w
  3681  04E8  3A80               	xorlw	128
  3682  04E9  027F               	subwf	btemp+1,w
  3683  04EA  1D03               	skipz
  3684  04EB  2CF6               	goto	u3153
  3685  04EC  0826               	movf	___fladd@a+2,w
  3686  04ED  0222               	subwf	___fladd@b+2,w
  3687  04EE  1D03               	skipz
  3688  04EF  2CF6               	goto	u3153
  3689  04F0  0825               	movf	___fladd@a+1,w
  3690  04F1  0221               	subwf	___fladd@b+1,w
  3691  04F2  1D03               	skipz
  3692  04F3  2CF6               	goto	u3153
  3693  04F4  0824               	movf	___fladd@a,w
  3694  04F5  0220               	subwf	___fladd@b,w
  3695  04F6                     u3153:
  3696  04F6  1803               	skipnc
  3697  04F7  2CF9               	goto	u3151
  3698  04F8  2CFA               	goto	u3150
  3699  04F9                     u3151:
  3700  04F9  2D52               	goto	l2674
  3701  04FA                     u3150:
  3702  04FA                     l2666:
  3703  04FA  30FF               	movlw	255
  3704  04FB  00A8               	movwf	??___fladd
  3705  04FC  30FF               	movlw	255
  3706  04FD  00A9               	movwf	??___fladd+1
  3707  04FE  30FF               	movlw	255
  3708  04FF  00AA               	movwf	??___fladd+2
  3709  0500  30FF               	movlw	255
  3710  0501  00AB               	movwf	??___fladd+3
  3711  0502  0824               	movf	___fladd@a,w
  3712  0503  00AC               	movwf	??___fladd+4
  3713  0504  0825               	movf	___fladd@a+1,w
  3714  0505  00AD               	movwf	??___fladd+5
  3715  0506  0826               	movf	___fladd@a+2,w
  3716  0507  00AE               	movwf	??___fladd+6
  3717  0508  0827               	movf	___fladd@a+3,w
  3718  0509  00AF               	movwf	??___fladd+7
  3719  050A  0820               	movf	___fladd@b,w
  3720  050B  02AC               	subwf	??___fladd+4,f
  3721  050C  0821               	movf	___fladd@b+1,w
  3722  050D  1C03               	skipc
  3723  050E  0F21               	incfsz	___fladd@b+1,w
  3724  050F  2D11               	goto	u3161
  3725  0510  2D12               	goto	u3162
  3726  0511                     u3161:
  3727  0511  02AD               	subwf	??___fladd+5,f
  3728  0512                     u3162:
  3729  0512  0822               	movf	___fladd@b+2,w
  3730  0513  1C03               	skipc
  3731  0514  0F22               	incfsz	___fladd@b+2,w
  3732  0515  2D17               	goto	u3163
  3733  0516  2D18               	goto	u3164
  3734  0517                     u3163:
  3735  0517  02AE               	subwf	??___fladd+6,f
  3736  0518                     u3164:
  3737  0518  0823               	movf	___fladd@b+3,w
  3738  0519  1C03               	skipc
  3739  051A  0F23               	incfsz	___fladd@b+3,w
  3740  051B  2D1D               	goto	u3165
  3741  051C  2D1E               	goto	u3166
  3742  051D                     u3165:
  3743  051D  02AF               	subwf	??___fladd+7,f
  3744  051E                     u3166:
  3745  051E  082C               	movf	??___fladd+4,w
  3746  051F  07A8               	addwf	??___fladd,f
  3747  0520  082D               	movf	??___fladd+5,w
  3748  0521  1803               	skipnc
  3749  0522  0F2D               	incfsz	??___fladd+5,w
  3750  0523  2D25               	goto	u3170
  3751  0524  2D26               	goto	u3171
  3752  0525                     u3170:
  3753  0525  07A9               	addwf	??___fladd+1,f
  3754  0526                     u3171:
  3755  0526  082E               	movf	??___fladd+6,w
  3756  0527  1803               	skipnc
  3757  0528  0F2E               	incfsz	??___fladd+6,w
  3758  0529  2D2B               	goto	u3172
  3759  052A  2D2C               	goto	u3173
  3760  052B                     u3172:
  3761  052B  07AA               	addwf	??___fladd+2,f
  3762  052C                     u3173:
  3763  052C  082F               	movf	??___fladd+7,w
  3764  052D  1803               	skipnc
  3765  052E  0A2F               	incf	??___fladd+7,w
  3766  052F  07AB               	addwf	??___fladd+3,f
  3767  0530  082B               	movf	??___fladd+3,w
  3768  0531  00A3               	movwf	___fladd@b+3
  3769  0532  082A               	movf	??___fladd+2,w
  3770  0533  00A2               	movwf	___fladd@b+2
  3771  0534  0829               	movf	??___fladd+1,w
  3772  0535  00A1               	movwf	___fladd@b+1
  3773  0536  0828               	movf	??___fladd,w
  3774  0537  00A0               	movwf	___fladd@b
  3775  0538                     l2668:
  3776  0538  3080               	movlw	128
  3777  0539  00A8               	movwf	??___fladd
  3778  053A  0828               	movf	??___fladd,w
  3779  053B  06F3               	xorwf	___fladd@signs,f
  3780  053C  09F6               	comf	___fladd@grs,f
  3781  053D  0AF6               	incf	___fladd@grs,f
  3782  053E                     l2670:
  3783  053E  0876               	movf	___fladd@grs,w
  3784  053F  1D03               	btfss	3,2
  3785  0540  2D42               	goto	u3181
  3786  0541  2D43               	goto	u3180
  3787  0542                     u3181:
  3788  0542  2D60               	goto	l620
  3789  0543                     u3180:
  3790  0543                     l2672:
  3791  0543  3001               	movlw	1
  3792  0544  07A0               	addwf	___fladd@b,f
  3793  0545  3000               	movlw	0
  3794  0546  1803               	skipnc
  3795  0547  3001               	movlw	1
  3796  0548  07A1               	addwf	___fladd@b+1,f
  3797  0549  3000               	movlw	0
  3798  054A  1803               	skipnc
  3799  054B  3001               	movlw	1
  3800  054C  07A2               	addwf	___fladd@b+2,f
  3801  054D  3000               	movlw	0
  3802  054E  1803               	skipnc
  3803  054F  3001               	movlw	1
  3804  0550  07A3               	addwf	___fladd@b+3,f
  3805  0551  2D60               	goto	l620
  3806  0552                     l2674:
  3807  0552  0824               	movf	___fladd@a,w
  3808  0553  02A0               	subwf	___fladd@b,f
  3809  0554  0825               	movf	___fladd@a+1,w
  3810  0555  1C03               	skipc
  3811  0556  0F25               	incfsz	___fladd@a+1,w
  3812  0557  02A1               	subwf	___fladd@b+1,f
  3813  0558  0826               	movf	___fladd@a+2,w
  3814  0559  1C03               	skipc
  3815  055A  0F26               	incfsz	___fladd@a+2,w
  3816  055B  02A2               	subwf	___fladd@b+2,f
  3817  055C  0827               	movf	___fladd@a+3,w
  3818  055D  1C03               	skipc
  3819  055E  0F27               	incfsz	___fladd@a+3,w
  3820  055F  02A3               	subwf	___fladd@b+3,f
  3821  0560                     l620:
  3822  0560  0823               	movf	___fladd@b+3,w
  3823  0561  0422               	iorwf	___fladd@b+2,w
  3824  0562  0421               	iorwf	___fladd@b+1,w
  3825  0563  0420               	iorwf	___fladd@b,w
  3826  0564  1D03               	skipz
  3827  0565  2D67               	goto	u3191
  3828  0566  2D68               	goto	u3190
  3829  0567                     u3191:
  3830  0567  2D94               	goto	l2696
  3831  0568                     u3190:
  3832  0568                     l2676:
  3833  0568  0876               	movf	___fladd@grs,w
  3834  0569  1D03               	btfss	3,2
  3835  056A  2D6C               	goto	u3201
  3836  056B  2D6D               	goto	u3200
  3837  056C                     u3201:
  3838  056C  2D94               	goto	l2696
  3839  056D                     u3200:
  3840  056D                     l2678:
  3841  056D  3000               	movlw	0
  3842  056E  00A3               	movwf	?___fladd+3
  3843  056F  3000               	movlw	0
  3844  0570  00A2               	movwf	?___fladd+2
  3845  0571  3000               	movlw	0
  3846  0572  00A1               	movwf	?___fladd+1
  3847  0573  3000               	movlw	0
  3848  0574  00A0               	movwf	?___fladd
  3849  0575  2E12               	goto	l612
  3850  0576                     l2682:
  3851  0576  3001               	movlw	1
  3852  0577  00A8               	movwf	??___fladd
  3853  0578                     u3215:
  3854  0578  1003               	clrc
  3855  0579  0DA0               	rlf	___fladd@b,f
  3856  057A  0DA1               	rlf	___fladd@b+1,f
  3857  057B  0DA2               	rlf	___fladd@b+2,f
  3858  057C  0DA3               	rlf	___fladd@b+3,f
  3859  057D  0BA8               	decfsz	??___fladd,f
  3860  057E  2D78               	goto	u3215
  3861  057F                     l2684:
  3862  057F  1FF6               	btfss	___fladd@grs,7
  3863  0580  2D82               	goto	u3221
  3864  0581  2D83               	goto	u3220
  3865  0582                     u3221:
  3866  0582  2D84               	goto	l624
  3867  0583                     u3220:
  3868  0583                     l2686:
  3869  0583  1420               	bsf	___fladd@b,0
  3870  0584                     l624:
  3871  0584  1C76               	btfss	___fladd@grs,0
  3872  0585  2D87               	goto	u3231
  3873  0586  2D88               	goto	u3230
  3874  0587                     u3231:
  3875  0587  2D8B               	goto	l2690
  3876  0588                     u3230:
  3877  0588                     l2688:
  3878  0588  1403               	setc
  3879  0589  0DF6               	rlf	___fladd@grs,f
  3880  058A  2D8D               	goto	l2692
  3881  058B                     l2690:
  3882  058B  1003               	clrc
  3883  058C  0DF6               	rlf	___fladd@grs,f
  3884  058D                     l2692:
  3885  058D  0875               	movf	___fladd@bexp,w
  3886  058E  1903               	btfsc	3,2
  3887  058F  2D91               	goto	u3241
  3888  0590  2D92               	goto	u3240
  3889  0591                     u3241:
  3890  0591  2D94               	goto	l2696
  3891  0592                     u3240:
  3892  0592                     l2694:
  3893  0592  3001               	movlw	1
  3894  0593  02F5               	subwf	___fladd@bexp,f
  3895  0594                     l2696:
  3896  0594  1FA2               	btfss	___fladd@b+2,7
  3897  0595  2D97               	goto	u3251
  3898  0596  2D98               	goto	u3250
  3899  0597                     u3251:
  3900  0597  2D76               	goto	l2682
  3901  0598                     u3250:
  3902  0598                     l2698:
  3903  0598  01F4               	clrf	___fladd@aexp
  3904  0599                     l2700:
  3905  0599  1FF6               	btfss	___fladd@grs,7
  3906  059A  2D9C               	goto	u3261
  3907  059B  2D9D               	goto	u3260
  3908  059C                     u3261:
  3909  059C  2DAB               	goto	l2708
  3910  059D                     u3260:
  3911  059D                     l2702:
  3912  059D  0876               	movf	___fladd@grs,w
  3913  059E  397F               	andlw	127
  3914  059F  1903               	btfsc	3,2
  3915  05A0  2DA2               	goto	u3271
  3916  05A1  2DA3               	goto	u3270
  3917  05A2                     u3271:
  3918  05A2  2DA6               	goto	l630
  3919  05A3                     u3270:
  3920  05A3                     l2704:
  3921  05A3  01F4               	clrf	___fladd@aexp
  3922  05A4  0AF4               	incf	___fladd@aexp,f
  3923  05A5  2DAB               	goto	l2708
  3924  05A6                     l630:
  3925  05A6  1C20               	btfss	___fladd@b,0
  3926  05A7  2DA9               	goto	u3281
  3927  05A8  2DAA               	goto	u3280
  3928  05A9                     u3281:
  3929  05A9  2DAB               	goto	l2708
  3930  05AA                     u3280:
  3931  05AA  2DA3               	goto	l2704
  3932  05AB                     l2708:
  3933  05AB  0874               	movf	___fladd@aexp,w
  3934  05AC  1903               	btfsc	3,2
  3935  05AD  2DAF               	goto	u3291
  3936  05AE  2DB0               	goto	u3290
  3937  05AF                     u3291:
  3938  05AF  2DE4               	goto	l633
  3939  05B0                     u3290:
  3940  05B0                     l2710:
  3941  05B0  3001               	movlw	1
  3942  05B1  07A0               	addwf	___fladd@b,f
  3943  05B2  3000               	movlw	0
  3944  05B3  1803               	skipnc
  3945  05B4  3001               	movlw	1
  3946  05B5  07A1               	addwf	___fladd@b+1,f
  3947  05B6  3000               	movlw	0
  3948  05B7  1803               	skipnc
  3949  05B8  3001               	movlw	1
  3950  05B9  07A2               	addwf	___fladd@b+2,f
  3951  05BA  3000               	movlw	0
  3952  05BB  1803               	skipnc
  3953  05BC  3001               	movlw	1
  3954  05BD  07A3               	addwf	___fladd@b+3,f
  3955  05BE                     l2712:
  3956  05BE  1C23               	btfss	___fladd@b+3,0
  3957  05BF  2DC1               	goto	u3301
  3958  05C0  2DC2               	goto	u3300
  3959  05C1                     u3301:
  3960  05C1  2DE4               	goto	l633
  3961  05C2                     u3300:
  3962  05C2                     l2714:
  3963  05C2  0820               	movf	___fladd@b,w
  3964  05C3  00A8               	movwf	??___fladd
  3965  05C4  0821               	movf	___fladd@b+1,w
  3966  05C5  00A9               	movwf	??___fladd+1
  3967  05C6  0822               	movf	___fladd@b+2,w
  3968  05C7  00AA               	movwf	??___fladd+2
  3969  05C8  0823               	movf	___fladd@b+3,w
  3970  05C9  00AB               	movwf	??___fladd+3
  3971  05CA  3001               	movlw	1
  3972  05CB  00AC               	movwf	??___fladd+4
  3973  05CC                     u3315:
  3974  05CC  0D2B               	rlf	??___fladd+3,w
  3975  05CD  0CAB               	rrf	??___fladd+3,f
  3976  05CE  0CAA               	rrf	??___fladd+2,f
  3977  05CF  0CA9               	rrf	??___fladd+1,f
  3978  05D0  0CA8               	rrf	??___fladd,f
  3979  05D1                     u3310:
  3980  05D1  0BAC               	decfsz	??___fladd+4,f
  3981  05D2  2DCC               	goto	u3315
  3982  05D3  082B               	movf	??___fladd+3,w
  3983  05D4  00A3               	movwf	___fladd@b+3
  3984  05D5  082A               	movf	??___fladd+2,w
  3985  05D6  00A2               	movwf	___fladd@b+2
  3986  05D7  0829               	movf	??___fladd+1,w
  3987  05D8  00A1               	movwf	___fladd@b+1
  3988  05D9  0828               	movf	??___fladd,w
  3989  05DA  00A0               	movwf	___fladd@b
  3990  05DB  0A75               	incf	___fladd@bexp,w
  3991  05DC  1903               	btfsc	3,2
  3992  05DD  2DDF               	goto	u3321
  3993  05DE  2DE0               	goto	u3320
  3994  05DF                     u3321:
  3995  05DF  2DE4               	goto	l633
  3996  05E0                     u3320:
  3997  05E0                     l2716:
  3998  05E0  3001               	movlw	1
  3999  05E1  00A8               	movwf	??___fladd
  4000  05E2  0828               	movf	??___fladd,w
  4001  05E3  07F5               	addwf	___fladd@bexp,f
  4002  05E4                     l633:
  4003  05E4  0A75               	incf	___fladd@bexp,w
  4004  05E5  1903               	btfsc	3,2
  4005  05E6  2DE8               	goto	u3331
  4006  05E7  2DE9               	goto	u3330
  4007  05E8                     u3331:
  4008  05E8  2DEE               	goto	l2720
  4009  05E9                     u3330:
  4010  05E9                     l2718:
  4011  05E9  0875               	movf	___fladd@bexp,w
  4012  05EA  1D03               	btfss	3,2
  4013  05EB  2DED               	goto	u3341
  4014  05EC  2DEE               	goto	u3340
  4015  05ED                     u3341:
  4016  05ED  2DFC               	goto	l2726
  4017  05EE                     u3340:
  4018  05EE                     l2720:
  4019  05EE  3000               	movlw	0
  4020  05EF  00A3               	movwf	___fladd@b+3
  4021  05F0  3000               	movlw	0
  4022  05F1  00A2               	movwf	___fladd@b+2
  4023  05F2  3000               	movlw	0
  4024  05F3  00A1               	movwf	___fladd@b+1
  4025  05F4  3000               	movlw	0
  4026  05F5  00A0               	movwf	___fladd@b
  4027  05F6                     l2722:
  4028  05F6  0875               	movf	___fladd@bexp,w
  4029  05F7  1D03               	btfss	3,2
  4030  05F8  2DFA               	goto	u3351
  4031  05F9  2DFB               	goto	u3350
  4032  05FA                     u3351:
  4033  05FA  2DFC               	goto	l2726
  4034  05FB                     u3350:
  4035  05FB                     l2724:
  4036  05FB  01F3               	clrf	___fladd@signs
  4037  05FC                     l2726:
  4038  05FC  1C75               	btfss	___fladd@bexp,0
  4039  05FD  2DFF               	goto	u3361
  4040  05FE  2E00               	goto	u3360
  4041  05FF                     u3361:
  4042  05FF  2E02               	goto	l2730
  4043  0600                     u3360:
  4044  0600                     l2728:
  4045  0600  17A2               	bsf	___fladd@b+2,7
  4046  0601  2E06               	goto	l641
  4047  0602                     l2730:
  4048  0602  307F               	movlw	127
  4049  0603  00A8               	movwf	??___fladd
  4050  0604  0828               	movf	??___fladd,w
  4051  0605  05A2               	andwf	___fladd@b+2,f
  4052  0606                     l641:
  4053  0606  0875               	movf	___fladd@bexp,w
  4054  0607  00A8               	movwf	??___fladd
  4055  0608  1003               	clrc
  4056  0609  0C28               	rrf	??___fladd,w
  4057  060A  00A9               	movwf	??___fladd+1
  4058  060B  0829               	movf	??___fladd+1,w
  4059  060C  00A3               	movwf	___fladd@b+3
  4060  060D                     l2732:
  4061  060D  1FF3               	btfss	___fladd@signs,7
  4062  060E  2E10               	goto	u3371
  4063  060F  2E11               	goto	u3370
  4064  0610                     u3371:
  4065  0610  2E12               	goto	l642
  4066  0611                     u3370:
  4067  0611                     l2734:
  4068  0611  17A3               	bsf	___fladd@b+3,7
  4069  0612                     l642:
  4070  0612                     l612:
  4071  0612  0008               	return
  4072  0613                     __end_of___fladd:
  4073                           
  4074                           	psect	text15
  4075  0ADB                     __ptext15:	
  4076 ;; *************** function _cursorLCD *****************
  4077 ;; Defined at:
  4078 ;;		line 50 in file "LCDD2.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  fila            1    wreg     unsigned char 
  4081 ;;  columna         1    6[COMMON] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  fila            1    8[COMMON] unsigned char 
  4084 ;;  temp            1    9[COMMON] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         1       0       0       0       0
  4095 ;;      Locals:         2       0       0       0       0
  4096 ;;      Temps:          1       0       0       0       0
  4097 ;;      Totals:         4       0       0       0       0
  4098 ;;Total ram usage:        4 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    2
  4101 ;; This function calls:
  4102 ;;		_comandoLCD
  4103 ;; This function is called by:
  4104 ;;		_main
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _cursorLCD
  4110  0ADB                     _cursorLCD:
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4114                           ;cursorLCD@fila stored from wreg
  4115  0ADB  00F8               	movwf	cursorLCD@fila
  4116  0ADC                     l2348:
  4117                           
  4118                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  4119  0ADC  0378               	decf	cursorLCD@fila,w
  4120  0ADD  1D03               	btfss	3,2
  4121  0ADE  2AE0               	goto	u2681
  4122  0ADF  2AE1               	goto	u2680
  4123  0AE0                     u2681:
  4124  0AE0  2AEC               	goto	l2354
  4125  0AE1                     u2680:
  4126  0AE1                     l2350:
  4127                           
  4128                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  4129  0AE1  0876               	movf	cursorLCD@columna,w
  4130  0AE2  3E7F               	addlw	127
  4131  0AE3  00F7               	movwf	??_cursorLCD
  4132  0AE4  0877               	movf	??_cursorLCD,w
  4133  0AE5  00F9               	movwf	cursorLCD@temp
  4134  0AE6                     l2352:
  4135                           
  4136                           ;LCDD2.c: 54:         comandoLCD(temp);
  4137  0AE6  0879               	movf	cursorLCD@temp,w
  4138  0AE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4139  0AEC                     l2354:
  4140                           
  4141                           ;LCDD2.c: 57:     if(fila == 2){
  4142  0AEC  3002               	movlw	2
  4143  0AED  0678               	xorwf	cursorLCD@fila,w
  4144  0AEE  1D03               	btfss	3,2
  4145  0AEF  2AF1               	goto	u2691
  4146  0AF0  2AF2               	goto	u2690
  4147  0AF1                     u2691:
  4148  0AF1  2AFD               	goto	l208
  4149  0AF2                     u2690:
  4150  0AF2                     l2356:
  4151                           
  4152                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  4153  0AF2  0876               	movf	cursorLCD@columna,w
  4154  0AF3  3EBF               	addlw	191
  4155  0AF4  00F7               	movwf	??_cursorLCD
  4156  0AF5  0877               	movf	??_cursorLCD,w
  4157  0AF6  00F9               	movwf	cursorLCD@temp
  4158  0AF7                     l2358:
  4159                           
  4160                           ;LCDD2.c: 59:         comandoLCD(temp);
  4161  0AF7  0879               	movf	cursorLCD@temp,w
  4162  0AF8  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4163  0AFD                     l208:
  4164  0AFD  0008               	return
  4165  0AFE                     __end_of_cursorLCD:
  4166                           
  4167                           	psect	text16
  4168  0A74                     __ptext16:	
  4169 ;; *************** function _comandoLCD *****************
  4170 ;; Defined at:
  4171 ;;		line 63 in file "LCDD2.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  cmd             1    wreg     unsigned char 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  cmd             1    5[COMMON] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         1       0       0       0       0
  4187 ;;      Temps:          2       0       0       0       0
  4188 ;;      Totals:         3       0       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_initLCD
  4196 ;;		_cursorLCD
  4197 ;;		_ClearLCD
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _comandoLCD
  4203  0A74                     _comandoLCD:
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _comandoLCD: [wreg]
  4207                           ;comandoLCD@cmd stored from wreg
  4208  0A74  00F5               	movwf	comandoLCD@cmd
  4209  0A75                     l2008:
  4210                           
  4211                           ;LCDD2.c: 64:     RC0 = 0;
  4212  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0A77  1007               	bcf	7,0	;volatile
  4215  0A78                     l2010:
  4216                           
  4217                           ;LCDD2.c: 65:     PORTD = cmd;
  4218  0A78  0875               	movf	comandoLCD@cmd,w
  4219  0A79  0088               	movwf	8	;volatile
  4220  0A7A                     l2012:
  4221                           
  4222                           ;LCDD2.c: 66:     RC1 = 1;
  4223  0A7A  1487               	bsf	7,1	;volatile
  4224                           
  4225                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4226  0A7B  300B               	movlw	11
  4227  0A7C  00F4               	movwf	??_comandoLCD+1
  4228  0A7D  3062               	movlw	98
  4229  0A7E  00F3               	movwf	??_comandoLCD
  4230  0A7F                     u4097:
  4231  0A7F  0BF3               	decfsz	??_comandoLCD,f
  4232  0A80  2A7F               	goto	u4097
  4233  0A81  0BF4               	decfsz	??_comandoLCD+1,f
  4234  0A82  2A7F               	goto	u4097
  4235  0A83  0000               	nop
  4236  0A84                     l2014:
  4237                           
  4238                           ;LCDD2.c: 68:     RC1 = 0;
  4239  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0A86  1087               	bcf	7,1	;volatile
  4242  0A87                     l211:
  4243  0A87  0008               	return
  4244  0A88                     __end_of_comandoLCD:
  4245                           
  4246                           	psect	text17
  4247  0BAB                     __ptext17:	
  4248 ;; *************** function _configuracion *****************
  4249 ;; Defined at:
  4250 ;;		line 122 in file "main.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0
  4267 ;;      Totals:         0       0       0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    2
  4271 ;; This function calls:
  4272 ;;		_ADCconfig
  4273 ;;		_configUART
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _configuracion
  4281  0BAB                     _configuracion:
  4282  0BAB                     l2242:	
  4283                           ;incstack = 0
  4284                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4285                           
  4286                           
  4287                           ;main.c: 124:     ANSEL = 0X03;
  4288  0BAB  3003               	movlw	3
  4289  0BAC  1683               	bsf	3,5	;RP0=1, select bank3
  4290  0BAD  1703               	bsf	3,6	;RP1=1, select bank3
  4291  0BAE  0088               	movwf	8	;volatile
  4292  0BAF                     l2244:
  4293                           
  4294                           ;main.c: 125:     ANSELH = 0X00;
  4295  0BAF  0189               	clrf	9	;volatile
  4296  0BB0                     l2246:
  4297                           
  4298                           ;main.c: 126:     TRISA = 0X03;
  4299  0BB0  3003               	movlw	3
  4300  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  4301  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  4302  0BB3  0085               	movwf	5	;volatile
  4303                           
  4304                           ;main.c: 127:     TRISB = 0X00;
  4305  0BB4  0186               	clrf	6	;volatile
  4306                           
  4307                           ;main.c: 128:     TRISC = 0X00;
  4308  0BB5  0187               	clrf	7	;volatile
  4309                           
  4310                           ;main.c: 129:     TRISD = 0X00;
  4311  0BB6  0188               	clrf	8	;volatile
  4312                           
  4313                           ;main.c: 130:     TRISE = 0X00;
  4314  0BB7  0189               	clrf	9	;volatile
  4315                           
  4316                           ;main.c: 131:     PORTA = 0X00;
  4317  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0BBA  0185               	clrf	5	;volatile
  4320                           
  4321                           ;main.c: 132:     PORTB = 0X00;
  4322  0BBB  0186               	clrf	6	;volatile
  4323                           
  4324                           ;main.c: 133:     PORTC = 0X00;
  4325  0BBC  0187               	clrf	7	;volatile
  4326                           
  4327                           ;main.c: 134:     PORTD = 0X00;
  4328  0BBD  0188               	clrf	8	;volatile
  4329                           
  4330                           ;main.c: 135:     PORTE = 0X00;
  4331  0BBE  0189               	clrf	9	;volatile
  4332  0BBF                     l2248:
  4333                           
  4334                           ;main.c: 138:     configUART();
  4335  0BBF  120A  158A  2262  120A  158A  	fcall	_configUART
  4336  0BC4                     l2250:
  4337                           
  4338                           ;main.c: 141:     OSCCONbits.IRCF = 0b111;
  4339  0BC4  3070               	movlw	112
  4340  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  4341  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  4342  0BC7  048F               	iorwf	15,f	;volatile
  4343  0BC8                     l2252:
  4344                           
  4345                           ;main.c: 142:     OSCCONbits.SCS = 0b1;
  4346  0BC8  140F               	bsf	15,0	;volatile
  4347  0BC9                     l2254:
  4348                           
  4349                           ;main.c: 145:     INTCONbits.GIE = 1;
  4350  0BC9  178B               	bsf	11,7	;volatile
  4351  0BCA                     l2256:
  4352                           
  4353                           ;main.c: 146:     INTCONbits.PEIE = 1;
  4354  0BCA  170B               	bsf	11,6	;volatile
  4355  0BCB                     l2258:
  4356                           
  4357                           ;main.c: 147:     INTCONbits.T0IF = 0;
  4358  0BCB  110B               	bcf	11,2	;volatile
  4359  0BCC                     l2260:
  4360                           
  4361                           ;main.c: 148:     INTCONbits.T0IE = 1;
  4362  0BCC  168B               	bsf	11,5	;volatile
  4363  0BCD                     l2262:
  4364                           
  4365                           ;main.c: 149:     PIE1bits.RCIE = 1;
  4366  0BCD  168C               	bsf	12,5	;volatile
  4367  0BCE                     l2264:
  4368                           
  4369                           ;main.c: 152:     OPTION_REGbits.T0CS = 0;
  4370  0BCE  1281               	bcf	1,5	;volatile
  4371  0BCF                     l2266:
  4372                           
  4373                           ;main.c: 153:     OPTION_REGbits.PSA = 0;
  4374  0BCF  1181               	bcf	1,3	;volatile
  4375  0BD0                     l2268:
  4376                           
  4377                           ;main.c: 154:     OPTION_REGbits.PS2 = 1;
  4378  0BD0  1501               	bsf	1,2	;volatile
  4379  0BD1                     l2270:
  4380                           
  4381                           ;main.c: 155:     OPTION_REGbits.PS1 = 1;
  4382  0BD1  1481               	bsf	1,1	;volatile
  4383  0BD2                     l2272:
  4384                           
  4385                           ;main.c: 156:     OPTION_REGbits.PS0 = 0;
  4386  0BD2  1001               	bcf	1,0	;volatile
  4387  0BD3                     l2274:
  4388                           
  4389                           ;main.c: 161:     ADCconfig(0,0);
  4390  0BD3  01F3               	clrf	ADCconfig@just
  4391  0BD4  3000               	movlw	0
  4392  0BD5  120A  158A  2422  120A  158A  	fcall	_ADCconfig
  4393  0BDA                     l2276:
  4394                           
  4395                           ;main.c: 163:     PIR1bits.ADIF = 0;
  4396  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0BDC  130C               	bcf	12,6	;volatile
  4399  0BDD                     l2278:
  4400                           
  4401                           ;main.c: 164:     PIE1bits.ADIE = 1;
  4402  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4403  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  4404  0BDF  170C               	bsf	12,6	;volatile
  4405  0BE0                     l110:
  4406  0BE0  0008               	return
  4407  0BE1                     __end_of_configuracion:
  4408                           
  4409                           	psect	text18
  4410  0A62                     __ptext18:	
  4411 ;; *************** function _configUART *****************
  4412 ;; Defined at:
  4413 ;;		line 11 in file "ComSerial.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         0       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0
  4430 ;;      Totals:         0       0       0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_configuracion
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function _configUART
  4443  0A62                     _configUART:
  4444  0A62                     l1934:	
  4445                           ;incstack = 0
  4446                           ; Regs used in _configUART: [wreg]
  4447                           
  4448                           
  4449                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  4450  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  4451  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  4452  0A64  1307               	bcf	7,6	;volatile
  4453                           
  4454                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  4455  0A65  1787               	bsf	7,7	;volatile
  4456  0A66                     l1936:
  4457                           
  4458                           ;ComSerial.c: 15:     SPBRG = 12;
  4459  0A66  300C               	movlw	12
  4460  0A67  0099               	movwf	25	;volatile
  4461  0A68                     l1938:
  4462                           
  4463                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  4464  0A68  1118               	bcf	24,2	;volatile
  4465  0A69                     l1940:
  4466                           
  4467                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  4468  0A69  1698               	bsf	24,5	;volatile
  4469  0A6A                     l1942:
  4470                           
  4471                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  4472  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  4474  0A6C  1618               	bsf	24,4	;volatile
  4475  0A6D                     l1944:
  4476                           
  4477                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  4478  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  4479  0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  4480  0A6F  1218               	bcf	24,4	;volatile
  4481  0A70                     l1946:
  4482                           
  4483                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  4484  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  4485  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  4486  0A72  1798               	bsf	24,7	;volatile
  4487  0A73                     l148:
  4488  0A73  0008               	return
  4489  0A74                     __end_of_configUART:
  4490                           
  4491                           	psect	text19
  4492  0C22                     __ptext19:	
  4493 ;; *************** function _ADCconfig *****************
  4494 ;; Defined at:
  4495 ;;		line 10 in file "ADC.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  canal           1    wreg     unsigned char 
  4498 ;;  just            1    3[COMMON] unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  canal           1    6[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         1       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0
  4512 ;;      Temps:          2       0       0       0       0
  4513 ;;      Totals:         4       0       0       0       0
  4514 ;;Total ram usage:        4 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_configuracion
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _ADCconfig
  4526  0C22                     _ADCconfig:
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
  4530                           ;ADCconfig@canal stored from wreg
  4531  0C22  00F6               	movwf	ADCconfig@canal
  4532  0C23                     l1948:
  4533                           
  4534                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
  4535  0C23  2C3C               	goto	l1960
  4536  0C24                     l1950:
  4537                           
  4538                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
  4539  0C24  303F               	movlw	-193
  4540  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0C27  059F               	andwf	31,f	;volatile
  4543                           
  4544                           ;ADC.c: 18:             break;
  4545  0C28  2C52               	goto	l1962
  4546  0C29                     l1952:
  4547                           
  4548                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
  4549  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4550  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4551  0C2B  081F               	movf	31,w	;volatile
  4552  0C2C  393F               	andlw	-193
  4553  0C2D  3840               	iorlw	64
  4554  0C2E  009F               	movwf	31	;volatile
  4555                           
  4556                           ;ADC.c: 21:             break;
  4557  0C2F  2C52               	goto	l1962
  4558  0C30                     l1954:
  4559                           
  4560                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
  4561  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4562  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4563  0C32  081F               	movf	31,w	;volatile
  4564  0C33  393F               	andlw	-193
  4565  0C34  3880               	iorlw	128
  4566  0C35  009F               	movwf	31	;volatile
  4567                           
  4568                           ;ADC.c: 24:             break;
  4569  0C36  2C52               	goto	l1962
  4570  0C37                     l1956:
  4571                           
  4572                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  4573  0C37  30C0               	movlw	192
  4574  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0C3A  049F               	iorwf	31,f	;volatile
  4577                           
  4578                           ;ADC.c: 27:             break;
  4579  0C3B  2C52               	goto	l1962
  4580  0C3C                     l1960:
  4581  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  4582  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  4583  0C3E  0E0F               	swapf	15,w	;volatile
  4584  0C3F  3907               	andlw	7
  4585  0C40  00F4               	movwf	??_ADCconfig
  4586  0C41  01F5               	clrf	??_ADCconfig+1
  4587                           
  4588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4589                           ; Switch size 1, requested type "simple"
  4590                           ; Number of cases is 1, Range of values is 0 to 0
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte            4     3 (average)
  4594                           ; direct_byte           11     8 (fixed)
  4595                           ; jumptable            260     6 (fixed)
  4596                           ;	Chosen strategy is simple_byte
  4597  0C42  0875               	movf	??_ADCconfig+1,w
  4598  0C43  3A00               	xorlw	0	; case 0
  4599  0C44  1903               	skipnz
  4600  0C45  2C47               	goto	l3134
  4601  0C46  2C37               	goto	l1956
  4602  0C47                     l3134:
  4603                           
  4604                           ; Switch size 1, requested type "simple"
  4605                           ; Number of cases is 3, Range of values is 4 to 7
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte           10     6 (average)
  4609                           ; direct_byte           23    11 (fixed)
  4610                           ; jumptable            263     9 (fixed)
  4611                           ;	Chosen strategy is simple_byte
  4612  0C47  0874               	movf	??_ADCconfig,w
  4613  0C48  3A04               	xorlw	4	; case 4
  4614  0C49  1903               	skipnz
  4615  0C4A  2C24               	goto	l1950
  4616  0C4B  3A02               	xorlw	2	; case 6
  4617  0C4C  1903               	skipnz
  4618  0C4D  2C29               	goto	l1952
  4619  0C4E  3A01               	xorlw	1	; case 7
  4620  0C4F  1903               	skipnz
  4621  0C50  2C30               	goto	l1954
  4622  0C51  2C37               	goto	l1956
  4623  0C52                     l1962:
  4624                           
  4625                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
  4626  0C52  0876               	movf	ADCconfig@canal,w
  4627  0C53  00F4               	movwf	??_ADCconfig
  4628  0C54  0DF4               	rlf	??_ADCconfig,f
  4629  0C55  0DF4               	rlf	??_ADCconfig,f
  4630  0C56  081F               	movf	31,w	;volatile
  4631  0C57  0674               	xorwf	??_ADCconfig,w
  4632  0C58  39C3               	andlw	-61
  4633  0C59  0674               	xorwf	??_ADCconfig,w
  4634  0C5A  009F               	movwf	31	;volatile
  4635  0C5B                     l1964:
  4636                           
  4637                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
  4638  0C5B  109F               	bcf	31,1	;volatile
  4639  0C5C                     l1966:
  4640                           
  4641                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
  4642  0C5C  141F               	bsf	31,0	;volatile
  4643  0C5D                     l1968:
  4644                           
  4645                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
  4646  0C5D  0C73               	rrf	ADCconfig@just,w
  4647  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4648  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4649  0C60  1C03               	skipc
  4650  0C61  139F               	bcf	31,7	;volatile
  4651  0C62  1803               	skipnc
  4652  0C63  179F               	bsf	31,7	;volatile
  4653  0C64                     l1970:
  4654                           
  4655                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
  4656  0C64  129F               	bcf	31,5	;volatile
  4657  0C65                     l1972:
  4658                           
  4659                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  4660  0C65  121F               	bcf	31,4	;volatile
  4661  0C66                     l125:
  4662  0C66  0008               	return
  4663  0C67                     __end_of_ADCconfig:
  4664                           
  4665                           	psect	text20
  4666  0A9D                     __ptext20:	
  4667 ;; *************** function _LCDstring *****************
  4668 ;; Defined at:
  4669 ;;		line 75 in file "LCDD2.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  mensaje         1    wreg     PTR unsigned char 
  4672 ;;		 -> STR_5(17), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  mensaje         1    6[COMMON] PTR unsigned char 
  4675 ;;		 -> STR_5(17), 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       0       0       0       0
  4686 ;;      Locals:         1       0       0       0       0
  4687 ;;      Temps:          1       0       0       0       0
  4688 ;;      Totals:         2       0       0       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    2
  4692 ;; This function calls:
  4693 ;;		_dispCHAR
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _LCDstring
  4701  0A9D                     _LCDstring:
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4705                           ;LCDstring@mensaje stored from wreg
  4706  0A9D  00F6               	movwf	LCDstring@mensaje
  4707  0A9E                     l2360:
  4708                           
  4709                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4710  0A9E  2AAF               	goto	l2366
  4711  0A9F                     l2362:
  4712                           
  4713                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  4714  0A9F  0876               	movf	LCDstring@mensaje,w
  4715  0AA0  0084               	movwf	4
  4716  0AA1  120A  158A  2000  120A  158A  	fcall	stringdir
  4717  0AA6  120A  158A  2252  120A  158A  	fcall	_dispCHAR
  4718  0AAB                     l2364:
  4719                           
  4720                           ;LCDD2.c: 78:         mensaje ++;
  4721  0AAB  3001               	movlw	1
  4722  0AAC  00F5               	movwf	??_LCDstring
  4723  0AAD  0875               	movf	??_LCDstring,w
  4724  0AAE  07F6               	addwf	LCDstring@mensaje,f
  4725  0AAF                     l2366:
  4726                           
  4727                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4728  0AAF  0876               	movf	LCDstring@mensaje,w
  4729  0AB0  0084               	movwf	4
  4730  0AB1  120A  158A  2000  120A  158A  	fcall	stringdir
  4731  0AB6  3A00               	xorlw	0
  4732  0AB7  1D03               	skipz
  4733  0AB8  2ABA               	goto	u2701
  4734  0AB9  2ABB               	goto	u2700
  4735  0ABA                     u2701:
  4736  0ABA  2A9F               	goto	l2362
  4737  0ABB                     u2700:
  4738  0ABB                     l220:
  4739  0ABB  0008               	return
  4740  0ABC                     __end_of_LCDstring:
  4741                           
  4742                           	psect	text21
  4743  0A52                     __ptext21:	
  4744 ;; *************** function _dispCHAR *****************
  4745 ;; Defined at:
  4746 ;;		line 40 in file "LCDD2.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  b               1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  b               1    4[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0
  4762 ;;      Temps:          1       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_main
  4771 ;;		_LCDstring
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _dispCHAR
  4777  0A52                     _dispCHAR:
  4778                           
  4779                           ;incstack = 0
  4780                           ; Regs used in _dispCHAR: [wreg]
  4781                           ;dispCHAR@b stored from wreg
  4782  0A52  00F4               	movwf	dispCHAR@b
  4783  0A53                     l1926:
  4784                           
  4785                           ;LCDD2.c: 42:     RC0 = 1;
  4786  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0A55  1407               	bsf	7,0	;volatile
  4789  0A56                     l1928:
  4790                           
  4791                           ;LCDD2.c: 43:     PORTD = b;
  4792  0A56  0874               	movf	dispCHAR@b,w
  4793  0A57  0088               	movwf	8	;volatile
  4794  0A58                     l1930:
  4795                           
  4796                           ;LCDD2.c: 44:     RC1 = 1;
  4797  0A58  1487               	bsf	7,1	;volatile
  4798                           
  4799                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4800  0A59  301A               	movlw	26
  4801  0A5A  00F3               	movwf	??_dispCHAR
  4802  0A5B                     u4107:
  4803  0A5B  0BF3               	decfsz	??_dispCHAR,f
  4804  0A5C  2A5B               	goto	u4107
  4805  0A5D  0000               	nop
  4806  0A5E                     l1932:
  4807                           
  4808                           ;LCDD2.c: 46:     RC1 = 0;
  4809  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0A60  1087               	bcf	7,1	;volatile
  4812  0A61                     l203:
  4813  0A61  0008               	return
  4814  0A62                     __end_of_dispCHAR:
  4815                           
  4816                           	psect	text22
  4817  0BE1                     __ptext22:	
  4818 ;; *************** function _CONVdec *****************
  4819 ;; Defined at:
  4820 ;;		line 52 in file "ADC.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  lectura         1    wreg     PTR unsigned char 
  4823 ;;		 -> pot2(1), pot1(1), 
  4824 ;;  equiv           1   36[BANK0 ] PTR float 
  4825 ;;		 -> val2(4), val1(4), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  lectura         1    7[COMMON] PTR unsigned char 
  4828 ;;		 -> pot2(1), pot1(1), 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       1       0       0       0
  4839 ;;      Locals:         1       0       0       0       0
  4840 ;;      Temps:          0       4       0       0       0
  4841 ;;      Totals:         1       5       0       0       0
  4842 ;;Total ram usage:        6 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    3
  4845 ;; This function calls:
  4846 ;;		___flmul
  4847 ;;		___xxtofl
  4848 ;; This function is called by:
  4849 ;;		_main
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _CONVdec
  4855  0BE1                     _CONVdec:
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in _CONVdec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4859                           ;CONVdec@lectura stored from wreg
  4860  0BE1  00F7               	movwf	CONVdec@lectura
  4861  0BE2                     l3006:
  4862                           
  4863                           ;ADC.c: 54:     *equiv = (float)(0.01961)*(*lectura);
  4864  0BE2  303C               	movlw	60
  4865  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0BE5  00AD               	movwf	___flmul@b+3
  4868  0BE6  30A0               	movlw	160
  4869  0BE7  00AC               	movwf	___flmul@b+2
  4870  0BE8  30A5               	movlw	165
  4871  0BE9  00AB               	movwf	___flmul@b+1
  4872  0BEA  3027               	movlw	39
  4873  0BEB  00AA               	movwf	___flmul@b
  4874  0BEC  0877               	movf	CONVdec@lectura,w
  4875  0BED  0084               	movwf	4
  4876  0BEE  1383               	bcf	3,7	;select IRP bank0
  4877  0BEF  0800               	movf	0,w
  4878  0BF0  00C5               	movwf	??_CONVdec
  4879  0BF1  01C6               	clrf	??_CONVdec+1
  4880  0BF2  01C7               	clrf	??_CONVdec+2
  4881  0BF3  01C8               	clrf	??_CONVdec+3
  4882  0BF4  0848               	movf	??_CONVdec+3,w
  4883  0BF5  00F6               	movwf	___xxtofl@val+3
  4884  0BF6  0847               	movf	??_CONVdec+2,w
  4885  0BF7  00F5               	movwf	___xxtofl@val+2
  4886  0BF8  0846               	movf	??_CONVdec+1,w
  4887  0BF9  00F4               	movwf	___xxtofl@val+1
  4888  0BFA  0845               	movf	??_CONVdec,w
  4889  0BFB  00F3               	movwf	___xxtofl@val
  4890  0BFC  3001               	movlw	1
  4891  0BFD  120A  158A  2744  120A  158A  	fcall	___xxtofl
  4892  0C02  0876               	movf	?___xxtofl+3,w
  4893  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0C05  00B1               	movwf	___flmul@a+3
  4896  0C06  0875               	movf	?___xxtofl+2,w
  4897  0C07  00B0               	movwf	___flmul@a+2
  4898  0C08  0874               	movf	?___xxtofl+1,w
  4899  0C09  00AF               	movwf	___flmul@a+1
  4900  0C0A  0873               	movf	?___xxtofl,w
  4901  0C0B  00AE               	movwf	___flmul@a
  4902  0C0C  120A  118A  2022  120A  158A  	fcall	___flmul
  4903  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0C13  0844               	movf	CONVdec@equiv,w
  4906  0C14  0084               	movwf	4
  4907  0C15  082A               	movf	?___flmul,w
  4908  0C16  1383               	bcf	3,7	;select IRP bank0
  4909  0C17  0080               	movwf	0
  4910  0C18  0A84               	incf	4,f
  4911  0C19  082B               	movf	?___flmul+1,w
  4912  0C1A  0080               	movwf	0
  4913  0C1B  0A84               	incf	4,f
  4914  0C1C  082C               	movf	?___flmul+2,w
  4915  0C1D  0080               	movwf	0
  4916  0C1E  0A84               	incf	4,f
  4917  0C1F  082D               	movf	?___flmul+3,w
  4918  0C20  0080               	movwf	0
  4919  0C21                     l131:
  4920  0C21  0008               	return
  4921  0C22                     __end_of_CONVdec:
  4922                           
  4923                           	psect	text23
  4924  0F44                     __ptext23:	
  4925 ;; *************** function ___xxtofl *****************
  4926 ;; Defined at:
  4927 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  sign            1    wreg     unsigned char 
  4930 ;;  val             4    3[COMMON] long 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  sign            1    4[BANK0 ] unsigned char 
  4933 ;;  arg             4    6[BANK0 ] unsigned long 
  4934 ;;  exp             1    5[BANK0 ] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  4    3[COMMON] unsigned char 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         4       0       0       0       0
  4945 ;;      Locals:         0       6       0       0       0
  4946 ;;      Temps:          0       4       0       0       0
  4947 ;;      Totals:         4      10       0       0       0
  4948 ;;Total ram usage:       14 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_CONVdec
  4955 ;;		_sendfloat
  4956 ;;		_floTochar
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function ___xxtofl
  4962  0F44                     ___xxtofl:
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4966                           ;___xxtofl@sign stored from wreg
  4967  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0F46  00A4               	movwf	___xxtofl@sign
  4970  0F47                     l2962:
  4971  0F47  0824               	movf	___xxtofl@sign,w
  4972  0F48  1903               	btfsc	3,2
  4973  0F49  2F4B               	goto	u3911
  4974  0F4A  2F4C               	goto	u3910
  4975  0F4B                     u3911:
  4976  0F4B  2F60               	goto	l2968
  4977  0F4C                     u3910:
  4978  0F4C                     l2964:
  4979  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  4980  0F4D  2F4F               	goto	u3921
  4981  0F4E  2F50               	goto	u3920
  4982  0F4F                     u3921:
  4983  0F4F  2F60               	goto	l2968
  4984  0F50                     u3920:
  4985  0F50                     l2966:
  4986  0F50  0973               	comf	___xxtofl@val,w
  4987  0F51  00A6               	movwf	___xxtofl@arg
  4988  0F52  0974               	comf	___xxtofl@val+1,w
  4989  0F53  00A7               	movwf	___xxtofl@arg+1
  4990  0F54  0975               	comf	___xxtofl@val+2,w
  4991  0F55  00A8               	movwf	___xxtofl@arg+2
  4992  0F56  0976               	comf	___xxtofl@val+3,w
  4993  0F57  00A9               	movwf	___xxtofl@arg+3
  4994  0F58  0AA6               	incf	___xxtofl@arg,f
  4995  0F59  1903               	skipnz
  4996  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  4997  0F5B  1903               	skipnz
  4998  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  4999  0F5D  1903               	skipnz
  5000  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  5001  0F5F  2F68               	goto	l739
  5002  0F60                     l2968:
  5003  0F60  0876               	movf	___xxtofl@val+3,w
  5004  0F61  00A9               	movwf	___xxtofl@arg+3
  5005  0F62  0875               	movf	___xxtofl@val+2,w
  5006  0F63  00A8               	movwf	___xxtofl@arg+2
  5007  0F64  0874               	movf	___xxtofl@val+1,w
  5008  0F65  00A7               	movwf	___xxtofl@arg+1
  5009  0F66  0873               	movf	___xxtofl@val,w
  5010  0F67  00A6               	movwf	___xxtofl@arg
  5011  0F68                     l739:
  5012  0F68  0876               	movf	___xxtofl@val+3,w
  5013  0F69  0475               	iorwf	___xxtofl@val+2,w
  5014  0F6A  0474               	iorwf	___xxtofl@val+1,w
  5015  0F6B  0473               	iorwf	___xxtofl@val,w
  5016  0F6C  1D03               	skipz
  5017  0F6D  2F6F               	goto	u3931
  5018  0F6E  2F70               	goto	u3930
  5019  0F6F                     u3931:
  5020  0F6F  2F79               	goto	l2974
  5021  0F70                     u3930:
  5022  0F70                     l2970:
  5023  0F70  3000               	movlw	0
  5024  0F71  00F6               	movwf	?___xxtofl+3
  5025  0F72  3000               	movlw	0
  5026  0F73  00F5               	movwf	?___xxtofl+2
  5027  0F74  3000               	movlw	0
  5028  0F75  00F4               	movwf	?___xxtofl+1
  5029  0F76  3000               	movlw	0
  5030  0F77  00F3               	movwf	?___xxtofl
  5031  0F78  2FFF               	goto	l741
  5032  0F79                     l2974:
  5033  0F79  3096               	movlw	150
  5034  0F7A  00A0               	movwf	??___xxtofl
  5035  0F7B  0820               	movf	??___xxtofl,w
  5036  0F7C  00A5               	movwf	___xxtofl@exp
  5037  0F7D  2F8B               	goto	l2978
  5038  0F7E                     l2976:
  5039  0F7E  3001               	movlw	1
  5040  0F7F  00A0               	movwf	??___xxtofl
  5041  0F80  0820               	movf	??___xxtofl,w
  5042  0F81  07A5               	addwf	___xxtofl@exp,f
  5043  0F82  3001               	movlw	1
  5044  0F83                     u3945:
  5045  0F83  1003               	clrc
  5046  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  5047  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  5048  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  5049  0F87  0CA6               	rrf	___xxtofl@arg,f
  5050  0F88  3EFF               	addlw	-1
  5051  0F89  1D03               	skipz
  5052  0F8A  2F83               	goto	u3945
  5053  0F8B                     l2978:
  5054  0F8B  30FE               	movlw	254
  5055  0F8C  0529               	andwf	___xxtofl@arg+3,w
  5056  0F8D  1D03               	btfss	3,2
  5057  0F8E  2F90               	goto	u3951
  5058  0F8F  2F91               	goto	u3950
  5059  0F90                     u3951:
  5060  0F90  2F7E               	goto	l2976
  5061  0F91                     u3950:
  5062  0F91  2FAD               	goto	l745
  5063  0F92                     l2980:
  5064  0F92  3001               	movlw	1
  5065  0F93  00A0               	movwf	??___xxtofl
  5066  0F94  0820               	movf	??___xxtofl,w
  5067  0F95  07A5               	addwf	___xxtofl@exp,f
  5068  0F96                     l2982:
  5069  0F96  3001               	movlw	1
  5070  0F97  07A6               	addwf	___xxtofl@arg,f
  5071  0F98  3000               	movlw	0
  5072  0F99  1803               	skipnc
  5073  0F9A  3001               	movlw	1
  5074  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  5075  0F9C  3000               	movlw	0
  5076  0F9D  1803               	skipnc
  5077  0F9E  3001               	movlw	1
  5078  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  5079  0FA0  3000               	movlw	0
  5080  0FA1  1803               	skipnc
  5081  0FA2  3001               	movlw	1
  5082  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  5083  0FA4                     l2984:
  5084  0FA4  3001               	movlw	1
  5085  0FA5                     u3965:
  5086  0FA5  1003               	clrc
  5087  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  5088  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  5089  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  5090  0FA9  0CA6               	rrf	___xxtofl@arg,f
  5091  0FAA  3EFF               	addlw	-1
  5092  0FAB  1D03               	skipz
  5093  0FAC  2FA5               	goto	u3965
  5094  0FAD                     l745:
  5095  0FAD  30FF               	movlw	255
  5096  0FAE  0529               	andwf	___xxtofl@arg+3,w
  5097  0FAF  1D03               	btfss	3,2
  5098  0FB0  2FB2               	goto	u3971
  5099  0FB1  2FB3               	goto	u3970
  5100  0FB2                     u3971:
  5101  0FB2  2F92               	goto	l2980
  5102  0FB3                     u3970:
  5103  0FB3  2FBF               	goto	l2988
  5104  0FB4                     l2986:
  5105  0FB4  3001               	movlw	1
  5106  0FB5  02A5               	subwf	___xxtofl@exp,f
  5107  0FB6  3001               	movlw	1
  5108  0FB7  00A0               	movwf	??___xxtofl
  5109  0FB8                     u3985:
  5110  0FB8  1003               	clrc
  5111  0FB9  0DA6               	rlf	___xxtofl@arg,f
  5112  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  5113  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  5114  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  5115  0FBD  0BA0               	decfsz	??___xxtofl,f
  5116  0FBE  2FB8               	goto	u3985
  5117  0FBF                     l2988:
  5118  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  5119  0FC0  2FC2               	goto	u3991
  5120  0FC1  2FC3               	goto	u3990
  5121  0FC2                     u3991:
  5122  0FC2  2FC9               	goto	l752
  5123  0FC3                     u3990:
  5124  0FC3                     l2990:
  5125  0FC3  3002               	movlw	2
  5126  0FC4  0225               	subwf	___xxtofl@exp,w
  5127  0FC5  1803               	skipnc
  5128  0FC6  2FC8               	goto	u4001
  5129  0FC7  2FC9               	goto	u4000
  5130  0FC8                     u4001:
  5131  0FC8  2FB4               	goto	l2986
  5132  0FC9                     u4000:
  5133  0FC9                     l752:
  5134  0FC9  1825               	btfsc	___xxtofl@exp,0
  5135  0FCA  2FCC               	goto	u4011
  5136  0FCB  2FCD               	goto	u4010
  5137  0FCC                     u4011:
  5138  0FCC  2FD5               	goto	l753
  5139  0FCD                     u4010:
  5140  0FCD                     l2992:
  5141  0FCD  30FF               	movlw	255
  5142  0FCE  05A6               	andwf	___xxtofl@arg,f
  5143  0FCF  30FF               	movlw	255
  5144  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  5145  0FD1  307F               	movlw	127
  5146  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  5147  0FD3  30FF               	movlw	255
  5148  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  5149  0FD5                     l753:
  5150  0FD5  1003               	clrc
  5151  0FD6  0CA5               	rrf	___xxtofl@exp,f
  5152  0FD7                     l2994:
  5153  0FD7  0825               	movf	___xxtofl@exp,w
  5154  0FD8  00A0               	movwf	??___xxtofl
  5155  0FD9  01A1               	clrf	??___xxtofl+1
  5156  0FDA  01A2               	clrf	??___xxtofl+2
  5157  0FDB  01A3               	clrf	??___xxtofl+3
  5158  0FDC  3018               	movlw	24
  5159  0FDD                     u4025:
  5160  0FDD  1003               	clrc
  5161  0FDE  0DA0               	rlf	??___xxtofl,f
  5162  0FDF  0DA1               	rlf	??___xxtofl+1,f
  5163  0FE0  0DA2               	rlf	??___xxtofl+2,f
  5164  0FE1  0DA3               	rlf	??___xxtofl+3,f
  5165  0FE2                     u4020:
  5166  0FE2  3EFF               	addlw	-1
  5167  0FE3  1D03               	skipz
  5168  0FE4  2FDD               	goto	u4025
  5169  0FE5  0820               	movf	??___xxtofl,w
  5170  0FE6  04A6               	iorwf	___xxtofl@arg,f
  5171  0FE7  0821               	movf	??___xxtofl+1,w
  5172  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  5173  0FE9  0822               	movf	??___xxtofl+2,w
  5174  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  5175  0FEB  0823               	movf	??___xxtofl+3,w
  5176  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  5177  0FED                     l2996:
  5178  0FED  0824               	movf	___xxtofl@sign,w
  5179  0FEE  1903               	btfsc	3,2
  5180  0FEF  2FF1               	goto	u4031
  5181  0FF0  2FF2               	goto	u4030
  5182  0FF1                     u4031:
  5183  0FF1  2FF7               	goto	l3002
  5184  0FF2                     u4030:
  5185  0FF2                     l2998:
  5186  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  5187  0FF3  2FF5               	goto	u4041
  5188  0FF4  2FF6               	goto	u4040
  5189  0FF5                     u4041:
  5190  0FF5  2FF7               	goto	l3002
  5191  0FF6                     u4040:
  5192  0FF6                     l3000:
  5193  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  5194  0FF7                     l3002:
  5195  0FF7  0829               	movf	___xxtofl@arg+3,w
  5196  0FF8  00F6               	movwf	?___xxtofl+3
  5197  0FF9  0828               	movf	___xxtofl@arg+2,w
  5198  0FFA  00F5               	movwf	?___xxtofl+2
  5199  0FFB  0827               	movf	___xxtofl@arg+1,w
  5200  0FFC  00F4               	movwf	?___xxtofl+1
  5201  0FFD  0826               	movf	___xxtofl@arg,w
  5202  0FFE  00F3               	movwf	?___xxtofl
  5203  0FFF                     l741:
  5204  0FFF  0008               	return
  5205  1000                     __end_of___xxtofl:
  5206                           
  5207                           	psect	text24
  5208  0022                     __ptext24:	
  5209 ;; *************** function ___flmul *****************
  5210 ;; Defined at:
  5211 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  b               4   10[BANK0 ] unsigned char 
  5214 ;;  a               4   14[BANK0 ] unsigned char 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  prod            4   30[BANK0 ] struct .
  5217 ;;  grs             4   25[BANK0 ] unsigned long 
  5218 ;;  temp            2   34[BANK0 ] struct .
  5219 ;;  bexp            1   29[BANK0 ] unsigned char 
  5220 ;;  aexp            1   24[BANK0 ] unsigned char 
  5221 ;;  sign            1   23[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  4   10[BANK0 ] unsigned char 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5231 ;;      Params:         0       8       0       0       0
  5232 ;;      Locals:         0      13       0       0       0
  5233 ;;      Temps:          0       5       0       0       0
  5234 ;;      Totals:         0      26       0       0       0
  5235 ;;Total ram usage:       26 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    2
  5238 ;; This function calls:
  5239 ;;		__Umul8_16
  5240 ;; This function is called by:
  5241 ;;		_CONVdec
  5242 ;;		_sendfloat
  5243 ;;		_floTochar
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function ___flmul
  5249  0022                     ___flmul:
  5250  0022                     l2822:	
  5251                           ;incstack = 0
  5252                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5253                           
  5254  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0024  082D               	movf	___flmul@b+3,w
  5257  0025  3980               	andlw	128
  5258  0026  00B2               	movwf	??___flmul
  5259  0027  0832               	movf	??___flmul,w
  5260  0028  00B7               	movwf	___flmul@sign
  5261  0029                     l2824:
  5262  0029  082D               	movf	___flmul@b+3,w
  5263  002A  00B2               	movwf	??___flmul
  5264  002B  0732               	addwf	??___flmul,w
  5265  002C  00B3               	movwf	??___flmul+1
  5266  002D  0833               	movf	??___flmul+1,w
  5267  002E  00BD               	movwf	___flmul@bexp
  5268  002F                     l2826:
  5269  002F  1FAC               	btfss	___flmul@b+2,7
  5270  0030  2832               	goto	u3541
  5271  0031  2833               	goto	u3540
  5272  0032                     u3541:
  5273  0032  2834               	goto	l2830
  5274  0033                     u3540:
  5275  0033                     l2828:
  5276  0033  143D               	bsf	___flmul@bexp,0
  5277  0034                     l2830:
  5278  0034  083D               	movf	___flmul@bexp,w
  5279  0035  1903               	btfsc	3,2
  5280  0036  2838               	goto	u3551
  5281  0037  2839               	goto	u3550
  5282  0038                     u3551:
  5283  0038  2848               	goto	l2838
  5284  0039                     u3550:
  5285  0039                     l2832:
  5286  0039  0A3D               	incf	___flmul@bexp,w
  5287  003A  1D03               	btfss	3,2
  5288  003B  283D               	goto	u3561
  5289  003C  283E               	goto	u3560
  5290  003D                     u3561:
  5291  003D  2846               	goto	l2836
  5292  003E                     u3560:
  5293  003E                     l2834:
  5294  003E  3000               	movlw	0
  5295  003F  00AD               	movwf	___flmul@b+3
  5296  0040  3000               	movlw	0
  5297  0041  00AC               	movwf	___flmul@b+2
  5298  0042  3000               	movlw	0
  5299  0043  00AB               	movwf	___flmul@b+1
  5300  0044  3000               	movlw	0
  5301  0045  00AA               	movwf	___flmul@b
  5302  0046                     l2836:
  5303  0046  17AC               	bsf	___flmul@b+2,7
  5304  0047  2850               	goto	l2840
  5305  0048                     l2838:
  5306  0048  3000               	movlw	0
  5307  0049  00AD               	movwf	___flmul@b+3
  5308  004A  3000               	movlw	0
  5309  004B  00AC               	movwf	___flmul@b+2
  5310  004C  3000               	movlw	0
  5311  004D  00AB               	movwf	___flmul@b+1
  5312  004E  3000               	movlw	0
  5313  004F  00AA               	movwf	___flmul@b
  5314  0050                     l2840:
  5315  0050  0831               	movf	___flmul@a+3,w
  5316  0051  3980               	andlw	128
  5317  0052  00B2               	movwf	??___flmul
  5318  0053  0832               	movf	??___flmul,w
  5319  0054  06B7               	xorwf	___flmul@sign,f
  5320  0055                     l2842:
  5321  0055  0831               	movf	___flmul@a+3,w
  5322  0056  00B2               	movwf	??___flmul
  5323  0057  0732               	addwf	??___flmul,w
  5324  0058  00B3               	movwf	??___flmul+1
  5325  0059  0833               	movf	??___flmul+1,w
  5326  005A  00B8               	movwf	___flmul@aexp
  5327  005B                     l2844:
  5328  005B  1FB0               	btfss	___flmul@a+2,7
  5329  005C  285E               	goto	u3571
  5330  005D  285F               	goto	u3570
  5331  005E                     u3571:
  5332  005E  2860               	goto	l2848
  5333  005F                     u3570:
  5334  005F                     l2846:
  5335  005F  1438               	bsf	___flmul@aexp,0
  5336  0060                     l2848:
  5337  0060  0838               	movf	___flmul@aexp,w
  5338  0061  1903               	btfsc	3,2
  5339  0062  2864               	goto	u3581
  5340  0063  2865               	goto	u3580
  5341  0064                     u3581:
  5342  0064  2874               	goto	l2856
  5343  0065                     u3580:
  5344  0065                     l2850:
  5345  0065  0A38               	incf	___flmul@aexp,w
  5346  0066  1D03               	btfss	3,2
  5347  0067  2869               	goto	u3591
  5348  0068  286A               	goto	u3590
  5349  0069                     u3591:
  5350  0069  2872               	goto	l2854
  5351  006A                     u3590:
  5352  006A                     l2852:
  5353  006A  3000               	movlw	0
  5354  006B  00B1               	movwf	___flmul@a+3
  5355  006C  3000               	movlw	0
  5356  006D  00B0               	movwf	___flmul@a+2
  5357  006E  3000               	movlw	0
  5358  006F  00AF               	movwf	___flmul@a+1
  5359  0070  3000               	movlw	0
  5360  0071  00AE               	movwf	___flmul@a
  5361  0072                     l2854:
  5362  0072  17B0               	bsf	___flmul@a+2,7
  5363  0073  287C               	goto	l2858
  5364  0074                     l2856:
  5365  0074  3000               	movlw	0
  5366  0075  00B1               	movwf	___flmul@a+3
  5367  0076  3000               	movlw	0
  5368  0077  00B0               	movwf	___flmul@a+2
  5369  0078  3000               	movlw	0
  5370  0079  00AF               	movwf	___flmul@a+1
  5371  007A  3000               	movlw	0
  5372  007B  00AE               	movwf	___flmul@a
  5373  007C                     l2858:
  5374  007C  0838               	movf	___flmul@aexp,w
  5375  007D  1903               	btfsc	3,2
  5376  007E  2880               	goto	u3601
  5377  007F  2881               	goto	u3600
  5378  0080                     u3601:
  5379  0080  2886               	goto	l2862
  5380  0081                     u3600:
  5381  0081                     l2860:
  5382  0081  083D               	movf	___flmul@bexp,w
  5383  0082  1D03               	btfss	3,2
  5384  0083  2885               	goto	u3611
  5385  0084  2886               	goto	u3610
  5386  0085                     u3611:
  5387  0085  288F               	goto	l2866
  5388  0086                     u3610:
  5389  0086                     l2862:
  5390  0086  3000               	movlw	0
  5391  0087  00AD               	movwf	?___flmul+3
  5392  0088  3000               	movlw	0
  5393  0089  00AC               	movwf	?___flmul+2
  5394  008A  3000               	movlw	0
  5395  008B  00AB               	movwf	?___flmul+1
  5396  008C  3000               	movlw	0
  5397  008D  00AA               	movwf	?___flmul
  5398  008E  2B82               	goto	l695
  5399  008F                     l2866:
  5400  008F  082A               	movf	___flmul@b,w
  5401  0090  00B2               	movwf	??___flmul
  5402  0091  0832               	movf	??___flmul,w
  5403  0092  00F3               	movwf	__Umul8_16@multiplicand
  5404  0093  0830               	movf	___flmul@a+2,w
  5405  0094  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5406  0099  0874               	movf	?__Umul8_16+1,w
  5407  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5408  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5409  009C  00C3               	movwf	___flmul@temp+1
  5410  009D  0873               	movf	?__Umul8_16,w
  5411  009E  00C2               	movwf	___flmul@temp
  5412  009F                     l2868:
  5413  009F  0842               	movf	___flmul@temp,w
  5414  00A0  00B2               	movwf	??___flmul
  5415  00A1  01B3               	clrf	??___flmul+1
  5416  00A2  01B4               	clrf	??___flmul+2
  5417  00A3  01B5               	clrf	??___flmul+3
  5418  00A4  0835               	movf	??___flmul+3,w
  5419  00A5  00BC               	movwf	___flmul@grs+3
  5420  00A6  0834               	movf	??___flmul+2,w
  5421  00A7  00BB               	movwf	___flmul@grs+2
  5422  00A8  0833               	movf	??___flmul+1,w
  5423  00A9  00BA               	movwf	___flmul@grs+1
  5424  00AA  0832               	movf	??___flmul,w
  5425  00AB  00B9               	movwf	___flmul@grs
  5426  00AC                     l2870:
  5427  00AC  0843               	movf	___flmul@temp+1,w
  5428  00AD  00B2               	movwf	??___flmul
  5429  00AE  01B3               	clrf	??___flmul+1
  5430  00AF  01B4               	clrf	??___flmul+2
  5431  00B0  01B5               	clrf	??___flmul+3
  5432  00B1  0835               	movf	??___flmul+3,w
  5433  00B2  00C1               	movwf	___flmul@prod+3
  5434  00B3  0834               	movf	??___flmul+2,w
  5435  00B4  00C0               	movwf	___flmul@prod+2
  5436  00B5  0833               	movf	??___flmul+1,w
  5437  00B6  00BF               	movwf	___flmul@prod+1
  5438  00B7  0832               	movf	??___flmul,w
  5439  00B8  00BE               	movwf	___flmul@prod
  5440  00B9  082B               	movf	___flmul@b+1,w
  5441  00BA  00B2               	movwf	??___flmul
  5442  00BB  0832               	movf	??___flmul,w
  5443  00BC  00F3               	movwf	__Umul8_16@multiplicand
  5444  00BD  082F               	movf	___flmul@a+1,w
  5445  00BE  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5446  00C3  0874               	movf	?__Umul8_16+1,w
  5447  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5448  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5449  00C6  00C3               	movwf	___flmul@temp+1
  5450  00C7  0873               	movf	?__Umul8_16,w
  5451  00C8  00C2               	movwf	___flmul@temp
  5452  00C9                     l2872:
  5453  00C9  0842               	movf	___flmul@temp,w
  5454  00CA  00B2               	movwf	??___flmul
  5455  00CB  01B3               	clrf	??___flmul+1
  5456  00CC  01B4               	clrf	??___flmul+2
  5457  00CD  01B5               	clrf	??___flmul+3
  5458  00CE  0832               	movf	??___flmul,w
  5459  00CF  07B9               	addwf	___flmul@grs,f
  5460  00D0  0833               	movf	??___flmul+1,w
  5461  00D1  1103               	clrz
  5462  00D2  1803               	skipnc
  5463  00D3  3E01               	addlw	1
  5464  00D4  1903               	skipnz
  5465  00D5  28D7               	goto	u3621
  5466  00D6  07BA               	addwf	___flmul@grs+1,f
  5467  00D7                     u3621:
  5468  00D7  0834               	movf	??___flmul+2,w
  5469  00D8  1103               	clrz
  5470  00D9  1803               	skipnc
  5471  00DA  3E01               	addlw	1
  5472  00DB  1903               	skipnz
  5473  00DC  28DE               	goto	u3622
  5474  00DD  07BB               	addwf	___flmul@grs+2,f
  5475  00DE                     u3622:
  5476  00DE  0835               	movf	??___flmul+3,w
  5477  00DF  1103               	clrz
  5478  00E0  1803               	skipnc
  5479  00E1  3E01               	addlw	1
  5480  00E2  1903               	skipnz
  5481  00E3  28E5               	goto	u3623
  5482  00E4  07BC               	addwf	___flmul@grs+3,f
  5483  00E5                     u3623:
  5484  00E5                     l2874:
  5485  00E5  0843               	movf	___flmul@temp+1,w
  5486  00E6  00B2               	movwf	??___flmul
  5487  00E7  01B3               	clrf	??___flmul+1
  5488  00E8  01B4               	clrf	??___flmul+2
  5489  00E9  01B5               	clrf	??___flmul+3
  5490  00EA  0832               	movf	??___flmul,w
  5491  00EB  07BE               	addwf	___flmul@prod,f
  5492  00EC  0833               	movf	??___flmul+1,w
  5493  00ED  1103               	clrz
  5494  00EE  1803               	skipnc
  5495  00EF  3E01               	addlw	1
  5496  00F0  1903               	skipnz
  5497  00F1  28F3               	goto	u3631
  5498  00F2  07BF               	addwf	___flmul@prod+1,f
  5499  00F3                     u3631:
  5500  00F3  0834               	movf	??___flmul+2,w
  5501  00F4  1103               	clrz
  5502  00F5  1803               	skipnc
  5503  00F6  3E01               	addlw	1
  5504  00F7  1903               	skipnz
  5505  00F8  28FA               	goto	u3632
  5506  00F9  07C0               	addwf	___flmul@prod+2,f
  5507  00FA                     u3632:
  5508  00FA  0835               	movf	??___flmul+3,w
  5509  00FB  1103               	clrz
  5510  00FC  1803               	skipnc
  5511  00FD  3E01               	addlw	1
  5512  00FE  1903               	skipnz
  5513  00FF  2901               	goto	u3633
  5514  0100  07C1               	addwf	___flmul@prod+3,f
  5515  0101                     u3633:
  5516  0101  082C               	movf	___flmul@b+2,w
  5517  0102  00B2               	movwf	??___flmul
  5518  0103  0832               	movf	??___flmul,w
  5519  0104  00F3               	movwf	__Umul8_16@multiplicand
  5520  0105  082E               	movf	___flmul@a,w
  5521  0106  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5522  010B  0874               	movf	?__Umul8_16+1,w
  5523  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5524  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5525  010E  00C3               	movwf	___flmul@temp+1
  5526  010F  0873               	movf	?__Umul8_16,w
  5527  0110  00C2               	movwf	___flmul@temp
  5528  0111                     l2876:
  5529  0111  0842               	movf	___flmul@temp,w
  5530  0112  00B2               	movwf	??___flmul
  5531  0113  01B3               	clrf	??___flmul+1
  5532  0114  01B4               	clrf	??___flmul+2
  5533  0115  01B5               	clrf	??___flmul+3
  5534  0116  0832               	movf	??___flmul,w
  5535  0117  07B9               	addwf	___flmul@grs,f
  5536  0118  0833               	movf	??___flmul+1,w
  5537  0119  1103               	clrz
  5538  011A  1803               	skipnc
  5539  011B  3E01               	addlw	1
  5540  011C  1903               	skipnz
  5541  011D  291F               	goto	u3641
  5542  011E  07BA               	addwf	___flmul@grs+1,f
  5543  011F                     u3641:
  5544  011F  0834               	movf	??___flmul+2,w
  5545  0120  1103               	clrz
  5546  0121  1803               	skipnc
  5547  0122  3E01               	addlw	1
  5548  0123  1903               	skipnz
  5549  0124  2926               	goto	u3642
  5550  0125  07BB               	addwf	___flmul@grs+2,f
  5551  0126                     u3642:
  5552  0126  0835               	movf	??___flmul+3,w
  5553  0127  1103               	clrz
  5554  0128  1803               	skipnc
  5555  0129  3E01               	addlw	1
  5556  012A  1903               	skipnz
  5557  012B  292D               	goto	u3643
  5558  012C  07BC               	addwf	___flmul@grs+3,f
  5559  012D                     u3643:
  5560  012D                     l2878:
  5561  012D  0843               	movf	___flmul@temp+1,w
  5562  012E  00B2               	movwf	??___flmul
  5563  012F  01B3               	clrf	??___flmul+1
  5564  0130  01B4               	clrf	??___flmul+2
  5565  0131  01B5               	clrf	??___flmul+3
  5566  0132  0832               	movf	??___flmul,w
  5567  0133  07BE               	addwf	___flmul@prod,f
  5568  0134  0833               	movf	??___flmul+1,w
  5569  0135  1103               	clrz
  5570  0136  1803               	skipnc
  5571  0137  3E01               	addlw	1
  5572  0138  1903               	skipnz
  5573  0139  293B               	goto	u3651
  5574  013A  07BF               	addwf	___flmul@prod+1,f
  5575  013B                     u3651:
  5576  013B  0834               	movf	??___flmul+2,w
  5577  013C  1103               	clrz
  5578  013D  1803               	skipnc
  5579  013E  3E01               	addlw	1
  5580  013F  1903               	skipnz
  5581  0140  2942               	goto	u3652
  5582  0141  07C0               	addwf	___flmul@prod+2,f
  5583  0142                     u3652:
  5584  0142  0835               	movf	??___flmul+3,w
  5585  0143  1103               	clrz
  5586  0144  1803               	skipnc
  5587  0145  3E01               	addlw	1
  5588  0146  1903               	skipnz
  5589  0147  2949               	goto	u3653
  5590  0148  07C1               	addwf	___flmul@prod+3,f
  5591  0149                     u3653:
  5592  0149                     l2880:
  5593  0149  3008               	movlw	8
  5594  014A  00B2               	movwf	??___flmul
  5595  014B                     u3665:
  5596  014B  1003               	clrc
  5597  014C  0DB9               	rlf	___flmul@grs,f
  5598  014D  0DBA               	rlf	___flmul@grs+1,f
  5599  014E  0DBB               	rlf	___flmul@grs+2,f
  5600  014F  0DBC               	rlf	___flmul@grs+3,f
  5601  0150  0BB2               	decfsz	??___flmul,f
  5602  0151  294B               	goto	u3665
  5603  0152                     l2882:
  5604  0152  082B               	movf	___flmul@b+1,w
  5605  0153  00B2               	movwf	??___flmul
  5606  0154  0832               	movf	??___flmul,w
  5607  0155  00F3               	movwf	__Umul8_16@multiplicand
  5608  0156  082E               	movf	___flmul@a,w
  5609  0157  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5610  015C  0874               	movf	?__Umul8_16+1,w
  5611  015D  1283               	bcf	3,5	;RP0=0, select bank0
  5612  015E  1303               	bcf	3,6	;RP1=0, select bank0
  5613  015F  00C3               	movwf	___flmul@temp+1
  5614  0160  0873               	movf	?__Umul8_16,w
  5615  0161  00C2               	movwf	___flmul@temp
  5616  0162                     l2884:
  5617  0162  0842               	movf	___flmul@temp,w
  5618  0163  00B2               	movwf	??___flmul
  5619  0164  0843               	movf	___flmul@temp+1,w
  5620  0165  00B3               	movwf	??___flmul+1
  5621  0166  01B4               	clrf	??___flmul+2
  5622  0167  01B5               	clrf	??___flmul+3
  5623  0168  0832               	movf	??___flmul,w
  5624  0169  07B9               	addwf	___flmul@grs,f
  5625  016A  0833               	movf	??___flmul+1,w
  5626  016B  1103               	clrz
  5627  016C  1803               	skipnc
  5628  016D  3E01               	addlw	1
  5629  016E  1903               	skipnz
  5630  016F  2971               	goto	u3671
  5631  0170  07BA               	addwf	___flmul@grs+1,f
  5632  0171                     u3671:
  5633  0171  0834               	movf	??___flmul+2,w
  5634  0172  1103               	clrz
  5635  0173  1803               	skipnc
  5636  0174  3E01               	addlw	1
  5637  0175  1903               	skipnz
  5638  0176  2978               	goto	u3672
  5639  0177  07BB               	addwf	___flmul@grs+2,f
  5640  0178                     u3672:
  5641  0178  0835               	movf	??___flmul+3,w
  5642  0179  1103               	clrz
  5643  017A  1803               	skipnc
  5644  017B  3E01               	addlw	1
  5645  017C  1903               	skipnz
  5646  017D  297F               	goto	u3673
  5647  017E  07BC               	addwf	___flmul@grs+3,f
  5648  017F                     u3673:
  5649  017F                     l2886:
  5650  017F  082A               	movf	___flmul@b,w
  5651  0180  00B2               	movwf	??___flmul
  5652  0181  0832               	movf	??___flmul,w
  5653  0182  00F3               	movwf	__Umul8_16@multiplicand
  5654  0183  082F               	movf	___flmul@a+1,w
  5655  0184  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5656  0189  0874               	movf	?__Umul8_16+1,w
  5657  018A  1283               	bcf	3,5	;RP0=0, select bank0
  5658  018B  1303               	bcf	3,6	;RP1=0, select bank0
  5659  018C  00C3               	movwf	___flmul@temp+1
  5660  018D  0873               	movf	?__Umul8_16,w
  5661  018E  00C2               	movwf	___flmul@temp
  5662  018F                     l2888:
  5663  018F  0842               	movf	___flmul@temp,w
  5664  0190  00B2               	movwf	??___flmul
  5665  0191  0843               	movf	___flmul@temp+1,w
  5666  0192  00B3               	movwf	??___flmul+1
  5667  0193  01B4               	clrf	??___flmul+2
  5668  0194  01B5               	clrf	??___flmul+3
  5669  0195  0832               	movf	??___flmul,w
  5670  0196  07B9               	addwf	___flmul@grs,f
  5671  0197  0833               	movf	??___flmul+1,w
  5672  0198  1103               	clrz
  5673  0199  1803               	skipnc
  5674  019A  3E01               	addlw	1
  5675  019B  1903               	skipnz
  5676  019C  299E               	goto	u3681
  5677  019D  07BA               	addwf	___flmul@grs+1,f
  5678  019E                     u3681:
  5679  019E  0834               	movf	??___flmul+2,w
  5680  019F  1103               	clrz
  5681  01A0  1803               	skipnc
  5682  01A1  3E01               	addlw	1
  5683  01A2  1903               	skipnz
  5684  01A3  29A5               	goto	u3682
  5685  01A4  07BB               	addwf	___flmul@grs+2,f
  5686  01A5                     u3682:
  5687  01A5  0835               	movf	??___flmul+3,w
  5688  01A6  1103               	clrz
  5689  01A7  1803               	skipnc
  5690  01A8  3E01               	addlw	1
  5691  01A9  1903               	skipnz
  5692  01AA  29AC               	goto	u3683
  5693  01AB  07BC               	addwf	___flmul@grs+3,f
  5694  01AC                     u3683:
  5695  01AC                     l2890:
  5696  01AC  3008               	movlw	8
  5697  01AD  00B2               	movwf	??___flmul
  5698  01AE                     u3695:
  5699  01AE  1003               	clrc
  5700  01AF  0DB9               	rlf	___flmul@grs,f
  5701  01B0  0DBA               	rlf	___flmul@grs+1,f
  5702  01B1  0DBB               	rlf	___flmul@grs+2,f
  5703  01B2  0DBC               	rlf	___flmul@grs+3,f
  5704  01B3  0BB2               	decfsz	??___flmul,f
  5705  01B4  29AE               	goto	u3695
  5706  01B5  082A               	movf	___flmul@b,w
  5707  01B6  00B2               	movwf	??___flmul
  5708  01B7  0832               	movf	??___flmul,w
  5709  01B8  00F3               	movwf	__Umul8_16@multiplicand
  5710  01B9  082E               	movf	___flmul@a,w
  5711  01BA  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5712  01BF  0874               	movf	?__Umul8_16+1,w
  5713  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5714  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5715  01C2  00C3               	movwf	___flmul@temp+1
  5716  01C3  0873               	movf	?__Umul8_16,w
  5717  01C4  00C2               	movwf	___flmul@temp
  5718  01C5                     l2892:
  5719  01C5  0842               	movf	___flmul@temp,w
  5720  01C6  00B2               	movwf	??___flmul
  5721  01C7  0843               	movf	___flmul@temp+1,w
  5722  01C8  00B3               	movwf	??___flmul+1
  5723  01C9  01B4               	clrf	??___flmul+2
  5724  01CA  01B5               	clrf	??___flmul+3
  5725  01CB  0832               	movf	??___flmul,w
  5726  01CC  07B9               	addwf	___flmul@grs,f
  5727  01CD  0833               	movf	??___flmul+1,w
  5728  01CE  1103               	clrz
  5729  01CF  1803               	skipnc
  5730  01D0  3E01               	addlw	1
  5731  01D1  1903               	skipnz
  5732  01D2  29D4               	goto	u3701
  5733  01D3  07BA               	addwf	___flmul@grs+1,f
  5734  01D4                     u3701:
  5735  01D4  0834               	movf	??___flmul+2,w
  5736  01D5  1103               	clrz
  5737  01D6  1803               	skipnc
  5738  01D7  3E01               	addlw	1
  5739  01D8  1903               	skipnz
  5740  01D9  29DB               	goto	u3702
  5741  01DA  07BB               	addwf	___flmul@grs+2,f
  5742  01DB                     u3702:
  5743  01DB  0835               	movf	??___flmul+3,w
  5744  01DC  1103               	clrz
  5745  01DD  1803               	skipnc
  5746  01DE  3E01               	addlw	1
  5747  01DF  1903               	skipnz
  5748  01E0  29E2               	goto	u3703
  5749  01E1  07BC               	addwf	___flmul@grs+3,f
  5750  01E2                     u3703:
  5751  01E2                     l2894:
  5752  01E2  082B               	movf	___flmul@b+1,w
  5753  01E3  00B2               	movwf	??___flmul
  5754  01E4  0832               	movf	??___flmul,w
  5755  01E5  00F3               	movwf	__Umul8_16@multiplicand
  5756  01E6  0830               	movf	___flmul@a+2,w
  5757  01E7  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5758  01EC  0874               	movf	?__Umul8_16+1,w
  5759  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5760  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5761  01EF  00C3               	movwf	___flmul@temp+1
  5762  01F0  0873               	movf	?__Umul8_16,w
  5763  01F1  00C2               	movwf	___flmul@temp
  5764  01F2  0842               	movf	___flmul@temp,w
  5765  01F3  00B2               	movwf	??___flmul
  5766  01F4  0843               	movf	___flmul@temp+1,w
  5767  01F5  00B3               	movwf	??___flmul+1
  5768  01F6  01B4               	clrf	??___flmul+2
  5769  01F7  01B5               	clrf	??___flmul+3
  5770  01F8  0832               	movf	??___flmul,w
  5771  01F9  07BE               	addwf	___flmul@prod,f
  5772  01FA  0833               	movf	??___flmul+1,w
  5773  01FB  1103               	clrz
  5774  01FC  1803               	skipnc
  5775  01FD  3E01               	addlw	1
  5776  01FE  1903               	skipnz
  5777  01FF  2A01               	goto	u3711
  5778  0200  07BF               	addwf	___flmul@prod+1,f
  5779  0201                     u3711:
  5780  0201  0834               	movf	??___flmul+2,w
  5781  0202  1103               	clrz
  5782  0203  1803               	skipnc
  5783  0204  3E01               	addlw	1
  5784  0205  1903               	skipnz
  5785  0206  2A08               	goto	u3712
  5786  0207  07C0               	addwf	___flmul@prod+2,f
  5787  0208                     u3712:
  5788  0208  0835               	movf	??___flmul+3,w
  5789  0209  1103               	clrz
  5790  020A  1803               	skipnc
  5791  020B  3E01               	addlw	1
  5792  020C  1903               	skipnz
  5793  020D  2A0F               	goto	u3713
  5794  020E  07C1               	addwf	___flmul@prod+3,f
  5795  020F                     u3713:
  5796  020F                     l2896:
  5797  020F  082C               	movf	___flmul@b+2,w
  5798  0210  00B2               	movwf	??___flmul
  5799  0211  0832               	movf	??___flmul,w
  5800  0212  00F3               	movwf	__Umul8_16@multiplicand
  5801  0213  082F               	movf	___flmul@a+1,w
  5802  0214  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5803  0219  0874               	movf	?__Umul8_16+1,w
  5804  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5805  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5806  021C  00C3               	movwf	___flmul@temp+1
  5807  021D  0873               	movf	?__Umul8_16,w
  5808  021E  00C2               	movwf	___flmul@temp
  5809  021F                     l2898:
  5810  021F  0842               	movf	___flmul@temp,w
  5811  0220  00B2               	movwf	??___flmul
  5812  0221  0843               	movf	___flmul@temp+1,w
  5813  0222  00B3               	movwf	??___flmul+1
  5814  0223  01B4               	clrf	??___flmul+2
  5815  0224  01B5               	clrf	??___flmul+3
  5816  0225  0832               	movf	??___flmul,w
  5817  0226  07BE               	addwf	___flmul@prod,f
  5818  0227  0833               	movf	??___flmul+1,w
  5819  0228  1103               	clrz
  5820  0229  1803               	skipnc
  5821  022A  3E01               	addlw	1
  5822  022B  1903               	skipnz
  5823  022C  2A2E               	goto	u3721
  5824  022D  07BF               	addwf	___flmul@prod+1,f
  5825  022E                     u3721:
  5826  022E  0834               	movf	??___flmul+2,w
  5827  022F  1103               	clrz
  5828  0230  1803               	skipnc
  5829  0231  3E01               	addlw	1
  5830  0232  1903               	skipnz
  5831  0233  2A35               	goto	u3722
  5832  0234  07C0               	addwf	___flmul@prod+2,f
  5833  0235                     u3722:
  5834  0235  0835               	movf	??___flmul+3,w
  5835  0236  1103               	clrz
  5836  0237  1803               	skipnc
  5837  0238  3E01               	addlw	1
  5838  0239  1903               	skipnz
  5839  023A  2A3C               	goto	u3723
  5840  023B  07C1               	addwf	___flmul@prod+3,f
  5841  023C                     u3723:
  5842  023C  082C               	movf	___flmul@b+2,w
  5843  023D  00B2               	movwf	??___flmul
  5844  023E  0832               	movf	??___flmul,w
  5845  023F  00F3               	movwf	__Umul8_16@multiplicand
  5846  0240  0830               	movf	___flmul@a+2,w
  5847  0241  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5848  0246  0874               	movf	?__Umul8_16+1,w
  5849  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0248  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0249  00C3               	movwf	___flmul@temp+1
  5852  024A  0873               	movf	?__Umul8_16,w
  5853  024B  00C2               	movwf	___flmul@temp
  5854  024C                     l2900:
  5855  024C  0842               	movf	___flmul@temp,w
  5856  024D  00B2               	movwf	??___flmul
  5857  024E  0843               	movf	___flmul@temp+1,w
  5858  024F  00B3               	movwf	??___flmul+1
  5859  0250  01B4               	clrf	??___flmul+2
  5860  0251  01B5               	clrf	??___flmul+3
  5861  0252  3008               	movlw	8
  5862  0253                     u3735:
  5863  0253  1003               	clrc
  5864  0254  0DB2               	rlf	??___flmul,f
  5865  0255  0DB3               	rlf	??___flmul+1,f
  5866  0256  0DB4               	rlf	??___flmul+2,f
  5867  0257  0DB5               	rlf	??___flmul+3,f
  5868  0258                     u3730:
  5869  0258  3EFF               	addlw	-1
  5870  0259  1D03               	skipz
  5871  025A  2A53               	goto	u3735
  5872  025B  0832               	movf	??___flmul,w
  5873  025C  07BE               	addwf	___flmul@prod,f
  5874  025D  0833               	movf	??___flmul+1,w
  5875  025E  1103               	clrz
  5876  025F  1803               	skipnc
  5877  0260  3E01               	addlw	1
  5878  0261  1903               	skipnz
  5879  0262  2A64               	goto	u3741
  5880  0263  07BF               	addwf	___flmul@prod+1,f
  5881  0264                     u3741:
  5882  0264  0834               	movf	??___flmul+2,w
  5883  0265  1103               	clrz
  5884  0266  1803               	skipnc
  5885  0267  3E01               	addlw	1
  5886  0268  1903               	skipnz
  5887  0269  2A6B               	goto	u3742
  5888  026A  07C0               	addwf	___flmul@prod+2,f
  5889  026B                     u3742:
  5890  026B  0835               	movf	??___flmul+3,w
  5891  026C  1103               	clrz
  5892  026D  1803               	skipnc
  5893  026E  3E01               	addlw	1
  5894  026F  1903               	skipnz
  5895  0270  2A72               	goto	u3743
  5896  0271  07C1               	addwf	___flmul@prod+3,f
  5897  0272                     u3743:
  5898  0272                     l2902:
  5899  0272  0839               	movf	___flmul@grs,w
  5900  0273  00B2               	movwf	??___flmul
  5901  0274  083A               	movf	___flmul@grs+1,w
  5902  0275  00B3               	movwf	??___flmul+1
  5903  0276  083B               	movf	___flmul@grs+2,w
  5904  0277  00B4               	movwf	??___flmul+2
  5905  0278  083C               	movf	___flmul@grs+3,w
  5906  0279  00B5               	movwf	??___flmul+3
  5907  027A  3018               	movlw	24
  5908  027B                     u3755:
  5909  027B  1003               	clrc
  5910  027C  0CB5               	rrf	??___flmul+3,f
  5911  027D  0CB4               	rrf	??___flmul+2,f
  5912  027E  0CB3               	rrf	??___flmul+1,f
  5913  027F  0CB2               	rrf	??___flmul,f
  5914  0280                     u3750:
  5915  0280  3EFF               	addlw	-1
  5916  0281  1D03               	skipz
  5917  0282  2A7B               	goto	u3755
  5918  0283  0832               	movf	??___flmul,w
  5919  0284  07BE               	addwf	___flmul@prod,f
  5920  0285  0833               	movf	??___flmul+1,w
  5921  0286  1103               	clrz
  5922  0287  1803               	skipnc
  5923  0288  3E01               	addlw	1
  5924  0289  1903               	skipnz
  5925  028A  2A8C               	goto	u3761
  5926  028B  07BF               	addwf	___flmul@prod+1,f
  5927  028C                     u3761:
  5928  028C  0834               	movf	??___flmul+2,w
  5929  028D  1103               	clrz
  5930  028E  1803               	skipnc
  5931  028F  3E01               	addlw	1
  5932  0290  1903               	skipnz
  5933  0291  2A93               	goto	u3762
  5934  0292  07C0               	addwf	___flmul@prod+2,f
  5935  0293                     u3762:
  5936  0293  0835               	movf	??___flmul+3,w
  5937  0294  1103               	clrz
  5938  0295  1803               	skipnc
  5939  0296  3E01               	addlw	1
  5940  0297  1903               	skipnz
  5941  0298  2A9A               	goto	u3763
  5942  0299  07C1               	addwf	___flmul@prod+3,f
  5943  029A                     u3763:
  5944  029A                     l2904:
  5945  029A  3008               	movlw	8
  5946  029B  00B2               	movwf	??___flmul
  5947  029C                     u3775:
  5948  029C  1003               	clrc
  5949  029D  0DB9               	rlf	___flmul@grs,f
  5950  029E  0DBA               	rlf	___flmul@grs+1,f
  5951  029F  0DBB               	rlf	___flmul@grs+2,f
  5952  02A0  0DBC               	rlf	___flmul@grs+3,f
  5953  02A1  0BB2               	decfsz	??___flmul,f
  5954  02A2  2A9C               	goto	u3775
  5955  02A3                     l2906:
  5956  02A3  083D               	movf	___flmul@bexp,w
  5957  02A4  0738               	addwf	___flmul@aexp,w
  5958  02A5  00B2               	movwf	??___flmul
  5959  02A6  01B3               	clrf	??___flmul+1
  5960  02A7  0DB3               	rlf	??___flmul+1,f
  5961  02A8  0832               	movf	??___flmul,w
  5962  02A9  3E82               	addlw	130
  5963  02AA  00C2               	movwf	___flmul@temp
  5964  02AB  0833               	movf	??___flmul+1,w
  5965  02AC  1803               	skipnc
  5966  02AD  3E01               	addlw	1
  5967  02AE  3EFF               	addlw	255
  5968  02AF  00C3               	movwf	___flmul@temp+1
  5969  02B0  2ACE               	goto	l2918
  5970  02B1                     l2908:
  5971  02B1  3001               	movlw	1
  5972  02B2  00B2               	movwf	??___flmul
  5973  02B3                     u3785:
  5974  02B3  1003               	clrc
  5975  02B4  0DBE               	rlf	___flmul@prod,f
  5976  02B5  0DBF               	rlf	___flmul@prod+1,f
  5977  02B6  0DC0               	rlf	___flmul@prod+2,f
  5978  02B7  0DC1               	rlf	___flmul@prod+3,f
  5979  02B8  0BB2               	decfsz	??___flmul,f
  5980  02B9  2AB3               	goto	u3785
  5981  02BA                     l2910:
  5982  02BA  1FBC               	btfss	___flmul@grs+3,7
  5983  02BB  2ABD               	goto	u3791
  5984  02BC  2ABE               	goto	u3790
  5985  02BD                     u3791:
  5986  02BD  2ABF               	goto	l2914
  5987  02BE                     u3790:
  5988  02BE                     l2912:
  5989  02BE  143E               	bsf	___flmul@prod,0
  5990  02BF                     l2914:
  5991  02BF  3001               	movlw	1
  5992  02C0  00B2               	movwf	??___flmul
  5993  02C1                     u3805:
  5994  02C1  1003               	clrc
  5995  02C2  0DB9               	rlf	___flmul@grs,f
  5996  02C3  0DBA               	rlf	___flmul@grs+1,f
  5997  02C4  0DBB               	rlf	___flmul@grs+2,f
  5998  02C5  0DBC               	rlf	___flmul@grs+3,f
  5999  02C6  0BB2               	decfsz	??___flmul,f
  6000  02C7  2AC1               	goto	u3805
  6001  02C8                     l2916:
  6002  02C8  30FF               	movlw	255
  6003  02C9  07C2               	addwf	___flmul@temp,f
  6004  02CA  1803               	skipnc
  6005  02CB  0AC3               	incf	___flmul@temp+1,f
  6006  02CC  30FF               	movlw	255
  6007  02CD  07C3               	addwf	___flmul@temp+1,f
  6008  02CE                     l2918:
  6009  02CE  1FC0               	btfss	___flmul@prod+2,7
  6010  02CF  2AD1               	goto	u3811
  6011  02D0  2AD2               	goto	u3810
  6012  02D1                     u3811:
  6013  02D1  2AB1               	goto	l2908
  6014  02D2                     u3810:
  6015  02D2                     l2920:
  6016  02D2  01B8               	clrf	___flmul@aexp
  6017  02D3                     l2922:
  6018  02D3  1FBC               	btfss	___flmul@grs+3,7
  6019  02D4  2AD6               	goto	u3821
  6020  02D5  2AD7               	goto	u3820
  6021  02D6                     u3821:
  6022  02D6  2AF3               	goto	l2930
  6023  02D7                     u3820:
  6024  02D7                     l2924:
  6025  02D7  30FF               	movlw	255
  6026  02D8  0539               	andwf	___flmul@grs,w
  6027  02D9  00B2               	movwf	??___flmul
  6028  02DA  30FF               	movlw	255
  6029  02DB  053A               	andwf	___flmul@grs+1,w
  6030  02DC  00B3               	movwf	??___flmul+1
  6031  02DD  30FF               	movlw	255
  6032  02DE  053B               	andwf	___flmul@grs+2,w
  6033  02DF  00B4               	movwf	??___flmul+2
  6034  02E0  307F               	movlw	127
  6035  02E1  053C               	andwf	___flmul@grs+3,w
  6036  02E2  00B5               	movwf	??___flmul+3
  6037  02E3  0835               	movf	??___flmul+3,w
  6038  02E4  0434               	iorwf	??___flmul+2,w
  6039  02E5  0433               	iorwf	??___flmul+1,w
  6040  02E6  0432               	iorwf	??___flmul,w
  6041  02E7  1903               	skipnz
  6042  02E8  2AEA               	goto	u3831
  6043  02E9  2AEB               	goto	u3830
  6044  02EA                     u3831:
  6045  02EA  2AEE               	goto	l701
  6046  02EB                     u3830:
  6047  02EB                     l2926:
  6048  02EB  01B8               	clrf	___flmul@aexp
  6049  02EC  0AB8               	incf	___flmul@aexp,f
  6050  02ED  2AF3               	goto	l2930
  6051  02EE                     l701:
  6052  02EE  1C3E               	btfss	___flmul@prod,0
  6053  02EF  2AF1               	goto	u3841
  6054  02F0  2AF2               	goto	u3840
  6055  02F1                     u3841:
  6056  02F1  2AF3               	goto	l2930
  6057  02F2                     u3840:
  6058  02F2  2AEB               	goto	l2926
  6059  02F3                     l2930:
  6060  02F3  0838               	movf	___flmul@aexp,w
  6061  02F4  1903               	btfsc	3,2
  6062  02F5  2AF7               	goto	u3851
  6063  02F6  2AF8               	goto	u3850
  6064  02F7                     u3851:
  6065  02F7  2B29               	goto	l2940
  6066  02F8                     u3850:
  6067  02F8                     l2932:
  6068  02F8  3001               	movlw	1
  6069  02F9  07BE               	addwf	___flmul@prod,f
  6070  02FA  3000               	movlw	0
  6071  02FB  1803               	skipnc
  6072  02FC  3001               	movlw	1
  6073  02FD  07BF               	addwf	___flmul@prod+1,f
  6074  02FE  3000               	movlw	0
  6075  02FF  1803               	skipnc
  6076  0300  3001               	movlw	1
  6077  0301  07C0               	addwf	___flmul@prod+2,f
  6078  0302  3000               	movlw	0
  6079  0303  1803               	skipnc
  6080  0304  3001               	movlw	1
  6081  0305  07C1               	addwf	___flmul@prod+3,f
  6082  0306                     l2934:
  6083  0306  1C41               	btfss	___flmul@prod+3,0
  6084  0307  2B09               	goto	u3861
  6085  0308  2B0A               	goto	u3860
  6086  0309                     u3861:
  6087  0309  2B29               	goto	l2940
  6088  030A                     u3860:
  6089  030A                     l2936:
  6090  030A  083E               	movf	___flmul@prod,w
  6091  030B  00B2               	movwf	??___flmul
  6092  030C  083F               	movf	___flmul@prod+1,w
  6093  030D  00B3               	movwf	??___flmul+1
  6094  030E  0840               	movf	___flmul@prod+2,w
  6095  030F  00B4               	movwf	??___flmul+2
  6096  0310  0841               	movf	___flmul@prod+3,w
  6097  0311  00B5               	movwf	??___flmul+3
  6098  0312  3001               	movlw	1
  6099  0313  00B6               	movwf	??___flmul+4
  6100  0314                     u3875:
  6101  0314  0D35               	rlf	??___flmul+3,w
  6102  0315  0CB5               	rrf	??___flmul+3,f
  6103  0316  0CB4               	rrf	??___flmul+2,f
  6104  0317  0CB3               	rrf	??___flmul+1,f
  6105  0318  0CB2               	rrf	??___flmul,f
  6106  0319                     u3870:
  6107  0319  0BB6               	decfsz	??___flmul+4,f
  6108  031A  2B14               	goto	u3875
  6109  031B  0835               	movf	??___flmul+3,w
  6110  031C  00C1               	movwf	___flmul@prod+3
  6111  031D  0834               	movf	??___flmul+2,w
  6112  031E  00C0               	movwf	___flmul@prod+2
  6113  031F  0833               	movf	??___flmul+1,w
  6114  0320  00BF               	movwf	___flmul@prod+1
  6115  0321  0832               	movf	??___flmul,w
  6116  0322  00BE               	movwf	___flmul@prod
  6117  0323                     l2938:
  6118  0323  3001               	movlw	1
  6119  0324  07C2               	addwf	___flmul@temp,f
  6120  0325  1803               	skipnc
  6121  0326  0AC3               	incf	___flmul@temp+1,f
  6122  0327  3000               	movlw	0
  6123  0328  07C3               	addwf	___flmul@temp+1,f
  6124  0329                     l2940:
  6125  0329  0843               	movf	___flmul@temp+1,w
  6126  032A  3A80               	xorlw	128
  6127  032B  00FF               	movwf	btemp+1
  6128  032C  3080               	movlw	128
  6129  032D  027F               	subwf	btemp+1,w
  6130  032E  1D03               	skipz
  6131  032F  2B32               	goto	u3885
  6132  0330  30FF               	movlw	255
  6133  0331  0242               	subwf	___flmul@temp,w
  6134  0332                     u3885:
  6135  0332  1C03               	skipc
  6136  0333  2B35               	goto	u3881
  6137  0334  2B36               	goto	u3880
  6138  0335                     u3881:
  6139  0335  2B41               	goto	l2944
  6140  0336                     u3880:
  6141  0336                     l2942:
  6142  0336  307F               	movlw	127
  6143  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0339  00C1               	movwf	___flmul@prod+3
  6146  033A  3080               	movlw	128
  6147  033B  00C0               	movwf	___flmul@prod+2
  6148  033C  3000               	movlw	0
  6149  033D  00BF               	movwf	___flmul@prod+1
  6150  033E  3000               	movlw	0
  6151  033F  00BE               	movwf	___flmul@prod
  6152  0340  2B76               	goto	l707
  6153  0341                     l2944:
  6154  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0343  0843               	movf	___flmul@temp+1,w
  6157  0344  3A80               	xorlw	128
  6158  0345  00FF               	movwf	btemp+1
  6159  0346  3080               	movlw	128
  6160  0347  027F               	subwf	btemp+1,w
  6161  0348  1D03               	skipz
  6162  0349  2B4C               	goto	u3895
  6163  034A  3001               	movlw	1
  6164  034B  0242               	subwf	___flmul@temp,w
  6165  034C                     u3895:
  6166  034C  1803               	skipnc
  6167  034D  2B4F               	goto	u3891
  6168  034E  2B50               	goto	u3890
  6169  034F                     u3891:
  6170  034F  2B5C               	goto	l2950
  6171  0350                     u3890:
  6172  0350                     l2946:
  6173  0350  3000               	movlw	0
  6174  0351  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0352  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0353  00C1               	movwf	___flmul@prod+3
  6177  0354  3000               	movlw	0
  6178  0355  00C0               	movwf	___flmul@prod+2
  6179  0356  3000               	movlw	0
  6180  0357  00BF               	movwf	___flmul@prod+1
  6181  0358  3000               	movlw	0
  6182  0359  00BE               	movwf	___flmul@prod
  6183  035A                     l2948:
  6184  035A  01B7               	clrf	___flmul@sign
  6185  035B  2B76               	goto	l707
  6186  035C                     l2950:
  6187  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6188  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6189  035E  0842               	movf	___flmul@temp,w
  6190  035F  00B2               	movwf	??___flmul
  6191  0360  0832               	movf	??___flmul,w
  6192  0361  00BD               	movwf	___flmul@bexp
  6193  0362  30FF               	movlw	255
  6194  0363  05BE               	andwf	___flmul@prod,f
  6195  0364  30FF               	movlw	255
  6196  0365  05BF               	andwf	___flmul@prod+1,f
  6197  0366  307F               	movlw	127
  6198  0367  05C0               	andwf	___flmul@prod+2,f
  6199  0368  3000               	movlw	0
  6200  0369  05C1               	andwf	___flmul@prod+3,f
  6201  036A                     l2952:
  6202  036A  1C3D               	btfss	___flmul@bexp,0
  6203  036B  2B6D               	goto	u3901
  6204  036C  2B6E               	goto	u3900
  6205  036D                     u3901:
  6206  036D  2B6F               	goto	l2956
  6207  036E                     u3900:
  6208  036E                     l2954:
  6209  036E  17C0               	bsf	___flmul@prod+2,7
  6210  036F                     l2956:
  6211  036F  083D               	movf	___flmul@bexp,w
  6212  0370  00B2               	movwf	??___flmul
  6213  0371  1003               	clrc
  6214  0372  0C32               	rrf	??___flmul,w
  6215  0373  00B3               	movwf	??___flmul+1
  6216  0374  0833               	movf	??___flmul+1,w
  6217  0375  00C1               	movwf	___flmul@prod+3
  6218  0376                     l707:
  6219  0376  0837               	movf	___flmul@sign,w
  6220  0377  00B2               	movwf	??___flmul
  6221  0378  0832               	movf	??___flmul,w
  6222  0379  04C1               	iorwf	___flmul@prod+3,f
  6223  037A                     l2958:
  6224  037A  0841               	movf	___flmul@prod+3,w
  6225  037B  00AD               	movwf	?___flmul+3
  6226  037C  0840               	movf	___flmul@prod+2,w
  6227  037D  00AC               	movwf	?___flmul+2
  6228  037E  083F               	movf	___flmul@prod+1,w
  6229  037F  00AB               	movwf	?___flmul+1
  6230  0380  083E               	movf	___flmul@prod,w
  6231  0381  00AA               	movwf	?___flmul
  6232  0382                     l695:
  6233  0382  0008               	return
  6234  0383                     __end_of___flmul:
  6235                           
  6236                           	psect	text25
  6237  0B22                     __ptext25:	
  6238 ;; *************** function __Umul8_16 *****************
  6239 ;; Defined at:
  6240 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  multiplier      1    wreg     unsigned char 
  6243 ;;  multiplicand    1    3[COMMON] unsigned char 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6246 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6247 ;;  product         2    0[BANK0 ] unsigned int 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  2    3[COMMON] unsigned int 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6257 ;;      Params:         2       0       0       0       0
  6258 ;;      Locals:         0       5       0       0       0
  6259 ;;      Temps:          2       0       0       0       0
  6260 ;;      Totals:         4       5       0       0       0
  6261 ;;Total ram usage:        9 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		___flmul
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function __Umul8_16
  6273  0B22                     __Umul8_16:
  6274                           
  6275                           ;incstack = 0
  6276                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6277                           ;__Umul8_16@multiplier stored from wreg
  6278  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  6279  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  6280  0B24  00A4               	movwf	__Umul8_16@multiplier
  6281  0B25                     l2736:
  6282  0B25  01A0               	clrf	__Umul8_16@product
  6283  0B26  01A1               	clrf	__Umul8_16@product+1
  6284  0B27                     l2738:
  6285  0B27  0873               	movf	__Umul8_16@multiplicand,w
  6286  0B28  00F5               	movwf	??__Umul8_16
  6287  0B29  01F6               	clrf	??__Umul8_16+1
  6288  0B2A  0875               	movf	??__Umul8_16,w
  6289  0B2B  00A2               	movwf	__Umul8_16@word_mpld
  6290  0B2C  0876               	movf	??__Umul8_16+1,w
  6291  0B2D  00A3               	movwf	__Umul8_16@word_mpld+1
  6292  0B2E                     l2740:
  6293  0B2E  1C24               	btfss	__Umul8_16@multiplier,0
  6294  0B2F  2B31               	goto	u3381
  6295  0B30  2B32               	goto	u3380
  6296  0B31                     u3381:
  6297  0B31  2B38               	goto	l714
  6298  0B32                     u3380:
  6299  0B32                     l2742:
  6300  0B32  0822               	movf	__Umul8_16@word_mpld,w
  6301  0B33  07A0               	addwf	__Umul8_16@product,f
  6302  0B34  1803               	skipnc
  6303  0B35  0AA1               	incf	__Umul8_16@product+1,f
  6304  0B36  0823               	movf	__Umul8_16@word_mpld+1,w
  6305  0B37  07A1               	addwf	__Umul8_16@product+1,f
  6306  0B38                     l714:
  6307  0B38  3001               	movlw	1
  6308  0B39                     u3395:
  6309  0B39  1003               	clrc
  6310  0B3A  0DA2               	rlf	__Umul8_16@word_mpld,f
  6311  0B3B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6312  0B3C  3EFF               	addlw	-1
  6313  0B3D  1D03               	skipz
  6314  0B3E  2B39               	goto	u3395
  6315  0B3F  1003               	clrc
  6316  0B40  0CA4               	rrf	__Umul8_16@multiplier,f
  6317  0B41                     l2744:
  6318  0B41  0824               	movf	__Umul8_16@multiplier,w
  6319  0B42  1D03               	btfss	3,2
  6320  0B43  2B45               	goto	u3401
  6321  0B44  2B46               	goto	u3400
  6322  0B45                     u3401:
  6323  0B45  2B2E               	goto	l2740
  6324  0B46                     u3400:
  6325  0B46                     l2746:
  6326  0B46  0821               	movf	__Umul8_16@product+1,w
  6327  0B47  00F4               	movwf	?__Umul8_16+1
  6328  0B48  0820               	movf	__Umul8_16@product,w
  6329  0B49  00F3               	movwf	?__Umul8_16
  6330  0B4A                     l716:
  6331  0B4A  0008               	return
  6332  0B4B                     __end_of__Umul8_16:
  6333                           
  6334                           	psect	text26
  6335  0CF9                     __ptext26:	
  6336 ;; *************** function _interrupcion *****************
  6337 ;; Defined at:
  6338 ;;		line 53 in file "main.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6352 ;;      Params:         0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0
  6354 ;;      Temps:          3       0       0       0       0
  6355 ;;      Totals:         3       0       0       0       0
  6356 ;;Total ram usage:        3 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		Interrupt level 1
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function _interrupcion
  6367  0CF9                     _interrupcion:
  6368  0CF9                     i1l2368:
  6369                           
  6370                           ;main.c: 55:     if(PIR1bits.RCIF){
  6371  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6372  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6373  0CFB  1E8C               	btfss	12,5	;volatile
  6374  0CFC  2CFE               	goto	u271_21
  6375  0CFD  2CFF               	goto	u271_20
  6376  0CFE                     u271_21:
  6377  0CFE  2D16               	goto	i1l2380
  6378  0CFF                     u271_20:
  6379  0CFF                     i1l2370:
  6380                           
  6381                           ;main.c: 56:         UARTdat = RCREG;
  6382  0CFF  081A               	movf	26,w	;volatile
  6383  0D00  00F0               	movwf	??_interrupcion
  6384  0D01  0870               	movf	??_interrupcion,w
  6385  0D02  00FA               	movwf	_UARTdat
  6386  0D03                     i1l2372:
  6387                           
  6388                           ;main.c: 57:         if(UARTdat == '+')UARTval++;
  6389  0D03  302B               	movlw	43
  6390  0D04  067A               	xorwf	_UARTdat,w
  6391  0D05  1D03               	btfss	3,2
  6392  0D06  2D08               	goto	u272_21
  6393  0D07  2D09               	goto	u272_20
  6394  0D08                     u272_21:
  6395  0D08  2D0D               	goto	i1l92
  6396  0D09                     u272_20:
  6397  0D09                     i1l2374:
  6398  0D09  3001               	movlw	1
  6399  0D0A  00F0               	movwf	??_interrupcion
  6400  0D0B  0870               	movf	??_interrupcion,w
  6401  0D0C  07EC               	addwf	_UARTval,f
  6402  0D0D                     i1l92:
  6403                           
  6404                           ;main.c: 58:         if(UARTdat == '-')UARTval--;
  6405  0D0D  302D               	movlw	45
  6406  0D0E  067A               	xorwf	_UARTdat,w
  6407  0D0F  1D03               	btfss	3,2
  6408  0D10  2D12               	goto	u273_21
  6409  0D11  2D13               	goto	u273_20
  6410  0D12                     u273_21:
  6411  0D12  2D15               	goto	i1l2378
  6412  0D13                     u273_20:
  6413  0D13                     i1l2376:
  6414  0D13  3001               	movlw	1
  6415  0D14  02EC               	subwf	_UARTval,f
  6416  0D15                     i1l2378:
  6417                           
  6418                           ;main.c: 59:         PIR1bits.RCIF = 0;
  6419  0D15  128C               	bcf	12,5	;volatile
  6420  0D16                     i1l2380:
  6421                           
  6422                           ;main.c: 62:     if(PIR1bits.ADIF){
  6423  0D16  1F0C               	btfss	12,6	;volatile
  6424  0D17  2D19               	goto	u274_21
  6425  0D18  2D1A               	goto	u274_20
  6426  0D19                     u274_21:
  6427  0D19  2D35               	goto	i1l2392
  6428  0D1A                     u274_20:
  6429  0D1A                     i1l2382:
  6430                           
  6431                           ;main.c: 63:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  6432  0D1A  1003               	clrc
  6433  0D1B  1D1F               	btfss	31,2	;volatile
  6434  0D1C  1403               	setc
  6435  0D1D  1803               	btfsc	3,0
  6436  0D1E  2D20               	goto	u275_21
  6437  0D1F  2D24               	goto	u275_20
  6438  0D20                     u275_21:
  6439  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  6441  0D22  151F               	bsf	31,2	;volatile
  6442  0D23  2D27               	goto	u276_24
  6443  0D24                     u275_20:
  6444  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6445  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6446  0D26  111F               	bcf	31,2	;volatile
  6447  0D27                     u276_24:
  6448  0D27                     i1l2384:
  6449                           
  6450                           ;main.c: 64:         PIR1bits.ADIF = 0;
  6451  0D27  130C               	bcf	12,6	;volatile
  6452  0D28                     i1l2386:
  6453                           
  6454                           ;main.c: 65:         if(ADCON0bits.CHS0)pot1 = ADRESH;
  6455  0D28  1D1F               	btfss	31,2	;volatile
  6456  0D29  2D2B               	goto	u277_21
  6457  0D2A  2D2C               	goto	u277_20
  6458  0D2B                     u277_21:
  6459  0D2B  2D31               	goto	i1l2390
  6460  0D2C                     u277_20:
  6461  0D2C                     i1l2388:
  6462  0D2C  081E               	movf	30,w	;volatile
  6463  0D2D  00F0               	movwf	??_interrupcion
  6464  0D2E  0870               	movf	??_interrupcion,w
  6465  0D2F  00EE               	movwf	_pot1
  6466  0D30  2D35               	goto	i1l2392
  6467  0D31                     i1l2390:
  6468  0D31  081E               	movf	30,w	;volatile
  6469  0D32  00F0               	movwf	??_interrupcion
  6470  0D33  0870               	movf	??_interrupcion,w
  6471  0D34  00ED               	movwf	_pot2
  6472  0D35                     i1l2392:
  6473                           
  6474                           ;main.c: 69:     if(INTCONbits.T0IF){
  6475  0D35  1D0B               	btfss	11,2	;volatile
  6476  0D36  2D38               	goto	u278_21
  6477  0D37  2D39               	goto	u278_20
  6478  0D38                     u278_21:
  6479  0D38  2D3F               	goto	i1l99
  6480  0D39                     u278_20:
  6481  0D39                     i1l2394:
  6482                           
  6483                           ;main.c: 70:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  6484  0D39  189F               	btfsc	31,1	;volatile
  6485  0D3A  2D3C               	goto	u279_21
  6486  0D3B  2D3D               	goto	u279_20
  6487  0D3C                     u279_21:
  6488  0D3C  2D3E               	goto	i1l98
  6489  0D3D                     u279_20:
  6490  0D3D                     i1l2396:
  6491  0D3D  149F               	bsf	31,1	;volatile
  6492  0D3E                     i1l98:
  6493                           
  6494                           ;main.c: 71:         INTCONbits.T0IF = 0;
  6495  0D3E  110B               	bcf	11,2	;volatile
  6496  0D3F                     i1l99:
  6497  0D3F  0872               	movf	??_interrupcion+2,w
  6498  0D40  008A               	movwf	10
  6499  0D41  0E71               	swapf	??_interrupcion+1,w
  6500  0D42  0083               	movwf	3
  6501  0D43  0EFE               	swapf	btemp,f
  6502  0D44  0E7E               	swapf	btemp,w
  6503  0D45  0009               	retfie
  6504  0D46                     __end_of_interrupcion:
  6505  007E                     btemp	set	126	;btemp
  6506  007E                     wtemp0	set	126
  6507                           
  6508                           	psect	intentry
  6509  0004                     __pintentry:	
  6510                           ;incstack = 0
  6511                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  6512                           
  6513  0004                     interrupt_function:
  6514  007E                     saved_w	set	btemp
  6515  0004  00FE               	movwf	btemp
  6516  0005  0E03               	swapf	3,w
  6517  0006  00F1               	movwf	??_interrupcion+1
  6518  0007  080A               	movf	10,w
  6519  0008  00F2               	movwf	??_interrupcion+2
  6520  0009  120A  158A  2CF9   	ljmp	_interrupcion
  6521                           
  6522                           	psect	config
  6523                           
  6524                           ;Config register CONFIG1 @ 0x2007
  6525                           ;	Oscillator Selection bits
  6526                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6527                           ;	Watchdog Timer Enable bit
  6528                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6529                           ;	Power-up Timer Enable bit
  6530                           ;	PWRTE = OFF, PWRT disabled
  6531                           ;	RE3/MCLR pin function select bit
  6532                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6533                           ;	Code Protection bit
  6534                           ;	CP = OFF, Program memory code protection is disabled
  6535                           ;	Data Code Protection bit
  6536                           ;	CPD = OFF, Data memory code protection is disabled
  6537                           ;	Brown Out Reset Selection bits
  6538                           ;	BOREN = OFF, BOR disabled
  6539                           ;	Internal External Switchover bit
  6540                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6541                           ;	Fail-Safe Clock Monitor Enabled bit
  6542                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6543                           ;	Low Voltage Programming Enable bit
  6544                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6545                           ;	In-Circuit Debugger Mode bit
  6546                           ;	DEBUG = 0x1, unprogrammed default
  6547  2007                     	org	8199
  6548  2007  20F4               	dw	8436
  6549                           
  6550                           ;Config register CONFIG2 @ 0x2008
  6551                           ;	Brown-out Reset Selection bit
  6552                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6553                           ;	Flash Program Memory Self Write Enable bits
  6554                           ;	WRT = OFF, Write protection off
  6555  2008                     	org	8200
  6556  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     62      79
    BANK1            80      2       5
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[17]), 

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(BANK0[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(BANK0[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(BANK0[1]), sendhex@unidad(BANK0[1]), 

    division@dec	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    division@un	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    hexTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp3(BANK1[3]), 

    sendhex@valor	PTR unsigned char  size(1) Largest target is 1
		 -> UARTval(BANK0[1]), 

    floTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp2(BANK0[3]), disp1(BANK0[3]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_4(CODE[6]), STR_3(CODE[8]), 
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    CONVdec@lectura	PTR unsigned char  size(1) Largest target is 1
		 -> pot2(BANK0[1]), pot1(BANK0[1]), 

    CONVdec@equiv	PTR float  size(1) Largest target is 4
		 -> val2(BANK0[4]), val1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_cursorLCD
    _sendhex->_divisiondecimal
    _sendfloat->_division
    _sendString->_send1dato
    _initLCD->_comandoLCD
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->_division
    _division->___awdiv
    ___flsub->___fladd
    ___flsub->___xxtofl
    _cursorLCD->_comandoLCD
    _configuracion->_ADCconfig
    _LCDstring->_dispCHAR
    _CONVdec->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_floTochar
    _sendhex->_divisiondecimal
    _sendfloat->___fltol
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->___fltol
    _division->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _CONVdec->___flmul
    ___flmul->___xxtofl

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34619
                                              0 BANK1      2     2      0
                            _CONVdec
                          _LCDstring
                      _configuracion
                          _cursorLCD
                           _dispCHAR
                          _floTochar
                          _hexTochar
                            _initLCD
                         _sendString
                          _sendfloat
                            _sendhex
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2753
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _sendfloat                                           15    11      4   11586
                                             45 BANK0     15    11      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
                          _send1dato
                         _sendString
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     2      0     265
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              6 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _hexTochar                                            8     7      1    2878
                                             10 BANK0      8     7      1
                    _divisiondecimal
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              8 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _floTochar                                           17    12      5   11640
                                             45 BANK0     17    12      5
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             7     5      2    2067
                                              8 COMMON     2     0      2
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              3 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     460
                                              6 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     2      0     100
                                              5 COMMON     2     2      0
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (1) _dispCHAR                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CONVdec                                              6     5      1    4773
                                              7 COMMON     1     1      0
                                             36 BANK0      5     4      1
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVdec
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _LCDstring
     _dispCHAR
   _configuracion
     _ADCconfig
     _configUART
   _cursorLCD
     _comandoLCD
   _dispCHAR
   _floTochar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
   _hexTochar
     _divisiondecimal
       ___awdiv
       ___bmul
   _initLCD
     _comandoLCD
   _sendString
     _send1dato
   _sendfloat
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
     _send1dato
     _sendString
       _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      2       5       7        6.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 12:54:57 2021

                       pc 0002            ___bmul@product 0075              ___awdiv@sign 0021  
          ?_configuracion 0070                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0BE0                       l200 0CF8                       l131 0C21  
                     l203 0A61                       l211 0A87                       l220 0ABB  
                     l125 0C66                       l151 0A4B                       l208 0AFD  
                     l160 0ADA                       l154 0A51                       l163 07FF  
                     l148 0A73                       l332 0A9C                       l172 0B76  
                     l502 0E2A                       l166 0F43                       l169 0BAA  
                     l178 0CAE                       l603 048F                       l187 0EA7  
                     l620 0560                       l612 0612                       l701 02EE  
                     l605 0464                       l630 05A6                       l624 0584  
                     l641 0606                       l633 05E4                       l714 0B38  
                     l642 0612                       l707 0376                       l459 0DAE  
                     l716 0B4A                       l492 0E2A                       l741 0FFF  
                     l645 0B21                       l752 0FC9                       l753 0FD5  
                     l745 0FAD                       l739 0F68                       l499 0E15  
                     l695 0382                       l599 03E6        __size_of_ADCconfig 0045  
                     _RC0 0038                       _RC1 0039                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0038              ___flmul@bexp 003D  
            ___flmul@sign 0037              ___flmul@temp 0042              ___flmul@prod 003E  
         __end_of_CONVdec 0C22              ___fltol@exp1 0078                      l2010 0A78  
                    l2012 0A7A                      l2014 0A84                      l3000 0FF6  
                    l2008 0A75                      l3002 0FF7                      l3010 076C  
                    l2300 0CEC                      l3020 07F0                      l3012 07A0  
                    l3100 0712                      l3006 0BE2                      l3030 0EA8  
                    l2302 0CF2                      l3014 07CA                      l3022 0B7A  
                    l3110 073F                      l3102 071B                      l3040 0F3C  
                    l3032 0EBD                      l3016 07D8                      l3008 0757  
                    l3024 0B8F                      l3112 0748                      l3104 0721  
                    l2250 0BC4                      l2242 0BAB                      l3034 0EC1  
                    l3042 0B4E                      l3018 07E7                      l3026 0B98  
                    l3106 072D                      l3050 0613                      l2260 0BCC  
                    l2252 0BC8                      l2244 0BAF                      l2500 0D49  
                    l3036 0EF5                      l3044 0B60                      l3028 0BA1  
                    l3108 0736                      l3060 0640                      l3052 0618  
                    l3134 0C47                      l2270 0BD1                      l2262 0BCD  
                    l2254 0BC9                      l2246 0BB0                      l2350 0AE1  
                    l2510 0D5D                      l2502 0D4D                      l3038 0F1F  
                    l3046 0B69                      l3070 066F                      l3062 0646  
                    l3054 061D                      l2360 0A9E                      l2272 0BD2  
                    l2264 0BCE                      l2256 0BCA                      l2248 0BBF  
                    l2352 0AE6                      l2600 0408                      l2520 0D73  
                    l2512 0D61                      l2504 0D52                      l3048 0B6F  
                    l2280 0CAF                      l3080 06BF                      l3072 0675  
                    l3064 0654                      l3056 0623                      l2362 0A9F  
                    l2274 0BD3                      l2266 0BCF                      l2258 0BCB  
                    l2354 0AEC                      l2610 041C                      l2602 040C  
                    l2530 0D93                      l2522 0D77                      l2514 0D63  
                    l2506 0D54                      l2290 0CCB                      l2282 0CB2  
                    l1650 0A47                      l3090 06E8                      l3082 06C7  
                    l3074 068C                      l3066 0663                      l3058 0631  
                    l2364 0AAB                      l2276 0BDA                      l2268 0BD0  
                    l2356 0AF2                      l2348 0ADC                      l2700 0599  
                    l2612 0420                      l2604 0410                      l2620 0430  
                    l2532 0D9A                      l2524 0D7B                      l2516 0D69  
                    l2508 0D58                      l2292 0CD1                      l2284 0CB3  
                    l3092 06EE                      l3084 06D0                      l3076 06A3  
                    l3068 0669                      l2366 0AAF                      l2278 0BDD  
                    l2358 0AF7                      l2710 05B0                      l2702 059D  
                    l2630 0475                      l2622 0431                      l2614 0424  
                    l2606 0414                      l2550 0395                      l2542 0383  
                    l2526 0D8C                      l2518 0D6C                      l2534 0DA0  
                    l2294 0CDA                      l2286 0CBC                      l3094 06FA  
                    l3086 06D6                      l3078 06B1                      l2720 05EE  
                    l2712 05BE                      l2704 05A3                      l2640 0493  
                    l2632 047B                      l2624 0448                      l2616 0428  
                    l2608 0418                      l2552 039A                      l2560 03AA  
                    l2544 038A                      l2536 0DA5                      l2528 0D92  
                    l2296 0CE0                      l2288 0CC2                      l1920 0ABE  
                    l3096 0703                      l3088 06DF                      l1930 0A58  
                    l2730 0602                      l2722 05F6                      l2714 05C2  
                    l2650 04C0                      l2642 0498                      l2634 047C  
                    l2626 0468                      l2618 042C                      l2570 03C4  
                    l2562 03B2                      l2554 039F                      l2546 0390  
                    l2810 0E0A                      l2802 0DF1                      l2538 0DAA  
                    l2490 0A92                      l2298 0CE6                      l1922 0ACA  
                    l3098 0709                      l2740 0B2E                      l2900 024C  
                    l1932 0A5E                      l1940 0A69                      l2732 060D  
                    l2724 05FB                      l2716 05E0                      l2708 05AB  
                    l2660 04D4                      l2652 04C4                      l2636 0485  
                    l2628 0473                      l2580 03DB                      l2572 03C8  
                    l2564 03B7                      l2556 03A7                      l2548 0394  
                    l2812 0E1A                      l2804 0E03                      l2492 0A94  
                    l2484 0A89                      l1924 0ACE                      l2742 0B32  
                    l2910 02BA                      l2902 0272                      l2830 0034  
                    l2822 0022                      l1926 0A53                      l1950 0C24  
                    l1942 0A6A                      l1934 0A62                      l2734 0611  
                    l2726 05FC                      l2718 05E9                      l2670 053E  
                    l2662 04DD                      l2654 04CD                      l2646 04A3  
                    l2638 0489                      l2590 03F4                      l2582 03DC  
                    l2574 03C9                      l2566 03BD                      l2558 03A8  
                    l2814 0E1F                      l2494 0A9B                      l2486 0A8A  
                    l2750 0C6A                      l1918 0ABD                      l2744 0B41  
                    l2736 0B25                      l2920 02D2                      l2912 02BE  
                    l2904 029A                      l2840 0050                      l2832 0039  
                    l2824 0029                      l1928 0A56                      l1952 0C29  
                    l1960 0C3C                      l1944 0A6D                      l1936 0A66  
                    l2728 0600                      l2672 0543                      l2656 04CF  
                    l2648 04BC                      l2664 04E2                      l2592 03F8  
                    l2576 03CE                      l2584 03DE                      l2568 03BE  
                    l2816 0AFE                      l2488 0A8E                      l2760 0CA7  
                    l2752 0C6E                      l2746 0B46                      l2738 0B27  
                    l2930 02F3                      l2922 02D3                      l2914 02BF  
                    l2906 02A3                      l2850 0065                      l2842 0055  
                    l2834 003E                      l2826 002F                      l1970 0C64  
                    l1954 0C30                      l1962 0C52                      l1946 0A70  
                    l1938 0A68                      l2690 058B                      l2682 0576  
                    l2666 04FA                      l2674 0552                      l2658 04D3  
                    l2594 03FC                      l2586 03EC                      l2578 03D3  
                    l2818 0B02                      l2498 0D46                      l2754 0C72  
                    l2770 0E3D                      l2762 0E2C                      l2932 02F8  
                    l2940 0329                      l2924 02D7                      l2916 02C8  
                    l2908 02B1                      l2860 0081                      l2852 006A  
                    l2844 005B                      l2836 0046                      l2828 0033  
                    l1972 0C65                      l1964 0C5B                      l1956 0C37  
                    l1948 0C23                      l2692 058D                      l2684 057F  
                    l2676 0568                      l2668 0538                      l2596 0400  
                    l2588 03F0                      l2780 0DAF                      l2756 0C76  
                    l2772 0E68                      l2764 0E32                      l2950 035C  
                    l2942 0336                      l2934 0306                      l2926 02EB  
                    l2918 02CE                      l2870 00AC                      l2862 0086  
                    l2854 0072                      l2846 005F                      l2838 0048  
                    l1966 0C5C                      l2694 0592                      l2686 0583  
                    l2678 056D                      l2598 0404                      l2790 0DDB  
                    l2782 0DBC                      l2758 0CA1                      l2774 0E6F  
                    l2766 0E36                      l2952 036A                      l2944 0341  
                    l2936 030A                      l2880 0149                      l2872 00C9  
                    l2856 0074                      l2848 0060                      l1968 0C5D  
                    l2688 0588                      l2696 0594                      l2792 0DE3  
                    l2776 0E9A                      l2768 0E39                      l2954 036E  
                    l2946 0350                      l2938 0323                      l2890 01AC  
                    l2882 0152                      l2874 00E5                      l2866 008F  
                    l2858 007C                      l2970 0F70                      l2962 0F47  
                    l2698 0598                      l2794 0DE5                      l2786 0DC5  
                    l2778 0EA0                      l2956 036F                      l2948 035A  
                    l2892 01C5                      l2884 0162                      l2876 0111  
                    l2868 009F                      l2980 0F92                      l2964 0F4C  
                    l2796 0DE9                      l2788 0DDA                      l2958 037A  
                    l2894 01E2                      l2886 017F                      l2878 012D  
                    l2990 0FC3                      l2982 0F96                      l2974 0F79  
                    l2966 0F50                      l2896 020F                      l2888 018F  
                    l2992 0FCD                      l2984 0FA4                      l2976 0F7E  
                    l2968 0F60                      l2898 021F                      l2994 0FD7  
                    l2986 0FB4                      l2978 0F8B                      l2996 0FED  
                    l2988 0FBF                      l2998 0FF2                      STR_1 0817  
                    STR_2 081F                      STR_3 0827                      STR_4 082F  
                    STR_5 0806                      STR_6 0835                      STR_7 0833  
                    u2030 0ADA                      u2031 0AD9                      u3000 03F0  
                    u3001 03EF                      u3010 0448                      u1410 0A51  
                    u3011 0447                      u1411 0A50                      u3020 0453  
                    u3101 04AE                      u3021 0451                      u3110 04C0  
                    u3102 04B5                      u3030 0454                      u3111 04BF  
                    u3103 04BC                      u3015 0444                      u4000 0FC9  
                    u3200 056D                      u3120 04C4                      u3040 0468  
                    u4001 0FC8                      u3201 056C                      u3121 04C3  
                    u3041 0467                      u4010 0FCD                      u3130 04D3  
                    u3050 047B                      u4011 0FCC                      u3131 04D2  
                    u3051 047A                      u4020 0FE2                      u3300 05C2  
                    u3220 0583                      u3301 05C1                      u3221 0582  
                    u4030 0FF2                      u3310 05D1                      u3230 0588  
                    u3150 04FA                      u3070 048F                      u4031 0FF1  
                    u3231 0587                      u3215 0578                      u3151 04F9  
                    u3071 048E                      u3400 0B46                      u4040 0FF6  
                    u3320 05E0                      u3240 0592                      u3080 0493  
                    u3401 0B45                      u4041 0FF5                      u4025 0FDD  
                    u3321 05DF                      u3241 0591                      u3161 0511  
                    u3153 04F6                      u3145 04D6                      u3081 0492  
                    u3065 047E                      u3330 05E9                      u3250 0598  
                    u3170 0525                      u3162 0512                      u3090 0498  
                    u3410 0CA7                      u4107 0A5B                      u3331 05E8  
                    u3315 05CC                      u3251 0597                      u3171 0526  
                    u3163 0517                      u3091 0497                      u3411 0CA6  
                    u2700 0ABB                      u3340 05EE                      u3260 059D  
                    u3180 0543                      u3172 052B                      u3164 0518  
                    u3500 0E09                      u3420 0E6E                      u2701 0ABA  
                    u3341 05ED                      u3261 059C                      u3181 0542  
                    u3173 052C                      u3165 051D                      u3501 0E08  
                    u3421 0E6D                      u3350 05FB                      u3270 05A3  
                    u3190 0568                      u3166 051E                      u3430 0EA0  
                    u3351 05FA                      u3271 05A2                      u3191 0567  
                    u3431 0E9F                      u3600 0081                      u3360 0600  
                    u3280 05AA                      u3520 0E1A                      u3440 0DBC  
                    u2800 0A8E                      u3601 0080                      u3361 05FF  
                    u3281 05A9                      u3521 0E19                      u3441 0DBB  
                    u2801 0A8D                      u4057 074E                      u3610 0086  
                    u3370 0611                      u3290 05B0                      u3530 0E1F  
                    u3450 0DD3                      u2810 0A9B                      u3611 0085  
                    u3371 0610                      u3291 05AF                      u3531 0E1E  
                    u3515 0E0C                      u2811 0A9A                      u4067 0CB7  
                    u3380 0B32                      u3540 0033                      u3460 0DE9  
                    u2900 0DA0                      u2820 0D4D                      u3381 0B31  
                    u3701 01D4                      u3621 00D7                      u3541 0032  
                    u3461 0DE8                      u2901 0D9F                      u2821 0D4C  
                    u4077 0CC6                      u3702 01DB                      u3622 00DE  
                    u3550 0039                      u3470 0DF0                      u2910 0DA5  
                    u2830 0D58                      u3711 0201                      u3703 01E2  
                    u3631 00F3                      u3623 00E5                      u3551 0038  
                    u3471 0DEF                      u3455 0DCE                      u2911 0DA4  
                    u2831 0D57                      u4087 0CD5                      u3712 0208  
                    u3632 00FA                      u3560 003E                      u2680 0AE1  
                    u2920 0394                      u2840 0D69                      u3721 022E  
                    u3713 020F                      u3641 011F                      u3633 0101  
                    u3561 003D                      u4097 0A7F                      u2681 0AE0  
                    u2921 0393                      u2841 0D68                      u3810 02D2  
                    u3730 0258                      u3722 0235                      u3642 0126  
                    u3570 005F                      u2690 0AF2                      u2930 039A  
                    u3490 0E02                      u3395 0B39                      u3811 02D1  
                    u3723 023C                      u3651 013B                      u3643 012D  
                    u3571 005E                      u2691 0AF1                      u2931 0399  
                    u3491 0E01                      u3900 036E                      u3820 02D7  
                    u3652 0142                      u3580 0065                      u2940 039F  
                    u2860 0D7B                      u3901 036D                      u3821 02D6  
                    u3805 02C1                      u3741 0264                      u3653 0149  
                    u3581 0064                      u2941 039E                      u3485 0DF2  
                    u2861 0D7A                      u3830 02EB                      u3750 0280  
                    u3742 026B                      u3590 006A                      u3910 0F4C  
                    u2950 03BD                      u3831 02EA                      u3743 0272  
                    u3735 0253                      u3671 0171                      u3591 0069  
                    u3911 0F4B                      u2951 03BC                      u2855 0D6D  
                    u3840 02F2                      u3672 0178                      u3920 0F50  
                    u2960 03C8                      u2880 0D8C                      u3841 02F1  
                    u3761 028C                      u3681 019E                      u3673 017F  
                    u3665 014B                      u3921 0F4F                      u2961 03C7  
                    u2881 0D8B                      u3850 02F8                      u3762 0293  
                    u3682 01A5                      u3930 0F70                      u2970 03CE  
                    u3851 02F7                      u3763 029A                      u3755 027B  
                    u3683 01AC                      u3931 0F6F                      u2971 03CD  
                    u2875 0D7C                      u3860 030A                      u2980 03D3  
                    u3861 0309                      u2981 03D2                      u2885 0D88  
                    u3870 0319                      u3790 02BE                      u3950 0F91  
                    u2990 03EC                      u3791 02BD                      u3775 029C  
                    u3695 01AE                      u3951 0F90                      u2991 03EB  
                    u2895 0D94                      u3880 0336                      u3881 0335  
                    u3785 02B3                      u3945 0F83                      u3890 0350  
                    u3970 0FB3                      u3891 034F                      u3875 0314  
                    u3971 0FB2                      i1l92 0D0D                      u3885 0332  
                    u3965 0FA5                      u3990 0FC3                      u3895 034C  
                    u3991 0FC2                      u3985 0FB8                      i1l98 0D3E  
                    i1l99 0D3F                      _main 0613                      _val1 0062  
                    _val2 005E                      _pot1 006E                      _pot2 006D  
                    btemp 007E           _divisiondecimal 0E2B                      start 000C  
       ___bmul@multiplier 0076               division@dec 0079               division@div 0028  
      __size_of_LCDstring 001F             ___fltol@sign1 0077           __end_of___fladd 0613  
                   ?_main 0070           __end_of___awdiv 0DAF           __end_of___flmul 0383  
         __end_of___flsub 0B22           __end_of___fltol 0E2B                     _ANSEL 0188  
         ___awdiv@divisor 0073           ___awdiv@counter 0020                     _RCREG 001A  
            CONVdec@equiv 0044             floTochar@conv 0051                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009             floTochar@temp 0056  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
           send1dato@dato 0073           __end_of_initLCD 0CF9                     _disp1 0069  
                   _disp2 0066                     _disp3 00A0           __end_of_sendhex 0BAB  
                   pclath 000A                     status 0003                     wtemp0 007E  
       __end_of_ADCconfig 0C67            sendhex@centena 002F           __initialization 000F  
            __end_of_main 0757           ??_configuracion 0077                    ??_main 00A3  
     divisiondecimal@cent 0026                 ??_CONVdec 0045                    _ADRESH 001E  
        ___awdiv@dividend 0075   __end_of_divisiondecimal 0EA8                    _ANSELH 0189  
                  i1l2370 0CFF                    i1l2372 0D03                    i1l2380 0D16  
                  i1l2390 0D31                    i1l2382 0D1A                    i1l2374 0D09  
                  i1l2384 0D27                    i1l2392 0D35                    i1l2376 0D13  
                  i1l2368 0CF9                    i1l2394 0D39                    i1l2386 0D28  
                  i1l2378 0D15                    i1l2396 0D3D                    i1l2388 0D2C  
       __end_of_LCDstring 0ABC                    u271_20 0CFF                    u271_21 0CFE  
                  u272_20 0D09                    u272_21 0D08                    u273_20 0D13  
                  u273_21 0D12                    u274_20 0D1A                    u274_21 0D19  
                  u275_20 0D24                    u275_21 0D20                    u276_24 0D27  
                  u277_20 0D2C                    u277_21 0D2B                    u278_20 0D39  
                  u278_21 0D38                    u279_20 0D3D                    u279_21 0D3C  
           ADCconfig@just 0073            floTochar@valor 004D            sendfloat@valor 004D  
        __end_of___xxtofl 1000             hexTochar@conv 002A          __end_of_dispCHAR 0A62  
                  ___bmul 0A88          __end_of_division 0CAF                 ??___fladd 0028  
               ??___awdiv 0077                 ??___flmul 0032                 ??___flsub 0077  
               ??___fltol 0048          ___awdiv@quotient 0022                 ??_initLCD 0076  
      __size_of__Umul8_16 0029                    saved_w 007E                 ??_sendhex 002A  
            ___xxtofl@arg 0026              ___xxtofl@exp 0025              ___xxtofl@val 0073  
 __end_of__initialization 001E                ___fltol@f1 0044       ___bmul@multiplicand 0073  
          __pcstackCOMMON 0070             ?_interrupcion 0070            _OPTION_REGbits 0081  
      __size_of_floTochar 009C        __size_of_hexTochar 002C          ?_divisiondecimal 0024  
              __pbssBANK0 005E                __pbssBANK1 00A0        __size_of_cursorLCD 0023  
       __end_of__Umul8_16 0B4B        __size_of_send1dato 000C            ??_interrupcion 0070  
              __pmaintext 0613                   ?___bmul 0073                __pintentry 0004  
      __size_of_sendfloat 00A9                _comandoLCD 0A74                   _CONVdec 0BE1  
              _configUART 0A62            ADCconfig@canal 0076                 ?___xxtofl 0073  
          CONVdec@lectura 0077           floTochar@entero 005B                 ?_dispCHAR 0070  
                 _UARTdat 007A           sendfloat@entero 005A                   _UARTval 006C  
              __stringtab 0800                 ?_division 0078            hexTochar@valor 002E  
       __end_of_floTochar 0F44                 _ADCconfig 0C22           __size_of___bmul 0015  
       __end_of_hexTochar 0B77                   ___fladd 0383                   ___awdiv 0D46  
                 ___flmul 0022                   ___flsub 0AFE                   ___fltol 0DAF  
                 __ptext1 0B77                   __ptext2 0757                   __ptext3 0ABC  
                 __ptext4 0A46                   __ptext5 0CAF                   __ptext6 0B4B  
                 __ptext7 0E2B                   __ptext8 0EA8                   __ptext9 0C67  
                 _initLCD 0CAF         __end_of_cursorLCD 0AFE                ??___xxtofl 0020  
                 _sendhex 0B77                ??_dispCHAR 0073         __end_of_send1dato 0A52  
                 clrloop0 0A3F      end_of_initialization 001E                ??_division 0024  
       __end_of_sendfloat 0800                _sendString 0ABC                 _LCDstring 0A9D  
               _RCSTAbits 0018                ?_ADCconfig 0073     __end_of_configuracion 0BE1  
             ?_comandoLCD 0070               ___fladd@grs 0076               ?_configUART 0070  
           ___xxtofl@sign 0024                 _TRISCbits 0087      __end_of_interrupcion 0D46  
             ___flmul@grs 0039                 _TXSTAbits 0098                ?_LCDstring 0070  
              division@un 0078          hexTochar@centena 0030            __end_of___bmul 0A9D  
     start_initialization 000F            division@conteo 0027             sendhex@decena 0030  
           sendhex@unidad 002E        divisiondecimal@dec 0025        divisiondecimal@div 0079  
             ?_sendString 0070             sendfloat@temp 0055       __size_of_comandoLCD 0014  
     __size_of_configUART 0012               ??_ADCconfig 0074                  ??___bmul 0074  
               __Umul8_16 0B22                 ___fladd@a 0024                 ___fladd@b 0020  
                ?_CONVdec 0044     divisiondecimal@conteo 0078                 ___flmul@a 002E  
               ___flmul@b 002A               __pbssCOMMON 007A                 ___flsub@a 0030  
               ___flsub@b 0034                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A3         __size_of___xxtofl 00BC         __size_of_dispCHAR 0010  
       __size_of_division 0048               ??_LCDstring 0075  __size_of_divisiondecimal 007D  
                ?___fladd 0020                  ?___awdiv 0073                  ?___flmul 002A  
                ?___flsub 0030                  ?___fltol 0044                ?__Umul8_16 0073  
               _floTochar 0EA8                 __pstrings 0800                 _hexTochar 0B4B  
     __size_of_sendString 001F     __size_of_interrupcion 004D                  ?_initLCD 0070  
                ?_sendhex 0070                 _cursorLCD 0ADB                 _send1dato 0A46  
       interrupt_function 0004         sendString@mensaje 0075          floTochar@decimal 005A  
               clear_ram0 0A3E                  _PIE1bits 008C                 dispCHAR@b 0074  
               _sendfloat 0757                  _PIR1bits 000C          sendfloat@decimal 0059  
            _interrupcion 0CF9                ?_floTochar 004D                ?_hexTochar 002A  
              _ADCON0bits 001F               __stringbase 0805                _ADCON1bits 009F  
            ??_comandoLCD 0073              ??_configUART 0073          __size_of_CONVdec 0041  
         hexTochar@decena 0031                ?_cursorLCD 0076           hexTochar@unidad 002F  
              ?_send1dato 0070              sendhex@valor 002D         divisiondecimal@un 0024  
              ?_sendfloat 004D        __end_of_comandoLCD 0A88        __end_of_configUART 0A74  
     floTochar@digdecimal 005C               ??__Umul8_16 0075          __size_of___fladd 0290  
        __size_of___awdiv 0069          __size_of___flmul 0361          __size_of___flsub 0024  
        __size_of___fltol 007C         ??_divisiondecimal 0027        __end_of__stringtab 0806  
        __size_of_initLCD 004A                  ___xxtofl 0F44                  _dispCHAR 0A52  
        __size_of_sendhex 0034                  __ptext10 0A88                  __ptext11 0D46  
                __ptext20 0A9D                  __ptext12 0DAF                  __ptext21 0A52  
                __ptext13 0AFE                  __ptext22 0BE1                  __ptext14 0383  
                __ptext23 0F44                  __ptext15 0ADB                  __ptext24 0022  
                __ptext16 0A74                  __ptext25 0B22                  __ptext17 0BAB  
                __ptext26 0CF9                  __ptext18 0A62                  __ptext19 0C22  
        LCDstring@mensaje 0076                  _division 0C67              ??_sendString 0074  
  __size_of_configuracion 0036             __size_of_main 0144             cursorLCD@fila 0078  
           cursorLCD@temp 0079               ??_floTochar 0052               ??_hexTochar 002B  
     sendfloat@digdecimal 005B        __end_of_sendString 0ADB                _INTCONbits 000B  
             ??_cursorLCD 0077                  intlevel1 0000               ??_send1dato 0073  
             ??_sendfloat 0051                 stringcode 0800                _OSCCONbits 008F  
           _configuracion 0BAB          cursorLCD@columna 0076    __Umul8_16@multiplicand 0073  
                stringdir 0800                  stringtab 0800             ___fladd@signs 0073  
            ___fladd@aexp 0074              ___fladd@bexp 0075      __Umul8_16@multiplier 0024  
       __Umul8_16@product 0020             comandoLCD@cmd 0075  
