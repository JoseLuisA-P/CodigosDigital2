

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 12:58:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0019                     _TXREG	set	25
   469  0018                     _RCSTAbits	set	24
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  000B                     _INTCONbits	set	11
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  001A                     _RCREG	set	26
   479  000C                     _PIR1bits	set	12
   480  0039                     _RC1	set	57
   481  0038                     _RC0	set	56
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  0087                     _TRISCbits	set	135
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008C                     _PIE1bits	set	140
   488  008F                     _OSCCONbits	set	143
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISC	set	135
   492  0086                     _TRISB	set	134
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_5:
   514  0806  3453               	retlw	83	;'S'
   515  0807  3431               	retlw	49	;'1'
   516  0808  343A               	retlw	58	;':'
   517  0809  3420               	retlw	32	;' '
   518  080A  3420               	retlw	32	;' '
   519  080B  3420               	retlw	32	;' '
   520  080C  3453               	retlw	83	;'S'
   521  080D  3432               	retlw	50	;'2'
   522  080E  343A               	retlw	58	;':'
   523  080F  3420               	retlw	32	;' '
   524  0810  3420               	retlw	32	;' '
   525  0811  3420               	retlw	32	;' '
   526  0812  3453               	retlw	83	;'S'
   527  0813  3433               	retlw	51	;'3'
   528  0814  343A               	retlw	58	;':'
   529  0815  3400               	retlw	0
   530  0816                     STR_1:
   531  0816  3450               	retlw	80	;'P'
   532  0817  344F               	retlw	79	;'O'
   533  0818  3454               	retlw	84	;'T'
   534  0819  3431               	retlw	49	;'1'
   535  081A  343A               	retlw	58	;':'
   536  081B  3420               	retlw	32	;' '
   537  081C  340D               	retlw	13
   538  081D  3400               	retlw	0
   539  081E                     STR_2:
   540  081E  3450               	retlw	80	;'P'
   541  081F  344F               	retlw	79	;'O'
   542  0820  3454               	retlw	84	;'T'
   543  0821  3432               	retlw	50	;'2'
   544  0822  343A               	retlw	58	;':'
   545  0823  3420               	retlw	32	;' '
   546  0824  340D               	retlw	13
   547  0825  3400               	retlw	0
   548  0826                     STR_3:
   549  0826  3455               	retlw	85	;'U'
   550  0827  3441               	retlw	65	;'A'
   551  0828  3452               	retlw	82	;'R'
   552  0829  3454               	retlw	84	;'T'
   553  082A  343A               	retlw	58	;':'
   554  082B  3420               	retlw	32	;' '
   555  082C  340D               	retlw	13
   556  082D  3400               	retlw	0
   557  082E                     STR_4:
   558  082E  340D               	retlw	13
   559  082F  340D               	retlw	13
   560  0830  340D               	retlw	13
   561  0831  340D               	retlw	13
   562  0832  340D               	retlw	13
   563  0833  3400               	retlw	0
   564  0834                     STR_6:
   565  0834  342E               	retlw	46	;'.'
   566  0835  3400               	retlw	0
   567  0832                     
   568                           	psect	cinit
   569  000F                     start_initialization:	
   570                           ; #config settings
   571                           
   572  000F                     __initialization:
   573                           
   574                           ; Clear objects allocated to COMMON
   575  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   576                           
   577                           ; Clear objects allocated to BANK0
   578  0010  1383               	bcf	3,7	;select IRP bank0
   579  0011  305E               	movlw	low __pbssBANK0
   580  0012  0084               	movwf	4
   581  0013  306F               	movlw	low (__pbssBANK0+17)
   582  0014  120A  158A  223E  120A  118A  	fcall	clear_ram0
   583                           
   584                           ; Clear objects allocated to BANK1
   585  0019  1683               	bsf	3,5	;RP0=1, select bank1
   586  001A  1303               	bcf	3,6	;RP1=0, select bank1
   587  001B  01A0               	clrf	__pbssBANK1& (0+127)
   588  001C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   589  001D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   590  001E                     end_of_initialization:	
   591                           ;End of C runtime variable initialization code
   592                           
   593  001E                     __end_of__initialization:
   594  001E  0183               	clrf	3
   595  001F  120A  118A  2E13   	ljmp	_main	;jump to C main() function
   596                           
   597                           	psect	bssCOMMON
   598  007A                     __pbssCOMMON:
   599  007A                     _UARTdat:
   600  007A                     	ds	1
   601                           
   602                           	psect	bssBANK0
   603  005E                     __pbssBANK0:
   604  005E                     _val2:
   605  005E                     	ds	4
   606  0062                     _val1:
   607  0062                     	ds	4
   608  0066                     _disp2:
   609  0066                     	ds	3
   610  0069                     _disp1:
   611  0069                     	ds	3
   612  006C                     _UARTval:
   613  006C                     	ds	1
   614  006D                     _pot2:
   615  006D                     	ds	1
   616  006E                     _pot1:
   617  006E                     	ds	1
   618                           
   619                           	psect	bssBANK1
   620  00A0                     __pbssBANK1:
   621  00A0                     _disp3:
   622  00A0                     	ds	3
   623                           
   624                           	psect	clrtext
   625  0A3E                     clear_ram0:	
   626                           ;	Called with FSR containing the base address, and
   627                           ;	W with the last address+1
   628                           
   629  0A3E  0064               	clrwdt	;clear the watchdog before getting into this loop
   630  0A3F                     clrloop0:
   631  0A3F  0180               	clrf	0	;clear RAM location pointed to by FSR
   632  0A40  0A84               	incf	4,f	;increment pointer
   633  0A41  0604               	xorwf	4,w	;XOR with final address
   634  0A42  1903               	btfsc	3,2	;have we reached the end yet?
   635  0A43  3400               	retlw	0	;all done for this memory range, return
   636  0A44  0604               	xorwf	4,w	;XOR again to restore value
   637  0A45  2A3F               	goto	clrloop0	;do the next byte
   638                           
   639                           	psect	cstackBANK1
   640  00A3                     __pcstackBANK1:
   641  00A3                     ??_main:
   642                           
   643                           ; 1 bytes @ 0x0
   644  00A3                     	ds	2
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:
   648  0070                     ?_configuracion:
   649  0070                     ?_initLCD:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_sendString:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_sendhex:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_LCDstring:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_dispCHAR:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_configUART:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_comandoLCD:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_interrupcion:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_interrupcion:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_main:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_send1dato:	
   680                           ; 1 bytes @ 0x0
   681                           
   682                           
   683                           ; 1 bytes @ 0x0
   684  0070                     	ds	3
   685  0073                     ??_dispCHAR:
   686  0073                     ??_configUART:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ?_ADCconfig:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ??_comandoLCD:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     ??_send1dato:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     ?___bmul:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ?__Umul8_16:	
   702                           ; 1 bytes @ 0x3
   703                           
   704  0073                     ?___awdiv:	
   705                           ; 2 bytes @ 0x3
   706                           
   707  0073                     ?___xxtofl:	
   708                           ; 2 bytes @ 0x3
   709                           
   710  0073                     ADCconfig@just:	
   711                           ; 4 bytes @ 0x3
   712                           
   713  0073                     send1dato@dato:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     ___bmul@multiplicand:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     ___fladd@signs:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     __Umul8_16@multiplicand:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ___awdiv@divisor:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ___xxtofl@val:	
   729                           ; 2 bytes @ 0x3
   730                           
   731                           
   732                           ; 4 bytes @ 0x3
   733  0073                     	ds	1
   734  0074                     ??_sendString:
   735  0074                     ??_ADCconfig:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ??___bmul:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     dispCHAR@b:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     ___fladd@aexp:	
   745                           ; 1 bytes @ 0x4
   746                           
   747                           
   748                           ; 1 bytes @ 0x4
   749  0074                     	ds	1
   750  0075                     ??_LCDstring:
   751  0075                     ??__Umul8_16:	
   752                           ; 1 bytes @ 0x5
   753                           
   754  0075                     sendString@mensaje:	
   755                           ; 1 bytes @ 0x5
   756                           
   757  0075                     comandoLCD@cmd:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___bmul@product:	
   761                           ; 1 bytes @ 0x5
   762                           
   763  0075                     ___fladd@bexp:	
   764                           ; 1 bytes @ 0x5
   765                           
   766  0075                     ___awdiv@dividend:	
   767                           ; 1 bytes @ 0x5
   768                           
   769                           
   770                           ; 2 bytes @ 0x5
   771  0075                     	ds	1
   772  0076                     ??_initLCD:
   773  0076                     ?_cursorLCD:	
   774                           ; 1 bytes @ 0x6
   775                           
   776  0076                     ADCconfig@canal:	
   777                           ; 1 bytes @ 0x6
   778                           
   779  0076                     cursorLCD@columna:	
   780                           ; 1 bytes @ 0x6
   781                           
   782  0076                     LCDstring@mensaje:	
   783                           ; 1 bytes @ 0x6
   784                           
   785  0076                     ___bmul@multiplier:	
   786                           ; 1 bytes @ 0x6
   787                           
   788  0076                     ___fladd@grs:	
   789                           ; 1 bytes @ 0x6
   790                           
   791                           
   792                           ; 1 bytes @ 0x6
   793  0076                     	ds	1
   794  0077                     ??_configuracion:
   795  0077                     ??_cursorLCD:	
   796                           ; 1 bytes @ 0x7
   797                           
   798  0077                     ??___awdiv:	
   799                           ; 1 bytes @ 0x7
   800                           
   801  0077                     ??___flsub:	
   802                           ; 1 bytes @ 0x7
   803                           
   804  0077                     CONVdec@lectura:	
   805                           ; 1 bytes @ 0x7
   806                           
   807  0077                     ___fltol@sign1:	
   808                           ; 1 bytes @ 0x7
   809                           
   810                           
   811                           ; 1 bytes @ 0x7
   812  0077                     	ds	1
   813  0078                     ?_division:
   814  0078                     division@un:	
   815                           ; 1 bytes @ 0x8
   816                           
   817  0078                     divisiondecimal@conteo:	
   818                           ; 1 bytes @ 0x8
   819                           
   820  0078                     cursorLCD@fila:	
   821                           ; 1 bytes @ 0x8
   822                           
   823  0078                     ___fltol@exp1:	
   824                           ; 1 bytes @ 0x8
   825                           
   826                           
   827                           ; 1 bytes @ 0x8
   828  0078                     	ds	1
   829  0079                     division@dec:
   830  0079                     divisiondecimal@div:	
   831                           ; 1 bytes @ 0x9
   832                           
   833  0079                     cursorLCD@temp:	
   834                           ; 1 bytes @ 0x9
   835                           
   836                           
   837                           ; 1 bytes @ 0x9
   838  0079                     	ds	1
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:
   842  0020                     ??___xxtofl:
   843  0020                     ?___fladd:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ___awdiv@counter:	
   847                           ; 4 bytes @ 0x0
   848                           
   849  0020                     __Umul8_16@product:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     ___fladd@b:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 4 bytes @ 0x0
   857  0020                     	ds	1
   858  0021                     ___awdiv@sign:
   859                           
   860                           ; 1 bytes @ 0x1
   861  0021                     	ds	1
   862  0022                     ___awdiv@quotient:
   863  0022                     __Umul8_16@word_mpld:	
   864                           ; 2 bytes @ 0x2
   865                           
   866                           
   867                           ; 2 bytes @ 0x2
   868  0022                     	ds	2
   869  0024                     ??_division:
   870  0024                     ?_divisiondecimal:	
   871                           ; 1 bytes @ 0x4
   872                           
   873  0024                     divisiondecimal@un:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0024                     __Umul8_16@multiplier:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0024                     ___xxtofl@sign:	
   880                           ; 1 bytes @ 0x4
   881                           
   882  0024                     ___fladd@a:	
   883                           ; 1 bytes @ 0x4
   884                           
   885                           
   886                           ; 4 bytes @ 0x4
   887  0024                     	ds	1
   888  0025                     divisiondecimal@dec:
   889  0025                     ___xxtofl@exp:	
   890                           ; 1 bytes @ 0x5
   891                           
   892                           
   893                           ; 1 bytes @ 0x5
   894  0025                     	ds	1
   895  0026                     divisiondecimal@cent:
   896  0026                     ___xxtofl@arg:	
   897                           ; 1 bytes @ 0x6
   898                           
   899                           
   900                           ; 4 bytes @ 0x6
   901  0026                     	ds	1
   902  0027                     ??_divisiondecimal:
   903  0027                     division@conteo:	
   904                           ; 1 bytes @ 0x7
   905                           
   906                           
   907                           ; 1 bytes @ 0x7
   908  0027                     	ds	1
   909  0028                     ??___fladd:
   910  0028                     division@div:	
   911                           ; 1 bytes @ 0x8
   912                           
   913                           
   914                           ; 1 bytes @ 0x8
   915  0028                     	ds	2
   916  002A                     ??_sendhex:
   917  002A                     ?_hexTochar:	
   918                           ; 1 bytes @ 0xA
   919                           
   920  002A                     ?___flmul:	
   921                           ; 1 bytes @ 0xA
   922                           
   923  002A                     hexTochar@conv:	
   924                           ; 4 bytes @ 0xA
   925                           
   926  002A                     ___flmul@b:	
   927                           ; 1 bytes @ 0xA
   928                           
   929                           
   930                           ; 4 bytes @ 0xA
   931  002A                     	ds	1
   932  002B                     ??_hexTochar:
   933                           
   934                           ; 1 bytes @ 0xB
   935  002B                     	ds	2
   936  002D                     sendhex@valor:
   937                           
   938                           ; 1 bytes @ 0xD
   939  002D                     	ds	1
   940  002E                     sendhex@unidad:
   941  002E                     hexTochar@valor:	
   942                           ; 1 bytes @ 0xE
   943                           
   944  002E                     ___flmul@a:	
   945                           ; 1 bytes @ 0xE
   946                           
   947                           
   948                           ; 4 bytes @ 0xE
   949  002E                     	ds	1
   950  002F                     sendhex@centena:
   951  002F                     hexTochar@unidad:	
   952                           ; 1 bytes @ 0xF
   953                           
   954                           
   955                           ; 1 bytes @ 0xF
   956  002F                     	ds	1
   957  0030                     ?___flsub:
   958  0030                     sendhex@decena:	
   959                           ; 4 bytes @ 0x10
   960                           
   961  0030                     hexTochar@centena:	
   962                           ; 1 bytes @ 0x10
   963                           
   964  0030                     ___flsub@a:	
   965                           ; 1 bytes @ 0x10
   966                           
   967                           
   968                           ; 4 bytes @ 0x10
   969  0030                     	ds	1
   970  0031                     hexTochar@decena:
   971                           
   972                           ; 1 bytes @ 0x11
   973  0031                     	ds	1
   974  0032                     ??___flmul:
   975                           
   976                           ; 1 bytes @ 0x12
   977  0032                     	ds	2
   978  0034                     ___flsub@b:
   979                           
   980                           ; 4 bytes @ 0x14
   981  0034                     	ds	3
   982  0037                     ___flmul@sign:
   983                           
   984                           ; 1 bytes @ 0x17
   985  0037                     	ds	1
   986  0038                     ___flmul@aexp:
   987                           
   988                           ; 1 bytes @ 0x18
   989  0038                     	ds	1
   990  0039                     ___flmul@grs:
   991                           
   992                           ; 4 bytes @ 0x19
   993  0039                     	ds	4
   994  003D                     ___flmul@bexp:
   995                           
   996                           ; 1 bytes @ 0x1D
   997  003D                     	ds	1
   998  003E                     ___flmul@prod:
   999                           
  1000                           ; 4 bytes @ 0x1E
  1001  003E                     	ds	4
  1002  0042                     ___flmul@temp:
  1003                           
  1004                           ; 2 bytes @ 0x22
  1005  0042                     	ds	2
  1006  0044                     ?_CONVdec:
  1007  0044                     ?___fltol:	
  1008                           ; 1 bytes @ 0x24
  1009                           
  1010  0044                     CONVdec@equiv:	
  1011                           ; 4 bytes @ 0x24
  1012                           
  1013  0044                     ___fltol@f1:	
  1014                           ; 1 bytes @ 0x24
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x24
  1018  0044                     	ds	1
  1019  0045                     ??_CONVdec:
  1020                           
  1021                           ; 1 bytes @ 0x25
  1022  0045                     	ds	3
  1023  0048                     ??___fltol:
  1024                           
  1025                           ; 1 bytes @ 0x28
  1026  0048                     	ds	5
  1027  004D                     ?_sendfloat:
  1028  004D                     ?_floTochar:	
  1029                           ; 1 bytes @ 0x2D
  1030                           
  1031  004D                     sendfloat@valor:	
  1032                           ; 1 bytes @ 0x2D
  1033                           
  1034  004D                     floTochar@valor:	
  1035                           ; 4 bytes @ 0x2D
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x2D
  1039  004D                     	ds	4
  1040  0051                     ??_sendfloat:
  1041  0051                     floTochar@conv:	
  1042                           ; 1 bytes @ 0x31
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x31
  1046  0051                     	ds	1
  1047  0052                     ??_floTochar:
  1048                           
  1049                           ; 1 bytes @ 0x32
  1050  0052                     	ds	3
  1051  0055                     sendfloat@temp:
  1052                           
  1053                           ; 4 bytes @ 0x35
  1054  0055                     	ds	1
  1055  0056                     floTochar@temp:
  1056                           
  1057                           ; 4 bytes @ 0x36
  1058  0056                     	ds	3
  1059  0059                     sendfloat@decimal:
  1060                           
  1061                           ; 1 bytes @ 0x39
  1062  0059                     	ds	1
  1063  005A                     sendfloat@entero:
  1064  005A                     floTochar@decimal:	
  1065                           ; 1 bytes @ 0x3A
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0x3A
  1069  005A                     	ds	1
  1070  005B                     sendfloat@digdecimal:
  1071  005B                     floTochar@entero:	
  1072                           ; 1 bytes @ 0x3B
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0x3B
  1076  005B                     	ds	1
  1077  005C                     floTochar@digdecimal:
  1078                           
  1079                           ; 2 bytes @ 0x3C
  1080  005C                     	ds	2
  1081                           
  1082                           	psect	maintext
  1083  0613                     __pmaintext:	
  1084 ;;
  1085 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1086 ;;
  1087 ;; *************** function _main *****************
  1088 ;; Defined at:
  1089 ;;		line 78 in file "main.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : B00/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       2       0       0
  1106 ;;      Totals:         0       0       2       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels required when called:    4
  1109 ;; This function calls:
  1110 ;;		_CONVdec
  1111 ;;		_LCDstring
  1112 ;;		_configuracion
  1113 ;;		_cursorLCD
  1114 ;;		_dispCHAR
  1115 ;;		_floTochar
  1116 ;;		_hexTochar
  1117 ;;		_initLCD
  1118 ;;		_sendString
  1119 ;;		_sendfloat
  1120 ;;		_sendhex
  1121 ;; This function is called by:
  1122 ;;		Startup code after reset
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _main
  1128  0613                     _main:
  1129  0613                     l3050:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1132                           
  1133                           
  1134                           ;main.c: 79:     configuracion();
  1135  0613  120A  158A  23AB  120A  118A  	fcall	_configuracion
  1136  0618                     l3052:
  1137                           
  1138                           ;main.c: 80:     initLCD();
  1139  0618  120A  158A  24AF  120A  118A  	fcall	_initLCD
  1140  061D                     l3054:
  1141                           
  1142                           ;main.c: 83:         sendString("POT1: \r");
  1143  061D  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1144  061E  120A  158A  22BC  120A  118A  	fcall	_sendString
  1145  0623                     l3056:
  1146                           
  1147                           ;main.c: 84:         CONVdec(&pot1,&val1);
  1148  0623  3062               	movlw	(low (_val1| 0))& (0+255)
  1149  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1151  0626  00A3               	movwf	??_main^(0+128)
  1152  0627  0823               	movf	??_main^(0+128),w
  1153  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1155  062A  00C4               	movwf	CONVdec@equiv
  1156  062B  306E               	movlw	(low (_pot1| 0))& (0+255)
  1157  062C  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1158  0631                     l3058:
  1159                           
  1160                           ;main.c: 85:         sendfloat(val1);
  1161  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0633  0865               	movf	_val1+3,w
  1164  0634  00D0               	movwf	sendfloat@valor+3
  1165  0635  0864               	movf	_val1+2,w
  1166  0636  00CF               	movwf	sendfloat@valor+2
  1167  0637  0863               	movf	_val1+1,w
  1168  0638  00CE               	movwf	sendfloat@valor+1
  1169  0639  0862               	movf	_val1,w
  1170  063A  00CD               	movwf	sendfloat@valor
  1171  063B  120A  118A  2757  120A  118A  	fcall	_sendfloat
  1172  0640                     l3060:
  1173                           
  1174                           ;main.c: 86:         sendString("POT2: \r");
  1175  0640  3019               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1176  0641  120A  158A  22BC  120A  118A  	fcall	_sendString
  1177  0646                     l3062:
  1178                           
  1179                           ;main.c: 87:         CONVdec(&pot2,&val2);
  1180  0646  305E               	movlw	(low (_val2| 0))& (0+255)
  1181  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1182  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0649  00A3               	movwf	??_main^(0+128)
  1184  064A  0823               	movf	??_main^(0+128),w
  1185  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1186  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1187  064D  00C4               	movwf	CONVdec@equiv
  1188  064E  306D               	movlw	(low (_pot2| 0))& (0+255)
  1189  064F  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1190  0654                     l3064:
  1191                           
  1192                           ;main.c: 88:         sendfloat(val2);
  1193  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0656  0861               	movf	_val2+3,w
  1196  0657  00D0               	movwf	sendfloat@valor+3
  1197  0658  0860               	movf	_val2+2,w
  1198  0659  00CF               	movwf	sendfloat@valor+2
  1199  065A  085F               	movf	_val2+1,w
  1200  065B  00CE               	movwf	sendfloat@valor+1
  1201  065C  085E               	movf	_val2,w
  1202  065D  00CD               	movwf	sendfloat@valor
  1203  065E  120A  118A  2757  120A  118A  	fcall	_sendfloat
  1204  0663                     l3066:
  1205                           
  1206                           ;main.c: 89:         sendString("UART: \r");
  1207  0663  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1208  0664  120A  158A  22BC  120A  118A  	fcall	_sendString
  1209  0669                     l3068:
  1210                           
  1211                           ;main.c: 90:         sendhex(&UARTval);
  1212  0669  306C               	movlw	(low (_UARTval| 0))& (0+255)
  1213  066A  120A  158A  2377  120A  118A  	fcall	_sendhex
  1214  066F                     l3070:
  1215                           
  1216                           ;main.c: 91:         sendString("\r\r\r\r\r");
  1217  066F  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1218  0670  120A  158A  22BC  120A  118A  	fcall	_sendString
  1219  0675                     l3072:
  1220                           
  1221                           ;main.c: 93:         floTochar(val1,&disp1);
  1222  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0677  0865               	movf	_val1+3,w
  1225  0678  00D0               	movwf	floTochar@valor+3
  1226  0679  0864               	movf	_val1+2,w
  1227  067A  00CF               	movwf	floTochar@valor+2
  1228  067B  0863               	movf	_val1+1,w
  1229  067C  00CE               	movwf	floTochar@valor+1
  1230  067D  0862               	movf	_val1,w
  1231  067E  00CD               	movwf	floTochar@valor
  1232  067F  3069               	movlw	(low (_disp1| 0))& (0+255)
  1233  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0682  00A3               	movwf	??_main^(0+128)
  1236  0683  0823               	movf	??_main^(0+128),w
  1237  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0686  00D1               	movwf	floTochar@conv
  1240  0687  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1241  068C                     l3074:
  1242                           
  1243                           ;main.c: 94:         floTochar(val2,&disp2);
  1244  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1245  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1246  068E  0861               	movf	_val2+3,w
  1247  068F  00D0               	movwf	floTochar@valor+3
  1248  0690  0860               	movf	_val2+2,w
  1249  0691  00CF               	movwf	floTochar@valor+2
  1250  0692  085F               	movf	_val2+1,w
  1251  0693  00CE               	movwf	floTochar@valor+1
  1252  0694  085E               	movf	_val2,w
  1253  0695  00CD               	movwf	floTochar@valor
  1254  0696  3066               	movlw	(low (_disp2| 0))& (0+255)
  1255  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0699  00A3               	movwf	??_main^(0+128)
  1258  069A  0823               	movf	??_main^(0+128),w
  1259  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1260  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1261  069D  00D1               	movwf	floTochar@conv
  1262  069E  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1263  06A3                     l3076:
  1264                           
  1265                           ;main.c: 95:         hexTochar(UARTval,&disp3);
  1266  06A3  30A0               	movlw	(low (_disp3| 0))& (0+255)
  1267  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1268  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1269  06A6  00A3               	movwf	??_main^(0+128)
  1270  06A7  0823               	movf	??_main^(0+128),w
  1271  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1272  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1273  06AA  00AA               	movwf	hexTochar@conv
  1274  06AB  086C               	movf	_UARTval,w
  1275  06AC  120A  158A  234B  120A  118A  	fcall	_hexTochar
  1276  06B1                     l3078:
  1277                           
  1278                           ;main.c: 97:         cursorLCD(1,1);
  1279  06B1  01F6               	clrf	cursorLCD@columna
  1280  06B2  0AF6               	incf	cursorLCD@columna,f
  1281  06B3  3001               	movlw	1
  1282  06B4  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1283                           
  1284                           ;main.c: 98:         LCDstring("S1:   S2:   S3:");
  1285  06B9  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1286  06BA  120A  158A  229D  120A  118A  	fcall	_LCDstring
  1287  06BF                     l3080:
  1288                           
  1289                           ;main.c: 99:         cursorLCD(2,1);
  1290  06BF  01F6               	clrf	cursorLCD@columna
  1291  06C0  0AF6               	incf	cursorLCD@columna,f
  1292  06C1  3002               	movlw	2
  1293  06C2  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1294  06C7                     l3082:
  1295                           
  1296                           ;main.c: 100:         dispCHAR(disp1[0]+48);
  1297  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1298  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1299  06C9  0869               	movf	_disp1,w
  1300  06CA  3E30               	addlw	48
  1301  06CB  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1302  06D0                     l3084:
  1303                           
  1304                           ;main.c: 101:         dispCHAR('.');
  1305  06D0  302E               	movlw	46
  1306  06D1  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1307  06D6                     l3086:
  1308                           
  1309                           ;main.c: 102:         dispCHAR(disp1[1]+48);
  1310  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1311  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1312  06D8  086A               	movf	_disp1+1,w
  1313  06D9  3E30               	addlw	48
  1314  06DA  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1315  06DF                     l3088:
  1316                           
  1317                           ;main.c: 103:         dispCHAR(disp1[2]+48);
  1318  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1319  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1320  06E1  086B               	movf	_disp1+2,w
  1321  06E2  3E30               	addlw	48
  1322  06E3  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1323  06E8                     l3090:
  1324                           
  1325                           ;main.c: 104:         dispCHAR('V');
  1326  06E8  3056               	movlw	86
  1327  06E9  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1328  06EE                     l3092:
  1329                           
  1330                           ;main.c: 105:         cursorLCD(2,7);
  1331  06EE  3007               	movlw	7
  1332  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  1333  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  1334  06F1  00A3               	movwf	??_main^(0+128)
  1335  06F2  0823               	movf	??_main^(0+128),w
  1336  06F3  00F6               	movwf	cursorLCD@columna
  1337  06F4  3002               	movlw	2
  1338  06F5  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1339  06FA                     l3094:
  1340                           
  1341                           ;main.c: 106:         dispCHAR(disp2[0]+48);
  1342  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1343  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1344  06FC  0866               	movf	_disp2,w
  1345  06FD  3E30               	addlw	48
  1346  06FE  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1347  0703                     l3096:
  1348                           
  1349                           ;main.c: 107:         dispCHAR('.');
  1350  0703  302E               	movlw	46
  1351  0704  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1352  0709                     l3098:
  1353                           
  1354                           ;main.c: 108:         dispCHAR(disp2[1]+48);
  1355  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1356  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1357  070B  0867               	movf	_disp2+1,w
  1358  070C  3E30               	addlw	48
  1359  070D  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1360  0712                     l3100:
  1361                           
  1362                           ;main.c: 109:         dispCHAR(disp2[2]+48);
  1363  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0714  0868               	movf	_disp2+2,w
  1366  0715  3E30               	addlw	48
  1367  0716  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1368  071B                     l3102:
  1369                           
  1370                           ;main.c: 110:         dispCHAR('V');
  1371  071B  3056               	movlw	86
  1372  071C  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1373  0721                     l3104:
  1374                           
  1375                           ;main.c: 111:         cursorLCD(2,13);
  1376  0721  300D               	movlw	13
  1377  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1378  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1379  0724  00A3               	movwf	??_main^(0+128)
  1380  0725  0823               	movf	??_main^(0+128),w
  1381  0726  00F6               	movwf	cursorLCD@columna
  1382  0727  3002               	movlw	2
  1383  0728  120A  158A  22DB  120A  118A  	fcall	_cursorLCD
  1384  072D                     l3106:
  1385                           
  1386                           ;main.c: 112:         dispCHAR(disp3[2]+48);
  1387  072D  1683               	bsf	3,5	;RP0=1, select bank1
  1388  072E  1303               	bcf	3,6	;RP1=0, select bank1
  1389  072F  0822               	movf	(_disp3^(0+128)+2),w
  1390  0730  3E30               	addlw	48
  1391  0731  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1392  0736                     l3108:
  1393                           
  1394                           ;main.c: 113:         dispCHAR(disp3[1]+48);
  1395  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0738  0821               	movf	(_disp3^(0+128)+1),w
  1398  0739  3E30               	addlw	48
  1399  073A  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1400  073F                     l3110:
  1401                           
  1402                           ;main.c: 114:         dispCHAR(disp3[0]+48);
  1403  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1404  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1405  0741  0820               	movf	_disp3^(0+128),w
  1406  0742  3E30               	addlw	48
  1407  0743  120A  158A  2252  120A  118A  	fcall	_dispCHAR
  1408  0748                     l3112:
  1409                           
  1410                           ;main.c: 115:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1411  0748  301A               	movlw	26
  1412  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1413  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1414  074B  00A4               	movwf	(??_main^(0+128)+1)
  1415  074C  30F7               	movlw	247
  1416  074D  00A3               	movwf	??_main^(0+128)
  1417  074E                     u4057:
  1418  074E  0BA3               	decfsz	??_main^(0+128),f
  1419  074F  2F4E               	goto	u4057
  1420  0750  0BA4               	decfsz	(??_main^(0+128)+1),f
  1421  0751  2F4E               	goto	u4057
  1422  0752  2F53               	nop2
  1423  0753  2E1D               	goto	l3054
  1424  0754  120A  118A  280C   	ljmp	start
  1425  0757                     __end_of_main:
  1426                           
  1427                           	psect	text1
  1428  0B77                     __ptext1:	
  1429 ;; *************** function _sendhex *****************
  1430 ;; Defined at:
  1431 ;;		line 81 in file "ComSerial.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  valor           1    wreg     PTR unsigned char 
  1434 ;;		 -> UARTval(1), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  valor           1   13[BANK0 ] PTR unsigned char 
  1437 ;;		 -> UARTval(1), 
  1438 ;;  decena          1   16[BANK0 ] unsigned char 
  1439 ;;  centena         1   15[BANK0 ] unsigned char 
  1440 ;;  unidad          1   14[BANK0 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       4       0       0       0
  1452 ;;      Temps:          0       3       0       0       0
  1453 ;;      Totals:         0       7       0       0       0
  1454 ;;Total ram usage:        7 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    3
  1457 ;; This function calls:
  1458 ;;		_divisiondecimal
  1459 ;;		_send1dato
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _sendhex
  1467  0B77                     _sendhex:
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1471                           ;sendhex@valor stored from wreg
  1472  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0B79  00AD               	movwf	sendhex@valor
  1475  0B7A                     l3022:
  1476                           
  1477                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(*valor,&unidad,&decena,&ce
      +                          ntena);
  1478  0B7A  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
  1479  0B7B  00AA               	movwf	??_sendhex
  1480  0B7C  082A               	movf	??_sendhex,w
  1481  0B7D  00A4               	movwf	divisiondecimal@un
  1482  0B7E  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
  1483  0B7F  00AB               	movwf	??_sendhex+1
  1484  0B80  082B               	movf	??_sendhex+1,w
  1485  0B81  00A5               	movwf	divisiondecimal@dec
  1486  0B82  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
  1487  0B83  00AC               	movwf	??_sendhex+2
  1488  0B84  082C               	movf	??_sendhex+2,w
  1489  0B85  00A6               	movwf	divisiondecimal@cent
  1490  0B86  082D               	movf	sendhex@valor,w
  1491  0B87  0084               	movwf	4
  1492  0B88  1383               	bcf	3,7	;select IRP bank0
  1493  0B89  0800               	movf	0,w
  1494  0B8A  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  1495  0B8F                     l3024:
  1496                           
  1497                           ;ComSerial.c: 87:     send1dato(centena +48);
  1498  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0B91  082F               	movf	sendhex@centena,w
  1501  0B92  3E30               	addlw	48
  1502  0B93  120A  158A  2246  120A  158A  	fcall	_send1dato
  1503  0B98                     l3026:
  1504                           
  1505                           ;ComSerial.c: 88:     send1dato(decena +48);
  1506  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0B9A  0830               	movf	sendhex@decena,w
  1509  0B9B  3E30               	addlw	48
  1510  0B9C  120A  158A  2246  120A  158A  	fcall	_send1dato
  1511  0BA1                     l3028:
  1512                           
  1513                           ;ComSerial.c: 89:     send1dato(unidad +48);
  1514  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0BA3  082E               	movf	sendhex@unidad,w
  1517  0BA4  3E30               	addlw	48
  1518  0BA5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1519  0BAA                     l169:
  1520  0BAA  0008               	return
  1521  0BAB                     __end_of_sendhex:
  1522                           
  1523                           	psect	text2
  1524  0757                     __ptext2:	
  1525 ;; *************** function _sendfloat *****************
  1526 ;; Defined at:
  1527 ;;		line 39 in file "ComSerial.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  valor           4   45[BANK0 ] const float 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  temp            4   53[BANK0 ] float 
  1532 ;;  digdecimal      1   59[BANK0 ] unsigned char [1]
  1533 ;;  entero          1   58[BANK0 ] unsigned char 
  1534 ;;  decimal         1   57[BANK0 ] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       4       0       0       0
  1545 ;;      Locals:         0       7       0       0       0
  1546 ;;      Temps:          0       4       0       0       0
  1547 ;;      Totals:         0      15       0       0       0
  1548 ;;Total ram usage:       15 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    3
  1551 ;; This function calls:
  1552 ;;		___flmul
  1553 ;;		___flsub
  1554 ;;		___fltol
  1555 ;;		___xxtofl
  1556 ;;		_division
  1557 ;;		_send1dato
  1558 ;;		_sendString
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _sendfloat
  1566  0757                     _sendfloat:
  1567  0757                     l3008:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _sendfloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1570                           
  1571                           
  1572                           ;ComSerial.c: 40:     uint8_t entero;;ComSerial.c: 41:     uint8_t decimal;;ComSerial.c:
      +                           42:     float temp;;ComSerial.c: 43:     unsigned char digdecimal[1];;ComSerial.c: 49: 
      +                              entero = valor;
  1573  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0759  0850               	movf	sendfloat@valor+3,w
  1576  075A  00C7               	movwf	___fltol@f1+3
  1577  075B  084F               	movf	sendfloat@valor+2,w
  1578  075C  00C6               	movwf	___fltol@f1+2
  1579  075D  084E               	movf	sendfloat@valor+1,w
  1580  075E  00C5               	movwf	___fltol@f1+1
  1581  075F  084D               	movf	sendfloat@valor,w
  1582  0760  00C4               	movwf	___fltol@f1
  1583  0761  120A  158A  25AF  120A  118A  	fcall	___fltol
  1584  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0768  0844               	movf	?___fltol,w
  1587  0769  00D1               	movwf	??_sendfloat
  1588  076A  0851               	movf	??_sendfloat,w
  1589  076B  00DA               	movwf	sendfloat@entero
  1590  076C                     l3010:
  1591                           
  1592                           ;ComSerial.c: 50:     temp = valor-(float)entero;
  1593  076C  085A               	movf	sendfloat@entero,w
  1594  076D  00D1               	movwf	??_sendfloat
  1595  076E  01D2               	clrf	??_sendfloat+1
  1596  076F  01D3               	clrf	??_sendfloat+2
  1597  0770  01D4               	clrf	??_sendfloat+3
  1598  0771  0854               	movf	??_sendfloat+3,w
  1599  0772  00F6               	movwf	___xxtofl@val+3
  1600  0773  0853               	movf	??_sendfloat+2,w
  1601  0774  00F5               	movwf	___xxtofl@val+2
  1602  0775  0852               	movf	??_sendfloat+1,w
  1603  0776  00F4               	movwf	___xxtofl@val+1
  1604  0777  0851               	movf	??_sendfloat,w
  1605  0778  00F3               	movwf	___xxtofl@val
  1606  0779  3000               	movlw	0
  1607  077A  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1608  077F  0876               	movf	?___xxtofl+3,w
  1609  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0782  00B3               	movwf	___flsub@a+3
  1612  0783  0875               	movf	?___xxtofl+2,w
  1613  0784  00B2               	movwf	___flsub@a+2
  1614  0785  0874               	movf	?___xxtofl+1,w
  1615  0786  00B1               	movwf	___flsub@a+1
  1616  0787  0873               	movf	?___xxtofl,w
  1617  0788  00B0               	movwf	___flsub@a
  1618  0789  0850               	movf	sendfloat@valor+3,w
  1619  078A  00B7               	movwf	___flsub@b+3
  1620  078B  084F               	movf	sendfloat@valor+2,w
  1621  078C  00B6               	movwf	___flsub@b+2
  1622  078D  084E               	movf	sendfloat@valor+1,w
  1623  078E  00B5               	movwf	___flsub@b+1
  1624  078F  084D               	movf	sendfloat@valor,w
  1625  0790  00B4               	movwf	___flsub@b
  1626  0791  120A  158A  22FE  120A  118A  	fcall	___flsub
  1627  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0798  0833               	movf	?___flsub+3,w
  1630  0799  00D8               	movwf	sendfloat@temp+3
  1631  079A  0832               	movf	?___flsub+2,w
  1632  079B  00D7               	movwf	sendfloat@temp+2
  1633  079C  0831               	movf	?___flsub+1,w
  1634  079D  00D6               	movwf	sendfloat@temp+1
  1635  079E  0830               	movf	?___flsub,w
  1636  079F  00D5               	movwf	sendfloat@temp
  1637  07A0                     l3012:
  1638                           
  1639                           ;ComSerial.c: 51:     decimal = (temp*100);
  1640  07A0  0858               	movf	sendfloat@temp+3,w
  1641  07A1  00B1               	movwf	___flmul@a+3
  1642  07A2  0857               	movf	sendfloat@temp+2,w
  1643  07A3  00B0               	movwf	___flmul@a+2
  1644  07A4  0856               	movf	sendfloat@temp+1,w
  1645  07A5  00AF               	movwf	___flmul@a+1
  1646  07A6  0855               	movf	sendfloat@temp,w
  1647  07A7  00AE               	movwf	___flmul@a
  1648  07A8  3042               	movlw	66
  1649  07A9  00AD               	movwf	___flmul@b+3
  1650  07AA  30C8               	movlw	200
  1651  07AB  00AC               	movwf	___flmul@b+2
  1652  07AC  3000               	movlw	0
  1653  07AD  00AB               	movwf	___flmul@b+1
  1654  07AE  3000               	movlw	0
  1655  07AF  00AA               	movwf	___flmul@b
  1656  07B0  120A  118A  2022  120A  118A  	fcall	___flmul
  1657  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1658  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1659  07B7  082D               	movf	?___flmul+3,w
  1660  07B8  00C7               	movwf	___fltol@f1+3
  1661  07B9  082C               	movf	?___flmul+2,w
  1662  07BA  00C6               	movwf	___fltol@f1+2
  1663  07BB  082B               	movf	?___flmul+1,w
  1664  07BC  00C5               	movwf	___fltol@f1+1
  1665  07BD  082A               	movf	?___flmul,w
  1666  07BE  00C4               	movwf	___fltol@f1
  1667  07BF  120A  158A  25AF  120A  118A  	fcall	___fltol
  1668  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1669  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1670  07C6  0844               	movf	?___fltol,w
  1671  07C7  00D1               	movwf	??_sendfloat
  1672  07C8  0851               	movf	??_sendfloat,w
  1673  07C9  00D9               	movwf	sendfloat@decimal
  1674  07CA                     l3014:
  1675                           
  1676                           ;ComSerial.c: 52:     division(decimal,&digdecimal[0],&digdecimal[1]);
  1677  07CA  305B               	movlw	(low (sendfloat@digdecimal| 0))& (0+255)
  1678  07CB  00D1               	movwf	??_sendfloat
  1679  07CC  0851               	movf	??_sendfloat,w
  1680  07CD  00F8               	movwf	division@un
  1681  07CE  305C               	movlw	(low ((sendfloat@digdecimal| 0+1)))& (0+255)
  1682  07CF  00D2               	movwf	??_sendfloat+1
  1683  07D0  0852               	movf	??_sendfloat+1,w
  1684  07D1  00F9               	movwf	division@dec
  1685  07D2  0859               	movf	sendfloat@decimal,w
  1686  07D3  120A  158A  2467  120A  118A  	fcall	_division
  1687  07D8                     l3016:
  1688                           
  1689                           ;ComSerial.c: 53:     send1dato(entero+48);
  1690  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1691  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1692  07DA  085A               	movf	sendfloat@entero,w
  1693  07DB  3E30               	addlw	48
  1694  07DC  120A  158A  2246  120A  118A  	fcall	_send1dato
  1695                           
  1696                           ;ComSerial.c: 54:     sendString(".");
  1697  07E1  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1698  07E2  120A  158A  22BC  120A  118A  	fcall	_sendString
  1699  07E7                     l3018:
  1700                           
  1701                           ;ComSerial.c: 55:     send1dato(digdecimal[1]+48);
  1702  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1703  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1704  07E9  085C               	movf	sendfloat@digdecimal+1,w
  1705  07EA  3E30               	addlw	48
  1706  07EB  120A  158A  2246  120A  118A  	fcall	_send1dato
  1707  07F0                     l3020:
  1708                           
  1709                           ;ComSerial.c: 56:     send1dato(digdecimal[0]+48);
  1710  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1711  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1712  07F2  085B               	movf	sendfloat@digdecimal,w
  1713  07F3  3E30               	addlw	48
  1714  07F4  120A  158A  2246  120A  118A  	fcall	_send1dato
  1715                           
  1716                           ;ComSerial.c: 57:     sendString("\r");
  1717  07F9  302D               	movlw	(low (((STR_4+4)-__stringbase)| (0+32768)))& (0+255)
  1718  07FA  120A  158A  22BC  120A  118A  	fcall	_sendString
  1719  07FF                     l163:
  1720  07FF  0008               	return
  1721  0800                     __end_of_sendfloat:
  1722                           
  1723                           	psect	text3
  1724  0ABC                     __ptext3:	
  1725 ;; *************** function _sendString *****************
  1726 ;; Defined at:
  1727 ;;		line 31 in file "ComSerial.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  mensaje         1    wreg     PTR unsigned char 
  1730 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1731 ;;		 -> STR_2(8), STR_1(8), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  mensaje         1    5[COMMON] PTR unsigned char 
  1734 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1735 ;;		 -> STR_2(8), STR_1(8), 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       0       0       0
  1746 ;;      Locals:         1       0       0       0       0
  1747 ;;      Temps:          1       0       0       0       0
  1748 ;;      Totals:         2       0       0       0       0
  1749 ;;Total ram usage:        2 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    2
  1752 ;; This function calls:
  1753 ;;		_send1dato
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;;		_sendfloat
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _sendString
  1762  0ABC                     _sendString:
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1766                           ;sendString@mensaje stored from wreg
  1767  0ABC  00F5               	movwf	sendString@mensaje
  1768  0ABD                     l1918:
  1769                           
  1770                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1771  0ABD  2ACE               	goto	l1924
  1772  0ABE                     l1920:
  1773                           
  1774                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1775  0ABE  0875               	movf	sendString@mensaje,w
  1776  0ABF  0084               	movwf	4
  1777  0AC0  120A  158A  2000  120A  158A  	fcall	stringdir
  1778  0AC5  120A  158A  2246  120A  158A  	fcall	_send1dato
  1779  0ACA                     l1922:
  1780                           
  1781                           ;ComSerial.c: 34:         mensaje ++;
  1782  0ACA  3001               	movlw	1
  1783  0ACB  00F4               	movwf	??_sendString
  1784  0ACC  0874               	movf	??_sendString,w
  1785  0ACD  07F5               	addwf	sendString@mensaje,f
  1786  0ACE                     l1924:
  1787                           
  1788                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1789  0ACE  0875               	movf	sendString@mensaje,w
  1790  0ACF  0084               	movwf	4
  1791  0AD0  120A  158A  2000  120A  158A  	fcall	stringdir
  1792  0AD5  3A00               	xorlw	0
  1793  0AD6  1D03               	skipz
  1794  0AD7  2AD9               	goto	u2031
  1795  0AD8  2ADA               	goto	u2030
  1796  0AD9                     u2031:
  1797  0AD9  2ABE               	goto	l1920
  1798  0ADA                     u2030:
  1799  0ADA                     l160:
  1800  0ADA  0008               	return
  1801  0ADB                     __end_of_sendString:
  1802                           
  1803                           	psect	text4
  1804  0A46                     __ptext4:	
  1805 ;; *************** function _send1dato *****************
  1806 ;; Defined at:
  1807 ;;		line 26 in file "ComSerial.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  dato            1    wreg     unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  dato            1    3[COMMON] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       0       0       0       0
  1822 ;;      Locals:         1       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0
  1824 ;;      Totals:         1       0       0       0       0
  1825 ;;Total ram usage:        1 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_sendString
  1832 ;;		_sendfloat
  1833 ;;		_sendhex
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _send1dato
  1839  0A46                     _send1dato:
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _send1dato: [wreg]
  1843                           ;send1dato@dato stored from wreg
  1844  0A46  00F3               	movwf	send1dato@dato
  1845  0A47                     l1650:
  1846                           
  1847                           ;ComSerial.c: 27:     TXREG = dato;
  1848  0A47  0873               	movf	send1dato@dato,w
  1849  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0A4A  0099               	movwf	25	;volatile
  1852  0A4B                     l151:	
  1853                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1854                           
  1855  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  1856  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  1857  0A4D  1C98               	btfss	24,1	;volatile
  1858  0A4E  2A50               	goto	u1411
  1859  0A4F  2A51               	goto	u1410
  1860  0A50                     u1411:
  1861  0A50  2A4B               	goto	l151
  1862  0A51                     u1410:
  1863  0A51                     l154:
  1864  0A51  0008               	return
  1865  0A52                     __end_of_send1dato:
  1866                           
  1867                           	psect	text5
  1868  0CAF                     __ptext5:	
  1869 ;; *************** function _initLCD *****************
  1870 ;; Defined at:
  1871 ;;		line 20 in file "LCDD2.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          2       0       0       0       0
  1888 ;;      Totals:         2       0       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		_comandoLCD
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _initLCD
  1901  0CAF                     _initLCD:
  1902  0CAF                     l2280:	
  1903                           ;incstack = 0
  1904                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1905                           
  1906                           
  1907                           ;LCDD2.c: 21:     RC0 = 0;
  1908  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0CB1  1007               	bcf	7,0	;volatile
  1911  0CB2                     l2282:
  1912                           
  1913                           ;LCDD2.c: 22:     PORTD = 0X00;
  1914  0CB2  0188               	clrf	8	;volatile
  1915  0CB3                     l2284:
  1916                           
  1917                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1918  0CB3  3082               	movlw	130
  1919  0CB4  00F7               	movwf	??_initLCD+1
  1920  0CB5  30DD               	movlw	221
  1921  0CB6  00F6               	movwf	??_initLCD
  1922  0CB7                     u4067:
  1923  0CB7  0BF6               	decfsz	??_initLCD,f
  1924  0CB8  2CB7               	goto	u4067
  1925  0CB9  0BF7               	decfsz	??_initLCD+1,f
  1926  0CBA  2CB7               	goto	u4067
  1927  0CBB  2CBC               	nop2
  1928  0CBC                     l2286:
  1929                           
  1930                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1931  0CBC  3030               	movlw	48
  1932  0CBD  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1933  0CC2                     l2288:
  1934                           
  1935                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1936  0CC2  300D               	movlw	13
  1937  0CC3  00F7               	movwf	??_initLCD+1
  1938  0CC4  30FB               	movlw	251
  1939  0CC5  00F6               	movwf	??_initLCD
  1940  0CC6                     u4077:
  1941  0CC6  0BF6               	decfsz	??_initLCD,f
  1942  0CC7  2CC6               	goto	u4077
  1943  0CC8  0BF7               	decfsz	??_initLCD+1,f
  1944  0CC9  2CC6               	goto	u4077
  1945  0CCA  2CCB               	nop2
  1946  0CCB                     l2290:
  1947                           
  1948                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1949  0CCB  3030               	movlw	48
  1950  0CCC  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1951  0CD1                     l2292:
  1952                           
  1953                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1954  0CD1  300D               	movlw	13
  1955  0CD2  00F7               	movwf	??_initLCD+1
  1956  0CD3  30FB               	movlw	251
  1957  0CD4  00F6               	movwf	??_initLCD
  1958  0CD5                     u4087:
  1959  0CD5  0BF6               	decfsz	??_initLCD,f
  1960  0CD6  2CD5               	goto	u4087
  1961  0CD7  0BF7               	decfsz	??_initLCD+1,f
  1962  0CD8  2CD5               	goto	u4087
  1963  0CD9  2CDA               	nop2
  1964  0CDA                     l2294:
  1965                           
  1966                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1967  0CDA  3030               	movlw	48
  1968  0CDB  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1969  0CE0                     l2296:
  1970                           
  1971                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1972  0CE0  3038               	movlw	56
  1973  0CE1  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1974  0CE6                     l2298:
  1975                           
  1976                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1977  0CE6  3006               	movlw	6
  1978  0CE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1979  0CEC                     l2300:
  1980                           
  1981                           ;LCDD2.c: 31:     comandoLCD(0X0C);
  1982  0CEC  300C               	movlw	12
  1983  0CED  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1984  0CF2                     l2302:
  1985                           
  1986                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1987  0CF2  3001               	movlw	1
  1988  0CF3  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  1989  0CF8                     l200:
  1990  0CF8  0008               	return
  1991  0CF9                     __end_of_initLCD:
  1992                           
  1993                           	psect	text6
  1994  0B4B                     __ptext6:	
  1995 ;; *************** function _hexTochar *****************
  1996 ;; Defined at:
  1997 ;;		line 92 in file "ComSerial.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  valor           1    wreg     unsigned char 
  2000 ;;  conv            1   10[BANK0 ] PTR unsigned char 
  2001 ;;		 -> disp3(3), 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  valor           1   14[BANK0 ] unsigned char 
  2004 ;;  decena          1   17[BANK0 ] unsigned char 
  2005 ;;  centena         1   16[BANK0 ] unsigned char 
  2006 ;;  unidad          1   15[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       1       0       0       0
  2017 ;;      Locals:         0       4       0       0       0
  2018 ;;      Temps:          0       3       0       0       0
  2019 ;;      Totals:         0       8       0       0       0
  2020 ;;Total ram usage:        8 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    3
  2023 ;; This function calls:
  2024 ;;		_divisiondecimal
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _hexTochar
  2032  0B4B                     _hexTochar:
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _hexTochar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2036                           ;hexTochar@valor stored from wreg
  2037  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0B4D  00AE               	movwf	hexTochar@valor
  2040  0B4E                     l3042:
  2041                           
  2042                           ;ComSerial.c: 93:     uint8_t centena;;ComSerial.c: 94:     uint8_t decena;;ComSerial.c:
      +                           95:     uint8_t unidad;;ComSerial.c: 97:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  2043  0B4E  302F               	movlw	(low (hexTochar@unidad| 0))& (0+255)
  2044  0B4F  00AB               	movwf	??_hexTochar
  2045  0B50  082B               	movf	??_hexTochar,w
  2046  0B51  00A4               	movwf	divisiondecimal@un
  2047  0B52  3031               	movlw	(low (hexTochar@decena| 0))& (0+255)
  2048  0B53  00AC               	movwf	??_hexTochar+1
  2049  0B54  082C               	movf	??_hexTochar+1,w
  2050  0B55  00A5               	movwf	divisiondecimal@dec
  2051  0B56  3030               	movlw	(low (hexTochar@centena| 0))& (0+255)
  2052  0B57  00AD               	movwf	??_hexTochar+2
  2053  0B58  082D               	movf	??_hexTochar+2,w
  2054  0B59  00A6               	movwf	divisiondecimal@cent
  2055  0B5A  082E               	movf	hexTochar@valor,w
  2056  0B5B  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  2057  0B60                     l3044:
  2058                           
  2059                           ;ComSerial.c: 98:     conv[0]= unidad;
  2060  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0B62  082F               	movf	hexTochar@unidad,w
  2063  0B63  00AB               	movwf	??_hexTochar
  2064  0B64  082A               	movf	hexTochar@conv,w
  2065  0B65  0084               	movwf	4
  2066  0B66  082B               	movf	??_hexTochar,w
  2067  0B67  1383               	bcf	3,7	;select IRP bank0
  2068  0B68  0080               	movwf	0
  2069  0B69                     l3046:
  2070                           
  2071                           ;ComSerial.c: 99:     conv[1]= decena;
  2072  0B69  0831               	movf	hexTochar@decena,w
  2073  0B6A  00AB               	movwf	??_hexTochar
  2074  0B6B  0A2A               	incf	hexTochar@conv,w
  2075  0B6C  0084               	movwf	4
  2076  0B6D  082B               	movf	??_hexTochar,w
  2077  0B6E  0080               	movwf	0
  2078  0B6F                     l3048:
  2079                           
  2080                           ;ComSerial.c: 100:     conv[2]= centena;
  2081  0B6F  0830               	movf	hexTochar@centena,w
  2082  0B70  00AB               	movwf	??_hexTochar
  2083  0B71  082A               	movf	hexTochar@conv,w
  2084  0B72  3E02               	addlw	2
  2085  0B73  0084               	movwf	4
  2086  0B74  082B               	movf	??_hexTochar,w
  2087  0B75  0080               	movwf	0
  2088  0B76                     l172:
  2089  0B76  0008               	return
  2090  0B77                     __end_of_hexTochar:
  2091                           
  2092                           	psect	text7
  2093  0E2B                     __ptext7:	
  2094 ;; *************** function _divisiondecimal *****************
  2095 ;; Defined at:
  2096 ;;		line 120 in file "ComSerial.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  conteo          1    wreg     unsigned char 
  2099 ;;  un              1    4[BANK0 ] PTR unsigned char 
  2100 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  2101 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  2102 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  2103 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  2104 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  conteo          1    8[COMMON] unsigned char 
  2107 ;;  div             1    9[COMMON] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       3       0       0       0
  2118 ;;      Locals:         2       0       0       0       0
  2119 ;;      Temps:          0       3       0       0       0
  2120 ;;      Totals:         2       6       0       0       0
  2121 ;;Total ram usage:        8 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		___awdiv
  2126 ;;		___bmul
  2127 ;; This function is called by:
  2128 ;;		_sendhex
  2129 ;;		_hexTochar
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _divisiondecimal
  2135  0E2B                     _divisiondecimal:
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2139                           ;divisiondecimal@conteo stored from wreg
  2140  0E2B  00F8               	movwf	divisiondecimal@conteo
  2141  0E2C                     l2762:
  2142                           
  2143                           ;ComSerial.c: 121:     uint8_t div = conteo;
  2144  0E2C  0878               	movf	divisiondecimal@conteo,w
  2145  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0E2F  00A7               	movwf	??_divisiondecimal
  2148  0E30  0827               	movf	??_divisiondecimal,w
  2149  0E31  00F9               	movwf	divisiondecimal@div
  2150  0E32                     l2764:
  2151                           
  2152                           ;ComSerial.c: 122:     *un = 0;
  2153  0E32  0824               	movf	divisiondecimal@un,w
  2154  0E33  0084               	movwf	4
  2155  0E34  1383               	bcf	3,7	;select IRP bank0
  2156  0E35  0180               	clrf	0
  2157  0E36                     l2766:
  2158                           
  2159                           ;ComSerial.c: 123:     *dec = 0;
  2160  0E36  0825               	movf	divisiondecimal@dec,w
  2161  0E37  0084               	movwf	4
  2162  0E38  0180               	clrf	0
  2163  0E39                     l2768:
  2164                           
  2165                           ;ComSerial.c: 124:     *cent = 0;
  2166  0E39  0826               	movf	divisiondecimal@cent,w
  2167  0E3A  0084               	movwf	4
  2168  0E3B  0180               	clrf	0
  2169                           
  2170                           ;ComSerial.c: 127:     while(div >= 100){
  2171  0E3C  2E68               	goto	l2772
  2172  0E3D                     l2770:
  2173                           
  2174                           ;ComSerial.c: 128:     *cent = div/100;
  2175  0E3D  3064               	movlw	100
  2176  0E3E  00F3               	movwf	___awdiv@divisor
  2177  0E3F  3000               	movlw	0
  2178  0E40  00F4               	movwf	___awdiv@divisor+1
  2179  0E41  0879               	movf	divisiondecimal@div,w
  2180  0E42  00A7               	movwf	??_divisiondecimal
  2181  0E43  01A8               	clrf	??_divisiondecimal+1
  2182  0E44  0827               	movf	??_divisiondecimal,w
  2183  0E45  00F5               	movwf	___awdiv@dividend
  2184  0E46  0828               	movf	??_divisiondecimal+1,w
  2185  0E47  00F6               	movwf	___awdiv@dividend+1
  2186  0E48  120A  158A  2546  120A  158A  	fcall	___awdiv
  2187  0E4D  0873               	movf	?___awdiv,w
  2188  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0E50  00A9               	movwf	??_divisiondecimal+2
  2191  0E51  0826               	movf	divisiondecimal@cent,w
  2192  0E52  0084               	movwf	4
  2193  0E53  0829               	movf	??_divisiondecimal+2,w
  2194  0E54  1383               	bcf	3,7	;select IRP bank0
  2195  0E55  0080               	movwf	0
  2196                           
  2197                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  2198  0E56  309C               	movlw	156
  2199  0E57  00A7               	movwf	??_divisiondecimal
  2200  0E58  0827               	movf	??_divisiondecimal,w
  2201  0E59  00F3               	movwf	___bmul@multiplicand
  2202  0E5A  0826               	movf	divisiondecimal@cent,w
  2203  0E5B  0084               	movwf	4
  2204  0E5C  0800               	movf	0,w
  2205  0E5D  120A  158A  2288  120A  158A  	fcall	___bmul
  2206  0E62  0779               	addwf	divisiondecimal@div,w
  2207  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0E65  00A8               	movwf	??_divisiondecimal+1
  2210  0E66  0828               	movf	??_divisiondecimal+1,w
  2211  0E67  00F9               	movwf	divisiondecimal@div
  2212  0E68                     l2772:
  2213                           
  2214                           ;ComSerial.c: 127:     while(div >= 100){
  2215  0E68  3064               	movlw	100
  2216  0E69  0279               	subwf	divisiondecimal@div,w
  2217  0E6A  1803               	skipnc
  2218  0E6B  2E6D               	goto	u3421
  2219  0E6C  2E6E               	goto	u3420
  2220  0E6D                     u3421:
  2221  0E6D  2E3D               	goto	l2770
  2222  0E6E                     u3420:
  2223  0E6E  2E9A               	goto	l2776
  2224  0E6F                     l2774:
  2225                           
  2226                           ;ComSerial.c: 133:     *dec = div/10;
  2227  0E6F  300A               	movlw	10
  2228  0E70  00F3               	movwf	___awdiv@divisor
  2229  0E71  3000               	movlw	0
  2230  0E72  00F4               	movwf	___awdiv@divisor+1
  2231  0E73  0879               	movf	divisiondecimal@div,w
  2232  0E74  00A7               	movwf	??_divisiondecimal
  2233  0E75  01A8               	clrf	??_divisiondecimal+1
  2234  0E76  0827               	movf	??_divisiondecimal,w
  2235  0E77  00F5               	movwf	___awdiv@dividend
  2236  0E78  0828               	movf	??_divisiondecimal+1,w
  2237  0E79  00F6               	movwf	___awdiv@dividend+1
  2238  0E7A  120A  158A  2546  120A  158A  	fcall	___awdiv
  2239  0E7F  0873               	movf	?___awdiv,w
  2240  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0E82  00A9               	movwf	??_divisiondecimal+2
  2243  0E83  0825               	movf	divisiondecimal@dec,w
  2244  0E84  0084               	movwf	4
  2245  0E85  0829               	movf	??_divisiondecimal+2,w
  2246  0E86  1383               	bcf	3,7	;select IRP bank0
  2247  0E87  0080               	movwf	0
  2248                           
  2249                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  2250  0E88  30F6               	movlw	246
  2251  0E89  00A7               	movwf	??_divisiondecimal
  2252  0E8A  0827               	movf	??_divisiondecimal,w
  2253  0E8B  00F3               	movwf	___bmul@multiplicand
  2254  0E8C  0825               	movf	divisiondecimal@dec,w
  2255  0E8D  0084               	movwf	4
  2256  0E8E  0800               	movf	0,w
  2257  0E8F  120A  158A  2288  120A  158A  	fcall	___bmul
  2258  0E94  0779               	addwf	divisiondecimal@div,w
  2259  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0E97  00A8               	movwf	??_divisiondecimal+1
  2262  0E98  0828               	movf	??_divisiondecimal+1,w
  2263  0E99  00F9               	movwf	divisiondecimal@div
  2264  0E9A                     l2776:
  2265                           
  2266                           ;ComSerial.c: 132:     while (div >= 10){
  2267  0E9A  300A               	movlw	10
  2268  0E9B  0279               	subwf	divisiondecimal@div,w
  2269  0E9C  1803               	skipnc
  2270  0E9D  2E9F               	goto	u3431
  2271  0E9E  2EA0               	goto	u3430
  2272  0E9F                     u3431:
  2273  0E9F  2E6F               	goto	l2774
  2274  0EA0                     u3430:
  2275  0EA0                     l2778:
  2276                           
  2277                           ;ComSerial.c: 137:     *un = div;
  2278  0EA0  0879               	movf	divisiondecimal@div,w
  2279  0EA1  00A7               	movwf	??_divisiondecimal
  2280  0EA2  0824               	movf	divisiondecimal@un,w
  2281  0EA3  0084               	movwf	4
  2282  0EA4  0827               	movf	??_divisiondecimal,w
  2283  0EA5  1383               	bcf	3,7	;select IRP bank0
  2284  0EA6  0080               	movwf	0
  2285  0EA7                     l187:
  2286  0EA7  0008               	return
  2287  0EA8                     __end_of_divisiondecimal:
  2288                           
  2289                           	psect	text8
  2290  0EA8                     __ptext8:	
  2291 ;; *************** function _floTochar *****************
  2292 ;; Defined at:
  2293 ;;		line 61 in file "ComSerial.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  valor           4   45[BANK0 ] const float 
  2296 ;;  conv            1   49[BANK0 ] PTR unsigned char 
  2297 ;;		 -> disp2(3), disp1(3), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  temp            4   54[BANK0 ] float 
  2300 ;;  digdecimal      2   60[BANK0 ] unsigned char [2]
  2301 ;;  entero          1   59[BANK0 ] unsigned char 
  2302 ;;  decimal         1   58[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       5       0       0       0
  2313 ;;      Locals:         0       8       0       0       0
  2314 ;;      Temps:          0       4       0       0       0
  2315 ;;      Totals:         0      17       0       0       0
  2316 ;;Total ram usage:       17 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    3
  2319 ;; This function calls:
  2320 ;;		___flmul
  2321 ;;		___flsub
  2322 ;;		___fltol
  2323 ;;		___xxtofl
  2324 ;;		_division
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _floTochar
  2332  0EA8                     _floTochar:
  2333  0EA8                     l3030:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _floTochar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2336                           
  2337                           
  2338                           ;ComSerial.c: 62:     uint8_t entero;;ComSerial.c: 63:     uint8_t decimal;;ComSerial.c:
      +                           64:     float temp;;ComSerial.c: 65:     unsigned char digdecimal[2];;ComSerial.c: 71: 
      +                              entero = valor;
  2339  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0EAA  0850               	movf	floTochar@valor+3,w
  2342  0EAB  00C7               	movwf	___fltol@f1+3
  2343  0EAC  084F               	movf	floTochar@valor+2,w
  2344  0EAD  00C6               	movwf	___fltol@f1+2
  2345  0EAE  084E               	movf	floTochar@valor+1,w
  2346  0EAF  00C5               	movwf	___fltol@f1+1
  2347  0EB0  084D               	movf	floTochar@valor,w
  2348  0EB1  00C4               	movwf	___fltol@f1
  2349  0EB2  120A  158A  25AF  120A  158A  	fcall	___fltol
  2350  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0EB9  0844               	movf	?___fltol,w
  2353  0EBA  00D2               	movwf	??_floTochar
  2354  0EBB  0852               	movf	??_floTochar,w
  2355  0EBC  00DB               	movwf	floTochar@entero
  2356  0EBD                     l3032:
  2357                           
  2358                           ;ComSerial.c: 72:     digdecimal[2] = entero;
  2359  0EBD  085B               	movf	floTochar@entero,w
  2360  0EBE  00D2               	movwf	??_floTochar
  2361  0EBF  0852               	movf	??_floTochar,w
  2362  0EC0  00DE               	movwf	floTochar@digdecimal+2
  2363  0EC1                     l3034:
  2364                           
  2365                           ;ComSerial.c: 73:     temp = valor-(float)entero;
  2366  0EC1  085B               	movf	floTochar@entero,w
  2367  0EC2  00D2               	movwf	??_floTochar
  2368  0EC3  01D3               	clrf	??_floTochar+1
  2369  0EC4  01D4               	clrf	??_floTochar+2
  2370  0EC5  01D5               	clrf	??_floTochar+3
  2371  0EC6  0855               	movf	??_floTochar+3,w
  2372  0EC7  00F6               	movwf	___xxtofl@val+3
  2373  0EC8  0854               	movf	??_floTochar+2,w
  2374  0EC9  00F5               	movwf	___xxtofl@val+2
  2375  0ECA  0853               	movf	??_floTochar+1,w
  2376  0ECB  00F4               	movwf	___xxtofl@val+1
  2377  0ECC  0852               	movf	??_floTochar,w
  2378  0ECD  00F3               	movwf	___xxtofl@val
  2379  0ECE  3000               	movlw	0
  2380  0ECF  120A  158A  2744  120A  158A  	fcall	___xxtofl
  2381  0ED4  0876               	movf	?___xxtofl+3,w
  2382  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0ED7  00B3               	movwf	___flsub@a+3
  2385  0ED8  0875               	movf	?___xxtofl+2,w
  2386  0ED9  00B2               	movwf	___flsub@a+2
  2387  0EDA  0874               	movf	?___xxtofl+1,w
  2388  0EDB  00B1               	movwf	___flsub@a+1
  2389  0EDC  0873               	movf	?___xxtofl,w
  2390  0EDD  00B0               	movwf	___flsub@a
  2391  0EDE  0850               	movf	floTochar@valor+3,w
  2392  0EDF  00B7               	movwf	___flsub@b+3
  2393  0EE0  084F               	movf	floTochar@valor+2,w
  2394  0EE1  00B6               	movwf	___flsub@b+2
  2395  0EE2  084E               	movf	floTochar@valor+1,w
  2396  0EE3  00B5               	movwf	___flsub@b+1
  2397  0EE4  084D               	movf	floTochar@valor,w
  2398  0EE5  00B4               	movwf	___flsub@b
  2399  0EE6  120A  158A  22FE  120A  158A  	fcall	___flsub
  2400  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0EED  0833               	movf	?___flsub+3,w
  2403  0EEE  00D9               	movwf	floTochar@temp+3
  2404  0EEF  0832               	movf	?___flsub+2,w
  2405  0EF0  00D8               	movwf	floTochar@temp+2
  2406  0EF1  0831               	movf	?___flsub+1,w
  2407  0EF2  00D7               	movwf	floTochar@temp+1
  2408  0EF3  0830               	movf	?___flsub,w
  2409  0EF4  00D6               	movwf	floTochar@temp
  2410  0EF5                     l3036:
  2411                           
  2412                           ;ComSerial.c: 74:     decimal = (temp*100);
  2413  0EF5  0859               	movf	floTochar@temp+3,w
  2414  0EF6  00B1               	movwf	___flmul@a+3
  2415  0EF7  0858               	movf	floTochar@temp+2,w
  2416  0EF8  00B0               	movwf	___flmul@a+2
  2417  0EF9  0857               	movf	floTochar@temp+1,w
  2418  0EFA  00AF               	movwf	___flmul@a+1
  2419  0EFB  0856               	movf	floTochar@temp,w
  2420  0EFC  00AE               	movwf	___flmul@a
  2421  0EFD  3042               	movlw	66
  2422  0EFE  00AD               	movwf	___flmul@b+3
  2423  0EFF  30C8               	movlw	200
  2424  0F00  00AC               	movwf	___flmul@b+2
  2425  0F01  3000               	movlw	0
  2426  0F02  00AB               	movwf	___flmul@b+1
  2427  0F03  3000               	movlw	0
  2428  0F04  00AA               	movwf	___flmul@b
  2429  0F05  120A  118A  2022  120A  158A  	fcall	___flmul
  2430  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0F0C  082D               	movf	?___flmul+3,w
  2433  0F0D  00C7               	movwf	___fltol@f1+3
  2434  0F0E  082C               	movf	?___flmul+2,w
  2435  0F0F  00C6               	movwf	___fltol@f1+2
  2436  0F10  082B               	movf	?___flmul+1,w
  2437  0F11  00C5               	movwf	___fltol@f1+1
  2438  0F12  082A               	movf	?___flmul,w
  2439  0F13  00C4               	movwf	___fltol@f1
  2440  0F14  120A  158A  25AF  120A  158A  	fcall	___fltol
  2441  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0F1B  0844               	movf	?___fltol,w
  2444  0F1C  00D2               	movwf	??_floTochar
  2445  0F1D  0852               	movf	??_floTochar,w
  2446  0F1E  00DA               	movwf	floTochar@decimal
  2447  0F1F                     l3038:
  2448                           
  2449                           ;ComSerial.c: 75:     division(decimal,&digdecimal[0],&digdecimal[1]);
  2450  0F1F  305C               	movlw	(low (floTochar@digdecimal| 0))& (0+255)
  2451  0F20  00D2               	movwf	??_floTochar
  2452  0F21  0852               	movf	??_floTochar,w
  2453  0F22  00F8               	movwf	division@un
  2454  0F23  305D               	movlw	(low ((floTochar@digdecimal| 0+1)))& (0+255)
  2455  0F24  00D3               	movwf	??_floTochar+1
  2456  0F25  0853               	movf	??_floTochar+1,w
  2457  0F26  00F9               	movwf	division@dec
  2458  0F27  085A               	movf	floTochar@decimal,w
  2459  0F28  120A  158A  2467  120A  158A  	fcall	_division
  2460                           
  2461                           ;ComSerial.c: 76:     conv[0] = entero;
  2462  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0F2F  085B               	movf	floTochar@entero,w
  2465  0F30  00D2               	movwf	??_floTochar
  2466  0F31  0851               	movf	floTochar@conv,w
  2467  0F32  0084               	movwf	4
  2468  0F33  0852               	movf	??_floTochar,w
  2469  0F34  1383               	bcf	3,7	;select IRP bank0
  2470  0F35  0080               	movwf	0
  2471                           
  2472                           ;ComSerial.c: 77:     conv[1] = digdecimal[1];
  2473  0F36  085D               	movf	floTochar@digdecimal+1,w
  2474  0F37  00D2               	movwf	??_floTochar
  2475  0F38  0A51               	incf	floTochar@conv,w
  2476  0F39  0084               	movwf	4
  2477  0F3A  0852               	movf	??_floTochar,w
  2478  0F3B  0080               	movwf	0
  2479  0F3C                     l3040:
  2480                           
  2481                           ;ComSerial.c: 78:     conv[2] = digdecimal[0];
  2482  0F3C  085C               	movf	floTochar@digdecimal,w
  2483  0F3D  00D2               	movwf	??_floTochar
  2484  0F3E  0851               	movf	floTochar@conv,w
  2485  0F3F  3E02               	addlw	2
  2486  0F40  0084               	movwf	4
  2487  0F41  0852               	movf	??_floTochar,w
  2488  0F42  0080               	movwf	0
  2489  0F43                     l166:
  2490  0F43  0008               	return
  2491  0F44                     __end_of_floTochar:
  2492                           
  2493                           	psect	text9
  2494  0C67                     __ptext9:	
  2495 ;; *************** function _division *****************
  2496 ;; Defined at:
  2497 ;;		line 106 in file "ComSerial.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  conteo          1    wreg     unsigned char 
  2500 ;;  un              1    8[COMMON] PTR unsigned char 
  2501 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2502 ;;  dec             1    9[COMMON] PTR unsigned char 
  2503 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  conteo          1    7[BANK0 ] unsigned char 
  2506 ;;  div             1    8[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         2       0       0       0       0
  2517 ;;      Locals:         0       2       0       0       0
  2518 ;;      Temps:          0       3       0       0       0
  2519 ;;      Totals:         2       5       0       0       0
  2520 ;;Total ram usage:        7 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    2
  2523 ;; This function calls:
  2524 ;;		___awdiv
  2525 ;;		___bmul
  2526 ;; This function is called by:
  2527 ;;		_sendfloat
  2528 ;;		_floTochar
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _division
  2534  0C67                     _division:
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2538                           ;division@conteo stored from wreg
  2539  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0C69  00A7               	movwf	division@conteo
  2542  0C6A                     l2750:
  2543                           
  2544                           ;ComSerial.c: 107:     uint8_t div = conteo;
  2545  0C6A  0827               	movf	division@conteo,w
  2546  0C6B  00A4               	movwf	??_division
  2547  0C6C  0824               	movf	??_division,w
  2548  0C6D  00A8               	movwf	division@div
  2549  0C6E                     l2752:
  2550                           
  2551                           ;ComSerial.c: 108:     *un = 0;
  2552  0C6E  0878               	movf	division@un,w
  2553  0C6F  0084               	movwf	4
  2554  0C70  1383               	bcf	3,7	;select IRP bank0
  2555  0C71  0180               	clrf	0
  2556  0C72                     l2754:
  2557                           
  2558                           ;ComSerial.c: 109:     *dec = 0;
  2559  0C72  0879               	movf	division@dec,w
  2560  0C73  0084               	movwf	4
  2561  0C74  0180               	clrf	0
  2562                           
  2563                           ;ComSerial.c: 112:     while (div >= 10){
  2564  0C75  2CA1               	goto	l2758
  2565  0C76                     l2756:
  2566                           
  2567                           ;ComSerial.c: 113:     *dec = div/10;
  2568  0C76  300A               	movlw	10
  2569  0C77  00F3               	movwf	___awdiv@divisor
  2570  0C78  3000               	movlw	0
  2571  0C79  00F4               	movwf	___awdiv@divisor+1
  2572  0C7A  0828               	movf	division@div,w
  2573  0C7B  00A4               	movwf	??_division
  2574  0C7C  01A5               	clrf	??_division+1
  2575  0C7D  0824               	movf	??_division,w
  2576  0C7E  00F5               	movwf	___awdiv@dividend
  2577  0C7F  0825               	movf	??_division+1,w
  2578  0C80  00F6               	movwf	___awdiv@dividend+1
  2579  0C81  120A  158A  2546  120A  158A  	fcall	___awdiv
  2580  0C86  0873               	movf	?___awdiv,w
  2581  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0C89  00A6               	movwf	??_division+2
  2584  0C8A  0879               	movf	division@dec,w
  2585  0C8B  0084               	movwf	4
  2586  0C8C  0826               	movf	??_division+2,w
  2587  0C8D  1383               	bcf	3,7	;select IRP bank0
  2588  0C8E  0080               	movwf	0
  2589                           
  2590                           ;ComSerial.c: 114:     div = div - (*dec)*(10);
  2591  0C8F  30F6               	movlw	246
  2592  0C90  00A4               	movwf	??_division
  2593  0C91  0824               	movf	??_division,w
  2594  0C92  00F3               	movwf	___bmul@multiplicand
  2595  0C93  0879               	movf	division@dec,w
  2596  0C94  0084               	movwf	4
  2597  0C95  0800               	movf	0,w
  2598  0C96  120A  158A  2288  120A  158A  	fcall	___bmul
  2599  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0C9D  0728               	addwf	division@div,w
  2602  0C9E  00A5               	movwf	??_division+1
  2603  0C9F  0825               	movf	??_division+1,w
  2604  0CA0  00A8               	movwf	division@div
  2605  0CA1                     l2758:
  2606                           
  2607                           ;ComSerial.c: 112:     while (div >= 10){
  2608  0CA1  300A               	movlw	10
  2609  0CA2  0228               	subwf	division@div,w
  2610  0CA3  1803               	skipnc
  2611  0CA4  2CA6               	goto	u3411
  2612  0CA5  2CA7               	goto	u3410
  2613  0CA6                     u3411:
  2614  0CA6  2C76               	goto	l2756
  2615  0CA7                     u3410:
  2616  0CA7                     l2760:
  2617                           
  2618                           ;ComSerial.c: 117:     *un = div;
  2619  0CA7  0828               	movf	division@div,w
  2620  0CA8  00A4               	movwf	??_division
  2621  0CA9  0878               	movf	division@un,w
  2622  0CAA  0084               	movwf	4
  2623  0CAB  0824               	movf	??_division,w
  2624  0CAC  1383               	bcf	3,7	;select IRP bank0
  2625  0CAD  0080               	movwf	0
  2626  0CAE                     l178:
  2627  0CAE  0008               	return
  2628  0CAF                     __end_of_division:
  2629                           
  2630                           	psect	text10
  2631  0A88                     __ptext10:	
  2632 ;; *************** function ___bmul *****************
  2633 ;; Defined at:
  2634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  multiplier      1    wreg     unsigned char 
  2637 ;;  multiplicand    1    3[COMMON] unsigned char 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  multiplier      1    6[COMMON] unsigned char 
  2640 ;;  product         1    5[COMMON] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      unsigned char 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         1       0       0       0       0
  2651 ;;      Locals:         2       0       0       0       0
  2652 ;;      Temps:          1       0       0       0       0
  2653 ;;      Totals:         4       0       0       0       0
  2654 ;;Total ram usage:        4 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_division
  2661 ;;		_divisiondecimal
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function ___bmul
  2667  0A88                     ___bmul:
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2671                           ;___bmul@multiplier stored from wreg
  2672  0A88  00F6               	movwf	___bmul@multiplier
  2673  0A89                     l2484:
  2674  0A89  01F5               	clrf	___bmul@product
  2675  0A8A                     l2486:
  2676  0A8A  1C76               	btfss	___bmul@multiplier,0
  2677  0A8B  2A8D               	goto	u2801
  2678  0A8C  2A8E               	goto	u2800
  2679  0A8D                     u2801:
  2680  0A8D  2A92               	goto	l2490
  2681  0A8E                     u2800:
  2682  0A8E                     l2488:
  2683  0A8E  0873               	movf	___bmul@multiplicand,w
  2684  0A8F  00F4               	movwf	??___bmul
  2685  0A90  0874               	movf	??___bmul,w
  2686  0A91  07F5               	addwf	___bmul@product,f
  2687  0A92                     l2490:
  2688  0A92  1003               	clrc
  2689  0A93  0DF3               	rlf	___bmul@multiplicand,f
  2690  0A94                     l2492:
  2691  0A94  1003               	clrc
  2692  0A95  0CF6               	rrf	___bmul@multiplier,f
  2693  0A96  0876               	movf	___bmul@multiplier,w
  2694  0A97  1D03               	btfss	3,2
  2695  0A98  2A9A               	goto	u2811
  2696  0A99  2A9B               	goto	u2810
  2697  0A9A                     u2811:
  2698  0A9A  2A8A               	goto	l2486
  2699  0A9B                     u2810:
  2700  0A9B                     l2494:
  2701  0A9B  0875               	movf	___bmul@product,w
  2702  0A9C                     l332:
  2703  0A9C  0008               	return
  2704  0A9D                     __end_of___bmul:
  2705                           
  2706                           	psect	text11
  2707  0D46                     __ptext11:	
  2708 ;; *************** function ___awdiv *****************
  2709 ;; Defined at:
  2710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  divisor         2    3[COMMON] int 
  2713 ;;  dividend        2    5[COMMON] int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  quotient        2    2[BANK0 ] int 
  2716 ;;  sign            1    1[BANK0 ] unsigned char 
  2717 ;;  counter         1    0[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2    3[COMMON] int 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         4       0       0       0       0
  2728 ;;      Locals:         0       4       0       0       0
  2729 ;;      Temps:          1       0       0       0       0
  2730 ;;      Totals:         5       4       0       0       0
  2731 ;;Total ram usage:        9 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_division
  2738 ;;		_divisiondecimal
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function ___awdiv
  2744  0D46                     ___awdiv:
  2745  0D46                     l2498:	
  2746                           ;incstack = 0
  2747                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2748                           
  2749  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0D48  01A1               	clrf	___awdiv@sign
  2752  0D49                     l2500:
  2753  0D49  1FF4               	btfss	___awdiv@divisor+1,7
  2754  0D4A  2D4C               	goto	u2821
  2755  0D4B  2D4D               	goto	u2820
  2756  0D4C                     u2821:
  2757  0D4C  2D54               	goto	l2506
  2758  0D4D                     u2820:
  2759  0D4D                     l2502:
  2760  0D4D  09F3               	comf	___awdiv@divisor,f
  2761  0D4E  09F4               	comf	___awdiv@divisor+1,f
  2762  0D4F  0AF3               	incf	___awdiv@divisor,f
  2763  0D50  1903               	skipnz
  2764  0D51  0AF4               	incf	___awdiv@divisor+1,f
  2765  0D52                     l2504:
  2766  0D52  01A1               	clrf	___awdiv@sign
  2767  0D53  0AA1               	incf	___awdiv@sign,f
  2768  0D54                     l2506:
  2769  0D54  1FF6               	btfss	___awdiv@dividend+1,7
  2770  0D55  2D57               	goto	u2831
  2771  0D56  2D58               	goto	u2830
  2772  0D57                     u2831:
  2773  0D57  2D61               	goto	l2512
  2774  0D58                     u2830:
  2775  0D58                     l2508:
  2776  0D58  09F5               	comf	___awdiv@dividend,f
  2777  0D59  09F6               	comf	___awdiv@dividend+1,f
  2778  0D5A  0AF5               	incf	___awdiv@dividend,f
  2779  0D5B  1903               	skipnz
  2780  0D5C  0AF6               	incf	___awdiv@dividend+1,f
  2781  0D5D                     l2510:
  2782  0D5D  3001               	movlw	1
  2783  0D5E  00F7               	movwf	??___awdiv
  2784  0D5F  0877               	movf	??___awdiv,w
  2785  0D60  06A1               	xorwf	___awdiv@sign,f
  2786  0D61                     l2512:
  2787  0D61  01A2               	clrf	___awdiv@quotient
  2788  0D62  01A3               	clrf	___awdiv@quotient+1
  2789  0D63                     l2514:
  2790  0D63  0873               	movf	___awdiv@divisor,w
  2791  0D64  0474               	iorwf	___awdiv@divisor+1,w
  2792  0D65  1903               	btfsc	3,2
  2793  0D66  2D68               	goto	u2841
  2794  0D67  2D69               	goto	u2840
  2795  0D68                     u2841:
  2796  0D68  2DA0               	goto	l2534
  2797  0D69                     u2840:
  2798  0D69                     l2516:
  2799  0D69  01A0               	clrf	___awdiv@counter
  2800  0D6A  0AA0               	incf	___awdiv@counter,f
  2801  0D6B  2D77               	goto	l2522
  2802  0D6C                     l2518:
  2803  0D6C  3001               	movlw	1
  2804  0D6D                     u2855:
  2805  0D6D  1003               	clrc
  2806  0D6E  0DF3               	rlf	___awdiv@divisor,f
  2807  0D6F  0DF4               	rlf	___awdiv@divisor+1,f
  2808  0D70  3EFF               	addlw	-1
  2809  0D71  1D03               	skipz
  2810  0D72  2D6D               	goto	u2855
  2811  0D73                     l2520:
  2812  0D73  3001               	movlw	1
  2813  0D74  00F7               	movwf	??___awdiv
  2814  0D75  0877               	movf	??___awdiv,w
  2815  0D76  07A0               	addwf	___awdiv@counter,f
  2816  0D77                     l2522:
  2817  0D77  1FF4               	btfss	___awdiv@divisor+1,7
  2818  0D78  2D7A               	goto	u2861
  2819  0D79  2D7B               	goto	u2860
  2820  0D7A                     u2861:
  2821  0D7A  2D6C               	goto	l2518
  2822  0D7B                     u2860:
  2823  0D7B                     l2524:
  2824  0D7B  3001               	movlw	1
  2825  0D7C                     u2875:
  2826  0D7C  1003               	clrc
  2827  0D7D  0DA2               	rlf	___awdiv@quotient,f
  2828  0D7E  0DA3               	rlf	___awdiv@quotient+1,f
  2829  0D7F  3EFF               	addlw	-1
  2830  0D80  1D03               	skipz
  2831  0D81  2D7C               	goto	u2875
  2832  0D82  0874               	movf	___awdiv@divisor+1,w
  2833  0D83  0276               	subwf	___awdiv@dividend+1,w
  2834  0D84  1D03               	skipz
  2835  0D85  2D88               	goto	u2885
  2836  0D86  0873               	movf	___awdiv@divisor,w
  2837  0D87  0275               	subwf	___awdiv@dividend,w
  2838  0D88                     u2885:
  2839  0D88  1C03               	skipc
  2840  0D89  2D8B               	goto	u2881
  2841  0D8A  2D8C               	goto	u2880
  2842  0D8B                     u2881:
  2843  0D8B  2D93               	goto	l2530
  2844  0D8C                     u2880:
  2845  0D8C                     l2526:
  2846  0D8C  0873               	movf	___awdiv@divisor,w
  2847  0D8D  02F5               	subwf	___awdiv@dividend,f
  2848  0D8E  0874               	movf	___awdiv@divisor+1,w
  2849  0D8F  1C03               	skipc
  2850  0D90  03F6               	decf	___awdiv@dividend+1,f
  2851  0D91  02F6               	subwf	___awdiv@dividend+1,f
  2852  0D92                     l2528:
  2853  0D92  1422               	bsf	___awdiv@quotient,0
  2854  0D93                     l2530:
  2855  0D93  3001               	movlw	1
  2856  0D94                     u2895:
  2857  0D94  1003               	clrc
  2858  0D95  0CF4               	rrf	___awdiv@divisor+1,f
  2859  0D96  0CF3               	rrf	___awdiv@divisor,f
  2860  0D97  3EFF               	addlw	-1
  2861  0D98  1D03               	skipz
  2862  0D99  2D94               	goto	u2895
  2863  0D9A                     l2532:
  2864  0D9A  3001               	movlw	1
  2865  0D9B  02A0               	subwf	___awdiv@counter,f
  2866  0D9C  1D03               	btfss	3,2
  2867  0D9D  2D9F               	goto	u2901
  2868  0D9E  2DA0               	goto	u2900
  2869  0D9F                     u2901:
  2870  0D9F  2D7B               	goto	l2524
  2871  0DA0                     u2900:
  2872  0DA0                     l2534:
  2873  0DA0  0821               	movf	___awdiv@sign,w
  2874  0DA1  1903               	btfsc	3,2
  2875  0DA2  2DA4               	goto	u2911
  2876  0DA3  2DA5               	goto	u2910
  2877  0DA4                     u2911:
  2878  0DA4  2DAA               	goto	l2538
  2879  0DA5                     u2910:
  2880  0DA5                     l2536:
  2881  0DA5  09A2               	comf	___awdiv@quotient,f
  2882  0DA6  09A3               	comf	___awdiv@quotient+1,f
  2883  0DA7  0AA2               	incf	___awdiv@quotient,f
  2884  0DA8  1903               	skipnz
  2885  0DA9  0AA3               	incf	___awdiv@quotient+1,f
  2886  0DAA                     l2538:
  2887  0DAA  0823               	movf	___awdiv@quotient+1,w
  2888  0DAB  00F4               	movwf	?___awdiv+1
  2889  0DAC  0822               	movf	___awdiv@quotient,w
  2890  0DAD  00F3               	movwf	?___awdiv
  2891  0DAE                     l459:
  2892  0DAE  0008               	return
  2893  0DAF                     __end_of___awdiv:
  2894                           
  2895                           	psect	text12
  2896  0DAF                     __ptext12:	
  2897 ;; *************** function ___fltol *****************
  2898 ;; Defined at:
  2899 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  f1              4   36[BANK0 ] int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  exp1            1    8[COMMON] unsigned char 
  2904 ;;  sign1           1    7[COMMON] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  4   36[BANK0 ] long 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2914 ;;      Params:         0       4       0       0       0
  2915 ;;      Locals:         2       0       0       0       0
  2916 ;;      Temps:          0       5       0       0       0
  2917 ;;      Totals:         2       9       0       0       0
  2918 ;;Total ram usage:       11 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_sendfloat
  2925 ;;		_floTochar
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function ___fltol
  2931  0DAF                     ___fltol:
  2932  0DAF                     l2780:	
  2933                           ;incstack = 0
  2934                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2935                           
  2936  0DAF  1003               	clrc
  2937  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0DB2  0D46               	rlf	___fltol@f1+2,w
  2940  0DB3  0D47               	rlf	___fltol@f1+3,w
  2941  0DB4  00C8               	movwf	??___fltol
  2942  0DB5  0848               	movf	??___fltol,w
  2943  0DB6  00F8               	movwf	___fltol@exp1
  2944  0DB7  0878               	movf	___fltol@exp1,w
  2945  0DB8  1D03               	btfss	3,2
  2946  0DB9  2DBB               	goto	u3441
  2947  0DBA  2DBC               	goto	u3440
  2948  0DBB                     u3441:
  2949  0DBB  2DC5               	goto	l2786
  2950  0DBC                     u3440:
  2951  0DBC                     l2782:
  2952  0DBC  3000               	movlw	0
  2953  0DBD  00C7               	movwf	?___fltol+3
  2954  0DBE  3000               	movlw	0
  2955  0DBF  00C6               	movwf	?___fltol+2
  2956  0DC0  3000               	movlw	0
  2957  0DC1  00C5               	movwf	?___fltol+1
  2958  0DC2  3000               	movlw	0
  2959  0DC3  00C4               	movwf	?___fltol
  2960  0DC4  2E2A               	goto	l492
  2961  0DC5                     l2786:
  2962  0DC5  0844               	movf	___fltol@f1,w
  2963  0DC6  00C8               	movwf	??___fltol
  2964  0DC7  0845               	movf	___fltol@f1+1,w
  2965  0DC8  00C9               	movwf	??___fltol+1
  2966  0DC9  0846               	movf	___fltol@f1+2,w
  2967  0DCA  00CA               	movwf	??___fltol+2
  2968  0DCB  0847               	movf	___fltol@f1+3,w
  2969  0DCC  00CB               	movwf	??___fltol+3
  2970  0DCD  301F               	movlw	31
  2971  0DCE                     u3455:
  2972  0DCE  1003               	clrc
  2973  0DCF  0CCB               	rrf	??___fltol+3,f
  2974  0DD0  0CCA               	rrf	??___fltol+2,f
  2975  0DD1  0CC9               	rrf	??___fltol+1,f
  2976  0DD2  0CC8               	rrf	??___fltol,f
  2977  0DD3                     u3450:
  2978  0DD3  3EFF               	addlw	-1
  2979  0DD4  1D03               	skipz
  2980  0DD5  2DCE               	goto	u3455
  2981  0DD6  0848               	movf	??___fltol,w
  2982  0DD7  00CC               	movwf	??___fltol+4
  2983  0DD8  084C               	movf	??___fltol+4,w
  2984  0DD9  00F7               	movwf	___fltol@sign1
  2985  0DDA                     l2788:
  2986  0DDA  17C6               	bsf	___fltol@f1+2,7
  2987  0DDB                     l2790:
  2988  0DDB  30FF               	movlw	255
  2989  0DDC  05C4               	andwf	___fltol@f1,f
  2990  0DDD  30FF               	movlw	255
  2991  0DDE  05C5               	andwf	___fltol@f1+1,f
  2992  0DDF  30FF               	movlw	255
  2993  0DE0  05C6               	andwf	___fltol@f1+2,f
  2994  0DE1  3000               	movlw	0
  2995  0DE2  05C7               	andwf	___fltol@f1+3,f
  2996  0DE3                     l2792:
  2997  0DE3  3096               	movlw	150
  2998  0DE4  02F8               	subwf	___fltol@exp1,f
  2999  0DE5                     l2794:
  3000  0DE5  1FF8               	btfss	___fltol@exp1,7
  3001  0DE6  2DE8               	goto	u3461
  3002  0DE7  2DE9               	goto	u3460
  3003  0DE8                     u3461:
  3004  0DE8  2E03               	goto	l2804
  3005  0DE9                     u3460:
  3006  0DE9                     l2796:
  3007  0DE9  0878               	movf	___fltol@exp1,w
  3008  0DEA  3A80               	xorlw	128
  3009  0DEB  3E97               	addlw	151
  3010  0DEC  1803               	skipnc
  3011  0DED  2DEF               	goto	u3471
  3012  0DEE  2DF0               	goto	u3470
  3013  0DEF                     u3471:
  3014  0DEF  2DF1               	goto	l2802
  3015  0DF0                     u3470:
  3016  0DF0  2DBC               	goto	l2782
  3017  0DF1                     l2802:
  3018  0DF1  3001               	movlw	1
  3019  0DF2                     u3485:
  3020  0DF2  1003               	clrc
  3021  0DF3  0CC7               	rrf	___fltol@f1+3,f
  3022  0DF4  0CC6               	rrf	___fltol@f1+2,f
  3023  0DF5  0CC5               	rrf	___fltol@f1+1,f
  3024  0DF6  0CC4               	rrf	___fltol@f1,f
  3025  0DF7  3EFF               	addlw	-1
  3026  0DF8  1D03               	skipz
  3027  0DF9  2DF2               	goto	u3485
  3028  0DFA  3001               	movlw	1
  3029  0DFB  00C8               	movwf	??___fltol
  3030  0DFC  0848               	movf	??___fltol,w
  3031  0DFD  07F8               	addwf	___fltol@exp1,f
  3032  0DFE  1D03               	btfss	3,2
  3033  0DFF  2E01               	goto	u3491
  3034  0E00  2E02               	goto	u3490
  3035  0E01                     u3491:
  3036  0E01  2DF1               	goto	l2802
  3037  0E02                     u3490:
  3038  0E02  2E1A               	goto	l2812
  3039  0E03                     l2804:
  3040  0E03  3020               	movlw	32
  3041  0E04  0278               	subwf	___fltol@exp1,w
  3042  0E05  1C03               	skipc
  3043  0E06  2E08               	goto	u3501
  3044  0E07  2E09               	goto	u3500
  3045  0E08                     u3501:
  3046  0E08  2E15               	goto	l499
  3047  0E09                     u3500:
  3048  0E09  2DBC               	goto	l2782
  3049  0E0A                     l2810:
  3050  0E0A  3001               	movlw	1
  3051  0E0B  00C8               	movwf	??___fltol
  3052  0E0C                     u3515:
  3053  0E0C  1003               	clrc
  3054  0E0D  0DC4               	rlf	___fltol@f1,f
  3055  0E0E  0DC5               	rlf	___fltol@f1+1,f
  3056  0E0F  0DC6               	rlf	___fltol@f1+2,f
  3057  0E10  0DC7               	rlf	___fltol@f1+3,f
  3058  0E11  0BC8               	decfsz	??___fltol,f
  3059  0E12  2E0C               	goto	u3515
  3060  0E13  3001               	movlw	1
  3061  0E14  02F8               	subwf	___fltol@exp1,f
  3062  0E15                     l499:
  3063  0E15  0878               	movf	___fltol@exp1,w
  3064  0E16  1D03               	btfss	3,2
  3065  0E17  2E19               	goto	u3521
  3066  0E18  2E1A               	goto	u3520
  3067  0E19                     u3521:
  3068  0E19  2E0A               	goto	l2810
  3069  0E1A                     u3520:
  3070  0E1A                     l2812:
  3071  0E1A  0877               	movf	___fltol@sign1,w
  3072  0E1B  1903               	btfsc	3,2
  3073  0E1C  2E1E               	goto	u3531
  3074  0E1D  2E1F               	goto	u3530
  3075  0E1E                     u3531:
  3076  0E1E  2E2A               	goto	l502
  3077  0E1F                     u3530:
  3078  0E1F                     l2814:
  3079  0E1F  09C4               	comf	___fltol@f1,f
  3080  0E20  09C5               	comf	___fltol@f1+1,f
  3081  0E21  09C6               	comf	___fltol@f1+2,f
  3082  0E22  09C7               	comf	___fltol@f1+3,f
  3083  0E23  0AC4               	incf	___fltol@f1,f
  3084  0E24  1903               	skipnz
  3085  0E25  0AC5               	incf	___fltol@f1+1,f
  3086  0E26  1903               	skipnz
  3087  0E27  0AC6               	incf	___fltol@f1+2,f
  3088  0E28  1903               	skipnz
  3089  0E29  0AC7               	incf	___fltol@f1+3,f
  3090  0E2A                     l502:
  3091  0E2A                     l492:
  3092  0E2A  0008               	return
  3093  0E2B                     __end_of___fltol:
  3094                           
  3095                           	psect	text13
  3096  0AFE                     __ptext13:	
  3097 ;; *************** function ___flsub *****************
  3098 ;; Defined at:
  3099 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  a               4   16[BANK0 ] long 
  3102 ;;  b               4   20[BANK0 ] long 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  4   16[BANK0 ] long 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114 ;;      Params:         0       8       0       0       0
  3115 ;;      Locals:         0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0
  3117 ;;      Totals:         0       8       0       0       0
  3118 ;;Total ram usage:        8 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    2
  3121 ;; This function calls:
  3122 ;;		___fladd
  3123 ;; This function is called by:
  3124 ;;		_sendfloat
  3125 ;;		_floTochar
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function ___flsub
  3131  0AFE                     ___flsub:
  3132  0AFE                     l2816:	
  3133                           ;incstack = 0
  3134                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3135                           
  3136  0AFE  3080               	movlw	128
  3137  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0B01  06B3               	xorwf	___flsub@a+3,f
  3140  0B02                     l2818:
  3141  0B02  0837               	movf	___flsub@b+3,w
  3142  0B03  00A3               	movwf	___fladd@b+3
  3143  0B04  0836               	movf	___flsub@b+2,w
  3144  0B05  00A2               	movwf	___fladd@b+2
  3145  0B06  0835               	movf	___flsub@b+1,w
  3146  0B07  00A1               	movwf	___fladd@b+1
  3147  0B08  0834               	movf	___flsub@b,w
  3148  0B09  00A0               	movwf	___fladd@b
  3149  0B0A  0833               	movf	___flsub@a+3,w
  3150  0B0B  00A7               	movwf	___fladd@a+3
  3151  0B0C  0832               	movf	___flsub@a+2,w
  3152  0B0D  00A6               	movwf	___fladd@a+2
  3153  0B0E  0831               	movf	___flsub@a+1,w
  3154  0B0F  00A5               	movwf	___fladd@a+1
  3155  0B10  0830               	movf	___flsub@a,w
  3156  0B11  00A4               	movwf	___fladd@a
  3157  0B12  120A  118A  2383  120A  158A  	fcall	___fladd
  3158  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0B19  0823               	movf	?___fladd+3,w
  3161  0B1A  00B3               	movwf	?___flsub+3
  3162  0B1B  0822               	movf	?___fladd+2,w
  3163  0B1C  00B2               	movwf	?___flsub+2
  3164  0B1D  0821               	movf	?___fladd+1,w
  3165  0B1E  00B1               	movwf	?___flsub+1
  3166  0B1F  0820               	movf	?___fladd,w
  3167  0B20  00B0               	movwf	?___flsub
  3168  0B21                     l645:
  3169  0B21  0008               	return
  3170  0B22                     __end_of___flsub:
  3171                           
  3172                           	psect	text14
  3173  0383                     __ptext14:	
  3174 ;; *************** function ___fladd *****************
  3175 ;; Defined at:
  3176 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  b               4    0[BANK0 ] long 
  3179 ;;  a               4    4[BANK0 ] long 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  grs             1    6[COMMON] unsigned char 
  3182 ;;  bexp            1    5[COMMON] unsigned char 
  3183 ;;  aexp            1    4[COMMON] unsigned char 
  3184 ;;  signs           1    3[COMMON] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  4    0[BANK0 ] unsigned char 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, btemp+1
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       8       0       0       0
  3195 ;;      Locals:         4       0       0       0       0
  3196 ;;      Temps:          0       8       0       0       0
  3197 ;;      Totals:         4      16       0       0       0
  3198 ;;Total ram usage:       20 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		___flsub
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function ___fladd
  3210  0383                     ___fladd:
  3211  0383                     l2542:	
  3212                           ;incstack = 0
  3213                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3214                           
  3215  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0385  0823               	movf	___fladd@b+3,w
  3218  0386  3980               	andlw	128
  3219  0387  00A8               	movwf	??___fladd
  3220  0388  0828               	movf	??___fladd,w
  3221  0389  00F3               	movwf	___fladd@signs
  3222  038A                     l2544:
  3223  038A  0823               	movf	___fladd@b+3,w
  3224  038B  00A8               	movwf	??___fladd
  3225  038C  0728               	addwf	??___fladd,w
  3226  038D  00A9               	movwf	??___fladd+1
  3227  038E  0829               	movf	??___fladd+1,w
  3228  038F  00F5               	movwf	___fladd@bexp
  3229  0390                     l2546:
  3230  0390  1FA2               	btfss	___fladd@b+2,7
  3231  0391  2B93               	goto	u2921
  3232  0392  2B94               	goto	u2920
  3233  0393                     u2921:
  3234  0393  2B95               	goto	l2550
  3235  0394                     u2920:
  3236  0394                     l2548:
  3237  0394  1475               	bsf	___fladd@bexp,0
  3238  0395                     l2550:
  3239  0395  0875               	movf	___fladd@bexp,w
  3240  0396  1903               	btfsc	3,2
  3241  0397  2B99               	goto	u2931
  3242  0398  2B9A               	goto	u2930
  3243  0399                     u2931:
  3244  0399  2BAA               	goto	l2560
  3245  039A                     u2930:
  3246  039A                     l2552:
  3247  039A  0A75               	incf	___fladd@bexp,w
  3248  039B  1D03               	btfss	3,2
  3249  039C  2B9E               	goto	u2941
  3250  039D  2B9F               	goto	u2940
  3251  039E                     u2941:
  3252  039E  2BA7               	goto	l2556
  3253  039F                     u2940:
  3254  039F                     l2554:
  3255  039F  3000               	movlw	0
  3256  03A0  00A3               	movwf	___fladd@b+3
  3257  03A1  3000               	movlw	0
  3258  03A2  00A2               	movwf	___fladd@b+2
  3259  03A3  3000               	movlw	0
  3260  03A4  00A1               	movwf	___fladd@b+1
  3261  03A5  3000               	movlw	0
  3262  03A6  00A0               	movwf	___fladd@b
  3263  03A7                     l2556:
  3264  03A7  17A2               	bsf	___fladd@b+2,7
  3265  03A8                     l2558:
  3266  03A8  01A3               	clrf	___fladd@b+3
  3267  03A9  2BB2               	goto	l2562
  3268  03AA                     l2560:
  3269  03AA  3000               	movlw	0
  3270  03AB  00A3               	movwf	___fladd@b+3
  3271  03AC  3000               	movlw	0
  3272  03AD  00A2               	movwf	___fladd@b+2
  3273  03AE  3000               	movlw	0
  3274  03AF  00A1               	movwf	___fladd@b+1
  3275  03B0  3000               	movlw	0
  3276  03B1  00A0               	movwf	___fladd@b
  3277  03B2                     l2562:
  3278  03B2  0827               	movf	___fladd@a+3,w
  3279  03B3  3980               	andlw	128
  3280  03B4  00A8               	movwf	??___fladd
  3281  03B5  0828               	movf	??___fladd,w
  3282  03B6  00F4               	movwf	___fladd@aexp
  3283  03B7                     l2564:
  3284  03B7  0874               	movf	___fladd@aexp,w
  3285  03B8  0673               	xorwf	___fladd@signs,w
  3286  03B9  1903               	skipnz
  3287  03BA  2BBC               	goto	u2951
  3288  03BB  2BBD               	goto	u2950
  3289  03BC                     u2951:
  3290  03BC  2BBE               	goto	l2568
  3291  03BD                     u2950:
  3292  03BD                     l2566:
  3293  03BD  1773               	bsf	___fladd@signs,6
  3294  03BE                     l2568:
  3295  03BE  0827               	movf	___fladd@a+3,w
  3296  03BF  00A8               	movwf	??___fladd
  3297  03C0  0728               	addwf	??___fladd,w
  3298  03C1  00A9               	movwf	??___fladd+1
  3299  03C2  0829               	movf	??___fladd+1,w
  3300  03C3  00F4               	movwf	___fladd@aexp
  3301  03C4                     l2570:
  3302  03C4  1FA6               	btfss	___fladd@a+2,7
  3303  03C5  2BC7               	goto	u2961
  3304  03C6  2BC8               	goto	u2960
  3305  03C7                     u2961:
  3306  03C7  2BC9               	goto	l2574
  3307  03C8                     u2960:
  3308  03C8                     l2572:
  3309  03C8  1474               	bsf	___fladd@aexp,0
  3310  03C9                     l2574:
  3311  03C9  0874               	movf	___fladd@aexp,w
  3312  03CA  1903               	btfsc	3,2
  3313  03CB  2BCD               	goto	u2971
  3314  03CC  2BCE               	goto	u2970
  3315  03CD                     u2971:
  3316  03CD  2BDE               	goto	l2584
  3317  03CE                     u2970:
  3318  03CE                     l2576:
  3319  03CE  0A74               	incf	___fladd@aexp,w
  3320  03CF  1D03               	btfss	3,2
  3321  03D0  2BD2               	goto	u2981
  3322  03D1  2BD3               	goto	u2980
  3323  03D2                     u2981:
  3324  03D2  2BDB               	goto	l2580
  3325  03D3                     u2980:
  3326  03D3                     l2578:
  3327  03D3  3000               	movlw	0
  3328  03D4  00A7               	movwf	___fladd@a+3
  3329  03D5  3000               	movlw	0
  3330  03D6  00A6               	movwf	___fladd@a+2
  3331  03D7  3000               	movlw	0
  3332  03D8  00A5               	movwf	___fladd@a+1
  3333  03D9  3000               	movlw	0
  3334  03DA  00A4               	movwf	___fladd@a
  3335  03DB                     l2580:
  3336  03DB  17A6               	bsf	___fladd@a+2,7
  3337  03DC                     l2582:
  3338  03DC  01A7               	clrf	___fladd@a+3
  3339  03DD  2BE6               	goto	l599
  3340  03DE                     l2584:
  3341  03DE  3000               	movlw	0
  3342  03DF  00A7               	movwf	___fladd@a+3
  3343  03E0  3000               	movlw	0
  3344  03E1  00A6               	movwf	___fladd@a+2
  3345  03E2  3000               	movlw	0
  3346  03E3  00A5               	movwf	___fladd@a+1
  3347  03E4  3000               	movlw	0
  3348  03E5  00A4               	movwf	___fladd@a
  3349  03E6                     l599:
  3350  03E6  0875               	movf	___fladd@bexp,w
  3351  03E7  0274               	subwf	___fladd@aexp,w
  3352  03E8  1803               	skipnc
  3353  03E9  2BEB               	goto	u2991
  3354  03EA  2BEC               	goto	u2990
  3355  03EB                     u2991:
  3356  03EB  2C30               	goto	l2620
  3357  03EC                     u2990:
  3358  03EC                     l2586:
  3359  03EC  1F73               	btfss	___fladd@signs,6
  3360  03ED  2BEF               	goto	u3001
  3361  03EE  2BF0               	goto	u3000
  3362  03EF                     u3001:
  3363  03EF  2BF4               	goto	l2590
  3364  03F0                     u3000:
  3365  03F0                     l2588:
  3366  03F0  3080               	movlw	128
  3367  03F1  00A8               	movwf	??___fladd
  3368  03F2  0828               	movf	??___fladd,w
  3369  03F3  06F3               	xorwf	___fladd@signs,f
  3370  03F4                     l2590:
  3371  03F4  0875               	movf	___fladd@bexp,w
  3372  03F5  00A8               	movwf	??___fladd
  3373  03F6  0828               	movf	??___fladd,w
  3374  03F7  00F6               	movwf	___fladd@grs
  3375  03F8                     l2592:
  3376  03F8  0874               	movf	___fladd@aexp,w
  3377  03F9  00A8               	movwf	??___fladd
  3378  03FA  0828               	movf	??___fladd,w
  3379  03FB  00F5               	movwf	___fladd@bexp
  3380  03FC                     l2594:
  3381  03FC  0876               	movf	___fladd@grs,w
  3382  03FD  00A8               	movwf	??___fladd
  3383  03FE  0828               	movf	??___fladd,w
  3384  03FF  00F4               	movwf	___fladd@aexp
  3385  0400                     l2596:
  3386  0400  0820               	movf	___fladd@b,w
  3387  0401  00A8               	movwf	??___fladd
  3388  0402  0828               	movf	??___fladd,w
  3389  0403  00F6               	movwf	___fladd@grs
  3390  0404                     l2598:
  3391  0404  0824               	movf	___fladd@a,w
  3392  0405  00A8               	movwf	??___fladd
  3393  0406  0828               	movf	??___fladd,w
  3394  0407  00A0               	movwf	___fladd@b
  3395  0408                     l2600:
  3396  0408  0876               	movf	___fladd@grs,w
  3397  0409  00A8               	movwf	??___fladd
  3398  040A  0828               	movf	??___fladd,w
  3399  040B  00A4               	movwf	___fladd@a
  3400  040C                     l2602:
  3401  040C  0821               	movf	___fladd@b+1,w
  3402  040D  00A8               	movwf	??___fladd
  3403  040E  0828               	movf	??___fladd,w
  3404  040F  00F6               	movwf	___fladd@grs
  3405  0410                     l2604:
  3406  0410  0825               	movf	___fladd@a+1,w
  3407  0411  00A8               	movwf	??___fladd
  3408  0412  0828               	movf	??___fladd,w
  3409  0413  00A1               	movwf	___fladd@b+1
  3410  0414                     l2606:
  3411  0414  0876               	movf	___fladd@grs,w
  3412  0415  00A8               	movwf	??___fladd
  3413  0416  0828               	movf	??___fladd,w
  3414  0417  00A5               	movwf	___fladd@a+1
  3415  0418                     l2608:
  3416  0418  0822               	movf	___fladd@b+2,w
  3417  0419  00A8               	movwf	??___fladd
  3418  041A  0828               	movf	??___fladd,w
  3419  041B  00F6               	movwf	___fladd@grs
  3420  041C                     l2610:
  3421  041C  0826               	movf	___fladd@a+2,w
  3422  041D  00A8               	movwf	??___fladd
  3423  041E  0828               	movf	??___fladd,w
  3424  041F  00A2               	movwf	___fladd@b+2
  3425  0420                     l2612:
  3426  0420  0876               	movf	___fladd@grs,w
  3427  0421  00A8               	movwf	??___fladd
  3428  0422  0828               	movf	??___fladd,w
  3429  0423  00A6               	movwf	___fladd@a+2
  3430  0424                     l2614:
  3431  0424  0823               	movf	___fladd@b+3,w
  3432  0425  00A8               	movwf	??___fladd
  3433  0426  0828               	movf	??___fladd,w
  3434  0427  00F6               	movwf	___fladd@grs
  3435  0428                     l2616:
  3436  0428  0827               	movf	___fladd@a+3,w
  3437  0429  00A8               	movwf	??___fladd
  3438  042A  0828               	movf	??___fladd,w
  3439  042B  00A3               	movwf	___fladd@b+3
  3440  042C                     l2618:
  3441  042C  0876               	movf	___fladd@grs,w
  3442  042D  00A8               	movwf	??___fladd
  3443  042E  0828               	movf	??___fladd,w
  3444  042F  00A7               	movwf	___fladd@a+3
  3445  0430                     l2620:
  3446  0430  01F6               	clrf	___fladd@grs
  3447  0431                     l2622:
  3448  0431  0874               	movf	___fladd@aexp,w
  3449  0432  00A8               	movwf	??___fladd
  3450  0433  01A9               	clrf	??___fladd+1
  3451  0434  0829               	movf	??___fladd+1,w
  3452  0435  00AB               	movwf	??___fladd+3
  3453  0436  0875               	movf	___fladd@bexp,w
  3454  0437  0228               	subwf	??___fladd,w
  3455  0438  00AA               	movwf	??___fladd+2
  3456  0439  1C03               	skipc
  3457  043A  03AB               	decf	??___fladd+3,f
  3458  043B  082B               	movf	??___fladd+3,w
  3459  043C  3A80               	xorlw	128
  3460  043D  00FF               	movwf	btemp+1
  3461  043E  3080               	movlw	128
  3462  043F  027F               	subwf	btemp+1,w
  3463  0440  1D03               	skipz
  3464  0441  2C44               	goto	u3015
  3465  0442  301A               	movlw	26
  3466  0443  022A               	subwf	??___fladd+2,w
  3467  0444                     u3015:
  3468  0444  1C03               	skipc
  3469  0445  2C47               	goto	u3011
  3470  0446  2C48               	goto	u3010
  3471  0447                     u3011:
  3472  0447  2C89               	goto	l2638
  3473  0448                     u3010:
  3474  0448                     l2624:
  3475  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3477  044A  0823               	movf	___fladd@b+3,w
  3478  044B  0422               	iorwf	___fladd@b+2,w
  3479  044C  0421               	iorwf	___fladd@b+1,w
  3480  044D  0420               	iorwf	___fladd@b,w
  3481  044E  1D03               	skipz
  3482  044F  2C51               	goto	u3021
  3483  0450  2C53               	goto	u3020
  3484  0451                     u3021:
  3485  0451  3001               	movlw	1
  3486  0452  2C54               	goto	u3030
  3487  0453                     u3020:
  3488  0453  3000               	movlw	0
  3489  0454                     u3030:
  3490  0454  00A8               	movwf	??___fladd
  3491  0455  0828               	movf	??___fladd,w
  3492  0456  00F6               	movwf	___fladd@grs
  3493  0457  3000               	movlw	0
  3494  0458  00A3               	movwf	___fladd@b+3
  3495  0459  3000               	movlw	0
  3496  045A  00A2               	movwf	___fladd@b+2
  3497  045B  3000               	movlw	0
  3498  045C  00A1               	movwf	___fladd@b+1
  3499  045D  3000               	movlw	0
  3500  045E  00A0               	movwf	___fladd@b
  3501  045F  0874               	movf	___fladd@aexp,w
  3502  0460  00A8               	movwf	??___fladd
  3503  0461  0828               	movf	??___fladd,w
  3504  0462  00F5               	movwf	___fladd@bexp
  3505  0463  2C8F               	goto	l603
  3506  0464                     l605:
  3507  0464  1C76               	btfss	___fladd@grs,0
  3508  0465  2C67               	goto	u3041
  3509  0466  2C68               	goto	u3040
  3510  0467                     u3041:
  3511  0467  2C73               	goto	l2628
  3512  0468                     u3040:
  3513  0468                     l2626:
  3514  0468  0876               	movf	___fladd@grs,w
  3515  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3516  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3517  046B  00A8               	movwf	??___fladd
  3518  046C  1003               	clrc
  3519  046D  0C28               	rrf	??___fladd,w
  3520  046E  3801               	iorlw	1
  3521  046F  00A9               	movwf	??___fladd+1
  3522  0470  0829               	movf	??___fladd+1,w
  3523  0471  00F6               	movwf	___fladd@grs
  3524  0472  2C75               	goto	l2630
  3525  0473                     l2628:
  3526  0473  1003               	clrc
  3527  0474  0CF6               	rrf	___fladd@grs,f
  3528  0475                     l2630:
  3529  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0477  1C20               	btfss	___fladd@b,0
  3532  0478  2C7A               	goto	u3051
  3533  0479  2C7B               	goto	u3050
  3534  047A                     u3051:
  3535  047A  2C7C               	goto	l2634
  3536  047B                     u3050:
  3537  047B                     l2632:
  3538  047B  17F6               	bsf	___fladd@grs,7
  3539  047C                     l2634:
  3540  047C  3001               	movlw	1
  3541  047D  00A8               	movwf	??___fladd
  3542  047E                     u3065:
  3543  047E  0D23               	rlf	___fladd@b+3,w
  3544  047F  0CA3               	rrf	___fladd@b+3,f
  3545  0480  0CA2               	rrf	___fladd@b+2,f
  3546  0481  0CA1               	rrf	___fladd@b+1,f
  3547  0482  0CA0               	rrf	___fladd@b,f
  3548  0483  0BA8               	decfsz	??___fladd& (0+127),f
  3549  0484  2C7E               	goto	u3065
  3550  0485                     l2636:
  3551  0485  3001               	movlw	1
  3552  0486  00A8               	movwf	??___fladd
  3553  0487  0828               	movf	??___fladd,w
  3554  0488  07F5               	addwf	___fladd@bexp,f
  3555  0489                     l2638:
  3556  0489  0874               	movf	___fladd@aexp,w
  3557  048A  0275               	subwf	___fladd@bexp,w
  3558  048B  1C03               	skipc
  3559  048C  2C8E               	goto	u3071
  3560  048D  2C8F               	goto	u3070
  3561  048E                     u3071:
  3562  048E  2C64               	goto	l605
  3563  048F                     u3070:
  3564  048F                     l603:
  3565  048F  1B73               	btfsc	___fladd@signs,6
  3566  0490  2C92               	goto	u3081
  3567  0491  2C93               	goto	u3080
  3568  0492                     u3081:
  3569  0492  2CE2               	goto	l2664
  3570  0493                     u3080:
  3571  0493                     l2640:
  3572  0493  0875               	movf	___fladd@bexp,w
  3573  0494  1D03               	btfss	3,2
  3574  0495  2C97               	goto	u3091
  3575  0496  2C98               	goto	u3090
  3576  0497                     u3091:
  3577  0497  2CA3               	goto	l2646
  3578  0498                     u3090:
  3579  0498                     l2642:
  3580  0498  3000               	movlw	0
  3581  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3582  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3583  049B  00A3               	movwf	?___fladd+3
  3584  049C  3000               	movlw	0
  3585  049D  00A2               	movwf	?___fladd+2
  3586  049E  3000               	movlw	0
  3587  049F  00A1               	movwf	?___fladd+1
  3588  04A0  3000               	movlw	0
  3589  04A1  00A0               	movwf	?___fladd
  3590  04A2  2E12               	goto	l612
  3591  04A3                     l2646:
  3592  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3593  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3594  04A5  0824               	movf	___fladd@a,w
  3595  04A6  07A0               	addwf	___fladd@b,f
  3596  04A7  0825               	movf	___fladd@a+1,w
  3597  04A8  1103               	clrz
  3598  04A9  1803               	skipnc
  3599  04AA  3E01               	addlw	1
  3600  04AB  1903               	skipnz
  3601  04AC  2CAE               	goto	u3101
  3602  04AD  07A1               	addwf	___fladd@b+1,f
  3603  04AE                     u3101:
  3604  04AE  0826               	movf	___fladd@a+2,w
  3605  04AF  1103               	clrz
  3606  04B0  1803               	skipnc
  3607  04B1  3E01               	addlw	1
  3608  04B2  1903               	skipnz
  3609  04B3  2CB5               	goto	u3102
  3610  04B4  07A2               	addwf	___fladd@b+2,f
  3611  04B5                     u3102:
  3612  04B5  0827               	movf	___fladd@a+3,w
  3613  04B6  1103               	clrz
  3614  04B7  1803               	skipnc
  3615  04B8  3E01               	addlw	1
  3616  04B9  1903               	skipnz
  3617  04BA  2CBC               	goto	u3103
  3618  04BB  07A3               	addwf	___fladd@b+3,f
  3619  04BC                     u3103:
  3620  04BC                     l2648:
  3621  04BC  1C23               	btfss	___fladd@b+3,0
  3622  04BD  2CBF               	goto	u3111
  3623  04BE  2CC0               	goto	u3110
  3624  04BF                     u3111:
  3625  04BF  2D98               	goto	l2698
  3626  04C0                     u3110:
  3627  04C0                     l2650:
  3628  04C0  1C76               	btfss	___fladd@grs,0
  3629  04C1  2CC3               	goto	u3121
  3630  04C2  2CC4               	goto	u3120
  3631  04C3                     u3121:
  3632  04C3  2CCD               	goto	l2654
  3633  04C4                     u3120:
  3634  04C4                     l2652:
  3635  04C4  0876               	movf	___fladd@grs,w
  3636  04C5  00A8               	movwf	??___fladd
  3637  04C6  1003               	clrc
  3638  04C7  0C28               	rrf	??___fladd,w
  3639  04C8  3801               	iorlw	1
  3640  04C9  00A9               	movwf	??___fladd+1
  3641  04CA  0829               	movf	??___fladd+1,w
  3642  04CB  00F6               	movwf	___fladd@grs
  3643  04CC  2CCF               	goto	l2656
  3644  04CD                     l2654:
  3645  04CD  1003               	clrc
  3646  04CE  0CF6               	rrf	___fladd@grs,f
  3647  04CF                     l2656:
  3648  04CF  1C20               	btfss	___fladd@b,0
  3649  04D0  2CD2               	goto	u3131
  3650  04D1  2CD3               	goto	u3130
  3651  04D2                     u3131:
  3652  04D2  2CD4               	goto	l2660
  3653  04D3                     u3130:
  3654  04D3                     l2658:
  3655  04D3  17F6               	bsf	___fladd@grs,7
  3656  04D4                     l2660:
  3657  04D4  3001               	movlw	1
  3658  04D5  00A8               	movwf	??___fladd
  3659  04D6                     u3145:
  3660  04D6  0D23               	rlf	___fladd@b+3,w
  3661  04D7  0CA3               	rrf	___fladd@b+3,f
  3662  04D8  0CA2               	rrf	___fladd@b+2,f
  3663  04D9  0CA1               	rrf	___fladd@b+1,f
  3664  04DA  0CA0               	rrf	___fladd@b,f
  3665  04DB  0BA8               	decfsz	??___fladd& (0+127),f
  3666  04DC  2CD6               	goto	u3145
  3667  04DD                     l2662:
  3668  04DD  3001               	movlw	1
  3669  04DE  00A8               	movwf	??___fladd
  3670  04DF  0828               	movf	??___fladd,w
  3671  04E0  07F5               	addwf	___fladd@bexp,f
  3672  04E1  2D98               	goto	l2698
  3673  04E2                     l2664:
  3674  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3675  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3676  04E4  0823               	movf	___fladd@b+3,w
  3677  04E5  3A80               	xorlw	128
  3678  04E6  00FF               	movwf	btemp+1
  3679  04E7  0827               	movf	___fladd@a+3,w
  3680  04E8  3A80               	xorlw	128
  3681  04E9  027F               	subwf	btemp+1,w
  3682  04EA  1D03               	skipz
  3683  04EB  2CF6               	goto	u3153
  3684  04EC  0826               	movf	___fladd@a+2,w
  3685  04ED  0222               	subwf	___fladd@b+2,w
  3686  04EE  1D03               	skipz
  3687  04EF  2CF6               	goto	u3153
  3688  04F0  0825               	movf	___fladd@a+1,w
  3689  04F1  0221               	subwf	___fladd@b+1,w
  3690  04F2  1D03               	skipz
  3691  04F3  2CF6               	goto	u3153
  3692  04F4  0824               	movf	___fladd@a,w
  3693  04F5  0220               	subwf	___fladd@b,w
  3694  04F6                     u3153:
  3695  04F6  1803               	skipnc
  3696  04F7  2CF9               	goto	u3151
  3697  04F8  2CFA               	goto	u3150
  3698  04F9                     u3151:
  3699  04F9  2D52               	goto	l2674
  3700  04FA                     u3150:
  3701  04FA                     l2666:
  3702  04FA  30FF               	movlw	255
  3703  04FB  00A8               	movwf	??___fladd
  3704  04FC  30FF               	movlw	255
  3705  04FD  00A9               	movwf	??___fladd+1
  3706  04FE  30FF               	movlw	255
  3707  04FF  00AA               	movwf	??___fladd+2
  3708  0500  30FF               	movlw	255
  3709  0501  00AB               	movwf	??___fladd+3
  3710  0502  0824               	movf	___fladd@a,w
  3711  0503  00AC               	movwf	??___fladd+4
  3712  0504  0825               	movf	___fladd@a+1,w
  3713  0505  00AD               	movwf	??___fladd+5
  3714  0506  0826               	movf	___fladd@a+2,w
  3715  0507  00AE               	movwf	??___fladd+6
  3716  0508  0827               	movf	___fladd@a+3,w
  3717  0509  00AF               	movwf	??___fladd+7
  3718  050A  0820               	movf	___fladd@b,w
  3719  050B  02AC               	subwf	??___fladd+4,f
  3720  050C  0821               	movf	___fladd@b+1,w
  3721  050D  1C03               	skipc
  3722  050E  0F21               	incfsz	___fladd@b+1,w
  3723  050F  2D11               	goto	u3161
  3724  0510  2D12               	goto	u3162
  3725  0511                     u3161:
  3726  0511  02AD               	subwf	??___fladd+5,f
  3727  0512                     u3162:
  3728  0512  0822               	movf	___fladd@b+2,w
  3729  0513  1C03               	skipc
  3730  0514  0F22               	incfsz	___fladd@b+2,w
  3731  0515  2D17               	goto	u3163
  3732  0516  2D18               	goto	u3164
  3733  0517                     u3163:
  3734  0517  02AE               	subwf	??___fladd+6,f
  3735  0518                     u3164:
  3736  0518  0823               	movf	___fladd@b+3,w
  3737  0519  1C03               	skipc
  3738  051A  0F23               	incfsz	___fladd@b+3,w
  3739  051B  2D1D               	goto	u3165
  3740  051C  2D1E               	goto	u3166
  3741  051D                     u3165:
  3742  051D  02AF               	subwf	??___fladd+7,f
  3743  051E                     u3166:
  3744  051E  082C               	movf	??___fladd+4,w
  3745  051F  07A8               	addwf	??___fladd,f
  3746  0520  082D               	movf	??___fladd+5,w
  3747  0521  1803               	skipnc
  3748  0522  0F2D               	incfsz	??___fladd+5,w
  3749  0523  2D25               	goto	u3170
  3750  0524  2D26               	goto	u3171
  3751  0525                     u3170:
  3752  0525  07A9               	addwf	??___fladd+1,f
  3753  0526                     u3171:
  3754  0526  082E               	movf	??___fladd+6,w
  3755  0527  1803               	skipnc
  3756  0528  0F2E               	incfsz	??___fladd+6,w
  3757  0529  2D2B               	goto	u3172
  3758  052A  2D2C               	goto	u3173
  3759  052B                     u3172:
  3760  052B  07AA               	addwf	??___fladd+2,f
  3761  052C                     u3173:
  3762  052C  082F               	movf	??___fladd+7,w
  3763  052D  1803               	skipnc
  3764  052E  0A2F               	incf	??___fladd+7,w
  3765  052F  07AB               	addwf	??___fladd+3,f
  3766  0530  082B               	movf	??___fladd+3,w
  3767  0531  00A3               	movwf	___fladd@b+3
  3768  0532  082A               	movf	??___fladd+2,w
  3769  0533  00A2               	movwf	___fladd@b+2
  3770  0534  0829               	movf	??___fladd+1,w
  3771  0535  00A1               	movwf	___fladd@b+1
  3772  0536  0828               	movf	??___fladd,w
  3773  0537  00A0               	movwf	___fladd@b
  3774  0538                     l2668:
  3775  0538  3080               	movlw	128
  3776  0539  00A8               	movwf	??___fladd
  3777  053A  0828               	movf	??___fladd,w
  3778  053B  06F3               	xorwf	___fladd@signs,f
  3779  053C  09F6               	comf	___fladd@grs,f
  3780  053D  0AF6               	incf	___fladd@grs,f
  3781  053E                     l2670:
  3782  053E  0876               	movf	___fladd@grs,w
  3783  053F  1D03               	btfss	3,2
  3784  0540  2D42               	goto	u3181
  3785  0541  2D43               	goto	u3180
  3786  0542                     u3181:
  3787  0542  2D60               	goto	l620
  3788  0543                     u3180:
  3789  0543                     l2672:
  3790  0543  3001               	movlw	1
  3791  0544  07A0               	addwf	___fladd@b,f
  3792  0545  3000               	movlw	0
  3793  0546  1803               	skipnc
  3794  0547  3001               	movlw	1
  3795  0548  07A1               	addwf	___fladd@b+1,f
  3796  0549  3000               	movlw	0
  3797  054A  1803               	skipnc
  3798  054B  3001               	movlw	1
  3799  054C  07A2               	addwf	___fladd@b+2,f
  3800  054D  3000               	movlw	0
  3801  054E  1803               	skipnc
  3802  054F  3001               	movlw	1
  3803  0550  07A3               	addwf	___fladd@b+3,f
  3804  0551  2D60               	goto	l620
  3805  0552                     l2674:
  3806  0552  0824               	movf	___fladd@a,w
  3807  0553  02A0               	subwf	___fladd@b,f
  3808  0554  0825               	movf	___fladd@a+1,w
  3809  0555  1C03               	skipc
  3810  0556  0F25               	incfsz	___fladd@a+1,w
  3811  0557  02A1               	subwf	___fladd@b+1,f
  3812  0558  0826               	movf	___fladd@a+2,w
  3813  0559  1C03               	skipc
  3814  055A  0F26               	incfsz	___fladd@a+2,w
  3815  055B  02A2               	subwf	___fladd@b+2,f
  3816  055C  0827               	movf	___fladd@a+3,w
  3817  055D  1C03               	skipc
  3818  055E  0F27               	incfsz	___fladd@a+3,w
  3819  055F  02A3               	subwf	___fladd@b+3,f
  3820  0560                     l620:
  3821  0560  0823               	movf	___fladd@b+3,w
  3822  0561  0422               	iorwf	___fladd@b+2,w
  3823  0562  0421               	iorwf	___fladd@b+1,w
  3824  0563  0420               	iorwf	___fladd@b,w
  3825  0564  1D03               	skipz
  3826  0565  2D67               	goto	u3191
  3827  0566  2D68               	goto	u3190
  3828  0567                     u3191:
  3829  0567  2D94               	goto	l2696
  3830  0568                     u3190:
  3831  0568                     l2676:
  3832  0568  0876               	movf	___fladd@grs,w
  3833  0569  1D03               	btfss	3,2
  3834  056A  2D6C               	goto	u3201
  3835  056B  2D6D               	goto	u3200
  3836  056C                     u3201:
  3837  056C  2D94               	goto	l2696
  3838  056D                     u3200:
  3839  056D                     l2678:
  3840  056D  3000               	movlw	0
  3841  056E  00A3               	movwf	?___fladd+3
  3842  056F  3000               	movlw	0
  3843  0570  00A2               	movwf	?___fladd+2
  3844  0571  3000               	movlw	0
  3845  0572  00A1               	movwf	?___fladd+1
  3846  0573  3000               	movlw	0
  3847  0574  00A0               	movwf	?___fladd
  3848  0575  2E12               	goto	l612
  3849  0576                     l2682:
  3850  0576  3001               	movlw	1
  3851  0577  00A8               	movwf	??___fladd
  3852  0578                     u3215:
  3853  0578  1003               	clrc
  3854  0579  0DA0               	rlf	___fladd@b,f
  3855  057A  0DA1               	rlf	___fladd@b+1,f
  3856  057B  0DA2               	rlf	___fladd@b+2,f
  3857  057C  0DA3               	rlf	___fladd@b+3,f
  3858  057D  0BA8               	decfsz	??___fladd,f
  3859  057E  2D78               	goto	u3215
  3860  057F                     l2684:
  3861  057F  1FF6               	btfss	___fladd@grs,7
  3862  0580  2D82               	goto	u3221
  3863  0581  2D83               	goto	u3220
  3864  0582                     u3221:
  3865  0582  2D84               	goto	l624
  3866  0583                     u3220:
  3867  0583                     l2686:
  3868  0583  1420               	bsf	___fladd@b,0
  3869  0584                     l624:
  3870  0584  1C76               	btfss	___fladd@grs,0
  3871  0585  2D87               	goto	u3231
  3872  0586  2D88               	goto	u3230
  3873  0587                     u3231:
  3874  0587  2D8B               	goto	l2690
  3875  0588                     u3230:
  3876  0588                     l2688:
  3877  0588  1403               	setc
  3878  0589  0DF6               	rlf	___fladd@grs,f
  3879  058A  2D8D               	goto	l2692
  3880  058B                     l2690:
  3881  058B  1003               	clrc
  3882  058C  0DF6               	rlf	___fladd@grs,f
  3883  058D                     l2692:
  3884  058D  0875               	movf	___fladd@bexp,w
  3885  058E  1903               	btfsc	3,2
  3886  058F  2D91               	goto	u3241
  3887  0590  2D92               	goto	u3240
  3888  0591                     u3241:
  3889  0591  2D94               	goto	l2696
  3890  0592                     u3240:
  3891  0592                     l2694:
  3892  0592  3001               	movlw	1
  3893  0593  02F5               	subwf	___fladd@bexp,f
  3894  0594                     l2696:
  3895  0594  1FA2               	btfss	___fladd@b+2,7
  3896  0595  2D97               	goto	u3251
  3897  0596  2D98               	goto	u3250
  3898  0597                     u3251:
  3899  0597  2D76               	goto	l2682
  3900  0598                     u3250:
  3901  0598                     l2698:
  3902  0598  01F4               	clrf	___fladd@aexp
  3903  0599                     l2700:
  3904  0599  1FF6               	btfss	___fladd@grs,7
  3905  059A  2D9C               	goto	u3261
  3906  059B  2D9D               	goto	u3260
  3907  059C                     u3261:
  3908  059C  2DAB               	goto	l2708
  3909  059D                     u3260:
  3910  059D                     l2702:
  3911  059D  0876               	movf	___fladd@grs,w
  3912  059E  397F               	andlw	127
  3913  059F  1903               	btfsc	3,2
  3914  05A0  2DA2               	goto	u3271
  3915  05A1  2DA3               	goto	u3270
  3916  05A2                     u3271:
  3917  05A2  2DA6               	goto	l630
  3918  05A3                     u3270:
  3919  05A3                     l2704:
  3920  05A3  01F4               	clrf	___fladd@aexp
  3921  05A4  0AF4               	incf	___fladd@aexp,f
  3922  05A5  2DAB               	goto	l2708
  3923  05A6                     l630:
  3924  05A6  1C20               	btfss	___fladd@b,0
  3925  05A7  2DA9               	goto	u3281
  3926  05A8  2DAA               	goto	u3280
  3927  05A9                     u3281:
  3928  05A9  2DAB               	goto	l2708
  3929  05AA                     u3280:
  3930  05AA  2DA3               	goto	l2704
  3931  05AB                     l2708:
  3932  05AB  0874               	movf	___fladd@aexp,w
  3933  05AC  1903               	btfsc	3,2
  3934  05AD  2DAF               	goto	u3291
  3935  05AE  2DB0               	goto	u3290
  3936  05AF                     u3291:
  3937  05AF  2DE4               	goto	l633
  3938  05B0                     u3290:
  3939  05B0                     l2710:
  3940  05B0  3001               	movlw	1
  3941  05B1  07A0               	addwf	___fladd@b,f
  3942  05B2  3000               	movlw	0
  3943  05B3  1803               	skipnc
  3944  05B4  3001               	movlw	1
  3945  05B5  07A1               	addwf	___fladd@b+1,f
  3946  05B6  3000               	movlw	0
  3947  05B7  1803               	skipnc
  3948  05B8  3001               	movlw	1
  3949  05B9  07A2               	addwf	___fladd@b+2,f
  3950  05BA  3000               	movlw	0
  3951  05BB  1803               	skipnc
  3952  05BC  3001               	movlw	1
  3953  05BD  07A3               	addwf	___fladd@b+3,f
  3954  05BE                     l2712:
  3955  05BE  1C23               	btfss	___fladd@b+3,0
  3956  05BF  2DC1               	goto	u3301
  3957  05C0  2DC2               	goto	u3300
  3958  05C1                     u3301:
  3959  05C1  2DE4               	goto	l633
  3960  05C2                     u3300:
  3961  05C2                     l2714:
  3962  05C2  0820               	movf	___fladd@b,w
  3963  05C3  00A8               	movwf	??___fladd
  3964  05C4  0821               	movf	___fladd@b+1,w
  3965  05C5  00A9               	movwf	??___fladd+1
  3966  05C6  0822               	movf	___fladd@b+2,w
  3967  05C7  00AA               	movwf	??___fladd+2
  3968  05C8  0823               	movf	___fladd@b+3,w
  3969  05C9  00AB               	movwf	??___fladd+3
  3970  05CA  3001               	movlw	1
  3971  05CB  00AC               	movwf	??___fladd+4
  3972  05CC                     u3315:
  3973  05CC  0D2B               	rlf	??___fladd+3,w
  3974  05CD  0CAB               	rrf	??___fladd+3,f
  3975  05CE  0CAA               	rrf	??___fladd+2,f
  3976  05CF  0CA9               	rrf	??___fladd+1,f
  3977  05D0  0CA8               	rrf	??___fladd,f
  3978  05D1                     u3310:
  3979  05D1  0BAC               	decfsz	??___fladd+4,f
  3980  05D2  2DCC               	goto	u3315
  3981  05D3  082B               	movf	??___fladd+3,w
  3982  05D4  00A3               	movwf	___fladd@b+3
  3983  05D5  082A               	movf	??___fladd+2,w
  3984  05D6  00A2               	movwf	___fladd@b+2
  3985  05D7  0829               	movf	??___fladd+1,w
  3986  05D8  00A1               	movwf	___fladd@b+1
  3987  05D9  0828               	movf	??___fladd,w
  3988  05DA  00A0               	movwf	___fladd@b
  3989  05DB  0A75               	incf	___fladd@bexp,w
  3990  05DC  1903               	btfsc	3,2
  3991  05DD  2DDF               	goto	u3321
  3992  05DE  2DE0               	goto	u3320
  3993  05DF                     u3321:
  3994  05DF  2DE4               	goto	l633
  3995  05E0                     u3320:
  3996  05E0                     l2716:
  3997  05E0  3001               	movlw	1
  3998  05E1  00A8               	movwf	??___fladd
  3999  05E2  0828               	movf	??___fladd,w
  4000  05E3  07F5               	addwf	___fladd@bexp,f
  4001  05E4                     l633:
  4002  05E4  0A75               	incf	___fladd@bexp,w
  4003  05E5  1903               	btfsc	3,2
  4004  05E6  2DE8               	goto	u3331
  4005  05E7  2DE9               	goto	u3330
  4006  05E8                     u3331:
  4007  05E8  2DEE               	goto	l2720
  4008  05E9                     u3330:
  4009  05E9                     l2718:
  4010  05E9  0875               	movf	___fladd@bexp,w
  4011  05EA  1D03               	btfss	3,2
  4012  05EB  2DED               	goto	u3341
  4013  05EC  2DEE               	goto	u3340
  4014  05ED                     u3341:
  4015  05ED  2DFC               	goto	l2726
  4016  05EE                     u3340:
  4017  05EE                     l2720:
  4018  05EE  3000               	movlw	0
  4019  05EF  00A3               	movwf	___fladd@b+3
  4020  05F0  3000               	movlw	0
  4021  05F1  00A2               	movwf	___fladd@b+2
  4022  05F2  3000               	movlw	0
  4023  05F3  00A1               	movwf	___fladd@b+1
  4024  05F4  3000               	movlw	0
  4025  05F5  00A0               	movwf	___fladd@b
  4026  05F6                     l2722:
  4027  05F6  0875               	movf	___fladd@bexp,w
  4028  05F7  1D03               	btfss	3,2
  4029  05F8  2DFA               	goto	u3351
  4030  05F9  2DFB               	goto	u3350
  4031  05FA                     u3351:
  4032  05FA  2DFC               	goto	l2726
  4033  05FB                     u3350:
  4034  05FB                     l2724:
  4035  05FB  01F3               	clrf	___fladd@signs
  4036  05FC                     l2726:
  4037  05FC  1C75               	btfss	___fladd@bexp,0
  4038  05FD  2DFF               	goto	u3361
  4039  05FE  2E00               	goto	u3360
  4040  05FF                     u3361:
  4041  05FF  2E02               	goto	l2730
  4042  0600                     u3360:
  4043  0600                     l2728:
  4044  0600  17A2               	bsf	___fladd@b+2,7
  4045  0601  2E06               	goto	l641
  4046  0602                     l2730:
  4047  0602  307F               	movlw	127
  4048  0603  00A8               	movwf	??___fladd
  4049  0604  0828               	movf	??___fladd,w
  4050  0605  05A2               	andwf	___fladd@b+2,f
  4051  0606                     l641:
  4052  0606  0875               	movf	___fladd@bexp,w
  4053  0607  00A8               	movwf	??___fladd
  4054  0608  1003               	clrc
  4055  0609  0C28               	rrf	??___fladd,w
  4056  060A  00A9               	movwf	??___fladd+1
  4057  060B  0829               	movf	??___fladd+1,w
  4058  060C  00A3               	movwf	___fladd@b+3
  4059  060D                     l2732:
  4060  060D  1FF3               	btfss	___fladd@signs,7
  4061  060E  2E10               	goto	u3371
  4062  060F  2E11               	goto	u3370
  4063  0610                     u3371:
  4064  0610  2E12               	goto	l642
  4065  0611                     u3370:
  4066  0611                     l2734:
  4067  0611  17A3               	bsf	___fladd@b+3,7
  4068  0612                     l642:
  4069  0612                     l612:
  4070  0612  0008               	return
  4071  0613                     __end_of___fladd:
  4072                           
  4073                           	psect	text15
  4074  0ADB                     __ptext15:	
  4075 ;; *************** function _cursorLCD *****************
  4076 ;; Defined at:
  4077 ;;		line 50 in file "LCDD2.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  fila            1    wreg     unsigned char 
  4080 ;;  columna         1    6[COMMON] unsigned char 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  fila            1    8[COMMON] unsigned char 
  4083 ;;  temp            1    9[COMMON] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         1       0       0       0       0
  4094 ;;      Locals:         2       0       0       0       0
  4095 ;;      Temps:          1       0       0       0       0
  4096 ;;      Totals:         4       0       0       0       0
  4097 ;;Total ram usage:        4 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    2
  4100 ;; This function calls:
  4101 ;;		_comandoLCD
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _cursorLCD
  4109  0ADB                     _cursorLCD:
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4113                           ;cursorLCD@fila stored from wreg
  4114  0ADB  00F8               	movwf	cursorLCD@fila
  4115  0ADC                     l2348:
  4116                           
  4117                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  4118  0ADC  0378               	decf	cursorLCD@fila,w
  4119  0ADD  1D03               	btfss	3,2
  4120  0ADE  2AE0               	goto	u2681
  4121  0ADF  2AE1               	goto	u2680
  4122  0AE0                     u2681:
  4123  0AE0  2AEC               	goto	l2354
  4124  0AE1                     u2680:
  4125  0AE1                     l2350:
  4126                           
  4127                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  4128  0AE1  0876               	movf	cursorLCD@columna,w
  4129  0AE2  3E7F               	addlw	127
  4130  0AE3  00F7               	movwf	??_cursorLCD
  4131  0AE4  0877               	movf	??_cursorLCD,w
  4132  0AE5  00F9               	movwf	cursorLCD@temp
  4133  0AE6                     l2352:
  4134                           
  4135                           ;LCDD2.c: 54:         comandoLCD(temp);
  4136  0AE6  0879               	movf	cursorLCD@temp,w
  4137  0AE7  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4138  0AEC                     l2354:
  4139                           
  4140                           ;LCDD2.c: 57:     if(fila == 2){
  4141  0AEC  3002               	movlw	2
  4142  0AED  0678               	xorwf	cursorLCD@fila,w
  4143  0AEE  1D03               	btfss	3,2
  4144  0AEF  2AF1               	goto	u2691
  4145  0AF0  2AF2               	goto	u2690
  4146  0AF1                     u2691:
  4147  0AF1  2AFD               	goto	l208
  4148  0AF2                     u2690:
  4149  0AF2                     l2356:
  4150                           
  4151                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  4152  0AF2  0876               	movf	cursorLCD@columna,w
  4153  0AF3  3EBF               	addlw	191
  4154  0AF4  00F7               	movwf	??_cursorLCD
  4155  0AF5  0877               	movf	??_cursorLCD,w
  4156  0AF6  00F9               	movwf	cursorLCD@temp
  4157  0AF7                     l2358:
  4158                           
  4159                           ;LCDD2.c: 59:         comandoLCD(temp);
  4160  0AF7  0879               	movf	cursorLCD@temp,w
  4161  0AF8  120A  158A  2274  120A  158A  	fcall	_comandoLCD
  4162  0AFD                     l208:
  4163  0AFD  0008               	return
  4164  0AFE                     __end_of_cursorLCD:
  4165                           
  4166                           	psect	text16
  4167  0A74                     __ptext16:	
  4168 ;; *************** function _comandoLCD *****************
  4169 ;; Defined at:
  4170 ;;		line 63 in file "LCDD2.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  cmd             1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  cmd             1    5[COMMON] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         1       0       0       0       0
  4186 ;;      Temps:          2       0       0       0       0
  4187 ;;      Totals:         3       0       0       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_initLCD
  4195 ;;		_cursorLCD
  4196 ;;		_ClearLCD
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _comandoLCD
  4202  0A74                     _comandoLCD:
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _comandoLCD: [wreg]
  4206                           ;comandoLCD@cmd stored from wreg
  4207  0A74  00F5               	movwf	comandoLCD@cmd
  4208  0A75                     l2008:
  4209                           
  4210                           ;LCDD2.c: 64:     RC0 = 0;
  4211  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0A77  1007               	bcf	7,0	;volatile
  4214  0A78                     l2010:
  4215                           
  4216                           ;LCDD2.c: 65:     PORTD = cmd;
  4217  0A78  0875               	movf	comandoLCD@cmd,w
  4218  0A79  0088               	movwf	8	;volatile
  4219  0A7A                     l2012:
  4220                           
  4221                           ;LCDD2.c: 66:     RC1 = 1;
  4222  0A7A  1487               	bsf	7,1	;volatile
  4223                           
  4224                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4225  0A7B  300B               	movlw	11
  4226  0A7C  00F4               	movwf	??_comandoLCD+1
  4227  0A7D  3062               	movlw	98
  4228  0A7E  00F3               	movwf	??_comandoLCD
  4229  0A7F                     u4097:
  4230  0A7F  0BF3               	decfsz	??_comandoLCD,f
  4231  0A80  2A7F               	goto	u4097
  4232  0A81  0BF4               	decfsz	??_comandoLCD+1,f
  4233  0A82  2A7F               	goto	u4097
  4234  0A83  0000               	nop
  4235  0A84                     l2014:
  4236                           
  4237                           ;LCDD2.c: 68:     RC1 = 0;
  4238  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0A86  1087               	bcf	7,1	;volatile
  4241  0A87                     l211:
  4242  0A87  0008               	return
  4243  0A88                     __end_of_comandoLCD:
  4244                           
  4245                           	psect	text17
  4246  0BAB                     __ptext17:	
  4247 ;; *************** function _configuracion *****************
  4248 ;; Defined at:
  4249 ;;		line 122 in file "main.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		_ADCconfig
  4272 ;;		_configUART
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _configuracion
  4280  0BAB                     _configuracion:
  4281  0BAB                     l2242:	
  4282                           ;incstack = 0
  4283                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4284                           
  4285                           
  4286                           ;main.c: 124:     ANSEL = 0X03;
  4287  0BAB  3003               	movlw	3
  4288  0BAC  1683               	bsf	3,5	;RP0=1, select bank3
  4289  0BAD  1703               	bsf	3,6	;RP1=1, select bank3
  4290  0BAE  0088               	movwf	8	;volatile
  4291  0BAF                     l2244:
  4292                           
  4293                           ;main.c: 125:     ANSELH = 0X00;
  4294  0BAF  0189               	clrf	9	;volatile
  4295  0BB0                     l2246:
  4296                           
  4297                           ;main.c: 126:     TRISA = 0X03;
  4298  0BB0  3003               	movlw	3
  4299  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  4300  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  4301  0BB3  0085               	movwf	5	;volatile
  4302                           
  4303                           ;main.c: 127:     TRISB = 0X00;
  4304  0BB4  0186               	clrf	6	;volatile
  4305                           
  4306                           ;main.c: 128:     TRISC = 0X00;
  4307  0BB5  0187               	clrf	7	;volatile
  4308                           
  4309                           ;main.c: 129:     TRISD = 0X00;
  4310  0BB6  0188               	clrf	8	;volatile
  4311                           
  4312                           ;main.c: 130:     TRISE = 0X00;
  4313  0BB7  0189               	clrf	9	;volatile
  4314                           
  4315                           ;main.c: 131:     PORTA = 0X00;
  4316  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0BBA  0185               	clrf	5	;volatile
  4319                           
  4320                           ;main.c: 132:     PORTB = 0X00;
  4321  0BBB  0186               	clrf	6	;volatile
  4322                           
  4323                           ;main.c: 133:     PORTC = 0X00;
  4324  0BBC  0187               	clrf	7	;volatile
  4325                           
  4326                           ;main.c: 134:     PORTD = 0X00;
  4327  0BBD  0188               	clrf	8	;volatile
  4328                           
  4329                           ;main.c: 135:     PORTE = 0X00;
  4330  0BBE  0189               	clrf	9	;volatile
  4331  0BBF                     l2248:
  4332                           
  4333                           ;main.c: 138:     configUART();
  4334  0BBF  120A  158A  2262  120A  158A  	fcall	_configUART
  4335  0BC4                     l2250:
  4336                           
  4337                           ;main.c: 141:     OSCCONbits.IRCF = 0b111;
  4338  0BC4  3070               	movlw	112
  4339  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0BC7  048F               	iorwf	15,f	;volatile
  4342  0BC8                     l2252:
  4343                           
  4344                           ;main.c: 142:     OSCCONbits.SCS = 0b1;
  4345  0BC8  140F               	bsf	15,0	;volatile
  4346  0BC9                     l2254:
  4347                           
  4348                           ;main.c: 145:     INTCONbits.GIE = 1;
  4349  0BC9  178B               	bsf	11,7	;volatile
  4350  0BCA                     l2256:
  4351                           
  4352                           ;main.c: 146:     INTCONbits.PEIE = 1;
  4353  0BCA  170B               	bsf	11,6	;volatile
  4354  0BCB                     l2258:
  4355                           
  4356                           ;main.c: 147:     INTCONbits.T0IF = 0;
  4357  0BCB  110B               	bcf	11,2	;volatile
  4358  0BCC                     l2260:
  4359                           
  4360                           ;main.c: 148:     INTCONbits.T0IE = 1;
  4361  0BCC  168B               	bsf	11,5	;volatile
  4362  0BCD                     l2262:
  4363                           
  4364                           ;main.c: 149:     PIE1bits.RCIE = 1;
  4365  0BCD  168C               	bsf	12,5	;volatile
  4366  0BCE                     l2264:
  4367                           
  4368                           ;main.c: 152:     OPTION_REGbits.T0CS = 0;
  4369  0BCE  1281               	bcf	1,5	;volatile
  4370  0BCF                     l2266:
  4371                           
  4372                           ;main.c: 153:     OPTION_REGbits.PSA = 0;
  4373  0BCF  1181               	bcf	1,3	;volatile
  4374  0BD0                     l2268:
  4375                           
  4376                           ;main.c: 154:     OPTION_REGbits.PS2 = 1;
  4377  0BD0  1501               	bsf	1,2	;volatile
  4378  0BD1                     l2270:
  4379                           
  4380                           ;main.c: 155:     OPTION_REGbits.PS1 = 1;
  4381  0BD1  1481               	bsf	1,1	;volatile
  4382  0BD2                     l2272:
  4383                           
  4384                           ;main.c: 156:     OPTION_REGbits.PS0 = 0;
  4385  0BD2  1001               	bcf	1,0	;volatile
  4386  0BD3                     l2274:
  4387                           
  4388                           ;main.c: 161:     ADCconfig(0,0);
  4389  0BD3  01F3               	clrf	ADCconfig@just
  4390  0BD4  3000               	movlw	0
  4391  0BD5  120A  158A  2422  120A  158A  	fcall	_ADCconfig
  4392  0BDA                     l2276:
  4393                           
  4394                           ;main.c: 163:     PIR1bits.ADIF = 0;
  4395  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0BDC  130C               	bcf	12,6	;volatile
  4398  0BDD                     l2278:
  4399                           
  4400                           ;main.c: 164:     PIE1bits.ADIE = 1;
  4401  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4402  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  4403  0BDF  170C               	bsf	12,6	;volatile
  4404  0BE0                     l110:
  4405  0BE0  0008               	return
  4406  0BE1                     __end_of_configuracion:
  4407                           
  4408                           	psect	text18
  4409  0A62                     __ptext18:	
  4410 ;; *************** function _configUART *****************
  4411 ;; Defined at:
  4412 ;;		line 11 in file "ComSerial.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_configuracion
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _configUART
  4442  0A62                     _configUART:
  4443  0A62                     l1934:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _configUART: [wreg]
  4446                           
  4447                           
  4448                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  4449  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0A64  1307               	bcf	7,6	;volatile
  4452                           
  4453                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  4454  0A65  1787               	bsf	7,7	;volatile
  4455  0A66                     l1936:
  4456                           
  4457                           ;ComSerial.c: 15:     SPBRG = 12;
  4458  0A66  300C               	movlw	12
  4459  0A67  0099               	movwf	25	;volatile
  4460  0A68                     l1938:
  4461                           
  4462                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  4463  0A68  1118               	bcf	24,2	;volatile
  4464  0A69                     l1940:
  4465                           
  4466                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  4467  0A69  1698               	bsf	24,5	;volatile
  4468  0A6A                     l1942:
  4469                           
  4470                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  4471  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0A6C  1618               	bsf	24,4	;volatile
  4474  0A6D                     l1944:
  4475                           
  4476                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  4477  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  4478  0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  4479  0A6F  1218               	bcf	24,4	;volatile
  4480  0A70                     l1946:
  4481                           
  4482                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  4483  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0A72  1798               	bsf	24,7	;volatile
  4486  0A73                     l148:
  4487  0A73  0008               	return
  4488  0A74                     __end_of_configUART:
  4489                           
  4490                           	psect	text19
  4491  0C22                     __ptext19:	
  4492 ;; *************** function _ADCconfig *****************
  4493 ;; Defined at:
  4494 ;;		line 10 in file "ADC.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  canal           1    wreg     unsigned char 
  4497 ;;  just            1    3[COMMON] unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  canal           1    6[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         1       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0
  4511 ;;      Temps:          2       0       0       0       0
  4512 ;;      Totals:         4       0       0       0       0
  4513 ;;Total ram usage:        4 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_configuracion
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _ADCconfig
  4525  0C22                     _ADCconfig:
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
  4529                           ;ADCconfig@canal stored from wreg
  4530  0C22  00F6               	movwf	ADCconfig@canal
  4531  0C23                     l1948:
  4532                           
  4533                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
  4534  0C23  2C3C               	goto	l1960
  4535  0C24                     l1950:
  4536                           
  4537                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
  4538  0C24  303F               	movlw	-193
  4539  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4540  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4541  0C27  059F               	andwf	31,f	;volatile
  4542                           
  4543                           ;ADC.c: 18:             break;
  4544  0C28  2C52               	goto	l1962
  4545  0C29                     l1952:
  4546                           
  4547                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
  4548  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0C2B  081F               	movf	31,w	;volatile
  4551  0C2C  393F               	andlw	-193
  4552  0C2D  3840               	iorlw	64
  4553  0C2E  009F               	movwf	31	;volatile
  4554                           
  4555                           ;ADC.c: 21:             break;
  4556  0C2F  2C52               	goto	l1962
  4557  0C30                     l1954:
  4558                           
  4559                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
  4560  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4561  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0C32  081F               	movf	31,w	;volatile
  4563  0C33  393F               	andlw	-193
  4564  0C34  3880               	iorlw	128
  4565  0C35  009F               	movwf	31	;volatile
  4566                           
  4567                           ;ADC.c: 24:             break;
  4568  0C36  2C52               	goto	l1962
  4569  0C37                     l1956:
  4570                           
  4571                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  4572  0C37  30C0               	movlw	192
  4573  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4574  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4575  0C3A  049F               	iorwf	31,f	;volatile
  4576                           
  4577                           ;ADC.c: 27:             break;
  4578  0C3B  2C52               	goto	l1962
  4579  0C3C                     l1960:
  4580  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  4581  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  4582  0C3E  0E0F               	swapf	15,w	;volatile
  4583  0C3F  3907               	andlw	7
  4584  0C40  00F4               	movwf	??_ADCconfig
  4585  0C41  01F5               	clrf	??_ADCconfig+1
  4586                           
  4587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4588                           ; Switch size 1, requested type "simple"
  4589                           ; Number of cases is 1, Range of values is 0 to 0
  4590                           ; switch strategies available:
  4591                           ; Name         Instructions Cycles
  4592                           ; simple_byte            4     3 (average)
  4593                           ; direct_byte           11     8 (fixed)
  4594                           ; jumptable            260     6 (fixed)
  4595                           ;	Chosen strategy is simple_byte
  4596  0C42  0875               	movf	??_ADCconfig+1,w
  4597  0C43  3A00               	xorlw	0	; case 0
  4598  0C44  1903               	skipnz
  4599  0C45  2C47               	goto	l3134
  4600  0C46  2C37               	goto	l1956
  4601  0C47                     l3134:
  4602                           
  4603                           ; Switch size 1, requested type "simple"
  4604                           ; Number of cases is 3, Range of values is 4 to 7
  4605                           ; switch strategies available:
  4606                           ; Name         Instructions Cycles
  4607                           ; simple_byte           10     6 (average)
  4608                           ; direct_byte           23    11 (fixed)
  4609                           ; jumptable            263     9 (fixed)
  4610                           ;	Chosen strategy is simple_byte
  4611  0C47  0874               	movf	??_ADCconfig,w
  4612  0C48  3A04               	xorlw	4	; case 4
  4613  0C49  1903               	skipnz
  4614  0C4A  2C24               	goto	l1950
  4615  0C4B  3A02               	xorlw	2	; case 6
  4616  0C4C  1903               	skipnz
  4617  0C4D  2C29               	goto	l1952
  4618  0C4E  3A01               	xorlw	1	; case 7
  4619  0C4F  1903               	skipnz
  4620  0C50  2C30               	goto	l1954
  4621  0C51  2C37               	goto	l1956
  4622  0C52                     l1962:
  4623                           
  4624                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
  4625  0C52  0876               	movf	ADCconfig@canal,w
  4626  0C53  00F4               	movwf	??_ADCconfig
  4627  0C54  0DF4               	rlf	??_ADCconfig,f
  4628  0C55  0DF4               	rlf	??_ADCconfig,f
  4629  0C56  081F               	movf	31,w	;volatile
  4630  0C57  0674               	xorwf	??_ADCconfig,w
  4631  0C58  39C3               	andlw	-61
  4632  0C59  0674               	xorwf	??_ADCconfig,w
  4633  0C5A  009F               	movwf	31	;volatile
  4634  0C5B                     l1964:
  4635                           
  4636                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
  4637  0C5B  109F               	bcf	31,1	;volatile
  4638  0C5C                     l1966:
  4639                           
  4640                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
  4641  0C5C  141F               	bsf	31,0	;volatile
  4642  0C5D                     l1968:
  4643                           
  4644                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
  4645  0C5D  0C73               	rrf	ADCconfig@just,w
  4646  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4647  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4648  0C60  1C03               	skipc
  4649  0C61  139F               	bcf	31,7	;volatile
  4650  0C62  1803               	skipnc
  4651  0C63  179F               	bsf	31,7	;volatile
  4652  0C64                     l1970:
  4653                           
  4654                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
  4655  0C64  129F               	bcf	31,5	;volatile
  4656  0C65                     l1972:
  4657                           
  4658                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  4659  0C65  121F               	bcf	31,4	;volatile
  4660  0C66                     l125:
  4661  0C66  0008               	return
  4662  0C67                     __end_of_ADCconfig:
  4663                           
  4664                           	psect	text20
  4665  0A9D                     __ptext20:	
  4666 ;; *************** function _LCDstring *****************
  4667 ;; Defined at:
  4668 ;;		line 75 in file "LCDD2.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  mensaje         1    wreg     PTR unsigned char 
  4671 ;;		 -> STR_5(16), 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  mensaje         1    6[COMMON] PTR unsigned char 
  4674 ;;		 -> STR_5(16), 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         0       0       0       0       0
  4685 ;;      Locals:         1       0       0       0       0
  4686 ;;      Temps:          1       0       0       0       0
  4687 ;;      Totals:         2       0       0       0       0
  4688 ;;Total ram usage:        2 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    2
  4691 ;; This function calls:
  4692 ;;		_dispCHAR
  4693 ;; This function is called by:
  4694 ;;		_main
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _LCDstring
  4700  0A9D                     _LCDstring:
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4704                           ;LCDstring@mensaje stored from wreg
  4705  0A9D  00F6               	movwf	LCDstring@mensaje
  4706  0A9E                     l2360:
  4707                           
  4708                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4709  0A9E  2AAF               	goto	l2366
  4710  0A9F                     l2362:
  4711                           
  4712                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  4713  0A9F  0876               	movf	LCDstring@mensaje,w
  4714  0AA0  0084               	movwf	4
  4715  0AA1  120A  158A  2000  120A  158A  	fcall	stringdir
  4716  0AA6  120A  158A  2252  120A  158A  	fcall	_dispCHAR
  4717  0AAB                     l2364:
  4718                           
  4719                           ;LCDD2.c: 78:         mensaje ++;
  4720  0AAB  3001               	movlw	1
  4721  0AAC  00F5               	movwf	??_LCDstring
  4722  0AAD  0875               	movf	??_LCDstring,w
  4723  0AAE  07F6               	addwf	LCDstring@mensaje,f
  4724  0AAF                     l2366:
  4725                           
  4726                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4727  0AAF  0876               	movf	LCDstring@mensaje,w
  4728  0AB0  0084               	movwf	4
  4729  0AB1  120A  158A  2000  120A  158A  	fcall	stringdir
  4730  0AB6  3A00               	xorlw	0
  4731  0AB7  1D03               	skipz
  4732  0AB8  2ABA               	goto	u2701
  4733  0AB9  2ABB               	goto	u2700
  4734  0ABA                     u2701:
  4735  0ABA  2A9F               	goto	l2362
  4736  0ABB                     u2700:
  4737  0ABB                     l220:
  4738  0ABB  0008               	return
  4739  0ABC                     __end_of_LCDstring:
  4740                           
  4741                           	psect	text21
  4742  0A52                     __ptext21:	
  4743 ;; *************** function _dispCHAR *****************
  4744 ;; Defined at:
  4745 ;;		line 40 in file "LCDD2.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  b               1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  b               1    4[COMMON] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         0       0       0       0       0
  4760 ;;      Locals:         1       0       0       0       0
  4761 ;;      Temps:          1       0       0       0       0
  4762 ;;      Totals:         2       0       0       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    1
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_main
  4770 ;;		_LCDstring
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _dispCHAR
  4776  0A52                     _dispCHAR:
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _dispCHAR: [wreg]
  4780                           ;dispCHAR@b stored from wreg
  4781  0A52  00F4               	movwf	dispCHAR@b
  4782  0A53                     l1926:
  4783                           
  4784                           ;LCDD2.c: 42:     RC0 = 1;
  4785  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  4786  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  4787  0A55  1407               	bsf	7,0	;volatile
  4788  0A56                     l1928:
  4789                           
  4790                           ;LCDD2.c: 43:     PORTD = b;
  4791  0A56  0874               	movf	dispCHAR@b,w
  4792  0A57  0088               	movwf	8	;volatile
  4793  0A58                     l1930:
  4794                           
  4795                           ;LCDD2.c: 44:     RC1 = 1;
  4796  0A58  1487               	bsf	7,1	;volatile
  4797                           
  4798                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4799  0A59  301A               	movlw	26
  4800  0A5A  00F3               	movwf	??_dispCHAR
  4801  0A5B                     u4107:
  4802  0A5B  0BF3               	decfsz	??_dispCHAR,f
  4803  0A5C  2A5B               	goto	u4107
  4804  0A5D  0000               	nop
  4805  0A5E                     l1932:
  4806                           
  4807                           ;LCDD2.c: 46:     RC1 = 0;
  4808  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0A60  1087               	bcf	7,1	;volatile
  4811  0A61                     l203:
  4812  0A61  0008               	return
  4813  0A62                     __end_of_dispCHAR:
  4814                           
  4815                           	psect	text22
  4816  0BE1                     __ptext22:	
  4817 ;; *************** function _CONVdec *****************
  4818 ;; Defined at:
  4819 ;;		line 52 in file "ADC.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  lectura         1    wreg     PTR unsigned char 
  4822 ;;		 -> pot2(1), pot1(1), 
  4823 ;;  equiv           1   36[BANK0 ] PTR float 
  4824 ;;		 -> val2(4), val1(4), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  lectura         1    7[COMMON] PTR unsigned char 
  4827 ;;		 -> pot2(1), pot1(1), 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4837 ;;      Params:         0       1       0       0       0
  4838 ;;      Locals:         1       0       0       0       0
  4839 ;;      Temps:          0       4       0       0       0
  4840 ;;      Totals:         1       5       0       0       0
  4841 ;;Total ram usage:        6 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    3
  4844 ;; This function calls:
  4845 ;;		___flmul
  4846 ;;		___xxtofl
  4847 ;; This function is called by:
  4848 ;;		_main
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function _CONVdec
  4854  0BE1                     _CONVdec:
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _CONVdec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4858                           ;CONVdec@lectura stored from wreg
  4859  0BE1  00F7               	movwf	CONVdec@lectura
  4860  0BE2                     l3006:
  4861                           
  4862                           ;ADC.c: 54:     *equiv = (float)(0.01961)*(*lectura);
  4863  0BE2  303C               	movlw	60
  4864  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0BE5  00AD               	movwf	___flmul@b+3
  4867  0BE6  30A0               	movlw	160
  4868  0BE7  00AC               	movwf	___flmul@b+2
  4869  0BE8  30A5               	movlw	165
  4870  0BE9  00AB               	movwf	___flmul@b+1
  4871  0BEA  3027               	movlw	39
  4872  0BEB  00AA               	movwf	___flmul@b
  4873  0BEC  0877               	movf	CONVdec@lectura,w
  4874  0BED  0084               	movwf	4
  4875  0BEE  1383               	bcf	3,7	;select IRP bank0
  4876  0BEF  0800               	movf	0,w
  4877  0BF0  00C5               	movwf	??_CONVdec
  4878  0BF1  01C6               	clrf	??_CONVdec+1
  4879  0BF2  01C7               	clrf	??_CONVdec+2
  4880  0BF3  01C8               	clrf	??_CONVdec+3
  4881  0BF4  0848               	movf	??_CONVdec+3,w
  4882  0BF5  00F6               	movwf	___xxtofl@val+3
  4883  0BF6  0847               	movf	??_CONVdec+2,w
  4884  0BF7  00F5               	movwf	___xxtofl@val+2
  4885  0BF8  0846               	movf	??_CONVdec+1,w
  4886  0BF9  00F4               	movwf	___xxtofl@val+1
  4887  0BFA  0845               	movf	??_CONVdec,w
  4888  0BFB  00F3               	movwf	___xxtofl@val
  4889  0BFC  3001               	movlw	1
  4890  0BFD  120A  158A  2744  120A  158A  	fcall	___xxtofl
  4891  0C02  0876               	movf	?___xxtofl+3,w
  4892  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0C05  00B1               	movwf	___flmul@a+3
  4895  0C06  0875               	movf	?___xxtofl+2,w
  4896  0C07  00B0               	movwf	___flmul@a+2
  4897  0C08  0874               	movf	?___xxtofl+1,w
  4898  0C09  00AF               	movwf	___flmul@a+1
  4899  0C0A  0873               	movf	?___xxtofl,w
  4900  0C0B  00AE               	movwf	___flmul@a
  4901  0C0C  120A  118A  2022  120A  158A  	fcall	___flmul
  4902  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4903  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4904  0C13  0844               	movf	CONVdec@equiv,w
  4905  0C14  0084               	movwf	4
  4906  0C15  082A               	movf	?___flmul,w
  4907  0C16  1383               	bcf	3,7	;select IRP bank0
  4908  0C17  0080               	movwf	0
  4909  0C18  0A84               	incf	4,f
  4910  0C19  082B               	movf	?___flmul+1,w
  4911  0C1A  0080               	movwf	0
  4912  0C1B  0A84               	incf	4,f
  4913  0C1C  082C               	movf	?___flmul+2,w
  4914  0C1D  0080               	movwf	0
  4915  0C1E  0A84               	incf	4,f
  4916  0C1F  082D               	movf	?___flmul+3,w
  4917  0C20  0080               	movwf	0
  4918  0C21                     l131:
  4919  0C21  0008               	return
  4920  0C22                     __end_of_CONVdec:
  4921                           
  4922                           	psect	text23
  4923  0F44                     __ptext23:	
  4924 ;; *************** function ___xxtofl *****************
  4925 ;; Defined at:
  4926 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  sign            1    wreg     unsigned char 
  4929 ;;  val             4    3[COMMON] long 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  sign            1    4[BANK0 ] unsigned char 
  4932 ;;  arg             4    6[BANK0 ] unsigned long 
  4933 ;;  exp             1    5[BANK0 ] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  4    3[COMMON] unsigned char 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4943 ;;      Params:         4       0       0       0       0
  4944 ;;      Locals:         0       6       0       0       0
  4945 ;;      Temps:          0       4       0       0       0
  4946 ;;      Totals:         4      10       0       0       0
  4947 ;;Total ram usage:       14 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    1
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_CONVdec
  4954 ;;		_sendfloat
  4955 ;;		_floTochar
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function ___xxtofl
  4961  0F44                     ___xxtofl:
  4962                           
  4963                           ;incstack = 0
  4964                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4965                           ;___xxtofl@sign stored from wreg
  4966  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4967  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4968  0F46  00A4               	movwf	___xxtofl@sign
  4969  0F47                     l2962:
  4970  0F47  0824               	movf	___xxtofl@sign,w
  4971  0F48  1903               	btfsc	3,2
  4972  0F49  2F4B               	goto	u3911
  4973  0F4A  2F4C               	goto	u3910
  4974  0F4B                     u3911:
  4975  0F4B  2F60               	goto	l2968
  4976  0F4C                     u3910:
  4977  0F4C                     l2964:
  4978  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  4979  0F4D  2F4F               	goto	u3921
  4980  0F4E  2F50               	goto	u3920
  4981  0F4F                     u3921:
  4982  0F4F  2F60               	goto	l2968
  4983  0F50                     u3920:
  4984  0F50                     l2966:
  4985  0F50  0973               	comf	___xxtofl@val,w
  4986  0F51  00A6               	movwf	___xxtofl@arg
  4987  0F52  0974               	comf	___xxtofl@val+1,w
  4988  0F53  00A7               	movwf	___xxtofl@arg+1
  4989  0F54  0975               	comf	___xxtofl@val+2,w
  4990  0F55  00A8               	movwf	___xxtofl@arg+2
  4991  0F56  0976               	comf	___xxtofl@val+3,w
  4992  0F57  00A9               	movwf	___xxtofl@arg+3
  4993  0F58  0AA6               	incf	___xxtofl@arg,f
  4994  0F59  1903               	skipnz
  4995  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  4996  0F5B  1903               	skipnz
  4997  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  4998  0F5D  1903               	skipnz
  4999  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  5000  0F5F  2F68               	goto	l739
  5001  0F60                     l2968:
  5002  0F60  0876               	movf	___xxtofl@val+3,w
  5003  0F61  00A9               	movwf	___xxtofl@arg+3
  5004  0F62  0875               	movf	___xxtofl@val+2,w
  5005  0F63  00A8               	movwf	___xxtofl@arg+2
  5006  0F64  0874               	movf	___xxtofl@val+1,w
  5007  0F65  00A7               	movwf	___xxtofl@arg+1
  5008  0F66  0873               	movf	___xxtofl@val,w
  5009  0F67  00A6               	movwf	___xxtofl@arg
  5010  0F68                     l739:
  5011  0F68  0876               	movf	___xxtofl@val+3,w
  5012  0F69  0475               	iorwf	___xxtofl@val+2,w
  5013  0F6A  0474               	iorwf	___xxtofl@val+1,w
  5014  0F6B  0473               	iorwf	___xxtofl@val,w
  5015  0F6C  1D03               	skipz
  5016  0F6D  2F6F               	goto	u3931
  5017  0F6E  2F70               	goto	u3930
  5018  0F6F                     u3931:
  5019  0F6F  2F79               	goto	l2974
  5020  0F70                     u3930:
  5021  0F70                     l2970:
  5022  0F70  3000               	movlw	0
  5023  0F71  00F6               	movwf	?___xxtofl+3
  5024  0F72  3000               	movlw	0
  5025  0F73  00F5               	movwf	?___xxtofl+2
  5026  0F74  3000               	movlw	0
  5027  0F75  00F4               	movwf	?___xxtofl+1
  5028  0F76  3000               	movlw	0
  5029  0F77  00F3               	movwf	?___xxtofl
  5030  0F78  2FFF               	goto	l741
  5031  0F79                     l2974:
  5032  0F79  3096               	movlw	150
  5033  0F7A  00A0               	movwf	??___xxtofl
  5034  0F7B  0820               	movf	??___xxtofl,w
  5035  0F7C  00A5               	movwf	___xxtofl@exp
  5036  0F7D  2F8B               	goto	l2978
  5037  0F7E                     l2976:
  5038  0F7E  3001               	movlw	1
  5039  0F7F  00A0               	movwf	??___xxtofl
  5040  0F80  0820               	movf	??___xxtofl,w
  5041  0F81  07A5               	addwf	___xxtofl@exp,f
  5042  0F82  3001               	movlw	1
  5043  0F83                     u3945:
  5044  0F83  1003               	clrc
  5045  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  5046  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  5047  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  5048  0F87  0CA6               	rrf	___xxtofl@arg,f
  5049  0F88  3EFF               	addlw	-1
  5050  0F89  1D03               	skipz
  5051  0F8A  2F83               	goto	u3945
  5052  0F8B                     l2978:
  5053  0F8B  30FE               	movlw	254
  5054  0F8C  0529               	andwf	___xxtofl@arg+3,w
  5055  0F8D  1D03               	btfss	3,2
  5056  0F8E  2F90               	goto	u3951
  5057  0F8F  2F91               	goto	u3950
  5058  0F90                     u3951:
  5059  0F90  2F7E               	goto	l2976
  5060  0F91                     u3950:
  5061  0F91  2FAD               	goto	l745
  5062  0F92                     l2980:
  5063  0F92  3001               	movlw	1
  5064  0F93  00A0               	movwf	??___xxtofl
  5065  0F94  0820               	movf	??___xxtofl,w
  5066  0F95  07A5               	addwf	___xxtofl@exp,f
  5067  0F96                     l2982:
  5068  0F96  3001               	movlw	1
  5069  0F97  07A6               	addwf	___xxtofl@arg,f
  5070  0F98  3000               	movlw	0
  5071  0F99  1803               	skipnc
  5072  0F9A  3001               	movlw	1
  5073  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  5074  0F9C  3000               	movlw	0
  5075  0F9D  1803               	skipnc
  5076  0F9E  3001               	movlw	1
  5077  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  5078  0FA0  3000               	movlw	0
  5079  0FA1  1803               	skipnc
  5080  0FA2  3001               	movlw	1
  5081  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  5082  0FA4                     l2984:
  5083  0FA4  3001               	movlw	1
  5084  0FA5                     u3965:
  5085  0FA5  1003               	clrc
  5086  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  5087  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  5088  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  5089  0FA9  0CA6               	rrf	___xxtofl@arg,f
  5090  0FAA  3EFF               	addlw	-1
  5091  0FAB  1D03               	skipz
  5092  0FAC  2FA5               	goto	u3965
  5093  0FAD                     l745:
  5094  0FAD  30FF               	movlw	255
  5095  0FAE  0529               	andwf	___xxtofl@arg+3,w
  5096  0FAF  1D03               	btfss	3,2
  5097  0FB0  2FB2               	goto	u3971
  5098  0FB1  2FB3               	goto	u3970
  5099  0FB2                     u3971:
  5100  0FB2  2F92               	goto	l2980
  5101  0FB3                     u3970:
  5102  0FB3  2FBF               	goto	l2988
  5103  0FB4                     l2986:
  5104  0FB4  3001               	movlw	1
  5105  0FB5  02A5               	subwf	___xxtofl@exp,f
  5106  0FB6  3001               	movlw	1
  5107  0FB7  00A0               	movwf	??___xxtofl
  5108  0FB8                     u3985:
  5109  0FB8  1003               	clrc
  5110  0FB9  0DA6               	rlf	___xxtofl@arg,f
  5111  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  5112  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  5113  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  5114  0FBD  0BA0               	decfsz	??___xxtofl,f
  5115  0FBE  2FB8               	goto	u3985
  5116  0FBF                     l2988:
  5117  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  5118  0FC0  2FC2               	goto	u3991
  5119  0FC1  2FC3               	goto	u3990
  5120  0FC2                     u3991:
  5121  0FC2  2FC9               	goto	l752
  5122  0FC3                     u3990:
  5123  0FC3                     l2990:
  5124  0FC3  3002               	movlw	2
  5125  0FC4  0225               	subwf	___xxtofl@exp,w
  5126  0FC5  1803               	skipnc
  5127  0FC6  2FC8               	goto	u4001
  5128  0FC7  2FC9               	goto	u4000
  5129  0FC8                     u4001:
  5130  0FC8  2FB4               	goto	l2986
  5131  0FC9                     u4000:
  5132  0FC9                     l752:
  5133  0FC9  1825               	btfsc	___xxtofl@exp,0
  5134  0FCA  2FCC               	goto	u4011
  5135  0FCB  2FCD               	goto	u4010
  5136  0FCC                     u4011:
  5137  0FCC  2FD5               	goto	l753
  5138  0FCD                     u4010:
  5139  0FCD                     l2992:
  5140  0FCD  30FF               	movlw	255
  5141  0FCE  05A6               	andwf	___xxtofl@arg,f
  5142  0FCF  30FF               	movlw	255
  5143  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  5144  0FD1  307F               	movlw	127
  5145  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  5146  0FD3  30FF               	movlw	255
  5147  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  5148  0FD5                     l753:
  5149  0FD5  1003               	clrc
  5150  0FD6  0CA5               	rrf	___xxtofl@exp,f
  5151  0FD7                     l2994:
  5152  0FD7  0825               	movf	___xxtofl@exp,w
  5153  0FD8  00A0               	movwf	??___xxtofl
  5154  0FD9  01A1               	clrf	??___xxtofl+1
  5155  0FDA  01A2               	clrf	??___xxtofl+2
  5156  0FDB  01A3               	clrf	??___xxtofl+3
  5157  0FDC  3018               	movlw	24
  5158  0FDD                     u4025:
  5159  0FDD  1003               	clrc
  5160  0FDE  0DA0               	rlf	??___xxtofl,f
  5161  0FDF  0DA1               	rlf	??___xxtofl+1,f
  5162  0FE0  0DA2               	rlf	??___xxtofl+2,f
  5163  0FE1  0DA3               	rlf	??___xxtofl+3,f
  5164  0FE2                     u4020:
  5165  0FE2  3EFF               	addlw	-1
  5166  0FE3  1D03               	skipz
  5167  0FE4  2FDD               	goto	u4025
  5168  0FE5  0820               	movf	??___xxtofl,w
  5169  0FE6  04A6               	iorwf	___xxtofl@arg,f
  5170  0FE7  0821               	movf	??___xxtofl+1,w
  5171  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  5172  0FE9  0822               	movf	??___xxtofl+2,w
  5173  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  5174  0FEB  0823               	movf	??___xxtofl+3,w
  5175  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  5176  0FED                     l2996:
  5177  0FED  0824               	movf	___xxtofl@sign,w
  5178  0FEE  1903               	btfsc	3,2
  5179  0FEF  2FF1               	goto	u4031
  5180  0FF0  2FF2               	goto	u4030
  5181  0FF1                     u4031:
  5182  0FF1  2FF7               	goto	l3002
  5183  0FF2                     u4030:
  5184  0FF2                     l2998:
  5185  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  5186  0FF3  2FF5               	goto	u4041
  5187  0FF4  2FF6               	goto	u4040
  5188  0FF5                     u4041:
  5189  0FF5  2FF7               	goto	l3002
  5190  0FF6                     u4040:
  5191  0FF6                     l3000:
  5192  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  5193  0FF7                     l3002:
  5194  0FF7  0829               	movf	___xxtofl@arg+3,w
  5195  0FF8  00F6               	movwf	?___xxtofl+3
  5196  0FF9  0828               	movf	___xxtofl@arg+2,w
  5197  0FFA  00F5               	movwf	?___xxtofl+2
  5198  0FFB  0827               	movf	___xxtofl@arg+1,w
  5199  0FFC  00F4               	movwf	?___xxtofl+1
  5200  0FFD  0826               	movf	___xxtofl@arg,w
  5201  0FFE  00F3               	movwf	?___xxtofl
  5202  0FFF                     l741:
  5203  0FFF  0008               	return
  5204  1000                     __end_of___xxtofl:
  5205                           
  5206                           	psect	text24
  5207  0022                     __ptext24:	
  5208 ;; *************** function ___flmul *****************
  5209 ;; Defined at:
  5210 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  b               4   10[BANK0 ] unsigned char 
  5213 ;;  a               4   14[BANK0 ] unsigned char 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  prod            4   30[BANK0 ] struct .
  5216 ;;  grs             4   25[BANK0 ] unsigned long 
  5217 ;;  temp            2   34[BANK0 ] struct .
  5218 ;;  bexp            1   29[BANK0 ] unsigned char 
  5219 ;;  aexp            1   24[BANK0 ] unsigned char 
  5220 ;;  sign            1   23[BANK0 ] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  4   10[BANK0 ] unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         0       8       0       0       0
  5231 ;;      Locals:         0      13       0       0       0
  5232 ;;      Temps:          0       5       0       0       0
  5233 ;;      Totals:         0      26       0       0       0
  5234 ;;Total ram usage:       26 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    2
  5237 ;; This function calls:
  5238 ;;		__Umul8_16
  5239 ;; This function is called by:
  5240 ;;		_CONVdec
  5241 ;;		_sendfloat
  5242 ;;		_floTochar
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function ___flmul
  5248  0022                     ___flmul:
  5249  0022                     l2822:	
  5250                           ;incstack = 0
  5251                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5252                           
  5253  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0024  082D               	movf	___flmul@b+3,w
  5256  0025  3980               	andlw	128
  5257  0026  00B2               	movwf	??___flmul
  5258  0027  0832               	movf	??___flmul,w
  5259  0028  00B7               	movwf	___flmul@sign
  5260  0029                     l2824:
  5261  0029  082D               	movf	___flmul@b+3,w
  5262  002A  00B2               	movwf	??___flmul
  5263  002B  0732               	addwf	??___flmul,w
  5264  002C  00B3               	movwf	??___flmul+1
  5265  002D  0833               	movf	??___flmul+1,w
  5266  002E  00BD               	movwf	___flmul@bexp
  5267  002F                     l2826:
  5268  002F  1FAC               	btfss	___flmul@b+2,7
  5269  0030  2832               	goto	u3541
  5270  0031  2833               	goto	u3540
  5271  0032                     u3541:
  5272  0032  2834               	goto	l2830
  5273  0033                     u3540:
  5274  0033                     l2828:
  5275  0033  143D               	bsf	___flmul@bexp,0
  5276  0034                     l2830:
  5277  0034  083D               	movf	___flmul@bexp,w
  5278  0035  1903               	btfsc	3,2
  5279  0036  2838               	goto	u3551
  5280  0037  2839               	goto	u3550
  5281  0038                     u3551:
  5282  0038  2848               	goto	l2838
  5283  0039                     u3550:
  5284  0039                     l2832:
  5285  0039  0A3D               	incf	___flmul@bexp,w
  5286  003A  1D03               	btfss	3,2
  5287  003B  283D               	goto	u3561
  5288  003C  283E               	goto	u3560
  5289  003D                     u3561:
  5290  003D  2846               	goto	l2836
  5291  003E                     u3560:
  5292  003E                     l2834:
  5293  003E  3000               	movlw	0
  5294  003F  00AD               	movwf	___flmul@b+3
  5295  0040  3000               	movlw	0
  5296  0041  00AC               	movwf	___flmul@b+2
  5297  0042  3000               	movlw	0
  5298  0043  00AB               	movwf	___flmul@b+1
  5299  0044  3000               	movlw	0
  5300  0045  00AA               	movwf	___flmul@b
  5301  0046                     l2836:
  5302  0046  17AC               	bsf	___flmul@b+2,7
  5303  0047  2850               	goto	l2840
  5304  0048                     l2838:
  5305  0048  3000               	movlw	0
  5306  0049  00AD               	movwf	___flmul@b+3
  5307  004A  3000               	movlw	0
  5308  004B  00AC               	movwf	___flmul@b+2
  5309  004C  3000               	movlw	0
  5310  004D  00AB               	movwf	___flmul@b+1
  5311  004E  3000               	movlw	0
  5312  004F  00AA               	movwf	___flmul@b
  5313  0050                     l2840:
  5314  0050  0831               	movf	___flmul@a+3,w
  5315  0051  3980               	andlw	128
  5316  0052  00B2               	movwf	??___flmul
  5317  0053  0832               	movf	??___flmul,w
  5318  0054  06B7               	xorwf	___flmul@sign,f
  5319  0055                     l2842:
  5320  0055  0831               	movf	___flmul@a+3,w
  5321  0056  00B2               	movwf	??___flmul
  5322  0057  0732               	addwf	??___flmul,w
  5323  0058  00B3               	movwf	??___flmul+1
  5324  0059  0833               	movf	??___flmul+1,w
  5325  005A  00B8               	movwf	___flmul@aexp
  5326  005B                     l2844:
  5327  005B  1FB0               	btfss	___flmul@a+2,7
  5328  005C  285E               	goto	u3571
  5329  005D  285F               	goto	u3570
  5330  005E                     u3571:
  5331  005E  2860               	goto	l2848
  5332  005F                     u3570:
  5333  005F                     l2846:
  5334  005F  1438               	bsf	___flmul@aexp,0
  5335  0060                     l2848:
  5336  0060  0838               	movf	___flmul@aexp,w
  5337  0061  1903               	btfsc	3,2
  5338  0062  2864               	goto	u3581
  5339  0063  2865               	goto	u3580
  5340  0064                     u3581:
  5341  0064  2874               	goto	l2856
  5342  0065                     u3580:
  5343  0065                     l2850:
  5344  0065  0A38               	incf	___flmul@aexp,w
  5345  0066  1D03               	btfss	3,2
  5346  0067  2869               	goto	u3591
  5347  0068  286A               	goto	u3590
  5348  0069                     u3591:
  5349  0069  2872               	goto	l2854
  5350  006A                     u3590:
  5351  006A                     l2852:
  5352  006A  3000               	movlw	0
  5353  006B  00B1               	movwf	___flmul@a+3
  5354  006C  3000               	movlw	0
  5355  006D  00B0               	movwf	___flmul@a+2
  5356  006E  3000               	movlw	0
  5357  006F  00AF               	movwf	___flmul@a+1
  5358  0070  3000               	movlw	0
  5359  0071  00AE               	movwf	___flmul@a
  5360  0072                     l2854:
  5361  0072  17B0               	bsf	___flmul@a+2,7
  5362  0073  287C               	goto	l2858
  5363  0074                     l2856:
  5364  0074  3000               	movlw	0
  5365  0075  00B1               	movwf	___flmul@a+3
  5366  0076  3000               	movlw	0
  5367  0077  00B0               	movwf	___flmul@a+2
  5368  0078  3000               	movlw	0
  5369  0079  00AF               	movwf	___flmul@a+1
  5370  007A  3000               	movlw	0
  5371  007B  00AE               	movwf	___flmul@a
  5372  007C                     l2858:
  5373  007C  0838               	movf	___flmul@aexp,w
  5374  007D  1903               	btfsc	3,2
  5375  007E  2880               	goto	u3601
  5376  007F  2881               	goto	u3600
  5377  0080                     u3601:
  5378  0080  2886               	goto	l2862
  5379  0081                     u3600:
  5380  0081                     l2860:
  5381  0081  083D               	movf	___flmul@bexp,w
  5382  0082  1D03               	btfss	3,2
  5383  0083  2885               	goto	u3611
  5384  0084  2886               	goto	u3610
  5385  0085                     u3611:
  5386  0085  288F               	goto	l2866
  5387  0086                     u3610:
  5388  0086                     l2862:
  5389  0086  3000               	movlw	0
  5390  0087  00AD               	movwf	?___flmul+3
  5391  0088  3000               	movlw	0
  5392  0089  00AC               	movwf	?___flmul+2
  5393  008A  3000               	movlw	0
  5394  008B  00AB               	movwf	?___flmul+1
  5395  008C  3000               	movlw	0
  5396  008D  00AA               	movwf	?___flmul
  5397  008E  2B82               	goto	l695
  5398  008F                     l2866:
  5399  008F  082A               	movf	___flmul@b,w
  5400  0090  00B2               	movwf	??___flmul
  5401  0091  0832               	movf	??___flmul,w
  5402  0092  00F3               	movwf	__Umul8_16@multiplicand
  5403  0093  0830               	movf	___flmul@a+2,w
  5404  0094  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5405  0099  0874               	movf	?__Umul8_16+1,w
  5406  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5407  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5408  009C  00C3               	movwf	___flmul@temp+1
  5409  009D  0873               	movf	?__Umul8_16,w
  5410  009E  00C2               	movwf	___flmul@temp
  5411  009F                     l2868:
  5412  009F  0842               	movf	___flmul@temp,w
  5413  00A0  00B2               	movwf	??___flmul
  5414  00A1  01B3               	clrf	??___flmul+1
  5415  00A2  01B4               	clrf	??___flmul+2
  5416  00A3  01B5               	clrf	??___flmul+3
  5417  00A4  0835               	movf	??___flmul+3,w
  5418  00A5  00BC               	movwf	___flmul@grs+3
  5419  00A6  0834               	movf	??___flmul+2,w
  5420  00A7  00BB               	movwf	___flmul@grs+2
  5421  00A8  0833               	movf	??___flmul+1,w
  5422  00A9  00BA               	movwf	___flmul@grs+1
  5423  00AA  0832               	movf	??___flmul,w
  5424  00AB  00B9               	movwf	___flmul@grs
  5425  00AC                     l2870:
  5426  00AC  0843               	movf	___flmul@temp+1,w
  5427  00AD  00B2               	movwf	??___flmul
  5428  00AE  01B3               	clrf	??___flmul+1
  5429  00AF  01B4               	clrf	??___flmul+2
  5430  00B0  01B5               	clrf	??___flmul+3
  5431  00B1  0835               	movf	??___flmul+3,w
  5432  00B2  00C1               	movwf	___flmul@prod+3
  5433  00B3  0834               	movf	??___flmul+2,w
  5434  00B4  00C0               	movwf	___flmul@prod+2
  5435  00B5  0833               	movf	??___flmul+1,w
  5436  00B6  00BF               	movwf	___flmul@prod+1
  5437  00B7  0832               	movf	??___flmul,w
  5438  00B8  00BE               	movwf	___flmul@prod
  5439  00B9  082B               	movf	___flmul@b+1,w
  5440  00BA  00B2               	movwf	??___flmul
  5441  00BB  0832               	movf	??___flmul,w
  5442  00BC  00F3               	movwf	__Umul8_16@multiplicand
  5443  00BD  082F               	movf	___flmul@a+1,w
  5444  00BE  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5445  00C3  0874               	movf	?__Umul8_16+1,w
  5446  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5447  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5448  00C6  00C3               	movwf	___flmul@temp+1
  5449  00C7  0873               	movf	?__Umul8_16,w
  5450  00C8  00C2               	movwf	___flmul@temp
  5451  00C9                     l2872:
  5452  00C9  0842               	movf	___flmul@temp,w
  5453  00CA  00B2               	movwf	??___flmul
  5454  00CB  01B3               	clrf	??___flmul+1
  5455  00CC  01B4               	clrf	??___flmul+2
  5456  00CD  01B5               	clrf	??___flmul+3
  5457  00CE  0832               	movf	??___flmul,w
  5458  00CF  07B9               	addwf	___flmul@grs,f
  5459  00D0  0833               	movf	??___flmul+1,w
  5460  00D1  1103               	clrz
  5461  00D2  1803               	skipnc
  5462  00D3  3E01               	addlw	1
  5463  00D4  1903               	skipnz
  5464  00D5  28D7               	goto	u3621
  5465  00D6  07BA               	addwf	___flmul@grs+1,f
  5466  00D7                     u3621:
  5467  00D7  0834               	movf	??___flmul+2,w
  5468  00D8  1103               	clrz
  5469  00D9  1803               	skipnc
  5470  00DA  3E01               	addlw	1
  5471  00DB  1903               	skipnz
  5472  00DC  28DE               	goto	u3622
  5473  00DD  07BB               	addwf	___flmul@grs+2,f
  5474  00DE                     u3622:
  5475  00DE  0835               	movf	??___flmul+3,w
  5476  00DF  1103               	clrz
  5477  00E0  1803               	skipnc
  5478  00E1  3E01               	addlw	1
  5479  00E2  1903               	skipnz
  5480  00E3  28E5               	goto	u3623
  5481  00E4  07BC               	addwf	___flmul@grs+3,f
  5482  00E5                     u3623:
  5483  00E5                     l2874:
  5484  00E5  0843               	movf	___flmul@temp+1,w
  5485  00E6  00B2               	movwf	??___flmul
  5486  00E7  01B3               	clrf	??___flmul+1
  5487  00E8  01B4               	clrf	??___flmul+2
  5488  00E9  01B5               	clrf	??___flmul+3
  5489  00EA  0832               	movf	??___flmul,w
  5490  00EB  07BE               	addwf	___flmul@prod,f
  5491  00EC  0833               	movf	??___flmul+1,w
  5492  00ED  1103               	clrz
  5493  00EE  1803               	skipnc
  5494  00EF  3E01               	addlw	1
  5495  00F0  1903               	skipnz
  5496  00F1  28F3               	goto	u3631
  5497  00F2  07BF               	addwf	___flmul@prod+1,f
  5498  00F3                     u3631:
  5499  00F3  0834               	movf	??___flmul+2,w
  5500  00F4  1103               	clrz
  5501  00F5  1803               	skipnc
  5502  00F6  3E01               	addlw	1
  5503  00F7  1903               	skipnz
  5504  00F8  28FA               	goto	u3632
  5505  00F9  07C0               	addwf	___flmul@prod+2,f
  5506  00FA                     u3632:
  5507  00FA  0835               	movf	??___flmul+3,w
  5508  00FB  1103               	clrz
  5509  00FC  1803               	skipnc
  5510  00FD  3E01               	addlw	1
  5511  00FE  1903               	skipnz
  5512  00FF  2901               	goto	u3633
  5513  0100  07C1               	addwf	___flmul@prod+3,f
  5514  0101                     u3633:
  5515  0101  082C               	movf	___flmul@b+2,w
  5516  0102  00B2               	movwf	??___flmul
  5517  0103  0832               	movf	??___flmul,w
  5518  0104  00F3               	movwf	__Umul8_16@multiplicand
  5519  0105  082E               	movf	___flmul@a,w
  5520  0106  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5521  010B  0874               	movf	?__Umul8_16+1,w
  5522  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5523  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5524  010E  00C3               	movwf	___flmul@temp+1
  5525  010F  0873               	movf	?__Umul8_16,w
  5526  0110  00C2               	movwf	___flmul@temp
  5527  0111                     l2876:
  5528  0111  0842               	movf	___flmul@temp,w
  5529  0112  00B2               	movwf	??___flmul
  5530  0113  01B3               	clrf	??___flmul+1
  5531  0114  01B4               	clrf	??___flmul+2
  5532  0115  01B5               	clrf	??___flmul+3
  5533  0116  0832               	movf	??___flmul,w
  5534  0117  07B9               	addwf	___flmul@grs,f
  5535  0118  0833               	movf	??___flmul+1,w
  5536  0119  1103               	clrz
  5537  011A  1803               	skipnc
  5538  011B  3E01               	addlw	1
  5539  011C  1903               	skipnz
  5540  011D  291F               	goto	u3641
  5541  011E  07BA               	addwf	___flmul@grs+1,f
  5542  011F                     u3641:
  5543  011F  0834               	movf	??___flmul+2,w
  5544  0120  1103               	clrz
  5545  0121  1803               	skipnc
  5546  0122  3E01               	addlw	1
  5547  0123  1903               	skipnz
  5548  0124  2926               	goto	u3642
  5549  0125  07BB               	addwf	___flmul@grs+2,f
  5550  0126                     u3642:
  5551  0126  0835               	movf	??___flmul+3,w
  5552  0127  1103               	clrz
  5553  0128  1803               	skipnc
  5554  0129  3E01               	addlw	1
  5555  012A  1903               	skipnz
  5556  012B  292D               	goto	u3643
  5557  012C  07BC               	addwf	___flmul@grs+3,f
  5558  012D                     u3643:
  5559  012D                     l2878:
  5560  012D  0843               	movf	___flmul@temp+1,w
  5561  012E  00B2               	movwf	??___flmul
  5562  012F  01B3               	clrf	??___flmul+1
  5563  0130  01B4               	clrf	??___flmul+2
  5564  0131  01B5               	clrf	??___flmul+3
  5565  0132  0832               	movf	??___flmul,w
  5566  0133  07BE               	addwf	___flmul@prod,f
  5567  0134  0833               	movf	??___flmul+1,w
  5568  0135  1103               	clrz
  5569  0136  1803               	skipnc
  5570  0137  3E01               	addlw	1
  5571  0138  1903               	skipnz
  5572  0139  293B               	goto	u3651
  5573  013A  07BF               	addwf	___flmul@prod+1,f
  5574  013B                     u3651:
  5575  013B  0834               	movf	??___flmul+2,w
  5576  013C  1103               	clrz
  5577  013D  1803               	skipnc
  5578  013E  3E01               	addlw	1
  5579  013F  1903               	skipnz
  5580  0140  2942               	goto	u3652
  5581  0141  07C0               	addwf	___flmul@prod+2,f
  5582  0142                     u3652:
  5583  0142  0835               	movf	??___flmul+3,w
  5584  0143  1103               	clrz
  5585  0144  1803               	skipnc
  5586  0145  3E01               	addlw	1
  5587  0146  1903               	skipnz
  5588  0147  2949               	goto	u3653
  5589  0148  07C1               	addwf	___flmul@prod+3,f
  5590  0149                     u3653:
  5591  0149                     l2880:
  5592  0149  3008               	movlw	8
  5593  014A  00B2               	movwf	??___flmul
  5594  014B                     u3665:
  5595  014B  1003               	clrc
  5596  014C  0DB9               	rlf	___flmul@grs,f
  5597  014D  0DBA               	rlf	___flmul@grs+1,f
  5598  014E  0DBB               	rlf	___flmul@grs+2,f
  5599  014F  0DBC               	rlf	___flmul@grs+3,f
  5600  0150  0BB2               	decfsz	??___flmul,f
  5601  0151  294B               	goto	u3665
  5602  0152                     l2882:
  5603  0152  082B               	movf	___flmul@b+1,w
  5604  0153  00B2               	movwf	??___flmul
  5605  0154  0832               	movf	??___flmul,w
  5606  0155  00F3               	movwf	__Umul8_16@multiplicand
  5607  0156  082E               	movf	___flmul@a,w
  5608  0157  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5609  015C  0874               	movf	?__Umul8_16+1,w
  5610  015D  1283               	bcf	3,5	;RP0=0, select bank0
  5611  015E  1303               	bcf	3,6	;RP1=0, select bank0
  5612  015F  00C3               	movwf	___flmul@temp+1
  5613  0160  0873               	movf	?__Umul8_16,w
  5614  0161  00C2               	movwf	___flmul@temp
  5615  0162                     l2884:
  5616  0162  0842               	movf	___flmul@temp,w
  5617  0163  00B2               	movwf	??___flmul
  5618  0164  0843               	movf	___flmul@temp+1,w
  5619  0165  00B3               	movwf	??___flmul+1
  5620  0166  01B4               	clrf	??___flmul+2
  5621  0167  01B5               	clrf	??___flmul+3
  5622  0168  0832               	movf	??___flmul,w
  5623  0169  07B9               	addwf	___flmul@grs,f
  5624  016A  0833               	movf	??___flmul+1,w
  5625  016B  1103               	clrz
  5626  016C  1803               	skipnc
  5627  016D  3E01               	addlw	1
  5628  016E  1903               	skipnz
  5629  016F  2971               	goto	u3671
  5630  0170  07BA               	addwf	___flmul@grs+1,f
  5631  0171                     u3671:
  5632  0171  0834               	movf	??___flmul+2,w
  5633  0172  1103               	clrz
  5634  0173  1803               	skipnc
  5635  0174  3E01               	addlw	1
  5636  0175  1903               	skipnz
  5637  0176  2978               	goto	u3672
  5638  0177  07BB               	addwf	___flmul@grs+2,f
  5639  0178                     u3672:
  5640  0178  0835               	movf	??___flmul+3,w
  5641  0179  1103               	clrz
  5642  017A  1803               	skipnc
  5643  017B  3E01               	addlw	1
  5644  017C  1903               	skipnz
  5645  017D  297F               	goto	u3673
  5646  017E  07BC               	addwf	___flmul@grs+3,f
  5647  017F                     u3673:
  5648  017F                     l2886:
  5649  017F  082A               	movf	___flmul@b,w
  5650  0180  00B2               	movwf	??___flmul
  5651  0181  0832               	movf	??___flmul,w
  5652  0182  00F3               	movwf	__Umul8_16@multiplicand
  5653  0183  082F               	movf	___flmul@a+1,w
  5654  0184  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5655  0189  0874               	movf	?__Umul8_16+1,w
  5656  018A  1283               	bcf	3,5	;RP0=0, select bank0
  5657  018B  1303               	bcf	3,6	;RP1=0, select bank0
  5658  018C  00C3               	movwf	___flmul@temp+1
  5659  018D  0873               	movf	?__Umul8_16,w
  5660  018E  00C2               	movwf	___flmul@temp
  5661  018F                     l2888:
  5662  018F  0842               	movf	___flmul@temp,w
  5663  0190  00B2               	movwf	??___flmul
  5664  0191  0843               	movf	___flmul@temp+1,w
  5665  0192  00B3               	movwf	??___flmul+1
  5666  0193  01B4               	clrf	??___flmul+2
  5667  0194  01B5               	clrf	??___flmul+3
  5668  0195  0832               	movf	??___flmul,w
  5669  0196  07B9               	addwf	___flmul@grs,f
  5670  0197  0833               	movf	??___flmul+1,w
  5671  0198  1103               	clrz
  5672  0199  1803               	skipnc
  5673  019A  3E01               	addlw	1
  5674  019B  1903               	skipnz
  5675  019C  299E               	goto	u3681
  5676  019D  07BA               	addwf	___flmul@grs+1,f
  5677  019E                     u3681:
  5678  019E  0834               	movf	??___flmul+2,w
  5679  019F  1103               	clrz
  5680  01A0  1803               	skipnc
  5681  01A1  3E01               	addlw	1
  5682  01A2  1903               	skipnz
  5683  01A3  29A5               	goto	u3682
  5684  01A4  07BB               	addwf	___flmul@grs+2,f
  5685  01A5                     u3682:
  5686  01A5  0835               	movf	??___flmul+3,w
  5687  01A6  1103               	clrz
  5688  01A7  1803               	skipnc
  5689  01A8  3E01               	addlw	1
  5690  01A9  1903               	skipnz
  5691  01AA  29AC               	goto	u3683
  5692  01AB  07BC               	addwf	___flmul@grs+3,f
  5693  01AC                     u3683:
  5694  01AC                     l2890:
  5695  01AC  3008               	movlw	8
  5696  01AD  00B2               	movwf	??___flmul
  5697  01AE                     u3695:
  5698  01AE  1003               	clrc
  5699  01AF  0DB9               	rlf	___flmul@grs,f
  5700  01B0  0DBA               	rlf	___flmul@grs+1,f
  5701  01B1  0DBB               	rlf	___flmul@grs+2,f
  5702  01B2  0DBC               	rlf	___flmul@grs+3,f
  5703  01B3  0BB2               	decfsz	??___flmul,f
  5704  01B4  29AE               	goto	u3695
  5705  01B5  082A               	movf	___flmul@b,w
  5706  01B6  00B2               	movwf	??___flmul
  5707  01B7  0832               	movf	??___flmul,w
  5708  01B8  00F3               	movwf	__Umul8_16@multiplicand
  5709  01B9  082E               	movf	___flmul@a,w
  5710  01BA  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5711  01BF  0874               	movf	?__Umul8_16+1,w
  5712  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5713  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5714  01C2  00C3               	movwf	___flmul@temp+1
  5715  01C3  0873               	movf	?__Umul8_16,w
  5716  01C4  00C2               	movwf	___flmul@temp
  5717  01C5                     l2892:
  5718  01C5  0842               	movf	___flmul@temp,w
  5719  01C6  00B2               	movwf	??___flmul
  5720  01C7  0843               	movf	___flmul@temp+1,w
  5721  01C8  00B3               	movwf	??___flmul+1
  5722  01C9  01B4               	clrf	??___flmul+2
  5723  01CA  01B5               	clrf	??___flmul+3
  5724  01CB  0832               	movf	??___flmul,w
  5725  01CC  07B9               	addwf	___flmul@grs,f
  5726  01CD  0833               	movf	??___flmul+1,w
  5727  01CE  1103               	clrz
  5728  01CF  1803               	skipnc
  5729  01D0  3E01               	addlw	1
  5730  01D1  1903               	skipnz
  5731  01D2  29D4               	goto	u3701
  5732  01D3  07BA               	addwf	___flmul@grs+1,f
  5733  01D4                     u3701:
  5734  01D4  0834               	movf	??___flmul+2,w
  5735  01D5  1103               	clrz
  5736  01D6  1803               	skipnc
  5737  01D7  3E01               	addlw	1
  5738  01D8  1903               	skipnz
  5739  01D9  29DB               	goto	u3702
  5740  01DA  07BB               	addwf	___flmul@grs+2,f
  5741  01DB                     u3702:
  5742  01DB  0835               	movf	??___flmul+3,w
  5743  01DC  1103               	clrz
  5744  01DD  1803               	skipnc
  5745  01DE  3E01               	addlw	1
  5746  01DF  1903               	skipnz
  5747  01E0  29E2               	goto	u3703
  5748  01E1  07BC               	addwf	___flmul@grs+3,f
  5749  01E2                     u3703:
  5750  01E2                     l2894:
  5751  01E2  082B               	movf	___flmul@b+1,w
  5752  01E3  00B2               	movwf	??___flmul
  5753  01E4  0832               	movf	??___flmul,w
  5754  01E5  00F3               	movwf	__Umul8_16@multiplicand
  5755  01E6  0830               	movf	___flmul@a+2,w
  5756  01E7  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5757  01EC  0874               	movf	?__Umul8_16+1,w
  5758  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5759  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5760  01EF  00C3               	movwf	___flmul@temp+1
  5761  01F0  0873               	movf	?__Umul8_16,w
  5762  01F1  00C2               	movwf	___flmul@temp
  5763  01F2  0842               	movf	___flmul@temp,w
  5764  01F3  00B2               	movwf	??___flmul
  5765  01F4  0843               	movf	___flmul@temp+1,w
  5766  01F5  00B3               	movwf	??___flmul+1
  5767  01F6  01B4               	clrf	??___flmul+2
  5768  01F7  01B5               	clrf	??___flmul+3
  5769  01F8  0832               	movf	??___flmul,w
  5770  01F9  07BE               	addwf	___flmul@prod,f
  5771  01FA  0833               	movf	??___flmul+1,w
  5772  01FB  1103               	clrz
  5773  01FC  1803               	skipnc
  5774  01FD  3E01               	addlw	1
  5775  01FE  1903               	skipnz
  5776  01FF  2A01               	goto	u3711
  5777  0200  07BF               	addwf	___flmul@prod+1,f
  5778  0201                     u3711:
  5779  0201  0834               	movf	??___flmul+2,w
  5780  0202  1103               	clrz
  5781  0203  1803               	skipnc
  5782  0204  3E01               	addlw	1
  5783  0205  1903               	skipnz
  5784  0206  2A08               	goto	u3712
  5785  0207  07C0               	addwf	___flmul@prod+2,f
  5786  0208                     u3712:
  5787  0208  0835               	movf	??___flmul+3,w
  5788  0209  1103               	clrz
  5789  020A  1803               	skipnc
  5790  020B  3E01               	addlw	1
  5791  020C  1903               	skipnz
  5792  020D  2A0F               	goto	u3713
  5793  020E  07C1               	addwf	___flmul@prod+3,f
  5794  020F                     u3713:
  5795  020F                     l2896:
  5796  020F  082C               	movf	___flmul@b+2,w
  5797  0210  00B2               	movwf	??___flmul
  5798  0211  0832               	movf	??___flmul,w
  5799  0212  00F3               	movwf	__Umul8_16@multiplicand
  5800  0213  082F               	movf	___flmul@a+1,w
  5801  0214  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5802  0219  0874               	movf	?__Umul8_16+1,w
  5803  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5804  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5805  021C  00C3               	movwf	___flmul@temp+1
  5806  021D  0873               	movf	?__Umul8_16,w
  5807  021E  00C2               	movwf	___flmul@temp
  5808  021F                     l2898:
  5809  021F  0842               	movf	___flmul@temp,w
  5810  0220  00B2               	movwf	??___flmul
  5811  0221  0843               	movf	___flmul@temp+1,w
  5812  0222  00B3               	movwf	??___flmul+1
  5813  0223  01B4               	clrf	??___flmul+2
  5814  0224  01B5               	clrf	??___flmul+3
  5815  0225  0832               	movf	??___flmul,w
  5816  0226  07BE               	addwf	___flmul@prod,f
  5817  0227  0833               	movf	??___flmul+1,w
  5818  0228  1103               	clrz
  5819  0229  1803               	skipnc
  5820  022A  3E01               	addlw	1
  5821  022B  1903               	skipnz
  5822  022C  2A2E               	goto	u3721
  5823  022D  07BF               	addwf	___flmul@prod+1,f
  5824  022E                     u3721:
  5825  022E  0834               	movf	??___flmul+2,w
  5826  022F  1103               	clrz
  5827  0230  1803               	skipnc
  5828  0231  3E01               	addlw	1
  5829  0232  1903               	skipnz
  5830  0233  2A35               	goto	u3722
  5831  0234  07C0               	addwf	___flmul@prod+2,f
  5832  0235                     u3722:
  5833  0235  0835               	movf	??___flmul+3,w
  5834  0236  1103               	clrz
  5835  0237  1803               	skipnc
  5836  0238  3E01               	addlw	1
  5837  0239  1903               	skipnz
  5838  023A  2A3C               	goto	u3723
  5839  023B  07C1               	addwf	___flmul@prod+3,f
  5840  023C                     u3723:
  5841  023C  082C               	movf	___flmul@b+2,w
  5842  023D  00B2               	movwf	??___flmul
  5843  023E  0832               	movf	??___flmul,w
  5844  023F  00F3               	movwf	__Umul8_16@multiplicand
  5845  0240  0830               	movf	___flmul@a+2,w
  5846  0241  120A  158A  2322  120A  118A  	fcall	__Umul8_16
  5847  0246  0874               	movf	?__Umul8_16+1,w
  5848  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5849  0248  1303               	bcf	3,6	;RP1=0, select bank0
  5850  0249  00C3               	movwf	___flmul@temp+1
  5851  024A  0873               	movf	?__Umul8_16,w
  5852  024B  00C2               	movwf	___flmul@temp
  5853  024C                     l2900:
  5854  024C  0842               	movf	___flmul@temp,w
  5855  024D  00B2               	movwf	??___flmul
  5856  024E  0843               	movf	___flmul@temp+1,w
  5857  024F  00B3               	movwf	??___flmul+1
  5858  0250  01B4               	clrf	??___flmul+2
  5859  0251  01B5               	clrf	??___flmul+3
  5860  0252  3008               	movlw	8
  5861  0253                     u3735:
  5862  0253  1003               	clrc
  5863  0254  0DB2               	rlf	??___flmul,f
  5864  0255  0DB3               	rlf	??___flmul+1,f
  5865  0256  0DB4               	rlf	??___flmul+2,f
  5866  0257  0DB5               	rlf	??___flmul+3,f
  5867  0258                     u3730:
  5868  0258  3EFF               	addlw	-1
  5869  0259  1D03               	skipz
  5870  025A  2A53               	goto	u3735
  5871  025B  0832               	movf	??___flmul,w
  5872  025C  07BE               	addwf	___flmul@prod,f
  5873  025D  0833               	movf	??___flmul+1,w
  5874  025E  1103               	clrz
  5875  025F  1803               	skipnc
  5876  0260  3E01               	addlw	1
  5877  0261  1903               	skipnz
  5878  0262  2A64               	goto	u3741
  5879  0263  07BF               	addwf	___flmul@prod+1,f
  5880  0264                     u3741:
  5881  0264  0834               	movf	??___flmul+2,w
  5882  0265  1103               	clrz
  5883  0266  1803               	skipnc
  5884  0267  3E01               	addlw	1
  5885  0268  1903               	skipnz
  5886  0269  2A6B               	goto	u3742
  5887  026A  07C0               	addwf	___flmul@prod+2,f
  5888  026B                     u3742:
  5889  026B  0835               	movf	??___flmul+3,w
  5890  026C  1103               	clrz
  5891  026D  1803               	skipnc
  5892  026E  3E01               	addlw	1
  5893  026F  1903               	skipnz
  5894  0270  2A72               	goto	u3743
  5895  0271  07C1               	addwf	___flmul@prod+3,f
  5896  0272                     u3743:
  5897  0272                     l2902:
  5898  0272  0839               	movf	___flmul@grs,w
  5899  0273  00B2               	movwf	??___flmul
  5900  0274  083A               	movf	___flmul@grs+1,w
  5901  0275  00B3               	movwf	??___flmul+1
  5902  0276  083B               	movf	___flmul@grs+2,w
  5903  0277  00B4               	movwf	??___flmul+2
  5904  0278  083C               	movf	___flmul@grs+3,w
  5905  0279  00B5               	movwf	??___flmul+3
  5906  027A  3018               	movlw	24
  5907  027B                     u3755:
  5908  027B  1003               	clrc
  5909  027C  0CB5               	rrf	??___flmul+3,f
  5910  027D  0CB4               	rrf	??___flmul+2,f
  5911  027E  0CB3               	rrf	??___flmul+1,f
  5912  027F  0CB2               	rrf	??___flmul,f
  5913  0280                     u3750:
  5914  0280  3EFF               	addlw	-1
  5915  0281  1D03               	skipz
  5916  0282  2A7B               	goto	u3755
  5917  0283  0832               	movf	??___flmul,w
  5918  0284  07BE               	addwf	___flmul@prod,f
  5919  0285  0833               	movf	??___flmul+1,w
  5920  0286  1103               	clrz
  5921  0287  1803               	skipnc
  5922  0288  3E01               	addlw	1
  5923  0289  1903               	skipnz
  5924  028A  2A8C               	goto	u3761
  5925  028B  07BF               	addwf	___flmul@prod+1,f
  5926  028C                     u3761:
  5927  028C  0834               	movf	??___flmul+2,w
  5928  028D  1103               	clrz
  5929  028E  1803               	skipnc
  5930  028F  3E01               	addlw	1
  5931  0290  1903               	skipnz
  5932  0291  2A93               	goto	u3762
  5933  0292  07C0               	addwf	___flmul@prod+2,f
  5934  0293                     u3762:
  5935  0293  0835               	movf	??___flmul+3,w
  5936  0294  1103               	clrz
  5937  0295  1803               	skipnc
  5938  0296  3E01               	addlw	1
  5939  0297  1903               	skipnz
  5940  0298  2A9A               	goto	u3763
  5941  0299  07C1               	addwf	___flmul@prod+3,f
  5942  029A                     u3763:
  5943  029A                     l2904:
  5944  029A  3008               	movlw	8
  5945  029B  00B2               	movwf	??___flmul
  5946  029C                     u3775:
  5947  029C  1003               	clrc
  5948  029D  0DB9               	rlf	___flmul@grs,f
  5949  029E  0DBA               	rlf	___flmul@grs+1,f
  5950  029F  0DBB               	rlf	___flmul@grs+2,f
  5951  02A0  0DBC               	rlf	___flmul@grs+3,f
  5952  02A1  0BB2               	decfsz	??___flmul,f
  5953  02A2  2A9C               	goto	u3775
  5954  02A3                     l2906:
  5955  02A3  083D               	movf	___flmul@bexp,w
  5956  02A4  0738               	addwf	___flmul@aexp,w
  5957  02A5  00B2               	movwf	??___flmul
  5958  02A6  01B3               	clrf	??___flmul+1
  5959  02A7  0DB3               	rlf	??___flmul+1,f
  5960  02A8  0832               	movf	??___flmul,w
  5961  02A9  3E82               	addlw	130
  5962  02AA  00C2               	movwf	___flmul@temp
  5963  02AB  0833               	movf	??___flmul+1,w
  5964  02AC  1803               	skipnc
  5965  02AD  3E01               	addlw	1
  5966  02AE  3EFF               	addlw	255
  5967  02AF  00C3               	movwf	___flmul@temp+1
  5968  02B0  2ACE               	goto	l2918
  5969  02B1                     l2908:
  5970  02B1  3001               	movlw	1
  5971  02B2  00B2               	movwf	??___flmul
  5972  02B3                     u3785:
  5973  02B3  1003               	clrc
  5974  02B4  0DBE               	rlf	___flmul@prod,f
  5975  02B5  0DBF               	rlf	___flmul@prod+1,f
  5976  02B6  0DC0               	rlf	___flmul@prod+2,f
  5977  02B7  0DC1               	rlf	___flmul@prod+3,f
  5978  02B8  0BB2               	decfsz	??___flmul,f
  5979  02B9  2AB3               	goto	u3785
  5980  02BA                     l2910:
  5981  02BA  1FBC               	btfss	___flmul@grs+3,7
  5982  02BB  2ABD               	goto	u3791
  5983  02BC  2ABE               	goto	u3790
  5984  02BD                     u3791:
  5985  02BD  2ABF               	goto	l2914
  5986  02BE                     u3790:
  5987  02BE                     l2912:
  5988  02BE  143E               	bsf	___flmul@prod,0
  5989  02BF                     l2914:
  5990  02BF  3001               	movlw	1
  5991  02C0  00B2               	movwf	??___flmul
  5992  02C1                     u3805:
  5993  02C1  1003               	clrc
  5994  02C2  0DB9               	rlf	___flmul@grs,f
  5995  02C3  0DBA               	rlf	___flmul@grs+1,f
  5996  02C4  0DBB               	rlf	___flmul@grs+2,f
  5997  02C5  0DBC               	rlf	___flmul@grs+3,f
  5998  02C6  0BB2               	decfsz	??___flmul,f
  5999  02C7  2AC1               	goto	u3805
  6000  02C8                     l2916:
  6001  02C8  30FF               	movlw	255
  6002  02C9  07C2               	addwf	___flmul@temp,f
  6003  02CA  1803               	skipnc
  6004  02CB  0AC3               	incf	___flmul@temp+1,f
  6005  02CC  30FF               	movlw	255
  6006  02CD  07C3               	addwf	___flmul@temp+1,f
  6007  02CE                     l2918:
  6008  02CE  1FC0               	btfss	___flmul@prod+2,7
  6009  02CF  2AD1               	goto	u3811
  6010  02D0  2AD2               	goto	u3810
  6011  02D1                     u3811:
  6012  02D1  2AB1               	goto	l2908
  6013  02D2                     u3810:
  6014  02D2                     l2920:
  6015  02D2  01B8               	clrf	___flmul@aexp
  6016  02D3                     l2922:
  6017  02D3  1FBC               	btfss	___flmul@grs+3,7
  6018  02D4  2AD6               	goto	u3821
  6019  02D5  2AD7               	goto	u3820
  6020  02D6                     u3821:
  6021  02D6  2AF3               	goto	l2930
  6022  02D7                     u3820:
  6023  02D7                     l2924:
  6024  02D7  30FF               	movlw	255
  6025  02D8  0539               	andwf	___flmul@grs,w
  6026  02D9  00B2               	movwf	??___flmul
  6027  02DA  30FF               	movlw	255
  6028  02DB  053A               	andwf	___flmul@grs+1,w
  6029  02DC  00B3               	movwf	??___flmul+1
  6030  02DD  30FF               	movlw	255
  6031  02DE  053B               	andwf	___flmul@grs+2,w
  6032  02DF  00B4               	movwf	??___flmul+2
  6033  02E0  307F               	movlw	127
  6034  02E1  053C               	andwf	___flmul@grs+3,w
  6035  02E2  00B5               	movwf	??___flmul+3
  6036  02E3  0835               	movf	??___flmul+3,w
  6037  02E4  0434               	iorwf	??___flmul+2,w
  6038  02E5  0433               	iorwf	??___flmul+1,w
  6039  02E6  0432               	iorwf	??___flmul,w
  6040  02E7  1903               	skipnz
  6041  02E8  2AEA               	goto	u3831
  6042  02E9  2AEB               	goto	u3830
  6043  02EA                     u3831:
  6044  02EA  2AEE               	goto	l701
  6045  02EB                     u3830:
  6046  02EB                     l2926:
  6047  02EB  01B8               	clrf	___flmul@aexp
  6048  02EC  0AB8               	incf	___flmul@aexp,f
  6049  02ED  2AF3               	goto	l2930
  6050  02EE                     l701:
  6051  02EE  1C3E               	btfss	___flmul@prod,0
  6052  02EF  2AF1               	goto	u3841
  6053  02F0  2AF2               	goto	u3840
  6054  02F1                     u3841:
  6055  02F1  2AF3               	goto	l2930
  6056  02F2                     u3840:
  6057  02F2  2AEB               	goto	l2926
  6058  02F3                     l2930:
  6059  02F3  0838               	movf	___flmul@aexp,w
  6060  02F4  1903               	btfsc	3,2
  6061  02F5  2AF7               	goto	u3851
  6062  02F6  2AF8               	goto	u3850
  6063  02F7                     u3851:
  6064  02F7  2B29               	goto	l2940
  6065  02F8                     u3850:
  6066  02F8                     l2932:
  6067  02F8  3001               	movlw	1
  6068  02F9  07BE               	addwf	___flmul@prod,f
  6069  02FA  3000               	movlw	0
  6070  02FB  1803               	skipnc
  6071  02FC  3001               	movlw	1
  6072  02FD  07BF               	addwf	___flmul@prod+1,f
  6073  02FE  3000               	movlw	0
  6074  02FF  1803               	skipnc
  6075  0300  3001               	movlw	1
  6076  0301  07C0               	addwf	___flmul@prod+2,f
  6077  0302  3000               	movlw	0
  6078  0303  1803               	skipnc
  6079  0304  3001               	movlw	1
  6080  0305  07C1               	addwf	___flmul@prod+3,f
  6081  0306                     l2934:
  6082  0306  1C41               	btfss	___flmul@prod+3,0
  6083  0307  2B09               	goto	u3861
  6084  0308  2B0A               	goto	u3860
  6085  0309                     u3861:
  6086  0309  2B29               	goto	l2940
  6087  030A                     u3860:
  6088  030A                     l2936:
  6089  030A  083E               	movf	___flmul@prod,w
  6090  030B  00B2               	movwf	??___flmul
  6091  030C  083F               	movf	___flmul@prod+1,w
  6092  030D  00B3               	movwf	??___flmul+1
  6093  030E  0840               	movf	___flmul@prod+2,w
  6094  030F  00B4               	movwf	??___flmul+2
  6095  0310  0841               	movf	___flmul@prod+3,w
  6096  0311  00B5               	movwf	??___flmul+3
  6097  0312  3001               	movlw	1
  6098  0313  00B6               	movwf	??___flmul+4
  6099  0314                     u3875:
  6100  0314  0D35               	rlf	??___flmul+3,w
  6101  0315  0CB5               	rrf	??___flmul+3,f
  6102  0316  0CB4               	rrf	??___flmul+2,f
  6103  0317  0CB3               	rrf	??___flmul+1,f
  6104  0318  0CB2               	rrf	??___flmul,f
  6105  0319                     u3870:
  6106  0319  0BB6               	decfsz	??___flmul+4,f
  6107  031A  2B14               	goto	u3875
  6108  031B  0835               	movf	??___flmul+3,w
  6109  031C  00C1               	movwf	___flmul@prod+3
  6110  031D  0834               	movf	??___flmul+2,w
  6111  031E  00C0               	movwf	___flmul@prod+2
  6112  031F  0833               	movf	??___flmul+1,w
  6113  0320  00BF               	movwf	___flmul@prod+1
  6114  0321  0832               	movf	??___flmul,w
  6115  0322  00BE               	movwf	___flmul@prod
  6116  0323                     l2938:
  6117  0323  3001               	movlw	1
  6118  0324  07C2               	addwf	___flmul@temp,f
  6119  0325  1803               	skipnc
  6120  0326  0AC3               	incf	___flmul@temp+1,f
  6121  0327  3000               	movlw	0
  6122  0328  07C3               	addwf	___flmul@temp+1,f
  6123  0329                     l2940:
  6124  0329  0843               	movf	___flmul@temp+1,w
  6125  032A  3A80               	xorlw	128
  6126  032B  00FF               	movwf	btemp+1
  6127  032C  3080               	movlw	128
  6128  032D  027F               	subwf	btemp+1,w
  6129  032E  1D03               	skipz
  6130  032F  2B32               	goto	u3885
  6131  0330  30FF               	movlw	255
  6132  0331  0242               	subwf	___flmul@temp,w
  6133  0332                     u3885:
  6134  0332  1C03               	skipc
  6135  0333  2B35               	goto	u3881
  6136  0334  2B36               	goto	u3880
  6137  0335                     u3881:
  6138  0335  2B41               	goto	l2944
  6139  0336                     u3880:
  6140  0336                     l2942:
  6141  0336  307F               	movlw	127
  6142  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6143  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6144  0339  00C1               	movwf	___flmul@prod+3
  6145  033A  3080               	movlw	128
  6146  033B  00C0               	movwf	___flmul@prod+2
  6147  033C  3000               	movlw	0
  6148  033D  00BF               	movwf	___flmul@prod+1
  6149  033E  3000               	movlw	0
  6150  033F  00BE               	movwf	___flmul@prod
  6151  0340  2B76               	goto	l707
  6152  0341                     l2944:
  6153  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0343  0843               	movf	___flmul@temp+1,w
  6156  0344  3A80               	xorlw	128
  6157  0345  00FF               	movwf	btemp+1
  6158  0346  3080               	movlw	128
  6159  0347  027F               	subwf	btemp+1,w
  6160  0348  1D03               	skipz
  6161  0349  2B4C               	goto	u3895
  6162  034A  3001               	movlw	1
  6163  034B  0242               	subwf	___flmul@temp,w
  6164  034C                     u3895:
  6165  034C  1803               	skipnc
  6166  034D  2B4F               	goto	u3891
  6167  034E  2B50               	goto	u3890
  6168  034F                     u3891:
  6169  034F  2B5C               	goto	l2950
  6170  0350                     u3890:
  6171  0350                     l2946:
  6172  0350  3000               	movlw	0
  6173  0351  1283               	bcf	3,5	;RP0=0, select bank0
  6174  0352  1303               	bcf	3,6	;RP1=0, select bank0
  6175  0353  00C1               	movwf	___flmul@prod+3
  6176  0354  3000               	movlw	0
  6177  0355  00C0               	movwf	___flmul@prod+2
  6178  0356  3000               	movlw	0
  6179  0357  00BF               	movwf	___flmul@prod+1
  6180  0358  3000               	movlw	0
  6181  0359  00BE               	movwf	___flmul@prod
  6182  035A                     l2948:
  6183  035A  01B7               	clrf	___flmul@sign
  6184  035B  2B76               	goto	l707
  6185  035C                     l2950:
  6186  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6187  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6188  035E  0842               	movf	___flmul@temp,w
  6189  035F  00B2               	movwf	??___flmul
  6190  0360  0832               	movf	??___flmul,w
  6191  0361  00BD               	movwf	___flmul@bexp
  6192  0362  30FF               	movlw	255
  6193  0363  05BE               	andwf	___flmul@prod,f
  6194  0364  30FF               	movlw	255
  6195  0365  05BF               	andwf	___flmul@prod+1,f
  6196  0366  307F               	movlw	127
  6197  0367  05C0               	andwf	___flmul@prod+2,f
  6198  0368  3000               	movlw	0
  6199  0369  05C1               	andwf	___flmul@prod+3,f
  6200  036A                     l2952:
  6201  036A  1C3D               	btfss	___flmul@bexp,0
  6202  036B  2B6D               	goto	u3901
  6203  036C  2B6E               	goto	u3900
  6204  036D                     u3901:
  6205  036D  2B6F               	goto	l2956
  6206  036E                     u3900:
  6207  036E                     l2954:
  6208  036E  17C0               	bsf	___flmul@prod+2,7
  6209  036F                     l2956:
  6210  036F  083D               	movf	___flmul@bexp,w
  6211  0370  00B2               	movwf	??___flmul
  6212  0371  1003               	clrc
  6213  0372  0C32               	rrf	??___flmul,w
  6214  0373  00B3               	movwf	??___flmul+1
  6215  0374  0833               	movf	??___flmul+1,w
  6216  0375  00C1               	movwf	___flmul@prod+3
  6217  0376                     l707:
  6218  0376  0837               	movf	___flmul@sign,w
  6219  0377  00B2               	movwf	??___flmul
  6220  0378  0832               	movf	??___flmul,w
  6221  0379  04C1               	iorwf	___flmul@prod+3,f
  6222  037A                     l2958:
  6223  037A  0841               	movf	___flmul@prod+3,w
  6224  037B  00AD               	movwf	?___flmul+3
  6225  037C  0840               	movf	___flmul@prod+2,w
  6226  037D  00AC               	movwf	?___flmul+2
  6227  037E  083F               	movf	___flmul@prod+1,w
  6228  037F  00AB               	movwf	?___flmul+1
  6229  0380  083E               	movf	___flmul@prod,w
  6230  0381  00AA               	movwf	?___flmul
  6231  0382                     l695:
  6232  0382  0008               	return
  6233  0383                     __end_of___flmul:
  6234                           
  6235                           	psect	text25
  6236  0B22                     __ptext25:	
  6237 ;; *************** function __Umul8_16 *****************
  6238 ;; Defined at:
  6239 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  multiplier      1    wreg     unsigned char 
  6242 ;;  multiplicand    1    3[COMMON] unsigned char 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6245 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6246 ;;  product         2    0[BANK0 ] unsigned int 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  2    3[COMMON] unsigned int 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6256 ;;      Params:         2       0       0       0       0
  6257 ;;      Locals:         0       5       0       0       0
  6258 ;;      Temps:          2       0       0       0       0
  6259 ;;      Totals:         4       5       0       0       0
  6260 ;;Total ram usage:        9 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		___flmul
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function __Umul8_16
  6272  0B22                     __Umul8_16:
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6276                           ;__Umul8_16@multiplier stored from wreg
  6277  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0B24  00A4               	movwf	__Umul8_16@multiplier
  6280  0B25                     l2736:
  6281  0B25  01A0               	clrf	__Umul8_16@product
  6282  0B26  01A1               	clrf	__Umul8_16@product+1
  6283  0B27                     l2738:
  6284  0B27  0873               	movf	__Umul8_16@multiplicand,w
  6285  0B28  00F5               	movwf	??__Umul8_16
  6286  0B29  01F6               	clrf	??__Umul8_16+1
  6287  0B2A  0875               	movf	??__Umul8_16,w
  6288  0B2B  00A2               	movwf	__Umul8_16@word_mpld
  6289  0B2C  0876               	movf	??__Umul8_16+1,w
  6290  0B2D  00A3               	movwf	__Umul8_16@word_mpld+1
  6291  0B2E                     l2740:
  6292  0B2E  1C24               	btfss	__Umul8_16@multiplier,0
  6293  0B2F  2B31               	goto	u3381
  6294  0B30  2B32               	goto	u3380
  6295  0B31                     u3381:
  6296  0B31  2B38               	goto	l714
  6297  0B32                     u3380:
  6298  0B32                     l2742:
  6299  0B32  0822               	movf	__Umul8_16@word_mpld,w
  6300  0B33  07A0               	addwf	__Umul8_16@product,f
  6301  0B34  1803               	skipnc
  6302  0B35  0AA1               	incf	__Umul8_16@product+1,f
  6303  0B36  0823               	movf	__Umul8_16@word_mpld+1,w
  6304  0B37  07A1               	addwf	__Umul8_16@product+1,f
  6305  0B38                     l714:
  6306  0B38  3001               	movlw	1
  6307  0B39                     u3395:
  6308  0B39  1003               	clrc
  6309  0B3A  0DA2               	rlf	__Umul8_16@word_mpld,f
  6310  0B3B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6311  0B3C  3EFF               	addlw	-1
  6312  0B3D  1D03               	skipz
  6313  0B3E  2B39               	goto	u3395
  6314  0B3F  1003               	clrc
  6315  0B40  0CA4               	rrf	__Umul8_16@multiplier,f
  6316  0B41                     l2744:
  6317  0B41  0824               	movf	__Umul8_16@multiplier,w
  6318  0B42  1D03               	btfss	3,2
  6319  0B43  2B45               	goto	u3401
  6320  0B44  2B46               	goto	u3400
  6321  0B45                     u3401:
  6322  0B45  2B2E               	goto	l2740
  6323  0B46                     u3400:
  6324  0B46                     l2746:
  6325  0B46  0821               	movf	__Umul8_16@product+1,w
  6326  0B47  00F4               	movwf	?__Umul8_16+1
  6327  0B48  0820               	movf	__Umul8_16@product,w
  6328  0B49  00F3               	movwf	?__Umul8_16
  6329  0B4A                     l716:
  6330  0B4A  0008               	return
  6331  0B4B                     __end_of__Umul8_16:
  6332                           
  6333                           	psect	text26
  6334  0CF9                     __ptext26:	
  6335 ;; *************** function _interrupcion *****************
  6336 ;; Defined at:
  6337 ;;		line 53 in file "main.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0
  6353 ;;      Temps:          3       0       0       0       0
  6354 ;;      Totals:         3       0       0       0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		Interrupt level 1
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _interrupcion
  6366  0CF9                     _interrupcion:
  6367  0CF9                     i1l2368:
  6368                           
  6369                           ;main.c: 55:     if(PIR1bits.RCIF){
  6370  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0CFB  1E8C               	btfss	12,5	;volatile
  6373  0CFC  2CFE               	goto	u271_21
  6374  0CFD  2CFF               	goto	u271_20
  6375  0CFE                     u271_21:
  6376  0CFE  2D16               	goto	i1l2380
  6377  0CFF                     u271_20:
  6378  0CFF                     i1l2370:
  6379                           
  6380                           ;main.c: 56:         UARTdat = RCREG;
  6381  0CFF  081A               	movf	26,w	;volatile
  6382  0D00  00F0               	movwf	??_interrupcion
  6383  0D01  0870               	movf	??_interrupcion,w
  6384  0D02  00FA               	movwf	_UARTdat
  6385  0D03                     i1l2372:
  6386                           
  6387                           ;main.c: 57:         if(UARTdat == '+')UARTval++;
  6388  0D03  302B               	movlw	43
  6389  0D04  067A               	xorwf	_UARTdat,w
  6390  0D05  1D03               	btfss	3,2
  6391  0D06  2D08               	goto	u272_21
  6392  0D07  2D09               	goto	u272_20
  6393  0D08                     u272_21:
  6394  0D08  2D0D               	goto	i1l92
  6395  0D09                     u272_20:
  6396  0D09                     i1l2374:
  6397  0D09  3001               	movlw	1
  6398  0D0A  00F0               	movwf	??_interrupcion
  6399  0D0B  0870               	movf	??_interrupcion,w
  6400  0D0C  07EC               	addwf	_UARTval,f
  6401  0D0D                     i1l92:
  6402                           
  6403                           ;main.c: 58:         if(UARTdat == '-')UARTval--;
  6404  0D0D  302D               	movlw	45
  6405  0D0E  067A               	xorwf	_UARTdat,w
  6406  0D0F  1D03               	btfss	3,2
  6407  0D10  2D12               	goto	u273_21
  6408  0D11  2D13               	goto	u273_20
  6409  0D12                     u273_21:
  6410  0D12  2D15               	goto	i1l2378
  6411  0D13                     u273_20:
  6412  0D13                     i1l2376:
  6413  0D13  3001               	movlw	1
  6414  0D14  02EC               	subwf	_UARTval,f
  6415  0D15                     i1l2378:
  6416                           
  6417                           ;main.c: 59:         PIR1bits.RCIF = 0;
  6418  0D15  128C               	bcf	12,5	;volatile
  6419  0D16                     i1l2380:
  6420                           
  6421                           ;main.c: 62:     if(PIR1bits.ADIF){
  6422  0D16  1F0C               	btfss	12,6	;volatile
  6423  0D17  2D19               	goto	u274_21
  6424  0D18  2D1A               	goto	u274_20
  6425  0D19                     u274_21:
  6426  0D19  2D35               	goto	i1l2392
  6427  0D1A                     u274_20:
  6428  0D1A                     i1l2382:
  6429                           
  6430                           ;main.c: 63:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  6431  0D1A  1003               	clrc
  6432  0D1B  1D1F               	btfss	31,2	;volatile
  6433  0D1C  1403               	setc
  6434  0D1D  1803               	btfsc	3,0
  6435  0D1E  2D20               	goto	u275_21
  6436  0D1F  2D24               	goto	u275_20
  6437  0D20                     u275_21:
  6438  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  6439  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  6440  0D22  151F               	bsf	31,2	;volatile
  6441  0D23  2D27               	goto	u276_24
  6442  0D24                     u275_20:
  6443  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6445  0D26  111F               	bcf	31,2	;volatile
  6446  0D27                     u276_24:
  6447  0D27                     i1l2384:
  6448                           
  6449                           ;main.c: 64:         PIR1bits.ADIF = 0;
  6450  0D27  130C               	bcf	12,6	;volatile
  6451  0D28                     i1l2386:
  6452                           
  6453                           ;main.c: 65:         if(ADCON0bits.CHS0)pot1 = ADRESH;
  6454  0D28  1D1F               	btfss	31,2	;volatile
  6455  0D29  2D2B               	goto	u277_21
  6456  0D2A  2D2C               	goto	u277_20
  6457  0D2B                     u277_21:
  6458  0D2B  2D31               	goto	i1l2390
  6459  0D2C                     u277_20:
  6460  0D2C                     i1l2388:
  6461  0D2C  081E               	movf	30,w	;volatile
  6462  0D2D  00F0               	movwf	??_interrupcion
  6463  0D2E  0870               	movf	??_interrupcion,w
  6464  0D2F  00EE               	movwf	_pot1
  6465  0D30  2D35               	goto	i1l2392
  6466  0D31                     i1l2390:
  6467  0D31  081E               	movf	30,w	;volatile
  6468  0D32  00F0               	movwf	??_interrupcion
  6469  0D33  0870               	movf	??_interrupcion,w
  6470  0D34  00ED               	movwf	_pot2
  6471  0D35                     i1l2392:
  6472                           
  6473                           ;main.c: 69:     if(INTCONbits.T0IF){
  6474  0D35  1D0B               	btfss	11,2	;volatile
  6475  0D36  2D38               	goto	u278_21
  6476  0D37  2D39               	goto	u278_20
  6477  0D38                     u278_21:
  6478  0D38  2D3F               	goto	i1l99
  6479  0D39                     u278_20:
  6480  0D39                     i1l2394:
  6481                           
  6482                           ;main.c: 70:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  6483  0D39  189F               	btfsc	31,1	;volatile
  6484  0D3A  2D3C               	goto	u279_21
  6485  0D3B  2D3D               	goto	u279_20
  6486  0D3C                     u279_21:
  6487  0D3C  2D3E               	goto	i1l98
  6488  0D3D                     u279_20:
  6489  0D3D                     i1l2396:
  6490  0D3D  149F               	bsf	31,1	;volatile
  6491  0D3E                     i1l98:
  6492                           
  6493                           ;main.c: 71:         INTCONbits.T0IF = 0;
  6494  0D3E  110B               	bcf	11,2	;volatile
  6495  0D3F                     i1l99:
  6496  0D3F  0872               	movf	??_interrupcion+2,w
  6497  0D40  008A               	movwf	10
  6498  0D41  0E71               	swapf	??_interrupcion+1,w
  6499  0D42  0083               	movwf	3
  6500  0D43  0EFE               	swapf	btemp,f
  6501  0D44  0E7E               	swapf	btemp,w
  6502  0D45  0009               	retfie
  6503  0D46                     __end_of_interrupcion:
  6504  007E                     btemp	set	126	;btemp
  6505  007E                     wtemp0	set	126
  6506                           
  6507                           	psect	intentry
  6508  0004                     __pintentry:	
  6509                           ;incstack = 0
  6510                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  6511                           
  6512  0004                     interrupt_function:
  6513  007E                     saved_w	set	btemp
  6514  0004  00FE               	movwf	btemp
  6515  0005  0E03               	swapf	3,w
  6516  0006  00F1               	movwf	??_interrupcion+1
  6517  0007  080A               	movf	10,w
  6518  0008  00F2               	movwf	??_interrupcion+2
  6519  0009  120A  158A  2CF9   	ljmp	_interrupcion
  6520                           
  6521                           	psect	config
  6522                           
  6523                           ;Config register CONFIG1 @ 0x2007
  6524                           ;	Oscillator Selection bits
  6525                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6526                           ;	Watchdog Timer Enable bit
  6527                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6528                           ;	Power-up Timer Enable bit
  6529                           ;	PWRTE = OFF, PWRT disabled
  6530                           ;	RE3/MCLR pin function select bit
  6531                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6532                           ;	Code Protection bit
  6533                           ;	CP = OFF, Program memory code protection is disabled
  6534                           ;	Data Code Protection bit
  6535                           ;	CPD = OFF, Data memory code protection is disabled
  6536                           ;	Brown Out Reset Selection bits
  6537                           ;	BOREN = OFF, BOR disabled
  6538                           ;	Internal External Switchover bit
  6539                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6540                           ;	Fail-Safe Clock Monitor Enabled bit
  6541                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6542                           ;	Low Voltage Programming Enable bit
  6543                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6544                           ;	In-Circuit Debugger Mode bit
  6545                           ;	DEBUG = 0x1, unprogrammed default
  6546  2007                     	org	8199
  6547  2007  20F4               	dw	8436
  6548                           
  6549                           ;Config register CONFIG2 @ 0x2008
  6550                           ;	Brown-out Reset Selection bit
  6551                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6552                           ;	Flash Program Memory Self Write Enable bits
  6553                           ;	WRT = OFF, Write protection off
  6554  2008                     	org	8200
  6555  2008  3FFF               	dw	16383

Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     62      79
    BANK1            80      2       5
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[16]), 

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(BANK0[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(BANK0[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(BANK0[1]), sendhex@unidad(BANK0[1]), 

    division@dec	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    division@un	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    hexTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp3(BANK1[3]), 

    sendhex@valor	PTR unsigned char  size(1) Largest target is 1
		 -> UARTval(BANK0[1]), 

    floTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp2(BANK0[3]), disp1(BANK0[3]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_4(CODE[6]), STR_3(CODE[8]), 
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    CONVdec@lectura	PTR unsigned char  size(1) Largest target is 1
		 -> pot2(BANK0[1]), pot1(BANK0[1]), 

    CONVdec@equiv	PTR float  size(1) Largest target is 4
		 -> val2(BANK0[4]), val1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_cursorLCD
    _sendhex->_divisiondecimal
    _sendfloat->_division
    _sendString->_send1dato
    _initLCD->_comandoLCD
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->_division
    _division->___awdiv
    ___flsub->___fladd
    ___flsub->___xxtofl
    _cursorLCD->_comandoLCD
    _configuracion->_ADCconfig
    _LCDstring->_dispCHAR
    _CONVdec->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_floTochar
    _sendhex->_divisiondecimal
    _sendfloat->___fltol
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->___fltol
    _division->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _CONVdec->___flmul
    ___flmul->___xxtofl

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34619
                                              0 BANK1      2     2      0
                            _CONVdec
                          _LCDstring
                      _configuracion
                          _cursorLCD
                           _dispCHAR
                          _floTochar
                          _hexTochar
                            _initLCD
                         _sendString
                          _sendfloat
                            _sendhex
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2753
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _sendfloat                                           15    11      4   11586
                                             45 BANK0     15    11      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
                          _send1dato
                         _sendString
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     2      0     265
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              6 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _hexTochar                                            8     7      1    2878
                                             10 BANK0      8     7      1
                    _divisiondecimal
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              8 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _floTochar                                           17    12      5   11640
                                             45 BANK0     17    12      5
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             7     5      2    2067
                                              8 COMMON     2     0      2
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              3 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     460
                                              6 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     2      0     100
                                              5 COMMON     2     2      0
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (1) _dispCHAR                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CONVdec                                              6     5      1    4773
                                              7 COMMON     1     1      0
                                             36 BANK0      5     4      1
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVdec
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _LCDstring
     _dispCHAR
   _configuracion
     _ADCconfig
     _configUART
   _cursorLCD
     _comandoLCD
   _dispCHAR
   _floTochar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
   _hexTochar
     _divisiondecimal
       ___awdiv
       ___bmul
   _initLCD
     _comandoLCD
   _sendString
     _send1dato
   _sendfloat
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
     _send1dato
     _sendString
       _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      2       5       7        6.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 12:58:36 2021

                       pc 0002            ___bmul@product 0075              ___awdiv@sign 0021  
          ?_configuracion 0070                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0BE0                       l200 0CF8                       l131 0C21  
                     l203 0A61                       l211 0A87                       l220 0ABB  
                     l125 0C66                       l151 0A4B                       l208 0AFD  
                     l160 0ADA                       l154 0A51                       l163 07FF  
                     l148 0A73                       l332 0A9C                       l172 0B76  
                     l502 0E2A                       l166 0F43                       l169 0BAA  
                     l178 0CAE                       l603 048F                       l187 0EA7  
                     l620 0560                       l612 0612                       l701 02EE  
                     l605 0464                       l630 05A6                       l624 0584  
                     l641 0606                       l633 05E4                       l714 0B38  
                     l642 0612                       l707 0376                       l459 0DAE  
                     l716 0B4A                       l492 0E2A                       l741 0FFF  
                     l645 0B21                       l752 0FC9                       l753 0FD5  
                     l745 0FAD                       l739 0F68                       l499 0E15  
                     l695 0382                       l599 03E6        __size_of_ADCconfig 0045  
                     _RC0 0038                       _RC1 0039                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0038              ___flmul@bexp 003D  
            ___flmul@sign 0037              ___flmul@temp 0042              ___flmul@prod 003E  
         __end_of_CONVdec 0C22              ___fltol@exp1 0078                      l2010 0A78  
                    l2012 0A7A                      l2014 0A84                      l3000 0FF6  
                    l2008 0A75                      l3002 0FF7                      l3010 076C  
                    l2300 0CEC                      l3020 07F0                      l3012 07A0  
                    l3100 0712                      l3006 0BE2                      l3030 0EA8  
                    l2302 0CF2                      l3014 07CA                      l3022 0B7A  
                    l3110 073F                      l3102 071B                      l3040 0F3C  
                    l3032 0EBD                      l3016 07D8                      l3008 0757  
                    l3024 0B8F                      l3112 0748                      l3104 0721  
                    l2250 0BC4                      l2242 0BAB                      l3034 0EC1  
                    l3042 0B4E                      l3018 07E7                      l3026 0B98  
                    l3106 072D                      l3050 0613                      l2260 0BCC  
                    l2252 0BC8                      l2244 0BAF                      l2500 0D49  
                    l3036 0EF5                      l3044 0B60                      l3028 0BA1  
                    l3108 0736                      l3060 0640                      l3052 0618  
                    l3134 0C47                      l2270 0BD1                      l2262 0BCD  
                    l2254 0BC9                      l2246 0BB0                      l2350 0AE1  
                    l2510 0D5D                      l2502 0D4D                      l3038 0F1F  
                    l3046 0B69                      l3070 066F                      l3062 0646  
                    l3054 061D                      l2360 0A9E                      l2272 0BD2  
                    l2264 0BCE                      l2256 0BCA                      l2248 0BBF  
                    l2352 0AE6                      l2600 0408                      l2520 0D73  
                    l2512 0D61                      l2504 0D52                      l3048 0B6F  
                    l2280 0CAF                      l3080 06BF                      l3072 0675  
                    l3064 0654                      l3056 0623                      l2362 0A9F  
                    l2274 0BD3                      l2266 0BCF                      l2258 0BCB  
                    l2354 0AEC                      l2610 041C                      l2602 040C  
                    l2530 0D93                      l2522 0D77                      l2514 0D63  
                    l2506 0D54                      l2290 0CCB                      l2282 0CB2  
                    l1650 0A47                      l3090 06E8                      l3082 06C7  
                    l3074 068C                      l3066 0663                      l3058 0631  
                    l2364 0AAB                      l2276 0BDA                      l2268 0BD0  
                    l2356 0AF2                      l2348 0ADC                      l2700 0599  
                    l2612 0420                      l2604 0410                      l2620 0430  
                    l2532 0D9A                      l2524 0D7B                      l2516 0D69  
                    l2508 0D58                      l2292 0CD1                      l2284 0CB3  
                    l3092 06EE                      l3084 06D0                      l3076 06A3  
                    l3068 0669                      l2366 0AAF                      l2278 0BDD  
                    l2358 0AF7                      l2710 05B0                      l2702 059D  
                    l2630 0475                      l2622 0431                      l2614 0424  
                    l2606 0414                      l2550 0395                      l2542 0383  
                    l2526 0D8C                      l2518 0D6C                      l2534 0DA0  
                    l2294 0CDA                      l2286 0CBC                      l3094 06FA  
                    l3086 06D6                      l3078 06B1                      l2720 05EE  
                    l2712 05BE                      l2704 05A3                      l2640 0493  
                    l2632 047B                      l2624 0448                      l2616 0428  
                    l2608 0418                      l2552 039A                      l2560 03AA  
                    l2544 038A                      l2536 0DA5                      l2528 0D92  
                    l2296 0CE0                      l2288 0CC2                      l1920 0ABE  
                    l3096 0703                      l3088 06DF                      l1930 0A58  
                    l2730 0602                      l2722 05F6                      l2714 05C2  
                    l2650 04C0                      l2642 0498                      l2634 047C  
                    l2626 0468                      l2618 042C                      l2570 03C4  
                    l2562 03B2                      l2554 039F                      l2546 0390  
                    l2810 0E0A                      l2802 0DF1                      l2538 0DAA  
                    l2490 0A92                      l2298 0CE6                      l1922 0ACA  
                    l3098 0709                      l2740 0B2E                      l2900 024C  
                    l1932 0A5E                      l1940 0A69                      l2732 060D  
                    l2724 05FB                      l2716 05E0                      l2708 05AB  
                    l2660 04D4                      l2652 04C4                      l2636 0485  
                    l2628 0473                      l2580 03DB                      l2572 03C8  
                    l2564 03B7                      l2556 03A7                      l2548 0394  
                    l2812 0E1A                      l2804 0E03                      l2492 0A94  
                    l2484 0A89                      l1924 0ACE                      l2742 0B32  
                    l2910 02BA                      l2902 0272                      l2830 0034  
                    l2822 0022                      l1926 0A53                      l1950 0C24  
                    l1942 0A6A                      l1934 0A62                      l2734 0611  
                    l2726 05FC                      l2718 05E9                      l2670 053E  
                    l2662 04DD                      l2654 04CD                      l2646 04A3  
                    l2638 0489                      l2590 03F4                      l2582 03DC  
                    l2574 03C9                      l2566 03BD                      l2558 03A8  
                    l2814 0E1F                      l2494 0A9B                      l2486 0A8A  
                    l2750 0C6A                      l1918 0ABD                      l2744 0B41  
                    l2736 0B25                      l2920 02D2                      l2912 02BE  
                    l2904 029A                      l2840 0050                      l2832 0039  
                    l2824 0029                      l1928 0A56                      l1952 0C29  
                    l1960 0C3C                      l1944 0A6D                      l1936 0A66  
                    l2728 0600                      l2672 0543                      l2656 04CF  
                    l2648 04BC                      l2664 04E2                      l2592 03F8  
                    l2576 03CE                      l2584 03DE                      l2568 03BE  
                    l2816 0AFE                      l2488 0A8E                      l2760 0CA7  
                    l2752 0C6E                      l2746 0B46                      l2738 0B27  
                    l2930 02F3                      l2922 02D3                      l2914 02BF  
                    l2906 02A3                      l2850 0065                      l2842 0055  
                    l2834 003E                      l2826 002F                      l1970 0C64  
                    l1954 0C30                      l1962 0C52                      l1946 0A70  
                    l1938 0A68                      l2690 058B                      l2682 0576  
                    l2666 04FA                      l2674 0552                      l2658 04D3  
                    l2594 03FC                      l2586 03EC                      l2578 03D3  
                    l2818 0B02                      l2498 0D46                      l2754 0C72  
                    l2770 0E3D                      l2762 0E2C                      l2932 02F8  
                    l2940 0329                      l2924 02D7                      l2916 02C8  
                    l2908 02B1                      l2860 0081                      l2852 006A  
                    l2844 005B                      l2836 0046                      l2828 0033  
                    l1972 0C65                      l1964 0C5B                      l1956 0C37  
                    l1948 0C23                      l2692 058D                      l2684 057F  
                    l2676 0568                      l2668 0538                      l2596 0400  
                    l2588 03F0                      l2780 0DAF                      l2756 0C76  
                    l2772 0E68                      l2764 0E32                      l2950 035C  
                    l2942 0336                      l2934 0306                      l2926 02EB  
                    l2918 02CE                      l2870 00AC                      l2862 0086  
                    l2854 0072                      l2846 005F                      l2838 0048  
                    l1966 0C5C                      l2694 0592                      l2686 0583  
                    l2678 056D                      l2598 0404                      l2790 0DDB  
                    l2782 0DBC                      l2758 0CA1                      l2774 0E6F  
                    l2766 0E36                      l2952 036A                      l2944 0341  
                    l2936 030A                      l2880 0149                      l2872 00C9  
                    l2856 0074                      l2848 0060                      l1968 0C5D  
                    l2688 0588                      l2696 0594                      l2792 0DE3  
                    l2776 0E9A                      l2768 0E39                      l2954 036E  
                    l2946 0350                      l2938 0323                      l2890 01AC  
                    l2882 0152                      l2874 00E5                      l2866 008F  
                    l2858 007C                      l2970 0F70                      l2962 0F47  
                    l2698 0598                      l2794 0DE5                      l2786 0DC5  
                    l2778 0EA0                      l2956 036F                      l2948 035A  
                    l2892 01C5                      l2884 0162                      l2876 0111  
                    l2868 009F                      l2980 0F92                      l2964 0F4C  
                    l2796 0DE9                      l2788 0DDA                      l2958 037A  
                    l2894 01E2                      l2886 017F                      l2878 012D  
                    l2990 0FC3                      l2982 0F96                      l2974 0F79  
                    l2966 0F50                      l2896 020F                      l2888 018F  
                    l2992 0FCD                      l2984 0FA4                      l2976 0F7E  
                    l2968 0F60                      l2898 021F                      l2994 0FD7  
                    l2986 0FB4                      l2978 0F8B                      l2996 0FED  
                    l2988 0FBF                      l2998 0FF2                      STR_1 0816  
                    STR_2 081E                      STR_3 0826                      STR_4 082E  
                    STR_5 0806                      STR_6 0834                      STR_7 0832  
                    u2030 0ADA                      u2031 0AD9                      u3000 03F0  
                    u3001 03EF                      u3010 0448                      u1410 0A51  
                    u3011 0447                      u1411 0A50                      u3020 0453  
                    u3101 04AE                      u3021 0451                      u3110 04C0  
                    u3102 04B5                      u3030 0454                      u3111 04BF  
                    u3103 04BC                      u3015 0444                      u4000 0FC9  
                    u3200 056D                      u3120 04C4                      u3040 0468  
                    u4001 0FC8                      u3201 056C                      u3121 04C3  
                    u3041 0467                      u4010 0FCD                      u3130 04D3  
                    u3050 047B                      u4011 0FCC                      u3131 04D2  
                    u3051 047A                      u4020 0FE2                      u3300 05C2  
                    u3220 0583                      u3301 05C1                      u3221 0582  
                    u4030 0FF2                      u3310 05D1                      u3230 0588  
                    u3150 04FA                      u3070 048F                      u4031 0FF1  
                    u3231 0587                      u3215 0578                      u3151 04F9  
                    u3071 048E                      u3400 0B46                      u4040 0FF6  
                    u3320 05E0                      u3240 0592                      u3080 0493  
                    u3401 0B45                      u4041 0FF5                      u4025 0FDD  
                    u3321 05DF                      u3241 0591                      u3161 0511  
                    u3153 04F6                      u3145 04D6                      u3081 0492  
                    u3065 047E                      u3330 05E9                      u3250 0598  
                    u3170 0525                      u3162 0512                      u3090 0498  
                    u3410 0CA7                      u4107 0A5B                      u3331 05E8  
                    u3315 05CC                      u3251 0597                      u3171 0526  
                    u3163 0517                      u3091 0497                      u3411 0CA6  
                    u2700 0ABB                      u3340 05EE                      u3260 059D  
                    u3180 0543                      u3172 052B                      u3164 0518  
                    u3500 0E09                      u3420 0E6E                      u2701 0ABA  
                    u3341 05ED                      u3261 059C                      u3181 0542  
                    u3173 052C                      u3165 051D                      u3501 0E08  
                    u3421 0E6D                      u3350 05FB                      u3270 05A3  
                    u3190 0568                      u3166 051E                      u3430 0EA0  
                    u3351 05FA                      u3271 05A2                      u3191 0567  
                    u3431 0E9F                      u3600 0081                      u3360 0600  
                    u3280 05AA                      u3520 0E1A                      u3440 0DBC  
                    u2800 0A8E                      u3601 0080                      u3361 05FF  
                    u3281 05A9                      u3521 0E19                      u3441 0DBB  
                    u2801 0A8D                      u4057 074E                      u3610 0086  
                    u3370 0611                      u3290 05B0                      u3530 0E1F  
                    u3450 0DD3                      u2810 0A9B                      u3611 0085  
                    u3371 0610                      u3291 05AF                      u3531 0E1E  
                    u3515 0E0C                      u2811 0A9A                      u4067 0CB7  
                    u3380 0B32                      u3540 0033                      u3460 0DE9  
                    u2900 0DA0                      u2820 0D4D                      u3381 0B31  
                    u3701 01D4                      u3621 00D7                      u3541 0032  
                    u3461 0DE8                      u2901 0D9F                      u2821 0D4C  
                    u4077 0CC6                      u3702 01DB                      u3622 00DE  
                    u3550 0039                      u3470 0DF0                      u2910 0DA5  
                    u2830 0D58                      u3711 0201                      u3703 01E2  
                    u3631 00F3                      u3623 00E5                      u3551 0038  
                    u3471 0DEF                      u3455 0DCE                      u2911 0DA4  
                    u2831 0D57                      u4087 0CD5                      u3712 0208  
                    u3632 00FA                      u3560 003E                      u2680 0AE1  
                    u2920 0394                      u2840 0D69                      u3721 022E  
                    u3713 020F                      u3641 011F                      u3633 0101  
                    u3561 003D                      u4097 0A7F                      u2681 0AE0  
                    u2921 0393                      u2841 0D68                      u3810 02D2  
                    u3730 0258                      u3722 0235                      u3642 0126  
                    u3570 005F                      u2690 0AF2                      u2930 039A  
                    u3490 0E02                      u3395 0B39                      u3811 02D1  
                    u3723 023C                      u3651 013B                      u3643 012D  
                    u3571 005E                      u2691 0AF1                      u2931 0399  
                    u3491 0E01                      u3900 036E                      u3820 02D7  
                    u3652 0142                      u3580 0065                      u2940 039F  
                    u2860 0D7B                      u3901 036D                      u3821 02D6  
                    u3805 02C1                      u3741 0264                      u3653 0149  
                    u3581 0064                      u2941 039E                      u3485 0DF2  
                    u2861 0D7A                      u3830 02EB                      u3750 0280  
                    u3742 026B                      u3590 006A                      u3910 0F4C  
                    u2950 03BD                      u3831 02EA                      u3743 0272  
                    u3735 0253                      u3671 0171                      u3591 0069  
                    u3911 0F4B                      u2951 03BC                      u2855 0D6D  
                    u3840 02F2                      u3672 0178                      u3920 0F50  
                    u2960 03C8                      u2880 0D8C                      u3841 02F1  
                    u3761 028C                      u3681 019E                      u3673 017F  
                    u3665 014B                      u3921 0F4F                      u2961 03C7  
                    u2881 0D8B                      u3850 02F8                      u3762 0293  
                    u3682 01A5                      u3930 0F70                      u2970 03CE  
                    u3851 02F7                      u3763 029A                      u3755 027B  
                    u3683 01AC                      u3931 0F6F                      u2971 03CD  
                    u2875 0D7C                      u3860 030A                      u2980 03D3  
                    u3861 0309                      u2981 03D2                      u2885 0D88  
                    u3870 0319                      u3790 02BE                      u3950 0F91  
                    u2990 03EC                      u3791 02BD                      u3775 029C  
                    u3695 01AE                      u3951 0F90                      u2991 03EB  
                    u2895 0D94                      u3880 0336                      u3881 0335  
                    u3785 02B3                      u3945 0F83                      u3890 0350  
                    u3970 0FB3                      u3891 034F                      u3875 0314  
                    u3971 0FB2                      i1l92 0D0D                      u3885 0332  
                    u3965 0FA5                      u3990 0FC3                      u3895 034C  
                    u3991 0FC2                      u3985 0FB8                      i1l98 0D3E  
                    i1l99 0D3F                      _main 0613                      _val1 0062  
                    _val2 005E                      _pot1 006E                      _pot2 006D  
                    btemp 007E           _divisiondecimal 0E2B                      start 000C  
       ___bmul@multiplier 0076               division@dec 0079               division@div 0028  
      __size_of_LCDstring 001F             ___fltol@sign1 0077           __end_of___fladd 0613  
                   ?_main 0070           __end_of___awdiv 0DAF           __end_of___flmul 0383  
         __end_of___flsub 0B22           __end_of___fltol 0E2B                     _ANSEL 0188  
         ___awdiv@divisor 0073           ___awdiv@counter 0020                     _RCREG 001A  
            CONVdec@equiv 0044             floTochar@conv 0051                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009             floTochar@temp 0056  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
           send1dato@dato 0073           __end_of_initLCD 0CF9                     _disp1 0069  
                   _disp2 0066                     _disp3 00A0           __end_of_sendhex 0BAB  
                   pclath 000A                     status 0003                     wtemp0 007E  
       __end_of_ADCconfig 0C67            sendhex@centena 002F           __initialization 000F  
            __end_of_main 0757           ??_configuracion 0077                    ??_main 00A3  
     divisiondecimal@cent 0026                 ??_CONVdec 0045                    _ADRESH 001E  
        ___awdiv@dividend 0075   __end_of_divisiondecimal 0EA8                    _ANSELH 0189  
                  i1l2370 0CFF                    i1l2372 0D03                    i1l2380 0D16  
                  i1l2390 0D31                    i1l2382 0D1A                    i1l2374 0D09  
                  i1l2384 0D27                    i1l2392 0D35                    i1l2376 0D13  
                  i1l2368 0CF9                    i1l2394 0D39                    i1l2386 0D28  
                  i1l2378 0D15                    i1l2396 0D3D                    i1l2388 0D2C  
       __end_of_LCDstring 0ABC                    u271_20 0CFF                    u271_21 0CFE  
                  u272_20 0D09                    u272_21 0D08                    u273_20 0D13  
                  u273_21 0D12                    u274_20 0D1A                    u274_21 0D19  
                  u275_20 0D24                    u275_21 0D20                    u276_24 0D27  
                  u277_20 0D2C                    u277_21 0D2B                    u278_20 0D39  
                  u278_21 0D38                    u279_20 0D3D                    u279_21 0D3C  
           ADCconfig@just 0073            floTochar@valor 004D            sendfloat@valor 004D  
        __end_of___xxtofl 1000             hexTochar@conv 002A          __end_of_dispCHAR 0A62  
                  ___bmul 0A88          __end_of_division 0CAF                 ??___fladd 0028  
               ??___awdiv 0077                 ??___flmul 0032                 ??___flsub 0077  
               ??___fltol 0048          ___awdiv@quotient 0022                 ??_initLCD 0076  
      __size_of__Umul8_16 0029                    saved_w 007E                 ??_sendhex 002A  
            ___xxtofl@arg 0026              ___xxtofl@exp 0025              ___xxtofl@val 0073  
 __end_of__initialization 001E                ___fltol@f1 0044       ___bmul@multiplicand 0073  
          __pcstackCOMMON 0070             ?_interrupcion 0070            _OPTION_REGbits 0081  
      __size_of_floTochar 009C        __size_of_hexTochar 002C          ?_divisiondecimal 0024  
              __pbssBANK0 005E                __pbssBANK1 00A0        __size_of_cursorLCD 0023  
       __end_of__Umul8_16 0B4B        __size_of_send1dato 000C            ??_interrupcion 0070  
              __pmaintext 0613                   ?___bmul 0073                __pintentry 0004  
      __size_of_sendfloat 00A9                _comandoLCD 0A74                   _CONVdec 0BE1  
              _configUART 0A62            ADCconfig@canal 0076                 ?___xxtofl 0073  
          CONVdec@lectura 0077           floTochar@entero 005B                 ?_dispCHAR 0070  
                 _UARTdat 007A           sendfloat@entero 005A                   _UARTval 006C  
              __stringtab 0800                 ?_division 0078            hexTochar@valor 002E  
       __end_of_floTochar 0F44                 _ADCconfig 0C22           __size_of___bmul 0015  
       __end_of_hexTochar 0B77                   ___fladd 0383                   ___awdiv 0D46  
                 ___flmul 0022                   ___flsub 0AFE                   ___fltol 0DAF  
                 __ptext1 0B77                   __ptext2 0757                   __ptext3 0ABC  
                 __ptext4 0A46                   __ptext5 0CAF                   __ptext6 0B4B  
                 __ptext7 0E2B                   __ptext8 0EA8                   __ptext9 0C67  
                 _initLCD 0CAF         __end_of_cursorLCD 0AFE                ??___xxtofl 0020  
                 _sendhex 0B77                ??_dispCHAR 0073         __end_of_send1dato 0A52  
                 clrloop0 0A3F      end_of_initialization 001E                ??_division 0024  
       __end_of_sendfloat 0800                _sendString 0ABC                 _LCDstring 0A9D  
               _RCSTAbits 0018                ?_ADCconfig 0073     __end_of_configuracion 0BE1  
             ?_comandoLCD 0070               ___fladd@grs 0076               ?_configUART 0070  
           ___xxtofl@sign 0024                 _TRISCbits 0087      __end_of_interrupcion 0D46  
             ___flmul@grs 0039                 _TXSTAbits 0098                ?_LCDstring 0070  
              division@un 0078          hexTochar@centena 0030            __end_of___bmul 0A9D  
     start_initialization 000F            division@conteo 0027             sendhex@decena 0030  
           sendhex@unidad 002E        divisiondecimal@dec 0025        divisiondecimal@div 0079  
             ?_sendString 0070             sendfloat@temp 0055       __size_of_comandoLCD 0014  
     __size_of_configUART 0012               ??_ADCconfig 0074                  ??___bmul 0074  
               __Umul8_16 0B22                 ___fladd@a 0024                 ___fladd@b 0020  
                ?_CONVdec 0044     divisiondecimal@conteo 0078                 ___flmul@a 002E  
               ___flmul@b 002A               __pbssCOMMON 007A                 ___flsub@a 0030  
               ___flsub@b 0034                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A3         __size_of___xxtofl 00BC         __size_of_dispCHAR 0010  
       __size_of_division 0048               ??_LCDstring 0075  __size_of_divisiondecimal 007D  
                ?___fladd 0020                  ?___awdiv 0073                  ?___flmul 002A  
                ?___flsub 0030                  ?___fltol 0044                ?__Umul8_16 0073  
               _floTochar 0EA8                 __pstrings 0800                 _hexTochar 0B4B  
     __size_of_sendString 001F     __size_of_interrupcion 004D                  ?_initLCD 0070  
                ?_sendhex 0070                 _cursorLCD 0ADB                 _send1dato 0A46  
       interrupt_function 0004         sendString@mensaje 0075          floTochar@decimal 005A  
               clear_ram0 0A3E                  _PIE1bits 008C                 dispCHAR@b 0074  
               _sendfloat 0757                  _PIR1bits 000C          sendfloat@decimal 0059  
            _interrupcion 0CF9                ?_floTochar 004D                ?_hexTochar 002A  
              _ADCON0bits 001F               __stringbase 0805                _ADCON1bits 009F  
            ??_comandoLCD 0073              ??_configUART 0073          __size_of_CONVdec 0041  
         hexTochar@decena 0031                ?_cursorLCD 0076           hexTochar@unidad 002F  
              ?_send1dato 0070              sendhex@valor 002D         divisiondecimal@un 0024  
              ?_sendfloat 004D        __end_of_comandoLCD 0A88        __end_of_configUART 0A74  
     floTochar@digdecimal 005C               ??__Umul8_16 0075          __size_of___fladd 0290  
        __size_of___awdiv 0069          __size_of___flmul 0361          __size_of___flsub 0024  
        __size_of___fltol 007C         ??_divisiondecimal 0027        __end_of__stringtab 0806  
        __size_of_initLCD 004A                  ___xxtofl 0F44                  _dispCHAR 0A52  
        __size_of_sendhex 0034                  __ptext10 0A88                  __ptext11 0D46  
                __ptext20 0A9D                  __ptext12 0DAF                  __ptext21 0A52  
                __ptext13 0AFE                  __ptext22 0BE1                  __ptext14 0383  
                __ptext23 0F44                  __ptext15 0ADB                  __ptext24 0022  
                __ptext16 0A74                  __ptext25 0B22                  __ptext17 0BAB  
                __ptext26 0CF9                  __ptext18 0A62                  __ptext19 0C22  
        LCDstring@mensaje 0076                  _division 0C67              ??_sendString 0074  
  __size_of_configuracion 0036             __size_of_main 0144             cursorLCD@fila 0078  
           cursorLCD@temp 0079               ??_floTochar 0052               ??_hexTochar 002B  
     sendfloat@digdecimal 005B        __end_of_sendString 0ADB                _INTCONbits 000B  
             ??_cursorLCD 0077                  intlevel1 0000               ??_send1dato 0073  
             ??_sendfloat 0051                 stringcode 0800                _OSCCONbits 008F  
           _configuracion 0BAB          cursorLCD@columna 0076    __Umul8_16@multiplicand 0073  
                stringdir 0800                  stringtab 0800             ___fladd@signs 0073  
            ___fladd@aexp 0074              ___fladd@bexp 0075      __Umul8_16@multiplier 0024  
       __Umul8_16@product 0020             comandoLCD@cmd 0075  
