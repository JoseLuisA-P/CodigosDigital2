

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 19:02:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0019                     _TXREG	set	25
   469  0018                     _RCSTAbits	set	24
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  000B                     _INTCONbits	set	11
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  001A                     _RCREG	set	26
   479  000C                     _PIR1bits	set	12
   480  0039                     _RC1	set	57
   481  0038                     _RC0	set	56
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  0087                     _TRISCbits	set	135
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008C                     _PIE1bits	set	140
   488  008F                     _OSCCONbits	set	143
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISC	set	135
   492  0086                     _TRISB	set	134
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_5:
   514  0806  3453               	retlw	83	;'S'
   515  0807  3431               	retlw	49	;'1'
   516  0808  343A               	retlw	58	;':'
   517  0809  3420               	retlw	32	;' '
   518  080A  3420               	retlw	32	;' '
   519  080B  3420               	retlw	32	;' '
   520  080C  3453               	retlw	83	;'S'
   521  080D  3432               	retlw	50	;'2'
   522  080E  343A               	retlw	58	;':'
   523  080F  3420               	retlw	32	;' '
   524  0810  3420               	retlw	32	;' '
   525  0811  3420               	retlw	32	;' '
   526  0812  3453               	retlw	83	;'S'
   527  0813  3433               	retlw	51	;'3'
   528  0814  343A               	retlw	58	;':'
   529  0815  3400               	retlw	0
   530  0816                     STR_2:
   531  0816  340A               	retlw	10
   532  0817  3450               	retlw	80	;'P'
   533  0818  344F               	retlw	79	;'O'
   534  0819  3454               	retlw	84	;'T'
   535  081A  3432               	retlw	50	;'2'
   536  081B  343A               	retlw	58	;':'
   537  081C  3420               	retlw	32	;' '
   538  081D  340A               	retlw	10
   539  081E  3400               	retlw	0
   540  081F                     STR_3:
   541  081F  340A               	retlw	10
   542  0820  3455               	retlw	85	;'U'
   543  0821  3441               	retlw	65	;'A'
   544  0822  3452               	retlw	82	;'R'
   545  0823  3454               	retlw	84	;'T'
   546  0824  343A               	retlw	58	;':'
   547  0825  3420               	retlw	32	;' '
   548  0826  340A               	retlw	10
   549  0827  3400               	retlw	0
   550  0828                     STR_1:
   551  0828  3450               	retlw	80	;'P'
   552  0829  344F               	retlw	79	;'O'
   553  082A  3454               	retlw	84	;'T'
   554  082B  3431               	retlw	49	;'1'
   555  082C  343A               	retlw	58	;':'
   556  082D  3420               	retlw	32	;' '
   557  082E  340A               	retlw	10
   558  082F  3400               	retlw	0
   559  0830                     STR_4:
   560  0830  340A               	retlw	10
   561  0831  340A               	retlw	10
   562  0832  340A               	retlw	10
   563  0833  340A               	retlw	10
   564  0834  340A               	retlw	10
   565  0835  3400               	retlw	0
   566  0836                     STR_7:
   567  0836  340D               	retlw	13
   568  0837  3400               	retlw	0
   569  0838                     STR_6:
   570  0838  342E               	retlw	46	;'.'
   571  0839  3400               	retlw	0
   572                           
   573                           	psect	cinit
   574  000F                     start_initialization:	
   575                           ; #config settings
   576                           
   577  000F                     __initialization:
   578                           
   579                           ; Clear objects allocated to COMMON
   580  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   581                           
   582                           ; Clear objects allocated to BANK0
   583  0010  1383               	bcf	3,7	;select IRP bank0
   584  0011  305E               	movlw	low __pbssBANK0
   585  0012  0084               	movwf	4
   586  0013  306F               	movlw	low (__pbssBANK0+17)
   587  0014  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   588                           
   589                           ; Clear objects allocated to BANK1
   590  0019  1683               	bsf	3,5	;RP0=1, select bank1
   591  001A  1303               	bcf	3,6	;RP1=0, select bank1
   592  001B  01A0               	clrf	__pbssBANK1& (0+127)
   593  001C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   594  001D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   595  001E                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  001E                     __end_of__initialization:
   599  001E  0183               	clrf	3
   600  001F  120A  118A  2E13   	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssCOMMON
   603  007A                     __pbssCOMMON:
   604  007A                     _UARTdat:
   605  007A                     	ds	1
   606                           
   607                           	psect	bssBANK0
   608  005E                     __pbssBANK0:
   609  005E                     _val2:
   610  005E                     	ds	4
   611  0062                     _val1:
   612  0062                     	ds	4
   613  0066                     _disp2:
   614  0066                     	ds	3
   615  0069                     _disp1:
   616  0069                     	ds	3
   617  006C                     _UARTval:
   618  006C                     	ds	1
   619  006D                     _pot2:
   620  006D                     	ds	1
   621  006E                     _pot1:
   622  006E                     	ds	1
   623                           
   624                           	psect	bssBANK1
   625  00A0                     __pbssBANK1:
   626  00A0                     _disp3:
   627  00A0                     	ds	3
   628                           
   629                           	psect	clrtext
   630  07F6                     clear_ram0:	
   631                           ;	Called with FSR containing the base address, and
   632                           ;	W with the last address+1
   633                           
   634  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   635  07F7                     clrloop0:
   636  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   637  07F8  0A84               	incf	4,f	;increment pointer
   638  07F9  0604               	xorwf	4,w	;XOR with final address
   639  07FA  1903               	btfsc	3,2	;have we reached the end yet?
   640  07FB  3400               	retlw	0	;all done for this memory range, return
   641  07FC  0604               	xorwf	4,w	;XOR again to restore value
   642  07FD  2FF7               	goto	clrloop0	;do the next byte
   643                           
   644                           	psect	cstackBANK1
   645  00A3                     __pcstackBANK1:
   646  00A3                     ??_main:
   647                           
   648                           ; 1 bytes @ 0x0
   649  00A3                     	ds	3
   650                           
   651                           	psect	cstackCOMMON
   652  0070                     __pcstackCOMMON:
   653  0070                     ?_configuracion:
   654  0070                     ?_initLCD:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_sendString:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_sendhex:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_LCDstring:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_dispCHAR:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_configUART:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_comandoLCD:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_interrupcion:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_interrupcion:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_send1dato:	
   685                           ; 1 bytes @ 0x0
   686                           
   687                           
   688                           ; 1 bytes @ 0x0
   689  0070                     	ds	3
   690  0073                     ??_dispCHAR:
   691  0073                     ??_configUART:	
   692                           ; 1 bytes @ 0x3
   693                           
   694  0073                     ?_ADCconfig:	
   695                           ; 1 bytes @ 0x3
   696                           
   697  0073                     ??_comandoLCD:	
   698                           ; 1 bytes @ 0x3
   699                           
   700  0073                     ??_send1dato:	
   701                           ; 1 bytes @ 0x3
   702                           
   703  0073                     ?___bmul:	
   704                           ; 1 bytes @ 0x3
   705                           
   706  0073                     ?__Umul8_16:	
   707                           ; 1 bytes @ 0x3
   708                           
   709  0073                     ?___awdiv:	
   710                           ; 2 bytes @ 0x3
   711                           
   712  0073                     ?___xxtofl:	
   713                           ; 2 bytes @ 0x3
   714                           
   715  0073                     ADCconfig@just:	
   716                           ; 4 bytes @ 0x3
   717                           
   718  0073                     send1dato@dato:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0073                     ___bmul@multiplicand:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  0073                     ___fladd@signs:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     __Umul8_16@multiplicand:	
   728                           ; 1 bytes @ 0x3
   729                           
   730  0073                     ___awdiv@divisor:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     ___xxtofl@val:	
   734                           ; 2 bytes @ 0x3
   735                           
   736                           
   737                           ; 4 bytes @ 0x3
   738  0073                     	ds	1
   739  0074                     ??_sendString:
   740  0074                     ??_ADCconfig:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ??___bmul:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     dispCHAR@b:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     ___fladd@aexp:	
   750                           ; 1 bytes @ 0x4
   751                           
   752                           
   753                           ; 1 bytes @ 0x4
   754  0074                     	ds	1
   755  0075                     ??_LCDstring:
   756  0075                     ??__Umul8_16:	
   757                           ; 1 bytes @ 0x5
   758                           
   759  0075                     sendString@mensaje:	
   760                           ; 1 bytes @ 0x5
   761                           
   762  0075                     comandoLCD@cmd:	
   763                           ; 1 bytes @ 0x5
   764                           
   765  0075                     ___bmul@product:	
   766                           ; 1 bytes @ 0x5
   767                           
   768  0075                     ___fladd@bexp:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     ___awdiv@dividend:	
   772                           ; 1 bytes @ 0x5
   773                           
   774                           
   775                           ; 2 bytes @ 0x5
   776  0075                     	ds	1
   777  0076                     ??_initLCD:
   778  0076                     ?_cursorLCD:	
   779                           ; 1 bytes @ 0x6
   780                           
   781  0076                     ADCconfig@canal:	
   782                           ; 1 bytes @ 0x6
   783                           
   784  0076                     cursorLCD@columna:	
   785                           ; 1 bytes @ 0x6
   786                           
   787  0076                     LCDstring@mensaje:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0076                     ___bmul@multiplier:	
   791                           ; 1 bytes @ 0x6
   792                           
   793  0076                     ___fladd@grs:	
   794                           ; 1 bytes @ 0x6
   795                           
   796                           
   797                           ; 1 bytes @ 0x6
   798  0076                     	ds	1
   799  0077                     ??_configuracion:
   800  0077                     ??_cursorLCD:	
   801                           ; 1 bytes @ 0x7
   802                           
   803  0077                     ??___awdiv:	
   804                           ; 1 bytes @ 0x7
   805                           
   806  0077                     ??___flsub:	
   807                           ; 1 bytes @ 0x7
   808                           
   809  0077                     CONVdec@lectura:	
   810                           ; 1 bytes @ 0x7
   811                           
   812  0077                     ___fltol@sign1:	
   813                           ; 1 bytes @ 0x7
   814                           
   815                           
   816                           ; 1 bytes @ 0x7
   817  0077                     	ds	1
   818  0078                     ?_division:
   819  0078                     division@un:	
   820                           ; 1 bytes @ 0x8
   821                           
   822  0078                     divisiondecimal@conteo:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     cursorLCD@fila:	
   826                           ; 1 bytes @ 0x8
   827                           
   828  0078                     ___fltol@exp1:	
   829                           ; 1 bytes @ 0x8
   830                           
   831                           
   832                           ; 1 bytes @ 0x8
   833  0078                     	ds	1
   834  0079                     division@dec:
   835  0079                     divisiondecimal@div:	
   836                           ; 1 bytes @ 0x9
   837                           
   838  0079                     cursorLCD@temp:	
   839                           ; 1 bytes @ 0x9
   840                           
   841                           
   842                           ; 1 bytes @ 0x9
   843  0079                     	ds	1
   844                           
   845                           	psect	cstackBANK0
   846  0020                     __pcstackBANK0:
   847  0020                     ??___xxtofl:
   848  0020                     ?___fladd:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     ___awdiv@counter:	
   852                           ; 4 bytes @ 0x0
   853                           
   854  0020                     __Umul8_16@product:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ___fladd@b:	
   858                           ; 2 bytes @ 0x0
   859                           
   860                           
   861                           ; 4 bytes @ 0x0
   862  0020                     	ds	1
   863  0021                     ___awdiv@sign:
   864                           
   865                           ; 1 bytes @ 0x1
   866  0021                     	ds	1
   867  0022                     ___awdiv@quotient:
   868  0022                     __Umul8_16@word_mpld:	
   869                           ; 2 bytes @ 0x2
   870                           
   871                           
   872                           ; 2 bytes @ 0x2
   873  0022                     	ds	2
   874  0024                     ??_division:
   875  0024                     ?_divisiondecimal:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0024                     divisiondecimal@un:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0024                     __Umul8_16@multiplier:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0024                     ___xxtofl@sign:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0024                     ___fladd@a:	
   888                           ; 1 bytes @ 0x4
   889                           
   890                           
   891                           ; 4 bytes @ 0x4
   892  0024                     	ds	1
   893  0025                     divisiondecimal@dec:
   894  0025                     ___xxtofl@exp:	
   895                           ; 1 bytes @ 0x5
   896                           
   897                           
   898                           ; 1 bytes @ 0x5
   899  0025                     	ds	1
   900  0026                     divisiondecimal@cent:
   901  0026                     ___xxtofl@arg:	
   902                           ; 1 bytes @ 0x6
   903                           
   904                           
   905                           ; 4 bytes @ 0x6
   906  0026                     	ds	1
   907  0027                     ??_divisiondecimal:
   908  0027                     division@conteo:	
   909                           ; 1 bytes @ 0x7
   910                           
   911                           
   912                           ; 1 bytes @ 0x7
   913  0027                     	ds	1
   914  0028                     ??___fladd:
   915  0028                     division@div:	
   916                           ; 1 bytes @ 0x8
   917                           
   918                           
   919                           ; 1 bytes @ 0x8
   920  0028                     	ds	2
   921  002A                     ??_sendhex:
   922  002A                     ?_hexTochar:	
   923                           ; 1 bytes @ 0xA
   924                           
   925  002A                     ?___flmul:	
   926                           ; 1 bytes @ 0xA
   927                           
   928  002A                     hexTochar@conv:	
   929                           ; 4 bytes @ 0xA
   930                           
   931  002A                     ___flmul@b:	
   932                           ; 1 bytes @ 0xA
   933                           
   934                           
   935                           ; 4 bytes @ 0xA
   936  002A                     	ds	1
   937  002B                     ??_hexTochar:
   938                           
   939                           ; 1 bytes @ 0xB
   940  002B                     	ds	2
   941  002D                     sendhex@valor:
   942                           
   943                           ; 1 bytes @ 0xD
   944  002D                     	ds	1
   945  002E                     sendhex@unidad:
   946  002E                     hexTochar@valor:	
   947                           ; 1 bytes @ 0xE
   948                           
   949  002E                     ___flmul@a:	
   950                           ; 1 bytes @ 0xE
   951                           
   952                           
   953                           ; 4 bytes @ 0xE
   954  002E                     	ds	1
   955  002F                     sendhex@centena:
   956  002F                     hexTochar@unidad:	
   957                           ; 1 bytes @ 0xF
   958                           
   959                           
   960                           ; 1 bytes @ 0xF
   961  002F                     	ds	1
   962  0030                     ?___flsub:
   963  0030                     sendhex@decena:	
   964                           ; 4 bytes @ 0x10
   965                           
   966  0030                     hexTochar@centena:	
   967                           ; 1 bytes @ 0x10
   968                           
   969  0030                     ___flsub@a:	
   970                           ; 1 bytes @ 0x10
   971                           
   972                           
   973                           ; 4 bytes @ 0x10
   974  0030                     	ds	1
   975  0031                     hexTochar@decena:
   976                           
   977                           ; 1 bytes @ 0x11
   978  0031                     	ds	1
   979  0032                     ??___flmul:
   980                           
   981                           ; 1 bytes @ 0x12
   982  0032                     	ds	2
   983  0034                     ___flsub@b:
   984                           
   985                           ; 4 bytes @ 0x14
   986  0034                     	ds	3
   987  0037                     ___flmul@sign:
   988                           
   989                           ; 1 bytes @ 0x17
   990  0037                     	ds	1
   991  0038                     ___flmul@aexp:
   992                           
   993                           ; 1 bytes @ 0x18
   994  0038                     	ds	1
   995  0039                     ___flmul@grs:
   996                           
   997                           ; 4 bytes @ 0x19
   998  0039                     	ds	4
   999  003D                     ___flmul@bexp:
  1000                           
  1001                           ; 1 bytes @ 0x1D
  1002  003D                     	ds	1
  1003  003E                     ___flmul@prod:
  1004                           
  1005                           ; 4 bytes @ 0x1E
  1006  003E                     	ds	4
  1007  0042                     ___flmul@temp:
  1008                           
  1009                           ; 2 bytes @ 0x22
  1010  0042                     	ds	2
  1011  0044                     ?_CONVdec:
  1012  0044                     ?___fltol:	
  1013                           ; 1 bytes @ 0x24
  1014                           
  1015  0044                     CONVdec@equiv:	
  1016                           ; 4 bytes @ 0x24
  1017                           
  1018  0044                     ___fltol@f1:	
  1019                           ; 1 bytes @ 0x24
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x24
  1023  0044                     	ds	1
  1024  0045                     ??_CONVdec:
  1025                           
  1026                           ; 1 bytes @ 0x25
  1027  0045                     	ds	3
  1028  0048                     ??___fltol:
  1029                           
  1030                           ; 1 bytes @ 0x28
  1031  0048                     	ds	5
  1032  004D                     ?_sendfloat:
  1033  004D                     ?_floTochar:	
  1034                           ; 1 bytes @ 0x2D
  1035                           
  1036  004D                     sendfloat@valor:	
  1037                           ; 1 bytes @ 0x2D
  1038                           
  1039  004D                     floTochar@valor:	
  1040                           ; 4 bytes @ 0x2D
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x2D
  1044  004D                     	ds	4
  1045  0051                     ??_sendfloat:
  1046  0051                     floTochar@conv:	
  1047                           ; 1 bytes @ 0x31
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x31
  1051  0051                     	ds	1
  1052  0052                     ??_floTochar:
  1053                           
  1054                           ; 1 bytes @ 0x32
  1055  0052                     	ds	3
  1056  0055                     sendfloat@temp:
  1057                           
  1058                           ; 4 bytes @ 0x35
  1059  0055                     	ds	1
  1060  0056                     floTochar@temp:
  1061                           
  1062                           ; 4 bytes @ 0x36
  1063  0056                     	ds	3
  1064  0059                     sendfloat@decimal:
  1065                           
  1066                           ; 1 bytes @ 0x39
  1067  0059                     	ds	1
  1068  005A                     sendfloat@entero:
  1069  005A                     floTochar@decimal:	
  1070                           ; 1 bytes @ 0x3A
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x3A
  1074  005A                     	ds	1
  1075  005B                     sendfloat@digdecimal:
  1076  005B                     floTochar@entero:	
  1077                           ; 1 bytes @ 0x3B
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0x3B
  1081  005B                     	ds	1
  1082  005C                     floTochar@digdecimal:
  1083                           
  1084                           ; 2 bytes @ 0x3C
  1085  005C                     	ds	2
  1086                           
  1087                           	psect	maintext
  1088  0613                     __pmaintext:	
  1089 ;;
  1090 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1091 ;;
  1092 ;; *************** function _main *****************
  1093 ;; Defined at:
  1094 ;;		line 78 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : B00/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          0       0       3       0       0
  1111 ;;      Totals:         0       0       3       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels required when called:    4
  1114 ;; This function calls:
  1115 ;;		_CONVdec
  1116 ;;		_LCDstring
  1117 ;;		_configuracion
  1118 ;;		_cursorLCD
  1119 ;;		_dispCHAR
  1120 ;;		_floTochar
  1121 ;;		_hexTochar
  1122 ;;		_initLCD
  1123 ;;		_sendString
  1124 ;;		_sendfloat
  1125 ;;		_sendhex
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _main
  1133  0613                     _main:
  1134  0613                     l3050:	
  1135                           ;incstack = 0
  1136                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1137                           
  1138                           
  1139                           ;main.c: 79:     configuracion();
  1140  0613  120A  158A  239E  120A  118A  	fcall	_configuracion
  1141  0618                     l3052:
  1142                           
  1143                           ;main.c: 80:     initLCD();
  1144  0618  120A  158A  24A2  120A  118A  	fcall	_initLCD
  1145  061D                     l3054:
  1146                           
  1147                           ;main.c: 83:         sendString("POT1: \n");
  1148  061D  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1149  061E  120A  158A  22AF  120A  118A  	fcall	_sendString
  1150  0623                     l3056:
  1151                           
  1152                           ;main.c: 84:         CONVdec(&pot1,&val1);
  1153  0623  3062               	movlw	(low (_val1| 0))& (0+255)
  1154  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0626  00A3               	movwf	??_main^(0+128)
  1157  0627  0823               	movf	??_main^(0+128),w
  1158  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1160  062A  00C4               	movwf	CONVdec@equiv
  1161  062B  306E               	movlw	(low (_pot1| 0))& (0+255)
  1162  062C  120A  158A  23D4  120A  118A  	fcall	_CONVdec
  1163  0631                     l3058:
  1164                           
  1165                           ;main.c: 85:         sendfloat(val1);
  1166  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0633  0865               	movf	_val1+3,w
  1169  0634  00D0               	movwf	sendfloat@valor+3
  1170  0635  0864               	movf	_val1+2,w
  1171  0636  00CF               	movwf	sendfloat@valor+2
  1172  0637  0863               	movf	_val1+1,w
  1173  0638  00CE               	movwf	sendfloat@valor+1
  1174  0639  0862               	movf	_val1,w
  1175  063A  00CD               	movwf	sendfloat@valor
  1176  063B  120A  158A  269B  120A  118A  	fcall	_sendfloat
  1177  0640                     l3060:
  1178                           
  1179                           ;main.c: 86:         sendString("\nPOT2: \n");
  1180  0640  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1181  0641  120A  158A  22AF  120A  118A  	fcall	_sendString
  1182  0646                     l3062:
  1183                           
  1184                           ;main.c: 87:         CONVdec(&pot2,&val2);
  1185  0646  305E               	movlw	(low (_val2| 0))& (0+255)
  1186  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0649  00A3               	movwf	??_main^(0+128)
  1189  064A  0823               	movf	??_main^(0+128),w
  1190  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1191  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1192  064D  00C4               	movwf	CONVdec@equiv
  1193  064E  306D               	movlw	(low (_pot2| 0))& (0+255)
  1194  064F  120A  158A  23D4  120A  118A  	fcall	_CONVdec
  1195  0654                     l3064:
  1196                           
  1197                           ;main.c: 88:         sendfloat(val2);
  1198  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0656  0861               	movf	_val2+3,w
  1201  0657  00D0               	movwf	sendfloat@valor+3
  1202  0658  0860               	movf	_val2+2,w
  1203  0659  00CF               	movwf	sendfloat@valor+2
  1204  065A  085F               	movf	_val2+1,w
  1205  065B  00CE               	movwf	sendfloat@valor+1
  1206  065C  085E               	movf	_val2,w
  1207  065D  00CD               	movwf	sendfloat@valor
  1208  065E  120A  158A  269B  120A  118A  	fcall	_sendfloat
  1209  0663                     l3066:
  1210                           
  1211                           ;main.c: 89:         sendString("\nUART: \n");
  1212  0663  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1213  0664  120A  158A  22AF  120A  118A  	fcall	_sendString
  1214  0669                     l3068:
  1215                           
  1216                           ;main.c: 90:         sendhex(&UARTval);
  1217  0669  306C               	movlw	(low (_UARTval| 0))& (0+255)
  1218  066A  120A  158A  236A  120A  118A  	fcall	_sendhex
  1219  066F                     l3070:
  1220                           
  1221                           ;main.c: 91:         sendString("\n\n\n\n\n");
  1222  066F  302B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1223  0670  120A  158A  22AF  120A  118A  	fcall	_sendString
  1224  0675                     l3072:
  1225                           
  1226                           ;main.c: 93:         floTochar(val1,&disp1);
  1227  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0677  0865               	movf	_val1+3,w
  1230  0678  00D0               	movwf	floTochar@valor+3
  1231  0679  0864               	movf	_val1+2,w
  1232  067A  00CF               	movwf	floTochar@valor+2
  1233  067B  0863               	movf	_val1+1,w
  1234  067C  00CE               	movwf	floTochar@valor+1
  1235  067D  0862               	movf	_val1,w
  1236  067E  00CD               	movwf	floTochar@valor
  1237  067F  3069               	movlw	(low (_disp1| 0))& (0+255)
  1238  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0682  00A3               	movwf	??_main^(0+128)
  1241  0683  0823               	movf	??_main^(0+128),w
  1242  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0686  00D1               	movwf	floTochar@conv
  1245  0687  120A  118A  275A  120A  118A  	fcall	_floTochar
  1246  068C                     l3074:
  1247                           
  1248                           ;main.c: 94:         floTochar(val2,&disp2);
  1249  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1250  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1251  068E  0861               	movf	_val2+3,w
  1252  068F  00D0               	movwf	floTochar@valor+3
  1253  0690  0860               	movf	_val2+2,w
  1254  0691  00CF               	movwf	floTochar@valor+2
  1255  0692  085F               	movf	_val2+1,w
  1256  0693  00CE               	movwf	floTochar@valor+1
  1257  0694  085E               	movf	_val2,w
  1258  0695  00CD               	movwf	floTochar@valor
  1259  0696  3066               	movlw	(low (_disp2| 0))& (0+255)
  1260  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0699  00A3               	movwf	??_main^(0+128)
  1263  069A  0823               	movf	??_main^(0+128),w
  1264  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  069D  00D1               	movwf	floTochar@conv
  1267  069E  120A  118A  275A  120A  118A  	fcall	_floTochar
  1268  06A3                     l3076:
  1269                           
  1270                           ;main.c: 95:         hexTochar(UARTval,&disp3);
  1271  06A3  30A0               	movlw	(low (_disp3| 0))& (0+255)
  1272  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1273  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1274  06A6  00A3               	movwf	??_main^(0+128)
  1275  06A7  0823               	movf	??_main^(0+128),w
  1276  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1277  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1278  06AA  00AA               	movwf	hexTochar@conv
  1279  06AB  086C               	movf	_UARTval,w
  1280  06AC  120A  158A  233E  120A  118A  	fcall	_hexTochar
  1281  06B1                     l3078:
  1282                           
  1283                           ;main.c: 97:         cursorLCD(1,1);
  1284  06B1  01F6               	clrf	cursorLCD@columna
  1285  06B2  0AF6               	incf	cursorLCD@columna,f
  1286  06B3  3001               	movlw	1
  1287  06B4  120A  158A  22CE  120A  118A  	fcall	_cursorLCD
  1288                           
  1289                           ;main.c: 98:         LCDstring("S1:   S2:   S3:");
  1290  06B9  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1291  06BA  120A  158A  2290  120A  118A  	fcall	_LCDstring
  1292  06BF                     l3080:
  1293                           
  1294                           ;main.c: 99:         cursorLCD(2,1);
  1295  06BF  01F6               	clrf	cursorLCD@columna
  1296  06C0  0AF6               	incf	cursorLCD@columna,f
  1297  06C1  3002               	movlw	2
  1298  06C2  120A  158A  22CE  120A  118A  	fcall	_cursorLCD
  1299  06C7                     l3082:
  1300                           
  1301                           ;main.c: 100:         dispCHAR(disp1[0]+48);
  1302  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1303  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1304  06C9  0869               	movf	_disp1,w
  1305  06CA  3E30               	addlw	48
  1306  06CB  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1307  06D0                     l3084:
  1308                           
  1309                           ;main.c: 101:         dispCHAR('.');
  1310  06D0  302E               	movlw	46
  1311  06D1  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1312  06D6                     l3086:
  1313                           
  1314                           ;main.c: 102:         dispCHAR(disp1[1]+48);
  1315  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1316  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1317  06D8  086A               	movf	_disp1+1,w
  1318  06D9  3E30               	addlw	48
  1319  06DA  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1320  06DF                     l3088:
  1321                           
  1322                           ;main.c: 103:         dispCHAR(disp1[2]+48);
  1323  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1324  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1325  06E1  086B               	movf	_disp1+2,w
  1326  06E2  3E30               	addlw	48
  1327  06E3  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1328  06E8                     l3090:
  1329                           
  1330                           ;main.c: 104:         dispCHAR('V');
  1331  06E8  3056               	movlw	86
  1332  06E9  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1333  06EE                     l3092:
  1334                           
  1335                           ;main.c: 105:         cursorLCD(2,7);
  1336  06EE  3007               	movlw	7
  1337  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  1338  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  1339  06F1  00A3               	movwf	??_main^(0+128)
  1340  06F2  0823               	movf	??_main^(0+128),w
  1341  06F3  00F6               	movwf	cursorLCD@columna
  1342  06F4  3002               	movlw	2
  1343  06F5  120A  158A  22CE  120A  118A  	fcall	_cursorLCD
  1344  06FA                     l3094:
  1345                           
  1346                           ;main.c: 106:         dispCHAR(disp2[0]+48);
  1347  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1348  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1349  06FC  0866               	movf	_disp2,w
  1350  06FD  3E30               	addlw	48
  1351  06FE  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1352  0703                     l3096:
  1353                           
  1354                           ;main.c: 107:         dispCHAR('.');
  1355  0703  302E               	movlw	46
  1356  0704  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1357  0709                     l3098:
  1358                           
  1359                           ;main.c: 108:         dispCHAR(disp2[1]+48);
  1360  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1361  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1362  070B  0867               	movf	_disp2+1,w
  1363  070C  3E30               	addlw	48
  1364  070D  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1365  0712                     l3100:
  1366                           
  1367                           ;main.c: 109:         dispCHAR(disp2[2]+48);
  1368  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0714  0868               	movf	_disp2+2,w
  1371  0715  3E30               	addlw	48
  1372  0716  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1373  071B                     l3102:
  1374                           
  1375                           ;main.c: 110:         dispCHAR('V');
  1376  071B  3056               	movlw	86
  1377  071C  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1378  0721                     l3104:
  1379                           
  1380                           ;main.c: 111:         cursorLCD(2,13);
  1381  0721  300D               	movlw	13
  1382  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0724  00A3               	movwf	??_main^(0+128)
  1385  0725  0823               	movf	??_main^(0+128),w
  1386  0726  00F6               	movwf	cursorLCD@columna
  1387  0727  3002               	movlw	2
  1388  0728  120A  158A  22CE  120A  118A  	fcall	_cursorLCD
  1389  072D                     l3106:
  1390                           
  1391                           ;main.c: 112:         dispCHAR(disp3[2]+48);
  1392  072D  1683               	bsf	3,5	;RP0=1, select bank1
  1393  072E  1303               	bcf	3,6	;RP1=0, select bank1
  1394  072F  0822               	movf	(_disp3^(0+128)+2),w
  1395  0730  3E30               	addlw	48
  1396  0731  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1397  0736                     l3108:
  1398                           
  1399                           ;main.c: 113:         dispCHAR(disp3[1]+48);
  1400  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0738  0821               	movf	(_disp3^(0+128)+1),w
  1403  0739  3E30               	addlw	48
  1404  073A  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1405  073F                     l3110:
  1406                           
  1407                           ;main.c: 114:         dispCHAR(disp3[0]+48);
  1408  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0741  0820               	movf	_disp3^(0+128),w
  1411  0742  3E30               	addlw	48
  1412  0743  120A  158A  2245  120A  118A  	fcall	_dispCHAR
  1413  0748                     l3112:
  1414                           
  1415                           ;main.c: 115:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1416  0748  3003               	movlw	3
  1417  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1418  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1419  074B  00A5               	movwf	(??_main^(0+128)+2)
  1420  074C  308A               	movlw	138
  1421  074D  00A4               	movwf	(??_main^(0+128)+1)
  1422  074E  3055               	movlw	85
  1423  074F  00A3               	movwf	??_main^(0+128)
  1424  0750                     u4057:
  1425  0750  0BA3               	decfsz	??_main^(0+128),f
  1426  0751  2F50               	goto	u4057
  1427  0752  0BA4               	decfsz	(??_main^(0+128)+1),f
  1428  0753  2F50               	goto	u4057
  1429  0754  0BA5               	decfsz	(??_main^(0+128)+2),f
  1430  0755  2F50               	goto	u4057
  1431  0756  2E1D               	goto	l3054
  1432  0757  120A  118A  280C   	ljmp	start
  1433  075A                     __end_of_main:
  1434                           
  1435                           	psect	text1
  1436  0B6A                     __ptext1:	
  1437 ;; *************** function _sendhex *****************
  1438 ;; Defined at:
  1439 ;;		line 81 in file "ComSerial.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  valor           1    wreg     PTR unsigned char 
  1442 ;;		 -> UARTval(1), 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  valor           1   13[BANK0 ] PTR unsigned char 
  1445 ;;		 -> UARTval(1), 
  1446 ;;  decena          1   16[BANK0 ] unsigned char 
  1447 ;;  centena         1   15[BANK0 ] unsigned char 
  1448 ;;  unidad          1   14[BANK0 ] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       4       0       0       0
  1460 ;;      Temps:          0       3       0       0       0
  1461 ;;      Totals:         0       7       0       0       0
  1462 ;;Total ram usage:        7 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    3
  1465 ;; This function calls:
  1466 ;;		_divisiondecimal
  1467 ;;		_send1dato
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _sendhex
  1475  0B6A                     _sendhex:
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1479                           ;sendhex@valor stored from wreg
  1480  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0B6C  00AD               	movwf	sendhex@valor
  1483  0B6D                     l3022:
  1484                           
  1485                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(*valor,&unidad,&decena,&ce
      +                          ntena);
  1486  0B6D  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
  1487  0B6E  00AA               	movwf	??_sendhex
  1488  0B6F  082A               	movf	??_sendhex,w
  1489  0B70  00A4               	movwf	divisiondecimal@un
  1490  0B71  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
  1491  0B72  00AB               	movwf	??_sendhex+1
  1492  0B73  082B               	movf	??_sendhex+1,w
  1493  0B74  00A5               	movwf	divisiondecimal@dec
  1494  0B75  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
  1495  0B76  00AC               	movwf	??_sendhex+2
  1496  0B77  082C               	movf	??_sendhex+2,w
  1497  0B78  00A6               	movwf	divisiondecimal@cent
  1498  0B79  082D               	movf	sendhex@valor,w
  1499  0B7A  0084               	movwf	4
  1500  0B7B  1383               	bcf	3,7	;select IRP bank0
  1501  0B7C  0800               	movf	0,w
  1502  0B7D  120A  158A  261E  120A  158A  	fcall	_divisiondecimal
  1503  0B82                     l3024:
  1504                           
  1505                           ;ComSerial.c: 87:     send1dato(centena +48);
  1506  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0B84  082F               	movf	sendhex@centena,w
  1509  0B85  3E30               	addlw	48
  1510  0B86  120A  158A  2239  120A  158A  	fcall	_send1dato
  1511  0B8B                     l3026:
  1512                           
  1513                           ;ComSerial.c: 88:     send1dato(decena +48);
  1514  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0B8D  0830               	movf	sendhex@decena,w
  1517  0B8E  3E30               	addlw	48
  1518  0B8F  120A  158A  2239  120A  158A  	fcall	_send1dato
  1519  0B94                     l3028:
  1520                           
  1521                           ;ComSerial.c: 89:     send1dato(unidad +48);
  1522  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0B96  082E               	movf	sendhex@unidad,w
  1525  0B97  3E30               	addlw	48
  1526  0B98  120A  158A  2239  120A  158A  	fcall	_send1dato
  1527  0B9D                     l169:
  1528  0B9D  0008               	return
  1529  0B9E                     __end_of_sendhex:
  1530                           
  1531                           	psect	text2
  1532  0E9B                     __ptext2:	
  1533 ;; *************** function _sendfloat *****************
  1534 ;; Defined at:
  1535 ;;		line 39 in file "ComSerial.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  valor           4   45[BANK0 ] const float 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  temp            4   53[BANK0 ] float 
  1540 ;;  digdecimal      1   59[BANK0 ] unsigned char [1]
  1541 ;;  entero          1   58[BANK0 ] unsigned char 
  1542 ;;  decimal         1   57[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         0       4       0       0       0
  1553 ;;      Locals:         0       7       0       0       0
  1554 ;;      Temps:          0       4       0       0       0
  1555 ;;      Totals:         0      15       0       0       0
  1556 ;;Total ram usage:       15 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		___flmul
  1561 ;;		___flsub
  1562 ;;		___fltol
  1563 ;;		___xxtofl
  1564 ;;		_division
  1565 ;;		_send1dato
  1566 ;;		_sendString
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _sendfloat
  1574  0E9B                     _sendfloat:
  1575  0E9B                     l3008:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _sendfloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1578                           
  1579                           
  1580                           ;ComSerial.c: 40:     uint8_t entero;;ComSerial.c: 41:     uint8_t decimal;;ComSerial.c:
      +                           42:     float temp;;ComSerial.c: 43:     unsigned char digdecimal[1];;ComSerial.c: 49: 
      +                              entero = valor;
  1581  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0E9D  0850               	movf	sendfloat@valor+3,w
  1584  0E9E  00C7               	movwf	___fltol@f1+3
  1585  0E9F  084F               	movf	sendfloat@valor+2,w
  1586  0EA0  00C6               	movwf	___fltol@f1+2
  1587  0EA1  084E               	movf	sendfloat@valor+1,w
  1588  0EA2  00C5               	movwf	___fltol@f1+1
  1589  0EA3  084D               	movf	sendfloat@valor,w
  1590  0EA4  00C4               	movwf	___fltol@f1
  1591  0EA5  120A  158A  25A2  120A  158A  	fcall	___fltol
  1592  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0EAC  0844               	movf	?___fltol,w
  1595  0EAD  00D1               	movwf	??_sendfloat
  1596  0EAE  0851               	movf	??_sendfloat,w
  1597  0EAF  00DA               	movwf	sendfloat@entero
  1598  0EB0                     l3010:
  1599                           
  1600                           ;ComSerial.c: 50:     temp = valor-(float)entero;
  1601  0EB0  085A               	movf	sendfloat@entero,w
  1602  0EB1  00D1               	movwf	??_sendfloat
  1603  0EB2  01D2               	clrf	??_sendfloat+1
  1604  0EB3  01D3               	clrf	??_sendfloat+2
  1605  0EB4  01D4               	clrf	??_sendfloat+3
  1606  0EB5  0854               	movf	??_sendfloat+3,w
  1607  0EB6  00F6               	movwf	___xxtofl@val+3
  1608  0EB7  0853               	movf	??_sendfloat+2,w
  1609  0EB8  00F5               	movwf	___xxtofl@val+2
  1610  0EB9  0852               	movf	??_sendfloat+1,w
  1611  0EBA  00F4               	movwf	___xxtofl@val+1
  1612  0EBB  0851               	movf	??_sendfloat,w
  1613  0EBC  00F3               	movwf	___xxtofl@val
  1614  0EBD  3000               	movlw	0
  1615  0EBE  120A  158A  2744  120A  158A  	fcall	___xxtofl
  1616  0EC3  0876               	movf	?___xxtofl+3,w
  1617  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0EC6  00B3               	movwf	___flsub@a+3
  1620  0EC7  0875               	movf	?___xxtofl+2,w
  1621  0EC8  00B2               	movwf	___flsub@a+2
  1622  0EC9  0874               	movf	?___xxtofl+1,w
  1623  0ECA  00B1               	movwf	___flsub@a+1
  1624  0ECB  0873               	movf	?___xxtofl,w
  1625  0ECC  00B0               	movwf	___flsub@a
  1626  0ECD  0850               	movf	sendfloat@valor+3,w
  1627  0ECE  00B7               	movwf	___flsub@b+3
  1628  0ECF  084F               	movf	sendfloat@valor+2,w
  1629  0ED0  00B6               	movwf	___flsub@b+2
  1630  0ED1  084E               	movf	sendfloat@valor+1,w
  1631  0ED2  00B5               	movwf	___flsub@b+1
  1632  0ED3  084D               	movf	sendfloat@valor,w
  1633  0ED4  00B4               	movwf	___flsub@b
  1634  0ED5  120A  158A  22F1  120A  158A  	fcall	___flsub
  1635  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0EDC  0833               	movf	?___flsub+3,w
  1638  0EDD  00D8               	movwf	sendfloat@temp+3
  1639  0EDE  0832               	movf	?___flsub+2,w
  1640  0EDF  00D7               	movwf	sendfloat@temp+2
  1641  0EE0  0831               	movf	?___flsub+1,w
  1642  0EE1  00D6               	movwf	sendfloat@temp+1
  1643  0EE2  0830               	movf	?___flsub,w
  1644  0EE3  00D5               	movwf	sendfloat@temp
  1645  0EE4                     l3012:
  1646                           
  1647                           ;ComSerial.c: 51:     decimal = (temp*100);
  1648  0EE4  0858               	movf	sendfloat@temp+3,w
  1649  0EE5  00B1               	movwf	___flmul@a+3
  1650  0EE6  0857               	movf	sendfloat@temp+2,w
  1651  0EE7  00B0               	movwf	___flmul@a+2
  1652  0EE8  0856               	movf	sendfloat@temp+1,w
  1653  0EE9  00AF               	movwf	___flmul@a+1
  1654  0EEA  0855               	movf	sendfloat@temp,w
  1655  0EEB  00AE               	movwf	___flmul@a
  1656  0EEC  3042               	movlw	66
  1657  0EED  00AD               	movwf	___flmul@b+3
  1658  0EEE  30C8               	movlw	200
  1659  0EEF  00AC               	movwf	___flmul@b+2
  1660  0EF0  3000               	movlw	0
  1661  0EF1  00AB               	movwf	___flmul@b+1
  1662  0EF2  3000               	movlw	0
  1663  0EF3  00AA               	movwf	___flmul@b
  1664  0EF4  120A  118A  2022  120A  158A  	fcall	___flmul
  1665  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0EFB  082D               	movf	?___flmul+3,w
  1668  0EFC  00C7               	movwf	___fltol@f1+3
  1669  0EFD  082C               	movf	?___flmul+2,w
  1670  0EFE  00C6               	movwf	___fltol@f1+2
  1671  0EFF  082B               	movf	?___flmul+1,w
  1672  0F00  00C5               	movwf	___fltol@f1+1
  1673  0F01  082A               	movf	?___flmul,w
  1674  0F02  00C4               	movwf	___fltol@f1
  1675  0F03  120A  158A  25A2  120A  158A  	fcall	___fltol
  1676  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0F0A  0844               	movf	?___fltol,w
  1679  0F0B  00D1               	movwf	??_sendfloat
  1680  0F0C  0851               	movf	??_sendfloat,w
  1681  0F0D  00D9               	movwf	sendfloat@decimal
  1682  0F0E                     l3014:
  1683                           
  1684                           ;ComSerial.c: 52:     division(decimal,&digdecimal[0],&digdecimal[1]);
  1685  0F0E  305B               	movlw	(low (sendfloat@digdecimal| 0))& (0+255)
  1686  0F0F  00D1               	movwf	??_sendfloat
  1687  0F10  0851               	movf	??_sendfloat,w
  1688  0F11  00F8               	movwf	division@un
  1689  0F12  305C               	movlw	(low ((sendfloat@digdecimal| 0+1)))& (0+255)
  1690  0F13  00D2               	movwf	??_sendfloat+1
  1691  0F14  0852               	movf	??_sendfloat+1,w
  1692  0F15  00F9               	movwf	division@dec
  1693  0F16  0859               	movf	sendfloat@decimal,w
  1694  0F17  120A  158A  245A  120A  158A  	fcall	_division
  1695  0F1C                     l3016:
  1696                           
  1697                           ;ComSerial.c: 53:     send1dato(entero+48);
  1698  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0F1E  085A               	movf	sendfloat@entero,w
  1701  0F1F  3E30               	addlw	48
  1702  0F20  120A  158A  2239  120A  158A  	fcall	_send1dato
  1703                           
  1704                           ;ComSerial.c: 54:     sendString(".");
  1705  0F25  3033               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1706  0F26  120A  158A  22AF  120A  158A  	fcall	_sendString
  1707  0F2B                     l3018:
  1708                           
  1709                           ;ComSerial.c: 55:     send1dato(digdecimal[1]+48);
  1710  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0F2D  085C               	movf	sendfloat@digdecimal+1,w
  1713  0F2E  3E30               	addlw	48
  1714  0F2F  120A  158A  2239  120A  158A  	fcall	_send1dato
  1715  0F34                     l3020:
  1716                           
  1717                           ;ComSerial.c: 56:     send1dato(digdecimal[0]+48);
  1718  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0F36  085B               	movf	sendfloat@digdecimal,w
  1721  0F37  3E30               	addlw	48
  1722  0F38  120A  158A  2239  120A  158A  	fcall	_send1dato
  1723                           
  1724                           ;ComSerial.c: 57:     sendString("\r");
  1725  0F3D  3031               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1726  0F3E  120A  158A  22AF  120A  158A  	fcall	_sendString
  1727  0F43                     l163:
  1728  0F43  0008               	return
  1729  0F44                     __end_of_sendfloat:
  1730                           
  1731                           	psect	text3
  1732  0AAF                     __ptext3:	
  1733 ;; *************** function _sendString *****************
  1734 ;; Defined at:
  1735 ;;		line 31 in file "ComSerial.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  mensaje         1    wreg     PTR unsigned char 
  1738 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(9), 
  1739 ;;		 -> STR_2(9), STR_1(8), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  mensaje         1    5[COMMON] PTR unsigned char 
  1742 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(9), 
  1743 ;;		 -> STR_2(9), STR_1(8), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         1       0       0       0       0
  1755 ;;      Temps:          1       0       0       0       0
  1756 ;;      Totals:         2       0       0       0       0
  1757 ;;Total ram usage:        2 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		_send1dato
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;;		_sendfloat
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           
  1769                           ;psect for function _sendString
  1770  0AAF                     _sendString:
  1771                           
  1772                           ;incstack = 0
  1773                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1774                           ;sendString@mensaje stored from wreg
  1775  0AAF  00F5               	movwf	sendString@mensaje
  1776  0AB0                     l1918:
  1777                           
  1778                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1779  0AB0  2AC1               	goto	l1924
  1780  0AB1                     l1920:
  1781                           
  1782                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1783  0AB1  0875               	movf	sendString@mensaje,w
  1784  0AB2  0084               	movwf	4
  1785  0AB3  120A  158A  2000  120A  158A  	fcall	stringdir
  1786  0AB8  120A  158A  2239  120A  158A  	fcall	_send1dato
  1787  0ABD                     l1922:
  1788                           
  1789                           ;ComSerial.c: 34:         mensaje ++;
  1790  0ABD  3001               	movlw	1
  1791  0ABE  00F4               	movwf	??_sendString
  1792  0ABF  0874               	movf	??_sendString,w
  1793  0AC0  07F5               	addwf	sendString@mensaje,f
  1794  0AC1                     l1924:
  1795                           
  1796                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1797  0AC1  0875               	movf	sendString@mensaje,w
  1798  0AC2  0084               	movwf	4
  1799  0AC3  120A  158A  2000  120A  158A  	fcall	stringdir
  1800  0AC8  3A00               	xorlw	0
  1801  0AC9  1D03               	skipz
  1802  0ACA  2ACC               	goto	u2031
  1803  0ACB  2ACD               	goto	u2030
  1804  0ACC                     u2031:
  1805  0ACC  2AB1               	goto	l1920
  1806  0ACD                     u2030:
  1807  0ACD                     l160:
  1808  0ACD  0008               	return
  1809  0ACE                     __end_of_sendString:
  1810                           
  1811                           	psect	text4
  1812  0A39                     __ptext4:	
  1813 ;; *************** function _send1dato *****************
  1814 ;; Defined at:
  1815 ;;		line 26 in file "ComSerial.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  dato            1    wreg     unsigned char 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  dato            1    3[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         1       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0
  1832 ;;      Totals:         1       0       0       0       0
  1833 ;;Total ram usage:        1 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_sendString
  1840 ;;		_sendfloat
  1841 ;;		_sendhex
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _send1dato
  1847  0A39                     _send1dato:
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _send1dato: [wreg]
  1851                           ;send1dato@dato stored from wreg
  1852  0A39  00F3               	movwf	send1dato@dato
  1853  0A3A                     l1650:
  1854                           
  1855                           ;ComSerial.c: 27:     TXREG = dato;
  1856  0A3A  0873               	movf	send1dato@dato,w
  1857  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0A3D  0099               	movwf	25	;volatile
  1860  0A3E                     l151:	
  1861                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1862                           
  1863  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0A40  1C98               	btfss	24,1	;volatile
  1866  0A41  2A43               	goto	u1411
  1867  0A42  2A44               	goto	u1410
  1868  0A43                     u1411:
  1869  0A43  2A3E               	goto	l151
  1870  0A44                     u1410:
  1871  0A44                     l154:
  1872  0A44  0008               	return
  1873  0A45                     __end_of_send1dato:
  1874                           
  1875                           	psect	text5
  1876  0CA2                     __ptext5:	
  1877 ;; *************** function _initLCD *****************
  1878 ;; Defined at:
  1879 ;;		line 20 in file "LCDD2.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          2       0       0       0       0
  1896 ;;      Totals:         2       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		_comandoLCD
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _initLCD
  1909  0CA2                     _initLCD:
  1910  0CA2                     l2280:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1913                           
  1914                           
  1915                           ;LCDD2.c: 21:     RC0 = 0;
  1916  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0CA4  1007               	bcf	7,0	;volatile
  1919  0CA5                     l2282:
  1920                           
  1921                           ;LCDD2.c: 22:     PORTD = 0X00;
  1922  0CA5  0188               	clrf	8	;volatile
  1923  0CA6                     l2284:
  1924                           
  1925                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1926  0CA6  3082               	movlw	130
  1927  0CA7  00F7               	movwf	??_initLCD+1
  1928  0CA8  30DD               	movlw	221
  1929  0CA9  00F6               	movwf	??_initLCD
  1930  0CAA                     u4067:
  1931  0CAA  0BF6               	decfsz	??_initLCD,f
  1932  0CAB  2CAA               	goto	u4067
  1933  0CAC  0BF7               	decfsz	??_initLCD+1,f
  1934  0CAD  2CAA               	goto	u4067
  1935  0CAE  2CAF               	nop2
  1936  0CAF                     l2286:
  1937                           
  1938                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1939  0CAF  3030               	movlw	48
  1940  0CB0  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1941  0CB5                     l2288:
  1942                           
  1943                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1944  0CB5  300D               	movlw	13
  1945  0CB6  00F7               	movwf	??_initLCD+1
  1946  0CB7  30FB               	movlw	251
  1947  0CB8  00F6               	movwf	??_initLCD
  1948  0CB9                     u4077:
  1949  0CB9  0BF6               	decfsz	??_initLCD,f
  1950  0CBA  2CB9               	goto	u4077
  1951  0CBB  0BF7               	decfsz	??_initLCD+1,f
  1952  0CBC  2CB9               	goto	u4077
  1953  0CBD  2CBE               	nop2
  1954  0CBE                     l2290:
  1955                           
  1956                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1957  0CBE  3030               	movlw	48
  1958  0CBF  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1959  0CC4                     l2292:
  1960                           
  1961                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1962  0CC4  300D               	movlw	13
  1963  0CC5  00F7               	movwf	??_initLCD+1
  1964  0CC6  30FB               	movlw	251
  1965  0CC7  00F6               	movwf	??_initLCD
  1966  0CC8                     u4087:
  1967  0CC8  0BF6               	decfsz	??_initLCD,f
  1968  0CC9  2CC8               	goto	u4087
  1969  0CCA  0BF7               	decfsz	??_initLCD+1,f
  1970  0CCB  2CC8               	goto	u4087
  1971  0CCC  2CCD               	nop2
  1972  0CCD                     l2294:
  1973                           
  1974                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1975  0CCD  3030               	movlw	48
  1976  0CCE  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1977  0CD3                     l2296:
  1978                           
  1979                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1980  0CD3  3038               	movlw	56
  1981  0CD4  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1982  0CD9                     l2298:
  1983                           
  1984                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1985  0CD9  3006               	movlw	6
  1986  0CDA  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1987  0CDF                     l2300:
  1988                           
  1989                           ;LCDD2.c: 31:     comandoLCD(0X0C);
  1990  0CDF  300C               	movlw	12
  1991  0CE0  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1992  0CE5                     l2302:
  1993                           
  1994                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1995  0CE5  3001               	movlw	1
  1996  0CE6  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  1997  0CEB                     l200:
  1998  0CEB  0008               	return
  1999  0CEC                     __end_of_initLCD:
  2000                           
  2001                           	psect	text6
  2002  0B3E                     __ptext6:	
  2003 ;; *************** function _hexTochar *****************
  2004 ;; Defined at:
  2005 ;;		line 92 in file "ComSerial.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  valor           1    wreg     unsigned char 
  2008 ;;  conv            1   10[BANK0 ] PTR unsigned char 
  2009 ;;		 -> disp3(3), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  valor           1   14[BANK0 ] unsigned char 
  2012 ;;  decena          1   17[BANK0 ] unsigned char 
  2013 ;;  centena         1   16[BANK0 ] unsigned char 
  2014 ;;  unidad          1   15[BANK0 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       1       0       0       0
  2025 ;;      Locals:         0       4       0       0       0
  2026 ;;      Temps:          0       3       0       0       0
  2027 ;;      Totals:         0       8       0       0       0
  2028 ;;Total ram usage:        8 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    3
  2031 ;; This function calls:
  2032 ;;		_divisiondecimal
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _hexTochar
  2040  0B3E                     _hexTochar:
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _hexTochar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2044                           ;hexTochar@valor stored from wreg
  2045  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0B40  00AE               	movwf	hexTochar@valor
  2048  0B41                     l3042:
  2049                           
  2050                           ;ComSerial.c: 93:     uint8_t centena;;ComSerial.c: 94:     uint8_t decena;;ComSerial.c:
      +                           95:     uint8_t unidad;;ComSerial.c: 97:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  2051  0B41  302F               	movlw	(low (hexTochar@unidad| 0))& (0+255)
  2052  0B42  00AB               	movwf	??_hexTochar
  2053  0B43  082B               	movf	??_hexTochar,w
  2054  0B44  00A4               	movwf	divisiondecimal@un
  2055  0B45  3031               	movlw	(low (hexTochar@decena| 0))& (0+255)
  2056  0B46  00AC               	movwf	??_hexTochar+1
  2057  0B47  082C               	movf	??_hexTochar+1,w
  2058  0B48  00A5               	movwf	divisiondecimal@dec
  2059  0B49  3030               	movlw	(low (hexTochar@centena| 0))& (0+255)
  2060  0B4A  00AD               	movwf	??_hexTochar+2
  2061  0B4B  082D               	movf	??_hexTochar+2,w
  2062  0B4C  00A6               	movwf	divisiondecimal@cent
  2063  0B4D  082E               	movf	hexTochar@valor,w
  2064  0B4E  120A  158A  261E  120A  158A  	fcall	_divisiondecimal
  2065  0B53                     l3044:
  2066                           
  2067                           ;ComSerial.c: 98:     conv[0]= unidad;
  2068  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0B55  082F               	movf	hexTochar@unidad,w
  2071  0B56  00AB               	movwf	??_hexTochar
  2072  0B57  082A               	movf	hexTochar@conv,w
  2073  0B58  0084               	movwf	4
  2074  0B59  082B               	movf	??_hexTochar,w
  2075  0B5A  1383               	bcf	3,7	;select IRP bank0
  2076  0B5B  0080               	movwf	0
  2077  0B5C                     l3046:
  2078                           
  2079                           ;ComSerial.c: 99:     conv[1]= decena;
  2080  0B5C  0831               	movf	hexTochar@decena,w
  2081  0B5D  00AB               	movwf	??_hexTochar
  2082  0B5E  0A2A               	incf	hexTochar@conv,w
  2083  0B5F  0084               	movwf	4
  2084  0B60  082B               	movf	??_hexTochar,w
  2085  0B61  0080               	movwf	0
  2086  0B62                     l3048:
  2087                           
  2088                           ;ComSerial.c: 100:     conv[2]= centena;
  2089  0B62  0830               	movf	hexTochar@centena,w
  2090  0B63  00AB               	movwf	??_hexTochar
  2091  0B64  082A               	movf	hexTochar@conv,w
  2092  0B65  3E02               	addlw	2
  2093  0B66  0084               	movwf	4
  2094  0B67  082B               	movf	??_hexTochar,w
  2095  0B68  0080               	movwf	0
  2096  0B69                     l172:
  2097  0B69  0008               	return
  2098  0B6A                     __end_of_hexTochar:
  2099                           
  2100                           	psect	text7
  2101  0E1E                     __ptext7:	
  2102 ;; *************** function _divisiondecimal *****************
  2103 ;; Defined at:
  2104 ;;		line 120 in file "ComSerial.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  conteo          1    wreg     unsigned char 
  2107 ;;  un              1    4[BANK0 ] PTR unsigned char 
  2108 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  2109 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  2110 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  2111 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  2112 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  conteo          1    8[COMMON] unsigned char 
  2115 ;;  div             1    9[COMMON] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       3       0       0       0
  2126 ;;      Locals:         2       0       0       0       0
  2127 ;;      Temps:          0       3       0       0       0
  2128 ;;      Totals:         2       6       0       0       0
  2129 ;;Total ram usage:        8 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    2
  2132 ;; This function calls:
  2133 ;;		___awdiv
  2134 ;;		___bmul
  2135 ;; This function is called by:
  2136 ;;		_sendhex
  2137 ;;		_hexTochar
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           
  2142                           ;psect for function _divisiondecimal
  2143  0E1E                     _divisiondecimal:
  2144                           
  2145                           ;incstack = 0
  2146                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2147                           ;divisiondecimal@conteo stored from wreg
  2148  0E1E  00F8               	movwf	divisiondecimal@conteo
  2149  0E1F                     l2762:
  2150                           
  2151                           ;ComSerial.c: 121:     uint8_t div = conteo;
  2152  0E1F  0878               	movf	divisiondecimal@conteo,w
  2153  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0E22  00A7               	movwf	??_divisiondecimal
  2156  0E23  0827               	movf	??_divisiondecimal,w
  2157  0E24  00F9               	movwf	divisiondecimal@div
  2158  0E25                     l2764:
  2159                           
  2160                           ;ComSerial.c: 122:     *un = 0;
  2161  0E25  0824               	movf	divisiondecimal@un,w
  2162  0E26  0084               	movwf	4
  2163  0E27  1383               	bcf	3,7	;select IRP bank0
  2164  0E28  0180               	clrf	0
  2165  0E29                     l2766:
  2166                           
  2167                           ;ComSerial.c: 123:     *dec = 0;
  2168  0E29  0825               	movf	divisiondecimal@dec,w
  2169  0E2A  0084               	movwf	4
  2170  0E2B  0180               	clrf	0
  2171  0E2C                     l2768:
  2172                           
  2173                           ;ComSerial.c: 124:     *cent = 0;
  2174  0E2C  0826               	movf	divisiondecimal@cent,w
  2175  0E2D  0084               	movwf	4
  2176  0E2E  0180               	clrf	0
  2177                           
  2178                           ;ComSerial.c: 127:     while(div >= 100){
  2179  0E2F  2E5B               	goto	l2772
  2180  0E30                     l2770:
  2181                           
  2182                           ;ComSerial.c: 128:     *cent = div/100;
  2183  0E30  3064               	movlw	100
  2184  0E31  00F3               	movwf	___awdiv@divisor
  2185  0E32  3000               	movlw	0
  2186  0E33  00F4               	movwf	___awdiv@divisor+1
  2187  0E34  0879               	movf	divisiondecimal@div,w
  2188  0E35  00A7               	movwf	??_divisiondecimal
  2189  0E36  01A8               	clrf	??_divisiondecimal+1
  2190  0E37  0827               	movf	??_divisiondecimal,w
  2191  0E38  00F5               	movwf	___awdiv@dividend
  2192  0E39  0828               	movf	??_divisiondecimal+1,w
  2193  0E3A  00F6               	movwf	___awdiv@dividend+1
  2194  0E3B  120A  158A  2539  120A  158A  	fcall	___awdiv
  2195  0E40  0873               	movf	?___awdiv,w
  2196  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0E43  00A9               	movwf	??_divisiondecimal+2
  2199  0E44  0826               	movf	divisiondecimal@cent,w
  2200  0E45  0084               	movwf	4
  2201  0E46  0829               	movf	??_divisiondecimal+2,w
  2202  0E47  1383               	bcf	3,7	;select IRP bank0
  2203  0E48  0080               	movwf	0
  2204                           
  2205                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  2206  0E49  309C               	movlw	156
  2207  0E4A  00A7               	movwf	??_divisiondecimal
  2208  0E4B  0827               	movf	??_divisiondecimal,w
  2209  0E4C  00F3               	movwf	___bmul@multiplicand
  2210  0E4D  0826               	movf	divisiondecimal@cent,w
  2211  0E4E  0084               	movwf	4
  2212  0E4F  0800               	movf	0,w
  2213  0E50  120A  158A  227B  120A  158A  	fcall	___bmul
  2214  0E55  0779               	addwf	divisiondecimal@div,w
  2215  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0E58  00A8               	movwf	??_divisiondecimal+1
  2218  0E59  0828               	movf	??_divisiondecimal+1,w
  2219  0E5A  00F9               	movwf	divisiondecimal@div
  2220  0E5B                     l2772:
  2221                           
  2222                           ;ComSerial.c: 127:     while(div >= 100){
  2223  0E5B  3064               	movlw	100
  2224  0E5C  0279               	subwf	divisiondecimal@div,w
  2225  0E5D  1803               	skipnc
  2226  0E5E  2E60               	goto	u3421
  2227  0E5F  2E61               	goto	u3420
  2228  0E60                     u3421:
  2229  0E60  2E30               	goto	l2770
  2230  0E61                     u3420:
  2231  0E61  2E8D               	goto	l2776
  2232  0E62                     l2774:
  2233                           
  2234                           ;ComSerial.c: 133:     *dec = div/10;
  2235  0E62  300A               	movlw	10
  2236  0E63  00F3               	movwf	___awdiv@divisor
  2237  0E64  3000               	movlw	0
  2238  0E65  00F4               	movwf	___awdiv@divisor+1
  2239  0E66  0879               	movf	divisiondecimal@div,w
  2240  0E67  00A7               	movwf	??_divisiondecimal
  2241  0E68  01A8               	clrf	??_divisiondecimal+1
  2242  0E69  0827               	movf	??_divisiondecimal,w
  2243  0E6A  00F5               	movwf	___awdiv@dividend
  2244  0E6B  0828               	movf	??_divisiondecimal+1,w
  2245  0E6C  00F6               	movwf	___awdiv@dividend+1
  2246  0E6D  120A  158A  2539  120A  158A  	fcall	___awdiv
  2247  0E72  0873               	movf	?___awdiv,w
  2248  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0E75  00A9               	movwf	??_divisiondecimal+2
  2251  0E76  0825               	movf	divisiondecimal@dec,w
  2252  0E77  0084               	movwf	4
  2253  0E78  0829               	movf	??_divisiondecimal+2,w
  2254  0E79  1383               	bcf	3,7	;select IRP bank0
  2255  0E7A  0080               	movwf	0
  2256                           
  2257                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  2258  0E7B  30F6               	movlw	246
  2259  0E7C  00A7               	movwf	??_divisiondecimal
  2260  0E7D  0827               	movf	??_divisiondecimal,w
  2261  0E7E  00F3               	movwf	___bmul@multiplicand
  2262  0E7F  0825               	movf	divisiondecimal@dec,w
  2263  0E80  0084               	movwf	4
  2264  0E81  0800               	movf	0,w
  2265  0E82  120A  158A  227B  120A  158A  	fcall	___bmul
  2266  0E87  0779               	addwf	divisiondecimal@div,w
  2267  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0E8A  00A8               	movwf	??_divisiondecimal+1
  2270  0E8B  0828               	movf	??_divisiondecimal+1,w
  2271  0E8C  00F9               	movwf	divisiondecimal@div
  2272  0E8D                     l2776:
  2273                           
  2274                           ;ComSerial.c: 132:     while (div >= 10){
  2275  0E8D  300A               	movlw	10
  2276  0E8E  0279               	subwf	divisiondecimal@div,w
  2277  0E8F  1803               	skipnc
  2278  0E90  2E92               	goto	u3431
  2279  0E91  2E93               	goto	u3430
  2280  0E92                     u3431:
  2281  0E92  2E62               	goto	l2774
  2282  0E93                     u3430:
  2283  0E93                     l2778:
  2284                           
  2285                           ;ComSerial.c: 137:     *un = div;
  2286  0E93  0879               	movf	divisiondecimal@div,w
  2287  0E94  00A7               	movwf	??_divisiondecimal
  2288  0E95  0824               	movf	divisiondecimal@un,w
  2289  0E96  0084               	movwf	4
  2290  0E97  0827               	movf	??_divisiondecimal,w
  2291  0E98  1383               	bcf	3,7	;select IRP bank0
  2292  0E99  0080               	movwf	0
  2293  0E9A                     l187:
  2294  0E9A  0008               	return
  2295  0E9B                     __end_of_divisiondecimal:
  2296                           
  2297                           	psect	text8
  2298  075A                     __ptext8:	
  2299 ;; *************** function _floTochar *****************
  2300 ;; Defined at:
  2301 ;;		line 61 in file "ComSerial.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  valor           4   45[BANK0 ] const float 
  2304 ;;  conv            1   49[BANK0 ] PTR unsigned char 
  2305 ;;		 -> disp2(3), disp1(3), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  temp            4   54[BANK0 ] float 
  2308 ;;  digdecimal      2   60[BANK0 ] unsigned char [2]
  2309 ;;  entero          1   59[BANK0 ] unsigned char 
  2310 ;;  decimal         1   58[BANK0 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       5       0       0       0
  2321 ;;      Locals:         0       8       0       0       0
  2322 ;;      Temps:          0       4       0       0       0
  2323 ;;      Totals:         0      17       0       0       0
  2324 ;;Total ram usage:       17 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    3
  2327 ;; This function calls:
  2328 ;;		___flmul
  2329 ;;		___flsub
  2330 ;;		___fltol
  2331 ;;		___xxtofl
  2332 ;;		_division
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _floTochar
  2340  075A                     _floTochar:
  2341  075A                     l3030:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _floTochar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2344                           
  2345                           
  2346                           ;ComSerial.c: 62:     uint8_t entero;;ComSerial.c: 63:     uint8_t decimal;;ComSerial.c:
      +                           64:     float temp;;ComSerial.c: 65:     unsigned char digdecimal[2];;ComSerial.c: 71: 
      +                              entero = valor;
  2347  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2348  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2349  075C  0850               	movf	floTochar@valor+3,w
  2350  075D  00C7               	movwf	___fltol@f1+3
  2351  075E  084F               	movf	floTochar@valor+2,w
  2352  075F  00C6               	movwf	___fltol@f1+2
  2353  0760  084E               	movf	floTochar@valor+1,w
  2354  0761  00C5               	movwf	___fltol@f1+1
  2355  0762  084D               	movf	floTochar@valor,w
  2356  0763  00C4               	movwf	___fltol@f1
  2357  0764  120A  158A  25A2  120A  118A  	fcall	___fltol
  2358  0769  1283               	bcf	3,5	;RP0=0, select bank0
  2359  076A  1303               	bcf	3,6	;RP1=0, select bank0
  2360  076B  0844               	movf	?___fltol,w
  2361  076C  00D2               	movwf	??_floTochar
  2362  076D  0852               	movf	??_floTochar,w
  2363  076E  00DB               	movwf	floTochar@entero
  2364  076F                     l3032:
  2365                           
  2366                           ;ComSerial.c: 72:     digdecimal[2] = entero;
  2367  076F  085B               	movf	floTochar@entero,w
  2368  0770  00D2               	movwf	??_floTochar
  2369  0771  0852               	movf	??_floTochar,w
  2370  0772  00DE               	movwf	floTochar@digdecimal+2
  2371  0773                     l3034:
  2372                           
  2373                           ;ComSerial.c: 73:     temp = valor-(float)entero;
  2374  0773  085B               	movf	floTochar@entero,w
  2375  0774  00D2               	movwf	??_floTochar
  2376  0775  01D3               	clrf	??_floTochar+1
  2377  0776  01D4               	clrf	??_floTochar+2
  2378  0777  01D5               	clrf	??_floTochar+3
  2379  0778  0855               	movf	??_floTochar+3,w
  2380  0779  00F6               	movwf	___xxtofl@val+3
  2381  077A  0854               	movf	??_floTochar+2,w
  2382  077B  00F5               	movwf	___xxtofl@val+2
  2383  077C  0853               	movf	??_floTochar+1,w
  2384  077D  00F4               	movwf	___xxtofl@val+1
  2385  077E  0852               	movf	??_floTochar,w
  2386  077F  00F3               	movwf	___xxtofl@val
  2387  0780  3000               	movlw	0
  2388  0781  120A  158A  2744  120A  118A  	fcall	___xxtofl
  2389  0786  0876               	movf	?___xxtofl+3,w
  2390  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0789  00B3               	movwf	___flsub@a+3
  2393  078A  0875               	movf	?___xxtofl+2,w
  2394  078B  00B2               	movwf	___flsub@a+2
  2395  078C  0874               	movf	?___xxtofl+1,w
  2396  078D  00B1               	movwf	___flsub@a+1
  2397  078E  0873               	movf	?___xxtofl,w
  2398  078F  00B0               	movwf	___flsub@a
  2399  0790  0850               	movf	floTochar@valor+3,w
  2400  0791  00B7               	movwf	___flsub@b+3
  2401  0792  084F               	movf	floTochar@valor+2,w
  2402  0793  00B6               	movwf	___flsub@b+2
  2403  0794  084E               	movf	floTochar@valor+1,w
  2404  0795  00B5               	movwf	___flsub@b+1
  2405  0796  084D               	movf	floTochar@valor,w
  2406  0797  00B4               	movwf	___flsub@b
  2407  0798  120A  158A  22F1  120A  118A  	fcall	___flsub
  2408  079D  1283               	bcf	3,5	;RP0=0, select bank0
  2409  079E  1303               	bcf	3,6	;RP1=0, select bank0
  2410  079F  0833               	movf	?___flsub+3,w
  2411  07A0  00D9               	movwf	floTochar@temp+3
  2412  07A1  0832               	movf	?___flsub+2,w
  2413  07A2  00D8               	movwf	floTochar@temp+2
  2414  07A3  0831               	movf	?___flsub+1,w
  2415  07A4  00D7               	movwf	floTochar@temp+1
  2416  07A5  0830               	movf	?___flsub,w
  2417  07A6  00D6               	movwf	floTochar@temp
  2418  07A7                     l3036:
  2419                           
  2420                           ;ComSerial.c: 74:     decimal = (temp*100);
  2421  07A7  0859               	movf	floTochar@temp+3,w
  2422  07A8  00B1               	movwf	___flmul@a+3
  2423  07A9  0858               	movf	floTochar@temp+2,w
  2424  07AA  00B0               	movwf	___flmul@a+2
  2425  07AB  0857               	movf	floTochar@temp+1,w
  2426  07AC  00AF               	movwf	___flmul@a+1
  2427  07AD  0856               	movf	floTochar@temp,w
  2428  07AE  00AE               	movwf	___flmul@a
  2429  07AF  3042               	movlw	66
  2430  07B0  00AD               	movwf	___flmul@b+3
  2431  07B1  30C8               	movlw	200
  2432  07B2  00AC               	movwf	___flmul@b+2
  2433  07B3  3000               	movlw	0
  2434  07B4  00AB               	movwf	___flmul@b+1
  2435  07B5  3000               	movlw	0
  2436  07B6  00AA               	movwf	___flmul@b
  2437  07B7  120A  118A  2022  120A  118A  	fcall	___flmul
  2438  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2439  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2440  07BE  082D               	movf	?___flmul+3,w
  2441  07BF  00C7               	movwf	___fltol@f1+3
  2442  07C0  082C               	movf	?___flmul+2,w
  2443  07C1  00C6               	movwf	___fltol@f1+2
  2444  07C2  082B               	movf	?___flmul+1,w
  2445  07C3  00C5               	movwf	___fltol@f1+1
  2446  07C4  082A               	movf	?___flmul,w
  2447  07C5  00C4               	movwf	___fltol@f1
  2448  07C6  120A  158A  25A2  120A  118A  	fcall	___fltol
  2449  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2450  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2451  07CD  0844               	movf	?___fltol,w
  2452  07CE  00D2               	movwf	??_floTochar
  2453  07CF  0852               	movf	??_floTochar,w
  2454  07D0  00DA               	movwf	floTochar@decimal
  2455  07D1                     l3038:
  2456                           
  2457                           ;ComSerial.c: 75:     division(decimal,&digdecimal[0],&digdecimal[1]);
  2458  07D1  305C               	movlw	(low (floTochar@digdecimal| 0))& (0+255)
  2459  07D2  00D2               	movwf	??_floTochar
  2460  07D3  0852               	movf	??_floTochar,w
  2461  07D4  00F8               	movwf	division@un
  2462  07D5  305D               	movlw	(low ((floTochar@digdecimal| 0+1)))& (0+255)
  2463  07D6  00D3               	movwf	??_floTochar+1
  2464  07D7  0853               	movf	??_floTochar+1,w
  2465  07D8  00F9               	movwf	division@dec
  2466  07D9  085A               	movf	floTochar@decimal,w
  2467  07DA  120A  158A  245A  120A  118A  	fcall	_division
  2468                           
  2469                           ;ComSerial.c: 76:     conv[0] = entero;
  2470  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2471  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2472  07E1  085B               	movf	floTochar@entero,w
  2473  07E2  00D2               	movwf	??_floTochar
  2474  07E3  0851               	movf	floTochar@conv,w
  2475  07E4  0084               	movwf	4
  2476  07E5  0852               	movf	??_floTochar,w
  2477  07E6  1383               	bcf	3,7	;select IRP bank0
  2478  07E7  0080               	movwf	0
  2479                           
  2480                           ;ComSerial.c: 77:     conv[1] = digdecimal[1];
  2481  07E8  085D               	movf	floTochar@digdecimal+1,w
  2482  07E9  00D2               	movwf	??_floTochar
  2483  07EA  0A51               	incf	floTochar@conv,w
  2484  07EB  0084               	movwf	4
  2485  07EC  0852               	movf	??_floTochar,w
  2486  07ED  0080               	movwf	0
  2487  07EE                     l3040:
  2488                           
  2489                           ;ComSerial.c: 78:     conv[2] = digdecimal[0];
  2490  07EE  085C               	movf	floTochar@digdecimal,w
  2491  07EF  00D2               	movwf	??_floTochar
  2492  07F0  0851               	movf	floTochar@conv,w
  2493  07F1  3E02               	addlw	2
  2494  07F2  0084               	movwf	4
  2495  07F3  0852               	movf	??_floTochar,w
  2496  07F4  0080               	movwf	0
  2497  07F5                     l166:
  2498  07F5  0008               	return
  2499  07F6                     __end_of_floTochar:
  2500                           
  2501                           	psect	text9
  2502  0C5A                     __ptext9:	
  2503 ;; *************** function _division *****************
  2504 ;; Defined at:
  2505 ;;		line 106 in file "ComSerial.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  conteo          1    wreg     unsigned char 
  2508 ;;  un              1    8[COMMON] PTR unsigned char 
  2509 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2510 ;;  dec             1    9[COMMON] PTR unsigned char 
  2511 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  conteo          1    7[BANK0 ] unsigned char 
  2514 ;;  div             1    8[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         2       0       0       0       0
  2525 ;;      Locals:         0       2       0       0       0
  2526 ;;      Temps:          0       3       0       0       0
  2527 ;;      Totals:         2       5       0       0       0
  2528 ;;Total ram usage:        7 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    2
  2531 ;; This function calls:
  2532 ;;		___awdiv
  2533 ;;		___bmul
  2534 ;; This function is called by:
  2535 ;;		_sendfloat
  2536 ;;		_floTochar
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _division
  2542  0C5A                     _division:
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2546                           ;division@conteo stored from wreg
  2547  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0C5C  00A7               	movwf	division@conteo
  2550  0C5D                     l2750:
  2551                           
  2552                           ;ComSerial.c: 107:     uint8_t div = conteo;
  2553  0C5D  0827               	movf	division@conteo,w
  2554  0C5E  00A4               	movwf	??_division
  2555  0C5F  0824               	movf	??_division,w
  2556  0C60  00A8               	movwf	division@div
  2557  0C61                     l2752:
  2558                           
  2559                           ;ComSerial.c: 108:     *un = 0;
  2560  0C61  0878               	movf	division@un,w
  2561  0C62  0084               	movwf	4
  2562  0C63  1383               	bcf	3,7	;select IRP bank0
  2563  0C64  0180               	clrf	0
  2564  0C65                     l2754:
  2565                           
  2566                           ;ComSerial.c: 109:     *dec = 0;
  2567  0C65  0879               	movf	division@dec,w
  2568  0C66  0084               	movwf	4
  2569  0C67  0180               	clrf	0
  2570                           
  2571                           ;ComSerial.c: 112:     while (div >= 10){
  2572  0C68  2C94               	goto	l2758
  2573  0C69                     l2756:
  2574                           
  2575                           ;ComSerial.c: 113:     *dec = div/10;
  2576  0C69  300A               	movlw	10
  2577  0C6A  00F3               	movwf	___awdiv@divisor
  2578  0C6B  3000               	movlw	0
  2579  0C6C  00F4               	movwf	___awdiv@divisor+1
  2580  0C6D  0828               	movf	division@div,w
  2581  0C6E  00A4               	movwf	??_division
  2582  0C6F  01A5               	clrf	??_division+1
  2583  0C70  0824               	movf	??_division,w
  2584  0C71  00F5               	movwf	___awdiv@dividend
  2585  0C72  0825               	movf	??_division+1,w
  2586  0C73  00F6               	movwf	___awdiv@dividend+1
  2587  0C74  120A  158A  2539  120A  158A  	fcall	___awdiv
  2588  0C79  0873               	movf	?___awdiv,w
  2589  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0C7C  00A6               	movwf	??_division+2
  2592  0C7D  0879               	movf	division@dec,w
  2593  0C7E  0084               	movwf	4
  2594  0C7F  0826               	movf	??_division+2,w
  2595  0C80  1383               	bcf	3,7	;select IRP bank0
  2596  0C81  0080               	movwf	0
  2597                           
  2598                           ;ComSerial.c: 114:     div = div - (*dec)*(10);
  2599  0C82  30F6               	movlw	246
  2600  0C83  00A4               	movwf	??_division
  2601  0C84  0824               	movf	??_division,w
  2602  0C85  00F3               	movwf	___bmul@multiplicand
  2603  0C86  0879               	movf	division@dec,w
  2604  0C87  0084               	movwf	4
  2605  0C88  0800               	movf	0,w
  2606  0C89  120A  158A  227B  120A  158A  	fcall	___bmul
  2607  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0C90  0728               	addwf	division@div,w
  2610  0C91  00A5               	movwf	??_division+1
  2611  0C92  0825               	movf	??_division+1,w
  2612  0C93  00A8               	movwf	division@div
  2613  0C94                     l2758:
  2614                           
  2615                           ;ComSerial.c: 112:     while (div >= 10){
  2616  0C94  300A               	movlw	10
  2617  0C95  0228               	subwf	division@div,w
  2618  0C96  1803               	skipnc
  2619  0C97  2C99               	goto	u3411
  2620  0C98  2C9A               	goto	u3410
  2621  0C99                     u3411:
  2622  0C99  2C69               	goto	l2756
  2623  0C9A                     u3410:
  2624  0C9A                     l2760:
  2625                           
  2626                           ;ComSerial.c: 117:     *un = div;
  2627  0C9A  0828               	movf	division@div,w
  2628  0C9B  00A4               	movwf	??_division
  2629  0C9C  0878               	movf	division@un,w
  2630  0C9D  0084               	movwf	4
  2631  0C9E  0824               	movf	??_division,w
  2632  0C9F  1383               	bcf	3,7	;select IRP bank0
  2633  0CA0  0080               	movwf	0
  2634  0CA1                     l178:
  2635  0CA1  0008               	return
  2636  0CA2                     __end_of_division:
  2637                           
  2638                           	psect	text10
  2639  0A7B                     __ptext10:	
  2640 ;; *************** function ___bmul *****************
  2641 ;; Defined at:
  2642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  multiplier      1    wreg     unsigned char 
  2645 ;;  multiplicand    1    3[COMMON] unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  multiplier      1    6[COMMON] unsigned char 
  2648 ;;  product         1    5[COMMON] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      unsigned char 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         1       0       0       0       0
  2659 ;;      Locals:         2       0       0       0       0
  2660 ;;      Temps:          1       0       0       0       0
  2661 ;;      Totals:         4       0       0       0       0
  2662 ;;Total ram usage:        4 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_division
  2669 ;;		_divisiondecimal
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function ___bmul
  2675  0A7B                     ___bmul:
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2679                           ;___bmul@multiplier stored from wreg
  2680  0A7B  00F6               	movwf	___bmul@multiplier
  2681  0A7C                     l2484:
  2682  0A7C  01F5               	clrf	___bmul@product
  2683  0A7D                     l2486:
  2684  0A7D  1C76               	btfss	___bmul@multiplier,0
  2685  0A7E  2A80               	goto	u2801
  2686  0A7F  2A81               	goto	u2800
  2687  0A80                     u2801:
  2688  0A80  2A85               	goto	l2490
  2689  0A81                     u2800:
  2690  0A81                     l2488:
  2691  0A81  0873               	movf	___bmul@multiplicand,w
  2692  0A82  00F4               	movwf	??___bmul
  2693  0A83  0874               	movf	??___bmul,w
  2694  0A84  07F5               	addwf	___bmul@product,f
  2695  0A85                     l2490:
  2696  0A85  1003               	clrc
  2697  0A86  0DF3               	rlf	___bmul@multiplicand,f
  2698  0A87                     l2492:
  2699  0A87  1003               	clrc
  2700  0A88  0CF6               	rrf	___bmul@multiplier,f
  2701  0A89  0876               	movf	___bmul@multiplier,w
  2702  0A8A  1D03               	btfss	3,2
  2703  0A8B  2A8D               	goto	u2811
  2704  0A8C  2A8E               	goto	u2810
  2705  0A8D                     u2811:
  2706  0A8D  2A7D               	goto	l2486
  2707  0A8E                     u2810:
  2708  0A8E                     l2494:
  2709  0A8E  0875               	movf	___bmul@product,w
  2710  0A8F                     l332:
  2711  0A8F  0008               	return
  2712  0A90                     __end_of___bmul:
  2713                           
  2714                           	psect	text11
  2715  0D39                     __ptext11:	
  2716 ;; *************** function ___awdiv *****************
  2717 ;; Defined at:
  2718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  divisor         2    3[COMMON] int 
  2721 ;;  dividend        2    5[COMMON] int 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  quotient        2    2[BANK0 ] int 
  2724 ;;  sign            1    1[BANK0 ] unsigned char 
  2725 ;;  counter         1    0[BANK0 ] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    3[COMMON] int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         4       0       0       0       0
  2736 ;;      Locals:         0       4       0       0       0
  2737 ;;      Temps:          1       0       0       0       0
  2738 ;;      Totals:         5       4       0       0       0
  2739 ;;Total ram usage:        9 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_division
  2746 ;;		_divisiondecimal
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function ___awdiv
  2752  0D39                     ___awdiv:
  2753  0D39                     l2498:	
  2754                           ;incstack = 0
  2755                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2756                           
  2757  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0D3B  01A1               	clrf	___awdiv@sign
  2760  0D3C                     l2500:
  2761  0D3C  1FF4               	btfss	___awdiv@divisor+1,7
  2762  0D3D  2D3F               	goto	u2821
  2763  0D3E  2D40               	goto	u2820
  2764  0D3F                     u2821:
  2765  0D3F  2D47               	goto	l2506
  2766  0D40                     u2820:
  2767  0D40                     l2502:
  2768  0D40  09F3               	comf	___awdiv@divisor,f
  2769  0D41  09F4               	comf	___awdiv@divisor+1,f
  2770  0D42  0AF3               	incf	___awdiv@divisor,f
  2771  0D43  1903               	skipnz
  2772  0D44  0AF4               	incf	___awdiv@divisor+1,f
  2773  0D45                     l2504:
  2774  0D45  01A1               	clrf	___awdiv@sign
  2775  0D46  0AA1               	incf	___awdiv@sign,f
  2776  0D47                     l2506:
  2777  0D47  1FF6               	btfss	___awdiv@dividend+1,7
  2778  0D48  2D4A               	goto	u2831
  2779  0D49  2D4B               	goto	u2830
  2780  0D4A                     u2831:
  2781  0D4A  2D54               	goto	l2512
  2782  0D4B                     u2830:
  2783  0D4B                     l2508:
  2784  0D4B  09F5               	comf	___awdiv@dividend,f
  2785  0D4C  09F6               	comf	___awdiv@dividend+1,f
  2786  0D4D  0AF5               	incf	___awdiv@dividend,f
  2787  0D4E  1903               	skipnz
  2788  0D4F  0AF6               	incf	___awdiv@dividend+1,f
  2789  0D50                     l2510:
  2790  0D50  3001               	movlw	1
  2791  0D51  00F7               	movwf	??___awdiv
  2792  0D52  0877               	movf	??___awdiv,w
  2793  0D53  06A1               	xorwf	___awdiv@sign,f
  2794  0D54                     l2512:
  2795  0D54  01A2               	clrf	___awdiv@quotient
  2796  0D55  01A3               	clrf	___awdiv@quotient+1
  2797  0D56                     l2514:
  2798  0D56  0873               	movf	___awdiv@divisor,w
  2799  0D57  0474               	iorwf	___awdiv@divisor+1,w
  2800  0D58  1903               	btfsc	3,2
  2801  0D59  2D5B               	goto	u2841
  2802  0D5A  2D5C               	goto	u2840
  2803  0D5B                     u2841:
  2804  0D5B  2D93               	goto	l2534
  2805  0D5C                     u2840:
  2806  0D5C                     l2516:
  2807  0D5C  01A0               	clrf	___awdiv@counter
  2808  0D5D  0AA0               	incf	___awdiv@counter,f
  2809  0D5E  2D6A               	goto	l2522
  2810  0D5F                     l2518:
  2811  0D5F  3001               	movlw	1
  2812  0D60                     u2855:
  2813  0D60  1003               	clrc
  2814  0D61  0DF3               	rlf	___awdiv@divisor,f
  2815  0D62  0DF4               	rlf	___awdiv@divisor+1,f
  2816  0D63  3EFF               	addlw	-1
  2817  0D64  1D03               	skipz
  2818  0D65  2D60               	goto	u2855
  2819  0D66                     l2520:
  2820  0D66  3001               	movlw	1
  2821  0D67  00F7               	movwf	??___awdiv
  2822  0D68  0877               	movf	??___awdiv,w
  2823  0D69  07A0               	addwf	___awdiv@counter,f
  2824  0D6A                     l2522:
  2825  0D6A  1FF4               	btfss	___awdiv@divisor+1,7
  2826  0D6B  2D6D               	goto	u2861
  2827  0D6C  2D6E               	goto	u2860
  2828  0D6D                     u2861:
  2829  0D6D  2D5F               	goto	l2518
  2830  0D6E                     u2860:
  2831  0D6E                     l2524:
  2832  0D6E  3001               	movlw	1
  2833  0D6F                     u2875:
  2834  0D6F  1003               	clrc
  2835  0D70  0DA2               	rlf	___awdiv@quotient,f
  2836  0D71  0DA3               	rlf	___awdiv@quotient+1,f
  2837  0D72  3EFF               	addlw	-1
  2838  0D73  1D03               	skipz
  2839  0D74  2D6F               	goto	u2875
  2840  0D75  0874               	movf	___awdiv@divisor+1,w
  2841  0D76  0276               	subwf	___awdiv@dividend+1,w
  2842  0D77  1D03               	skipz
  2843  0D78  2D7B               	goto	u2885
  2844  0D79  0873               	movf	___awdiv@divisor,w
  2845  0D7A  0275               	subwf	___awdiv@dividend,w
  2846  0D7B                     u2885:
  2847  0D7B  1C03               	skipc
  2848  0D7C  2D7E               	goto	u2881
  2849  0D7D  2D7F               	goto	u2880
  2850  0D7E                     u2881:
  2851  0D7E  2D86               	goto	l2530
  2852  0D7F                     u2880:
  2853  0D7F                     l2526:
  2854  0D7F  0873               	movf	___awdiv@divisor,w
  2855  0D80  02F5               	subwf	___awdiv@dividend,f
  2856  0D81  0874               	movf	___awdiv@divisor+1,w
  2857  0D82  1C03               	skipc
  2858  0D83  03F6               	decf	___awdiv@dividend+1,f
  2859  0D84  02F6               	subwf	___awdiv@dividend+1,f
  2860  0D85                     l2528:
  2861  0D85  1422               	bsf	___awdiv@quotient,0
  2862  0D86                     l2530:
  2863  0D86  3001               	movlw	1
  2864  0D87                     u2895:
  2865  0D87  1003               	clrc
  2866  0D88  0CF4               	rrf	___awdiv@divisor+1,f
  2867  0D89  0CF3               	rrf	___awdiv@divisor,f
  2868  0D8A  3EFF               	addlw	-1
  2869  0D8B  1D03               	skipz
  2870  0D8C  2D87               	goto	u2895
  2871  0D8D                     l2532:
  2872  0D8D  3001               	movlw	1
  2873  0D8E  02A0               	subwf	___awdiv@counter,f
  2874  0D8F  1D03               	btfss	3,2
  2875  0D90  2D92               	goto	u2901
  2876  0D91  2D93               	goto	u2900
  2877  0D92                     u2901:
  2878  0D92  2D6E               	goto	l2524
  2879  0D93                     u2900:
  2880  0D93                     l2534:
  2881  0D93  0821               	movf	___awdiv@sign,w
  2882  0D94  1903               	btfsc	3,2
  2883  0D95  2D97               	goto	u2911
  2884  0D96  2D98               	goto	u2910
  2885  0D97                     u2911:
  2886  0D97  2D9D               	goto	l2538
  2887  0D98                     u2910:
  2888  0D98                     l2536:
  2889  0D98  09A2               	comf	___awdiv@quotient,f
  2890  0D99  09A3               	comf	___awdiv@quotient+1,f
  2891  0D9A  0AA2               	incf	___awdiv@quotient,f
  2892  0D9B  1903               	skipnz
  2893  0D9C  0AA3               	incf	___awdiv@quotient+1,f
  2894  0D9D                     l2538:
  2895  0D9D  0823               	movf	___awdiv@quotient+1,w
  2896  0D9E  00F4               	movwf	?___awdiv+1
  2897  0D9F  0822               	movf	___awdiv@quotient,w
  2898  0DA0  00F3               	movwf	?___awdiv
  2899  0DA1                     l459:
  2900  0DA1  0008               	return
  2901  0DA2                     __end_of___awdiv:
  2902                           
  2903                           	psect	text12
  2904  0DA2                     __ptext12:	
  2905 ;; *************** function ___fltol *****************
  2906 ;; Defined at:
  2907 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  f1              4   36[BANK0 ] int 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  exp1            1    8[COMMON] unsigned char 
  2912 ;;  sign1           1    7[COMMON] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  4   36[BANK0 ] long 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         0       4       0       0       0
  2923 ;;      Locals:         2       0       0       0       0
  2924 ;;      Temps:          0       5       0       0       0
  2925 ;;      Totals:         2       9       0       0       0
  2926 ;;Total ram usage:       11 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_sendfloat
  2933 ;;		_floTochar
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___fltol
  2939  0DA2                     ___fltol:
  2940  0DA2                     l2780:	
  2941                           ;incstack = 0
  2942                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2943                           
  2944  0DA2  1003               	clrc
  2945  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2947  0DA5  0D46               	rlf	___fltol@f1+2,w
  2948  0DA6  0D47               	rlf	___fltol@f1+3,w
  2949  0DA7  00C8               	movwf	??___fltol
  2950  0DA8  0848               	movf	??___fltol,w
  2951  0DA9  00F8               	movwf	___fltol@exp1
  2952  0DAA  0878               	movf	___fltol@exp1,w
  2953  0DAB  1D03               	btfss	3,2
  2954  0DAC  2DAE               	goto	u3441
  2955  0DAD  2DAF               	goto	u3440
  2956  0DAE                     u3441:
  2957  0DAE  2DB8               	goto	l2786
  2958  0DAF                     u3440:
  2959  0DAF                     l2782:
  2960  0DAF  3000               	movlw	0
  2961  0DB0  00C7               	movwf	?___fltol+3
  2962  0DB1  3000               	movlw	0
  2963  0DB2  00C6               	movwf	?___fltol+2
  2964  0DB3  3000               	movlw	0
  2965  0DB4  00C5               	movwf	?___fltol+1
  2966  0DB5  3000               	movlw	0
  2967  0DB6  00C4               	movwf	?___fltol
  2968  0DB7  2E1D               	goto	l492
  2969  0DB8                     l2786:
  2970  0DB8  0844               	movf	___fltol@f1,w
  2971  0DB9  00C8               	movwf	??___fltol
  2972  0DBA  0845               	movf	___fltol@f1+1,w
  2973  0DBB  00C9               	movwf	??___fltol+1
  2974  0DBC  0846               	movf	___fltol@f1+2,w
  2975  0DBD  00CA               	movwf	??___fltol+2
  2976  0DBE  0847               	movf	___fltol@f1+3,w
  2977  0DBF  00CB               	movwf	??___fltol+3
  2978  0DC0  301F               	movlw	31
  2979  0DC1                     u3455:
  2980  0DC1  1003               	clrc
  2981  0DC2  0CCB               	rrf	??___fltol+3,f
  2982  0DC3  0CCA               	rrf	??___fltol+2,f
  2983  0DC4  0CC9               	rrf	??___fltol+1,f
  2984  0DC5  0CC8               	rrf	??___fltol,f
  2985  0DC6                     u3450:
  2986  0DC6  3EFF               	addlw	-1
  2987  0DC7  1D03               	skipz
  2988  0DC8  2DC1               	goto	u3455
  2989  0DC9  0848               	movf	??___fltol,w
  2990  0DCA  00CC               	movwf	??___fltol+4
  2991  0DCB  084C               	movf	??___fltol+4,w
  2992  0DCC  00F7               	movwf	___fltol@sign1
  2993  0DCD                     l2788:
  2994  0DCD  17C6               	bsf	___fltol@f1+2,7
  2995  0DCE                     l2790:
  2996  0DCE  30FF               	movlw	255
  2997  0DCF  05C4               	andwf	___fltol@f1,f
  2998  0DD0  30FF               	movlw	255
  2999  0DD1  05C5               	andwf	___fltol@f1+1,f
  3000  0DD2  30FF               	movlw	255
  3001  0DD3  05C6               	andwf	___fltol@f1+2,f
  3002  0DD4  3000               	movlw	0
  3003  0DD5  05C7               	andwf	___fltol@f1+3,f
  3004  0DD6                     l2792:
  3005  0DD6  3096               	movlw	150
  3006  0DD7  02F8               	subwf	___fltol@exp1,f
  3007  0DD8                     l2794:
  3008  0DD8  1FF8               	btfss	___fltol@exp1,7
  3009  0DD9  2DDB               	goto	u3461
  3010  0DDA  2DDC               	goto	u3460
  3011  0DDB                     u3461:
  3012  0DDB  2DF6               	goto	l2804
  3013  0DDC                     u3460:
  3014  0DDC                     l2796:
  3015  0DDC  0878               	movf	___fltol@exp1,w
  3016  0DDD  3A80               	xorlw	128
  3017  0DDE  3E97               	addlw	151
  3018  0DDF  1803               	skipnc
  3019  0DE0  2DE2               	goto	u3471
  3020  0DE1  2DE3               	goto	u3470
  3021  0DE2                     u3471:
  3022  0DE2  2DE4               	goto	l2802
  3023  0DE3                     u3470:
  3024  0DE3  2DAF               	goto	l2782
  3025  0DE4                     l2802:
  3026  0DE4  3001               	movlw	1
  3027  0DE5                     u3485:
  3028  0DE5  1003               	clrc
  3029  0DE6  0CC7               	rrf	___fltol@f1+3,f
  3030  0DE7  0CC6               	rrf	___fltol@f1+2,f
  3031  0DE8  0CC5               	rrf	___fltol@f1+1,f
  3032  0DE9  0CC4               	rrf	___fltol@f1,f
  3033  0DEA  3EFF               	addlw	-1
  3034  0DEB  1D03               	skipz
  3035  0DEC  2DE5               	goto	u3485
  3036  0DED  3001               	movlw	1
  3037  0DEE  00C8               	movwf	??___fltol
  3038  0DEF  0848               	movf	??___fltol,w
  3039  0DF0  07F8               	addwf	___fltol@exp1,f
  3040  0DF1  1D03               	btfss	3,2
  3041  0DF2  2DF4               	goto	u3491
  3042  0DF3  2DF5               	goto	u3490
  3043  0DF4                     u3491:
  3044  0DF4  2DE4               	goto	l2802
  3045  0DF5                     u3490:
  3046  0DF5  2E0D               	goto	l2812
  3047  0DF6                     l2804:
  3048  0DF6  3020               	movlw	32
  3049  0DF7  0278               	subwf	___fltol@exp1,w
  3050  0DF8  1C03               	skipc
  3051  0DF9  2DFB               	goto	u3501
  3052  0DFA  2DFC               	goto	u3500
  3053  0DFB                     u3501:
  3054  0DFB  2E08               	goto	l499
  3055  0DFC                     u3500:
  3056  0DFC  2DAF               	goto	l2782
  3057  0DFD                     l2810:
  3058  0DFD  3001               	movlw	1
  3059  0DFE  00C8               	movwf	??___fltol
  3060  0DFF                     u3515:
  3061  0DFF  1003               	clrc
  3062  0E00  0DC4               	rlf	___fltol@f1,f
  3063  0E01  0DC5               	rlf	___fltol@f1+1,f
  3064  0E02  0DC6               	rlf	___fltol@f1+2,f
  3065  0E03  0DC7               	rlf	___fltol@f1+3,f
  3066  0E04  0BC8               	decfsz	??___fltol,f
  3067  0E05  2DFF               	goto	u3515
  3068  0E06  3001               	movlw	1
  3069  0E07  02F8               	subwf	___fltol@exp1,f
  3070  0E08                     l499:
  3071  0E08  0878               	movf	___fltol@exp1,w
  3072  0E09  1D03               	btfss	3,2
  3073  0E0A  2E0C               	goto	u3521
  3074  0E0B  2E0D               	goto	u3520
  3075  0E0C                     u3521:
  3076  0E0C  2DFD               	goto	l2810
  3077  0E0D                     u3520:
  3078  0E0D                     l2812:
  3079  0E0D  0877               	movf	___fltol@sign1,w
  3080  0E0E  1903               	btfsc	3,2
  3081  0E0F  2E11               	goto	u3531
  3082  0E10  2E12               	goto	u3530
  3083  0E11                     u3531:
  3084  0E11  2E1D               	goto	l502
  3085  0E12                     u3530:
  3086  0E12                     l2814:
  3087  0E12  09C4               	comf	___fltol@f1,f
  3088  0E13  09C5               	comf	___fltol@f1+1,f
  3089  0E14  09C6               	comf	___fltol@f1+2,f
  3090  0E15  09C7               	comf	___fltol@f1+3,f
  3091  0E16  0AC4               	incf	___fltol@f1,f
  3092  0E17  1903               	skipnz
  3093  0E18  0AC5               	incf	___fltol@f1+1,f
  3094  0E19  1903               	skipnz
  3095  0E1A  0AC6               	incf	___fltol@f1+2,f
  3096  0E1B  1903               	skipnz
  3097  0E1C  0AC7               	incf	___fltol@f1+3,f
  3098  0E1D                     l502:
  3099  0E1D                     l492:
  3100  0E1D  0008               	return
  3101  0E1E                     __end_of___fltol:
  3102                           
  3103                           	psect	text13
  3104  0AF1                     __ptext13:	
  3105 ;; *************** function ___flsub *****************
  3106 ;; Defined at:
  3107 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  a               4   16[BANK0 ] long 
  3110 ;;  b               4   20[BANK0 ] long 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  4   16[BANK0 ] long 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       8       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       8       0       0       0
  3126 ;;Total ram usage:        8 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		___fladd
  3131 ;; This function is called by:
  3132 ;;		_sendfloat
  3133 ;;		_floTochar
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function ___flsub
  3139  0AF1                     ___flsub:
  3140  0AF1                     l2816:	
  3141                           ;incstack = 0
  3142                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3143                           
  3144  0AF1  3080               	movlw	128
  3145  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0AF4  06B3               	xorwf	___flsub@a+3,f
  3148  0AF5                     l2818:
  3149  0AF5  0837               	movf	___flsub@b+3,w
  3150  0AF6  00A3               	movwf	___fladd@b+3
  3151  0AF7  0836               	movf	___flsub@b+2,w
  3152  0AF8  00A2               	movwf	___fladd@b+2
  3153  0AF9  0835               	movf	___flsub@b+1,w
  3154  0AFA  00A1               	movwf	___fladd@b+1
  3155  0AFB  0834               	movf	___flsub@b,w
  3156  0AFC  00A0               	movwf	___fladd@b
  3157  0AFD  0833               	movf	___flsub@a+3,w
  3158  0AFE  00A7               	movwf	___fladd@a+3
  3159  0AFF  0832               	movf	___flsub@a+2,w
  3160  0B00  00A6               	movwf	___fladd@a+2
  3161  0B01  0831               	movf	___flsub@a+1,w
  3162  0B02  00A5               	movwf	___fladd@a+1
  3163  0B03  0830               	movf	___flsub@a,w
  3164  0B04  00A4               	movwf	___fladd@a
  3165  0B05  120A  118A  2383  120A  158A  	fcall	___fladd
  3166  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0B0C  0823               	movf	?___fladd+3,w
  3169  0B0D  00B3               	movwf	?___flsub+3
  3170  0B0E  0822               	movf	?___fladd+2,w
  3171  0B0F  00B2               	movwf	?___flsub+2
  3172  0B10  0821               	movf	?___fladd+1,w
  3173  0B11  00B1               	movwf	?___flsub+1
  3174  0B12  0820               	movf	?___fladd,w
  3175  0B13  00B0               	movwf	?___flsub
  3176  0B14                     l645:
  3177  0B14  0008               	return
  3178  0B15                     __end_of___flsub:
  3179                           
  3180                           	psect	text14
  3181  0383                     __ptext14:	
  3182 ;; *************** function ___fladd *****************
  3183 ;; Defined at:
  3184 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  b               4    0[BANK0 ] long 
  3187 ;;  a               4    4[BANK0 ] long 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  grs             1    6[COMMON] unsigned char 
  3190 ;;  bexp            1    5[COMMON] unsigned char 
  3191 ;;  aexp            1    4[COMMON] unsigned char 
  3192 ;;  signs           1    3[COMMON] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  4    0[BANK0 ] unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, btemp+1
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       8       0       0       0
  3203 ;;      Locals:         4       0       0       0       0
  3204 ;;      Temps:          0       8       0       0       0
  3205 ;;      Totals:         4      16       0       0       0
  3206 ;;Total ram usage:       20 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		___flsub
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function ___fladd
  3218  0383                     ___fladd:
  3219  0383                     l2542:	
  3220                           ;incstack = 0
  3221                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3222                           
  3223  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0385  0823               	movf	___fladd@b+3,w
  3226  0386  3980               	andlw	128
  3227  0387  00A8               	movwf	??___fladd
  3228  0388  0828               	movf	??___fladd,w
  3229  0389  00F3               	movwf	___fladd@signs
  3230  038A                     l2544:
  3231  038A  0823               	movf	___fladd@b+3,w
  3232  038B  00A8               	movwf	??___fladd
  3233  038C  0728               	addwf	??___fladd,w
  3234  038D  00A9               	movwf	??___fladd+1
  3235  038E  0829               	movf	??___fladd+1,w
  3236  038F  00F5               	movwf	___fladd@bexp
  3237  0390                     l2546:
  3238  0390  1FA2               	btfss	___fladd@b+2,7
  3239  0391  2B93               	goto	u2921
  3240  0392  2B94               	goto	u2920
  3241  0393                     u2921:
  3242  0393  2B95               	goto	l2550
  3243  0394                     u2920:
  3244  0394                     l2548:
  3245  0394  1475               	bsf	___fladd@bexp,0
  3246  0395                     l2550:
  3247  0395  0875               	movf	___fladd@bexp,w
  3248  0396  1903               	btfsc	3,2
  3249  0397  2B99               	goto	u2931
  3250  0398  2B9A               	goto	u2930
  3251  0399                     u2931:
  3252  0399  2BAA               	goto	l2560
  3253  039A                     u2930:
  3254  039A                     l2552:
  3255  039A  0A75               	incf	___fladd@bexp,w
  3256  039B  1D03               	btfss	3,2
  3257  039C  2B9E               	goto	u2941
  3258  039D  2B9F               	goto	u2940
  3259  039E                     u2941:
  3260  039E  2BA7               	goto	l2556
  3261  039F                     u2940:
  3262  039F                     l2554:
  3263  039F  3000               	movlw	0
  3264  03A0  00A3               	movwf	___fladd@b+3
  3265  03A1  3000               	movlw	0
  3266  03A2  00A2               	movwf	___fladd@b+2
  3267  03A3  3000               	movlw	0
  3268  03A4  00A1               	movwf	___fladd@b+1
  3269  03A5  3000               	movlw	0
  3270  03A6  00A0               	movwf	___fladd@b
  3271  03A7                     l2556:
  3272  03A7  17A2               	bsf	___fladd@b+2,7
  3273  03A8                     l2558:
  3274  03A8  01A3               	clrf	___fladd@b+3
  3275  03A9  2BB2               	goto	l2562
  3276  03AA                     l2560:
  3277  03AA  3000               	movlw	0
  3278  03AB  00A3               	movwf	___fladd@b+3
  3279  03AC  3000               	movlw	0
  3280  03AD  00A2               	movwf	___fladd@b+2
  3281  03AE  3000               	movlw	0
  3282  03AF  00A1               	movwf	___fladd@b+1
  3283  03B0  3000               	movlw	0
  3284  03B1  00A0               	movwf	___fladd@b
  3285  03B2                     l2562:
  3286  03B2  0827               	movf	___fladd@a+3,w
  3287  03B3  3980               	andlw	128
  3288  03B4  00A8               	movwf	??___fladd
  3289  03B5  0828               	movf	??___fladd,w
  3290  03B6  00F4               	movwf	___fladd@aexp
  3291  03B7                     l2564:
  3292  03B7  0874               	movf	___fladd@aexp,w
  3293  03B8  0673               	xorwf	___fladd@signs,w
  3294  03B9  1903               	skipnz
  3295  03BA  2BBC               	goto	u2951
  3296  03BB  2BBD               	goto	u2950
  3297  03BC                     u2951:
  3298  03BC  2BBE               	goto	l2568
  3299  03BD                     u2950:
  3300  03BD                     l2566:
  3301  03BD  1773               	bsf	___fladd@signs,6
  3302  03BE                     l2568:
  3303  03BE  0827               	movf	___fladd@a+3,w
  3304  03BF  00A8               	movwf	??___fladd
  3305  03C0  0728               	addwf	??___fladd,w
  3306  03C1  00A9               	movwf	??___fladd+1
  3307  03C2  0829               	movf	??___fladd+1,w
  3308  03C3  00F4               	movwf	___fladd@aexp
  3309  03C4                     l2570:
  3310  03C4  1FA6               	btfss	___fladd@a+2,7
  3311  03C5  2BC7               	goto	u2961
  3312  03C6  2BC8               	goto	u2960
  3313  03C7                     u2961:
  3314  03C7  2BC9               	goto	l2574
  3315  03C8                     u2960:
  3316  03C8                     l2572:
  3317  03C8  1474               	bsf	___fladd@aexp,0
  3318  03C9                     l2574:
  3319  03C9  0874               	movf	___fladd@aexp,w
  3320  03CA  1903               	btfsc	3,2
  3321  03CB  2BCD               	goto	u2971
  3322  03CC  2BCE               	goto	u2970
  3323  03CD                     u2971:
  3324  03CD  2BDE               	goto	l2584
  3325  03CE                     u2970:
  3326  03CE                     l2576:
  3327  03CE  0A74               	incf	___fladd@aexp,w
  3328  03CF  1D03               	btfss	3,2
  3329  03D0  2BD2               	goto	u2981
  3330  03D1  2BD3               	goto	u2980
  3331  03D2                     u2981:
  3332  03D2  2BDB               	goto	l2580
  3333  03D3                     u2980:
  3334  03D3                     l2578:
  3335  03D3  3000               	movlw	0
  3336  03D4  00A7               	movwf	___fladd@a+3
  3337  03D5  3000               	movlw	0
  3338  03D6  00A6               	movwf	___fladd@a+2
  3339  03D7  3000               	movlw	0
  3340  03D8  00A5               	movwf	___fladd@a+1
  3341  03D9  3000               	movlw	0
  3342  03DA  00A4               	movwf	___fladd@a
  3343  03DB                     l2580:
  3344  03DB  17A6               	bsf	___fladd@a+2,7
  3345  03DC                     l2582:
  3346  03DC  01A7               	clrf	___fladd@a+3
  3347  03DD  2BE6               	goto	l599
  3348  03DE                     l2584:
  3349  03DE  3000               	movlw	0
  3350  03DF  00A7               	movwf	___fladd@a+3
  3351  03E0  3000               	movlw	0
  3352  03E1  00A6               	movwf	___fladd@a+2
  3353  03E2  3000               	movlw	0
  3354  03E3  00A5               	movwf	___fladd@a+1
  3355  03E4  3000               	movlw	0
  3356  03E5  00A4               	movwf	___fladd@a
  3357  03E6                     l599:
  3358  03E6  0875               	movf	___fladd@bexp,w
  3359  03E7  0274               	subwf	___fladd@aexp,w
  3360  03E8  1803               	skipnc
  3361  03E9  2BEB               	goto	u2991
  3362  03EA  2BEC               	goto	u2990
  3363  03EB                     u2991:
  3364  03EB  2C30               	goto	l2620
  3365  03EC                     u2990:
  3366  03EC                     l2586:
  3367  03EC  1F73               	btfss	___fladd@signs,6
  3368  03ED  2BEF               	goto	u3001
  3369  03EE  2BF0               	goto	u3000
  3370  03EF                     u3001:
  3371  03EF  2BF4               	goto	l2590
  3372  03F0                     u3000:
  3373  03F0                     l2588:
  3374  03F0  3080               	movlw	128
  3375  03F1  00A8               	movwf	??___fladd
  3376  03F2  0828               	movf	??___fladd,w
  3377  03F3  06F3               	xorwf	___fladd@signs,f
  3378  03F4                     l2590:
  3379  03F4  0875               	movf	___fladd@bexp,w
  3380  03F5  00A8               	movwf	??___fladd
  3381  03F6  0828               	movf	??___fladd,w
  3382  03F7  00F6               	movwf	___fladd@grs
  3383  03F8                     l2592:
  3384  03F8  0874               	movf	___fladd@aexp,w
  3385  03F9  00A8               	movwf	??___fladd
  3386  03FA  0828               	movf	??___fladd,w
  3387  03FB  00F5               	movwf	___fladd@bexp
  3388  03FC                     l2594:
  3389  03FC  0876               	movf	___fladd@grs,w
  3390  03FD  00A8               	movwf	??___fladd
  3391  03FE  0828               	movf	??___fladd,w
  3392  03FF  00F4               	movwf	___fladd@aexp
  3393  0400                     l2596:
  3394  0400  0820               	movf	___fladd@b,w
  3395  0401  00A8               	movwf	??___fladd
  3396  0402  0828               	movf	??___fladd,w
  3397  0403  00F6               	movwf	___fladd@grs
  3398  0404                     l2598:
  3399  0404  0824               	movf	___fladd@a,w
  3400  0405  00A8               	movwf	??___fladd
  3401  0406  0828               	movf	??___fladd,w
  3402  0407  00A0               	movwf	___fladd@b
  3403  0408                     l2600:
  3404  0408  0876               	movf	___fladd@grs,w
  3405  0409  00A8               	movwf	??___fladd
  3406  040A  0828               	movf	??___fladd,w
  3407  040B  00A4               	movwf	___fladd@a
  3408  040C                     l2602:
  3409  040C  0821               	movf	___fladd@b+1,w
  3410  040D  00A8               	movwf	??___fladd
  3411  040E  0828               	movf	??___fladd,w
  3412  040F  00F6               	movwf	___fladd@grs
  3413  0410                     l2604:
  3414  0410  0825               	movf	___fladd@a+1,w
  3415  0411  00A8               	movwf	??___fladd
  3416  0412  0828               	movf	??___fladd,w
  3417  0413  00A1               	movwf	___fladd@b+1
  3418  0414                     l2606:
  3419  0414  0876               	movf	___fladd@grs,w
  3420  0415  00A8               	movwf	??___fladd
  3421  0416  0828               	movf	??___fladd,w
  3422  0417  00A5               	movwf	___fladd@a+1
  3423  0418                     l2608:
  3424  0418  0822               	movf	___fladd@b+2,w
  3425  0419  00A8               	movwf	??___fladd
  3426  041A  0828               	movf	??___fladd,w
  3427  041B  00F6               	movwf	___fladd@grs
  3428  041C                     l2610:
  3429  041C  0826               	movf	___fladd@a+2,w
  3430  041D  00A8               	movwf	??___fladd
  3431  041E  0828               	movf	??___fladd,w
  3432  041F  00A2               	movwf	___fladd@b+2
  3433  0420                     l2612:
  3434  0420  0876               	movf	___fladd@grs,w
  3435  0421  00A8               	movwf	??___fladd
  3436  0422  0828               	movf	??___fladd,w
  3437  0423  00A6               	movwf	___fladd@a+2
  3438  0424                     l2614:
  3439  0424  0823               	movf	___fladd@b+3,w
  3440  0425  00A8               	movwf	??___fladd
  3441  0426  0828               	movf	??___fladd,w
  3442  0427  00F6               	movwf	___fladd@grs
  3443  0428                     l2616:
  3444  0428  0827               	movf	___fladd@a+3,w
  3445  0429  00A8               	movwf	??___fladd
  3446  042A  0828               	movf	??___fladd,w
  3447  042B  00A3               	movwf	___fladd@b+3
  3448  042C                     l2618:
  3449  042C  0876               	movf	___fladd@grs,w
  3450  042D  00A8               	movwf	??___fladd
  3451  042E  0828               	movf	??___fladd,w
  3452  042F  00A7               	movwf	___fladd@a+3
  3453  0430                     l2620:
  3454  0430  01F6               	clrf	___fladd@grs
  3455  0431                     l2622:
  3456  0431  0874               	movf	___fladd@aexp,w
  3457  0432  00A8               	movwf	??___fladd
  3458  0433  01A9               	clrf	??___fladd+1
  3459  0434  0829               	movf	??___fladd+1,w
  3460  0435  00AB               	movwf	??___fladd+3
  3461  0436  0875               	movf	___fladd@bexp,w
  3462  0437  0228               	subwf	??___fladd,w
  3463  0438  00AA               	movwf	??___fladd+2
  3464  0439  1C03               	skipc
  3465  043A  03AB               	decf	??___fladd+3,f
  3466  043B  082B               	movf	??___fladd+3,w
  3467  043C  3A80               	xorlw	128
  3468  043D  00FF               	movwf	btemp+1
  3469  043E  3080               	movlw	128
  3470  043F  027F               	subwf	btemp+1,w
  3471  0440  1D03               	skipz
  3472  0441  2C44               	goto	u3015
  3473  0442  301A               	movlw	26
  3474  0443  022A               	subwf	??___fladd+2,w
  3475  0444                     u3015:
  3476  0444  1C03               	skipc
  3477  0445  2C47               	goto	u3011
  3478  0446  2C48               	goto	u3010
  3479  0447                     u3011:
  3480  0447  2C89               	goto	l2638
  3481  0448                     u3010:
  3482  0448                     l2624:
  3483  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3485  044A  0823               	movf	___fladd@b+3,w
  3486  044B  0422               	iorwf	___fladd@b+2,w
  3487  044C  0421               	iorwf	___fladd@b+1,w
  3488  044D  0420               	iorwf	___fladd@b,w
  3489  044E  1D03               	skipz
  3490  044F  2C51               	goto	u3021
  3491  0450  2C53               	goto	u3020
  3492  0451                     u3021:
  3493  0451  3001               	movlw	1
  3494  0452  2C54               	goto	u3030
  3495  0453                     u3020:
  3496  0453  3000               	movlw	0
  3497  0454                     u3030:
  3498  0454  00A8               	movwf	??___fladd
  3499  0455  0828               	movf	??___fladd,w
  3500  0456  00F6               	movwf	___fladd@grs
  3501  0457  3000               	movlw	0
  3502  0458  00A3               	movwf	___fladd@b+3
  3503  0459  3000               	movlw	0
  3504  045A  00A2               	movwf	___fladd@b+2
  3505  045B  3000               	movlw	0
  3506  045C  00A1               	movwf	___fladd@b+1
  3507  045D  3000               	movlw	0
  3508  045E  00A0               	movwf	___fladd@b
  3509  045F  0874               	movf	___fladd@aexp,w
  3510  0460  00A8               	movwf	??___fladd
  3511  0461  0828               	movf	??___fladd,w
  3512  0462  00F5               	movwf	___fladd@bexp
  3513  0463  2C8F               	goto	l603
  3514  0464                     l605:
  3515  0464  1C76               	btfss	___fladd@grs,0
  3516  0465  2C67               	goto	u3041
  3517  0466  2C68               	goto	u3040
  3518  0467                     u3041:
  3519  0467  2C73               	goto	l2628
  3520  0468                     u3040:
  3521  0468                     l2626:
  3522  0468  0876               	movf	___fladd@grs,w
  3523  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3524  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3525  046B  00A8               	movwf	??___fladd
  3526  046C  1003               	clrc
  3527  046D  0C28               	rrf	??___fladd,w
  3528  046E  3801               	iorlw	1
  3529  046F  00A9               	movwf	??___fladd+1
  3530  0470  0829               	movf	??___fladd+1,w
  3531  0471  00F6               	movwf	___fladd@grs
  3532  0472  2C75               	goto	l2630
  3533  0473                     l2628:
  3534  0473  1003               	clrc
  3535  0474  0CF6               	rrf	___fladd@grs,f
  3536  0475                     l2630:
  3537  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0477  1C20               	btfss	___fladd@b,0
  3540  0478  2C7A               	goto	u3051
  3541  0479  2C7B               	goto	u3050
  3542  047A                     u3051:
  3543  047A  2C7C               	goto	l2634
  3544  047B                     u3050:
  3545  047B                     l2632:
  3546  047B  17F6               	bsf	___fladd@grs,7
  3547  047C                     l2634:
  3548  047C  3001               	movlw	1
  3549  047D  00A8               	movwf	??___fladd
  3550  047E                     u3065:
  3551  047E  0D23               	rlf	___fladd@b+3,w
  3552  047F  0CA3               	rrf	___fladd@b+3,f
  3553  0480  0CA2               	rrf	___fladd@b+2,f
  3554  0481  0CA1               	rrf	___fladd@b+1,f
  3555  0482  0CA0               	rrf	___fladd@b,f
  3556  0483  0BA8               	decfsz	??___fladd& (0+127),f
  3557  0484  2C7E               	goto	u3065
  3558  0485                     l2636:
  3559  0485  3001               	movlw	1
  3560  0486  00A8               	movwf	??___fladd
  3561  0487  0828               	movf	??___fladd,w
  3562  0488  07F5               	addwf	___fladd@bexp,f
  3563  0489                     l2638:
  3564  0489  0874               	movf	___fladd@aexp,w
  3565  048A  0275               	subwf	___fladd@bexp,w
  3566  048B  1C03               	skipc
  3567  048C  2C8E               	goto	u3071
  3568  048D  2C8F               	goto	u3070
  3569  048E                     u3071:
  3570  048E  2C64               	goto	l605
  3571  048F                     u3070:
  3572  048F                     l603:
  3573  048F  1B73               	btfsc	___fladd@signs,6
  3574  0490  2C92               	goto	u3081
  3575  0491  2C93               	goto	u3080
  3576  0492                     u3081:
  3577  0492  2CE2               	goto	l2664
  3578  0493                     u3080:
  3579  0493                     l2640:
  3580  0493  0875               	movf	___fladd@bexp,w
  3581  0494  1D03               	btfss	3,2
  3582  0495  2C97               	goto	u3091
  3583  0496  2C98               	goto	u3090
  3584  0497                     u3091:
  3585  0497  2CA3               	goto	l2646
  3586  0498                     u3090:
  3587  0498                     l2642:
  3588  0498  3000               	movlw	0
  3589  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3590  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3591  049B  00A3               	movwf	?___fladd+3
  3592  049C  3000               	movlw	0
  3593  049D  00A2               	movwf	?___fladd+2
  3594  049E  3000               	movlw	0
  3595  049F  00A1               	movwf	?___fladd+1
  3596  04A0  3000               	movlw	0
  3597  04A1  00A0               	movwf	?___fladd
  3598  04A2  2E12               	goto	l612
  3599  04A3                     l2646:
  3600  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3601  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3602  04A5  0824               	movf	___fladd@a,w
  3603  04A6  07A0               	addwf	___fladd@b,f
  3604  04A7  0825               	movf	___fladd@a+1,w
  3605  04A8  1103               	clrz
  3606  04A9  1803               	skipnc
  3607  04AA  3E01               	addlw	1
  3608  04AB  1903               	skipnz
  3609  04AC  2CAE               	goto	u3101
  3610  04AD  07A1               	addwf	___fladd@b+1,f
  3611  04AE                     u3101:
  3612  04AE  0826               	movf	___fladd@a+2,w
  3613  04AF  1103               	clrz
  3614  04B0  1803               	skipnc
  3615  04B1  3E01               	addlw	1
  3616  04B2  1903               	skipnz
  3617  04B3  2CB5               	goto	u3102
  3618  04B4  07A2               	addwf	___fladd@b+2,f
  3619  04B5                     u3102:
  3620  04B5  0827               	movf	___fladd@a+3,w
  3621  04B6  1103               	clrz
  3622  04B7  1803               	skipnc
  3623  04B8  3E01               	addlw	1
  3624  04B9  1903               	skipnz
  3625  04BA  2CBC               	goto	u3103
  3626  04BB  07A3               	addwf	___fladd@b+3,f
  3627  04BC                     u3103:
  3628  04BC                     l2648:
  3629  04BC  1C23               	btfss	___fladd@b+3,0
  3630  04BD  2CBF               	goto	u3111
  3631  04BE  2CC0               	goto	u3110
  3632  04BF                     u3111:
  3633  04BF  2D98               	goto	l2698
  3634  04C0                     u3110:
  3635  04C0                     l2650:
  3636  04C0  1C76               	btfss	___fladd@grs,0
  3637  04C1  2CC3               	goto	u3121
  3638  04C2  2CC4               	goto	u3120
  3639  04C3                     u3121:
  3640  04C3  2CCD               	goto	l2654
  3641  04C4                     u3120:
  3642  04C4                     l2652:
  3643  04C4  0876               	movf	___fladd@grs,w
  3644  04C5  00A8               	movwf	??___fladd
  3645  04C6  1003               	clrc
  3646  04C7  0C28               	rrf	??___fladd,w
  3647  04C8  3801               	iorlw	1
  3648  04C9  00A9               	movwf	??___fladd+1
  3649  04CA  0829               	movf	??___fladd+1,w
  3650  04CB  00F6               	movwf	___fladd@grs
  3651  04CC  2CCF               	goto	l2656
  3652  04CD                     l2654:
  3653  04CD  1003               	clrc
  3654  04CE  0CF6               	rrf	___fladd@grs,f
  3655  04CF                     l2656:
  3656  04CF  1C20               	btfss	___fladd@b,0
  3657  04D0  2CD2               	goto	u3131
  3658  04D1  2CD3               	goto	u3130
  3659  04D2                     u3131:
  3660  04D2  2CD4               	goto	l2660
  3661  04D3                     u3130:
  3662  04D3                     l2658:
  3663  04D3  17F6               	bsf	___fladd@grs,7
  3664  04D4                     l2660:
  3665  04D4  3001               	movlw	1
  3666  04D5  00A8               	movwf	??___fladd
  3667  04D6                     u3145:
  3668  04D6  0D23               	rlf	___fladd@b+3,w
  3669  04D7  0CA3               	rrf	___fladd@b+3,f
  3670  04D8  0CA2               	rrf	___fladd@b+2,f
  3671  04D9  0CA1               	rrf	___fladd@b+1,f
  3672  04DA  0CA0               	rrf	___fladd@b,f
  3673  04DB  0BA8               	decfsz	??___fladd& (0+127),f
  3674  04DC  2CD6               	goto	u3145
  3675  04DD                     l2662:
  3676  04DD  3001               	movlw	1
  3677  04DE  00A8               	movwf	??___fladd
  3678  04DF  0828               	movf	??___fladd,w
  3679  04E0  07F5               	addwf	___fladd@bexp,f
  3680  04E1  2D98               	goto	l2698
  3681  04E2                     l2664:
  3682  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3683  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3684  04E4  0823               	movf	___fladd@b+3,w
  3685  04E5  3A80               	xorlw	128
  3686  04E6  00FF               	movwf	btemp+1
  3687  04E7  0827               	movf	___fladd@a+3,w
  3688  04E8  3A80               	xorlw	128
  3689  04E9  027F               	subwf	btemp+1,w
  3690  04EA  1D03               	skipz
  3691  04EB  2CF6               	goto	u3153
  3692  04EC  0826               	movf	___fladd@a+2,w
  3693  04ED  0222               	subwf	___fladd@b+2,w
  3694  04EE  1D03               	skipz
  3695  04EF  2CF6               	goto	u3153
  3696  04F0  0825               	movf	___fladd@a+1,w
  3697  04F1  0221               	subwf	___fladd@b+1,w
  3698  04F2  1D03               	skipz
  3699  04F3  2CF6               	goto	u3153
  3700  04F4  0824               	movf	___fladd@a,w
  3701  04F5  0220               	subwf	___fladd@b,w
  3702  04F6                     u3153:
  3703  04F6  1803               	skipnc
  3704  04F7  2CF9               	goto	u3151
  3705  04F8  2CFA               	goto	u3150
  3706  04F9                     u3151:
  3707  04F9  2D52               	goto	l2674
  3708  04FA                     u3150:
  3709  04FA                     l2666:
  3710  04FA  30FF               	movlw	255
  3711  04FB  00A8               	movwf	??___fladd
  3712  04FC  30FF               	movlw	255
  3713  04FD  00A9               	movwf	??___fladd+1
  3714  04FE  30FF               	movlw	255
  3715  04FF  00AA               	movwf	??___fladd+2
  3716  0500  30FF               	movlw	255
  3717  0501  00AB               	movwf	??___fladd+3
  3718  0502  0824               	movf	___fladd@a,w
  3719  0503  00AC               	movwf	??___fladd+4
  3720  0504  0825               	movf	___fladd@a+1,w
  3721  0505  00AD               	movwf	??___fladd+5
  3722  0506  0826               	movf	___fladd@a+2,w
  3723  0507  00AE               	movwf	??___fladd+6
  3724  0508  0827               	movf	___fladd@a+3,w
  3725  0509  00AF               	movwf	??___fladd+7
  3726  050A  0820               	movf	___fladd@b,w
  3727  050B  02AC               	subwf	??___fladd+4,f
  3728  050C  0821               	movf	___fladd@b+1,w
  3729  050D  1C03               	skipc
  3730  050E  0F21               	incfsz	___fladd@b+1,w
  3731  050F  2D11               	goto	u3161
  3732  0510  2D12               	goto	u3162
  3733  0511                     u3161:
  3734  0511  02AD               	subwf	??___fladd+5,f
  3735  0512                     u3162:
  3736  0512  0822               	movf	___fladd@b+2,w
  3737  0513  1C03               	skipc
  3738  0514  0F22               	incfsz	___fladd@b+2,w
  3739  0515  2D17               	goto	u3163
  3740  0516  2D18               	goto	u3164
  3741  0517                     u3163:
  3742  0517  02AE               	subwf	??___fladd+6,f
  3743  0518                     u3164:
  3744  0518  0823               	movf	___fladd@b+3,w
  3745  0519  1C03               	skipc
  3746  051A  0F23               	incfsz	___fladd@b+3,w
  3747  051B  2D1D               	goto	u3165
  3748  051C  2D1E               	goto	u3166
  3749  051D                     u3165:
  3750  051D  02AF               	subwf	??___fladd+7,f
  3751  051E                     u3166:
  3752  051E  082C               	movf	??___fladd+4,w
  3753  051F  07A8               	addwf	??___fladd,f
  3754  0520  082D               	movf	??___fladd+5,w
  3755  0521  1803               	skipnc
  3756  0522  0F2D               	incfsz	??___fladd+5,w
  3757  0523  2D25               	goto	u3170
  3758  0524  2D26               	goto	u3171
  3759  0525                     u3170:
  3760  0525  07A9               	addwf	??___fladd+1,f
  3761  0526                     u3171:
  3762  0526  082E               	movf	??___fladd+6,w
  3763  0527  1803               	skipnc
  3764  0528  0F2E               	incfsz	??___fladd+6,w
  3765  0529  2D2B               	goto	u3172
  3766  052A  2D2C               	goto	u3173
  3767  052B                     u3172:
  3768  052B  07AA               	addwf	??___fladd+2,f
  3769  052C                     u3173:
  3770  052C  082F               	movf	??___fladd+7,w
  3771  052D  1803               	skipnc
  3772  052E  0A2F               	incf	??___fladd+7,w
  3773  052F  07AB               	addwf	??___fladd+3,f
  3774  0530  082B               	movf	??___fladd+3,w
  3775  0531  00A3               	movwf	___fladd@b+3
  3776  0532  082A               	movf	??___fladd+2,w
  3777  0533  00A2               	movwf	___fladd@b+2
  3778  0534  0829               	movf	??___fladd+1,w
  3779  0535  00A1               	movwf	___fladd@b+1
  3780  0536  0828               	movf	??___fladd,w
  3781  0537  00A0               	movwf	___fladd@b
  3782  0538                     l2668:
  3783  0538  3080               	movlw	128
  3784  0539  00A8               	movwf	??___fladd
  3785  053A  0828               	movf	??___fladd,w
  3786  053B  06F3               	xorwf	___fladd@signs,f
  3787  053C  09F6               	comf	___fladd@grs,f
  3788  053D  0AF6               	incf	___fladd@grs,f
  3789  053E                     l2670:
  3790  053E  0876               	movf	___fladd@grs,w
  3791  053F  1D03               	btfss	3,2
  3792  0540  2D42               	goto	u3181
  3793  0541  2D43               	goto	u3180
  3794  0542                     u3181:
  3795  0542  2D60               	goto	l620
  3796  0543                     u3180:
  3797  0543                     l2672:
  3798  0543  3001               	movlw	1
  3799  0544  07A0               	addwf	___fladd@b,f
  3800  0545  3000               	movlw	0
  3801  0546  1803               	skipnc
  3802  0547  3001               	movlw	1
  3803  0548  07A1               	addwf	___fladd@b+1,f
  3804  0549  3000               	movlw	0
  3805  054A  1803               	skipnc
  3806  054B  3001               	movlw	1
  3807  054C  07A2               	addwf	___fladd@b+2,f
  3808  054D  3000               	movlw	0
  3809  054E  1803               	skipnc
  3810  054F  3001               	movlw	1
  3811  0550  07A3               	addwf	___fladd@b+3,f
  3812  0551  2D60               	goto	l620
  3813  0552                     l2674:
  3814  0552  0824               	movf	___fladd@a,w
  3815  0553  02A0               	subwf	___fladd@b,f
  3816  0554  0825               	movf	___fladd@a+1,w
  3817  0555  1C03               	skipc
  3818  0556  0F25               	incfsz	___fladd@a+1,w
  3819  0557  02A1               	subwf	___fladd@b+1,f
  3820  0558  0826               	movf	___fladd@a+2,w
  3821  0559  1C03               	skipc
  3822  055A  0F26               	incfsz	___fladd@a+2,w
  3823  055B  02A2               	subwf	___fladd@b+2,f
  3824  055C  0827               	movf	___fladd@a+3,w
  3825  055D  1C03               	skipc
  3826  055E  0F27               	incfsz	___fladd@a+3,w
  3827  055F  02A3               	subwf	___fladd@b+3,f
  3828  0560                     l620:
  3829  0560  0823               	movf	___fladd@b+3,w
  3830  0561  0422               	iorwf	___fladd@b+2,w
  3831  0562  0421               	iorwf	___fladd@b+1,w
  3832  0563  0420               	iorwf	___fladd@b,w
  3833  0564  1D03               	skipz
  3834  0565  2D67               	goto	u3191
  3835  0566  2D68               	goto	u3190
  3836  0567                     u3191:
  3837  0567  2D94               	goto	l2696
  3838  0568                     u3190:
  3839  0568                     l2676:
  3840  0568  0876               	movf	___fladd@grs,w
  3841  0569  1D03               	btfss	3,2
  3842  056A  2D6C               	goto	u3201
  3843  056B  2D6D               	goto	u3200
  3844  056C                     u3201:
  3845  056C  2D94               	goto	l2696
  3846  056D                     u3200:
  3847  056D                     l2678:
  3848  056D  3000               	movlw	0
  3849  056E  00A3               	movwf	?___fladd+3
  3850  056F  3000               	movlw	0
  3851  0570  00A2               	movwf	?___fladd+2
  3852  0571  3000               	movlw	0
  3853  0572  00A1               	movwf	?___fladd+1
  3854  0573  3000               	movlw	0
  3855  0574  00A0               	movwf	?___fladd
  3856  0575  2E12               	goto	l612
  3857  0576                     l2682:
  3858  0576  3001               	movlw	1
  3859  0577  00A8               	movwf	??___fladd
  3860  0578                     u3215:
  3861  0578  1003               	clrc
  3862  0579  0DA0               	rlf	___fladd@b,f
  3863  057A  0DA1               	rlf	___fladd@b+1,f
  3864  057B  0DA2               	rlf	___fladd@b+2,f
  3865  057C  0DA3               	rlf	___fladd@b+3,f
  3866  057D  0BA8               	decfsz	??___fladd,f
  3867  057E  2D78               	goto	u3215
  3868  057F                     l2684:
  3869  057F  1FF6               	btfss	___fladd@grs,7
  3870  0580  2D82               	goto	u3221
  3871  0581  2D83               	goto	u3220
  3872  0582                     u3221:
  3873  0582  2D84               	goto	l624
  3874  0583                     u3220:
  3875  0583                     l2686:
  3876  0583  1420               	bsf	___fladd@b,0
  3877  0584                     l624:
  3878  0584  1C76               	btfss	___fladd@grs,0
  3879  0585  2D87               	goto	u3231
  3880  0586  2D88               	goto	u3230
  3881  0587                     u3231:
  3882  0587  2D8B               	goto	l2690
  3883  0588                     u3230:
  3884  0588                     l2688:
  3885  0588  1403               	setc
  3886  0589  0DF6               	rlf	___fladd@grs,f
  3887  058A  2D8D               	goto	l2692
  3888  058B                     l2690:
  3889  058B  1003               	clrc
  3890  058C  0DF6               	rlf	___fladd@grs,f
  3891  058D                     l2692:
  3892  058D  0875               	movf	___fladd@bexp,w
  3893  058E  1903               	btfsc	3,2
  3894  058F  2D91               	goto	u3241
  3895  0590  2D92               	goto	u3240
  3896  0591                     u3241:
  3897  0591  2D94               	goto	l2696
  3898  0592                     u3240:
  3899  0592                     l2694:
  3900  0592  3001               	movlw	1
  3901  0593  02F5               	subwf	___fladd@bexp,f
  3902  0594                     l2696:
  3903  0594  1FA2               	btfss	___fladd@b+2,7
  3904  0595  2D97               	goto	u3251
  3905  0596  2D98               	goto	u3250
  3906  0597                     u3251:
  3907  0597  2D76               	goto	l2682
  3908  0598                     u3250:
  3909  0598                     l2698:
  3910  0598  01F4               	clrf	___fladd@aexp
  3911  0599                     l2700:
  3912  0599  1FF6               	btfss	___fladd@grs,7
  3913  059A  2D9C               	goto	u3261
  3914  059B  2D9D               	goto	u3260
  3915  059C                     u3261:
  3916  059C  2DAB               	goto	l2708
  3917  059D                     u3260:
  3918  059D                     l2702:
  3919  059D  0876               	movf	___fladd@grs,w
  3920  059E  397F               	andlw	127
  3921  059F  1903               	btfsc	3,2
  3922  05A0  2DA2               	goto	u3271
  3923  05A1  2DA3               	goto	u3270
  3924  05A2                     u3271:
  3925  05A2  2DA6               	goto	l630
  3926  05A3                     u3270:
  3927  05A3                     l2704:
  3928  05A3  01F4               	clrf	___fladd@aexp
  3929  05A4  0AF4               	incf	___fladd@aexp,f
  3930  05A5  2DAB               	goto	l2708
  3931  05A6                     l630:
  3932  05A6  1C20               	btfss	___fladd@b,0
  3933  05A7  2DA9               	goto	u3281
  3934  05A8  2DAA               	goto	u3280
  3935  05A9                     u3281:
  3936  05A9  2DAB               	goto	l2708
  3937  05AA                     u3280:
  3938  05AA  2DA3               	goto	l2704
  3939  05AB                     l2708:
  3940  05AB  0874               	movf	___fladd@aexp,w
  3941  05AC  1903               	btfsc	3,2
  3942  05AD  2DAF               	goto	u3291
  3943  05AE  2DB0               	goto	u3290
  3944  05AF                     u3291:
  3945  05AF  2DE4               	goto	l633
  3946  05B0                     u3290:
  3947  05B0                     l2710:
  3948  05B0  3001               	movlw	1
  3949  05B1  07A0               	addwf	___fladd@b,f
  3950  05B2  3000               	movlw	0
  3951  05B3  1803               	skipnc
  3952  05B4  3001               	movlw	1
  3953  05B5  07A1               	addwf	___fladd@b+1,f
  3954  05B6  3000               	movlw	0
  3955  05B7  1803               	skipnc
  3956  05B8  3001               	movlw	1
  3957  05B9  07A2               	addwf	___fladd@b+2,f
  3958  05BA  3000               	movlw	0
  3959  05BB  1803               	skipnc
  3960  05BC  3001               	movlw	1
  3961  05BD  07A3               	addwf	___fladd@b+3,f
  3962  05BE                     l2712:
  3963  05BE  1C23               	btfss	___fladd@b+3,0
  3964  05BF  2DC1               	goto	u3301
  3965  05C0  2DC2               	goto	u3300
  3966  05C1                     u3301:
  3967  05C1  2DE4               	goto	l633
  3968  05C2                     u3300:
  3969  05C2                     l2714:
  3970  05C2  0820               	movf	___fladd@b,w
  3971  05C3  00A8               	movwf	??___fladd
  3972  05C4  0821               	movf	___fladd@b+1,w
  3973  05C5  00A9               	movwf	??___fladd+1
  3974  05C6  0822               	movf	___fladd@b+2,w
  3975  05C7  00AA               	movwf	??___fladd+2
  3976  05C8  0823               	movf	___fladd@b+3,w
  3977  05C9  00AB               	movwf	??___fladd+3
  3978  05CA  3001               	movlw	1
  3979  05CB  00AC               	movwf	??___fladd+4
  3980  05CC                     u3315:
  3981  05CC  0D2B               	rlf	??___fladd+3,w
  3982  05CD  0CAB               	rrf	??___fladd+3,f
  3983  05CE  0CAA               	rrf	??___fladd+2,f
  3984  05CF  0CA9               	rrf	??___fladd+1,f
  3985  05D0  0CA8               	rrf	??___fladd,f
  3986  05D1                     u3310:
  3987  05D1  0BAC               	decfsz	??___fladd+4,f
  3988  05D2  2DCC               	goto	u3315
  3989  05D3  082B               	movf	??___fladd+3,w
  3990  05D4  00A3               	movwf	___fladd@b+3
  3991  05D5  082A               	movf	??___fladd+2,w
  3992  05D6  00A2               	movwf	___fladd@b+2
  3993  05D7  0829               	movf	??___fladd+1,w
  3994  05D8  00A1               	movwf	___fladd@b+1
  3995  05D9  0828               	movf	??___fladd,w
  3996  05DA  00A0               	movwf	___fladd@b
  3997  05DB  0A75               	incf	___fladd@bexp,w
  3998  05DC  1903               	btfsc	3,2
  3999  05DD  2DDF               	goto	u3321
  4000  05DE  2DE0               	goto	u3320
  4001  05DF                     u3321:
  4002  05DF  2DE4               	goto	l633
  4003  05E0                     u3320:
  4004  05E0                     l2716:
  4005  05E0  3001               	movlw	1
  4006  05E1  00A8               	movwf	??___fladd
  4007  05E2  0828               	movf	??___fladd,w
  4008  05E3  07F5               	addwf	___fladd@bexp,f
  4009  05E4                     l633:
  4010  05E4  0A75               	incf	___fladd@bexp,w
  4011  05E5  1903               	btfsc	3,2
  4012  05E6  2DE8               	goto	u3331
  4013  05E7  2DE9               	goto	u3330
  4014  05E8                     u3331:
  4015  05E8  2DEE               	goto	l2720
  4016  05E9                     u3330:
  4017  05E9                     l2718:
  4018  05E9  0875               	movf	___fladd@bexp,w
  4019  05EA  1D03               	btfss	3,2
  4020  05EB  2DED               	goto	u3341
  4021  05EC  2DEE               	goto	u3340
  4022  05ED                     u3341:
  4023  05ED  2DFC               	goto	l2726
  4024  05EE                     u3340:
  4025  05EE                     l2720:
  4026  05EE  3000               	movlw	0
  4027  05EF  00A3               	movwf	___fladd@b+3
  4028  05F0  3000               	movlw	0
  4029  05F1  00A2               	movwf	___fladd@b+2
  4030  05F2  3000               	movlw	0
  4031  05F3  00A1               	movwf	___fladd@b+1
  4032  05F4  3000               	movlw	0
  4033  05F5  00A0               	movwf	___fladd@b
  4034  05F6                     l2722:
  4035  05F6  0875               	movf	___fladd@bexp,w
  4036  05F7  1D03               	btfss	3,2
  4037  05F8  2DFA               	goto	u3351
  4038  05F9  2DFB               	goto	u3350
  4039  05FA                     u3351:
  4040  05FA  2DFC               	goto	l2726
  4041  05FB                     u3350:
  4042  05FB                     l2724:
  4043  05FB  01F3               	clrf	___fladd@signs
  4044  05FC                     l2726:
  4045  05FC  1C75               	btfss	___fladd@bexp,0
  4046  05FD  2DFF               	goto	u3361
  4047  05FE  2E00               	goto	u3360
  4048  05FF                     u3361:
  4049  05FF  2E02               	goto	l2730
  4050  0600                     u3360:
  4051  0600                     l2728:
  4052  0600  17A2               	bsf	___fladd@b+2,7
  4053  0601  2E06               	goto	l641
  4054  0602                     l2730:
  4055  0602  307F               	movlw	127
  4056  0603  00A8               	movwf	??___fladd
  4057  0604  0828               	movf	??___fladd,w
  4058  0605  05A2               	andwf	___fladd@b+2,f
  4059  0606                     l641:
  4060  0606  0875               	movf	___fladd@bexp,w
  4061  0607  00A8               	movwf	??___fladd
  4062  0608  1003               	clrc
  4063  0609  0C28               	rrf	??___fladd,w
  4064  060A  00A9               	movwf	??___fladd+1
  4065  060B  0829               	movf	??___fladd+1,w
  4066  060C  00A3               	movwf	___fladd@b+3
  4067  060D                     l2732:
  4068  060D  1FF3               	btfss	___fladd@signs,7
  4069  060E  2E10               	goto	u3371
  4070  060F  2E11               	goto	u3370
  4071  0610                     u3371:
  4072  0610  2E12               	goto	l642
  4073  0611                     u3370:
  4074  0611                     l2734:
  4075  0611  17A3               	bsf	___fladd@b+3,7
  4076  0612                     l642:
  4077  0612                     l612:
  4078  0612  0008               	return
  4079  0613                     __end_of___fladd:
  4080                           
  4081                           	psect	text15
  4082  0ACE                     __ptext15:	
  4083 ;; *************** function _cursorLCD *****************
  4084 ;; Defined at:
  4085 ;;		line 50 in file "LCDD2.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  fila            1    wreg     unsigned char 
  4088 ;;  columna         1    6[COMMON] unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  fila            1    8[COMMON] unsigned char 
  4091 ;;  temp            1    9[COMMON] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, pclath, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         1       0       0       0       0
  4102 ;;      Locals:         2       0       0       0       0
  4103 ;;      Temps:          1       0       0       0       0
  4104 ;;      Totals:         4       0       0       0       0
  4105 ;;Total ram usage:        4 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    2
  4108 ;; This function calls:
  4109 ;;		_comandoLCD
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _cursorLCD
  4117  0ACE                     _cursorLCD:
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4121                           ;cursorLCD@fila stored from wreg
  4122  0ACE  00F8               	movwf	cursorLCD@fila
  4123  0ACF                     l2348:
  4124                           
  4125                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  4126  0ACF  0378               	decf	cursorLCD@fila,w
  4127  0AD0  1D03               	btfss	3,2
  4128  0AD1  2AD3               	goto	u2681
  4129  0AD2  2AD4               	goto	u2680
  4130  0AD3                     u2681:
  4131  0AD3  2ADF               	goto	l2354
  4132  0AD4                     u2680:
  4133  0AD4                     l2350:
  4134                           
  4135                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  4136  0AD4  0876               	movf	cursorLCD@columna,w
  4137  0AD5  3E7F               	addlw	127
  4138  0AD6  00F7               	movwf	??_cursorLCD
  4139  0AD7  0877               	movf	??_cursorLCD,w
  4140  0AD8  00F9               	movwf	cursorLCD@temp
  4141  0AD9                     l2352:
  4142                           
  4143                           ;LCDD2.c: 54:         comandoLCD(temp);
  4144  0AD9  0879               	movf	cursorLCD@temp,w
  4145  0ADA  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  4146  0ADF                     l2354:
  4147                           
  4148                           ;LCDD2.c: 57:     if(fila == 2){
  4149  0ADF  3002               	movlw	2
  4150  0AE0  0678               	xorwf	cursorLCD@fila,w
  4151  0AE1  1D03               	btfss	3,2
  4152  0AE2  2AE4               	goto	u2691
  4153  0AE3  2AE5               	goto	u2690
  4154  0AE4                     u2691:
  4155  0AE4  2AF0               	goto	l208
  4156  0AE5                     u2690:
  4157  0AE5                     l2356:
  4158                           
  4159                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  4160  0AE5  0876               	movf	cursorLCD@columna,w
  4161  0AE6  3EBF               	addlw	191
  4162  0AE7  00F7               	movwf	??_cursorLCD
  4163  0AE8  0877               	movf	??_cursorLCD,w
  4164  0AE9  00F9               	movwf	cursorLCD@temp
  4165  0AEA                     l2358:
  4166                           
  4167                           ;LCDD2.c: 59:         comandoLCD(temp);
  4168  0AEA  0879               	movf	cursorLCD@temp,w
  4169  0AEB  120A  158A  2267  120A  158A  	fcall	_comandoLCD
  4170  0AF0                     l208:
  4171  0AF0  0008               	return
  4172  0AF1                     __end_of_cursorLCD:
  4173                           
  4174                           	psect	text16
  4175  0A67                     __ptext16:	
  4176 ;; *************** function _comandoLCD *****************
  4177 ;; Defined at:
  4178 ;;		line 63 in file "LCDD2.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  cmd             1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  cmd             1    5[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0
  4194 ;;      Temps:          2       0       0       0       0
  4195 ;;      Totals:         3       0       0       0       0
  4196 ;;Total ram usage:        3 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_initLCD
  4203 ;;		_cursorLCD
  4204 ;;		_ClearLCD
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _comandoLCD
  4210  0A67                     _comandoLCD:
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _comandoLCD: [wreg]
  4214                           ;comandoLCD@cmd stored from wreg
  4215  0A67  00F5               	movwf	comandoLCD@cmd
  4216  0A68                     l2008:
  4217                           
  4218                           ;LCDD2.c: 64:     RC0 = 0;
  4219  0A68  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0A69  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0A6A  1007               	bcf	7,0	;volatile
  4222  0A6B                     l2010:
  4223                           
  4224                           ;LCDD2.c: 65:     PORTD = cmd;
  4225  0A6B  0875               	movf	comandoLCD@cmd,w
  4226  0A6C  0088               	movwf	8	;volatile
  4227  0A6D                     l2012:
  4228                           
  4229                           ;LCDD2.c: 66:     RC1 = 1;
  4230  0A6D  1487               	bsf	7,1	;volatile
  4231                           
  4232                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4233  0A6E  300B               	movlw	11
  4234  0A6F  00F4               	movwf	??_comandoLCD+1
  4235  0A70  3062               	movlw	98
  4236  0A71  00F3               	movwf	??_comandoLCD
  4237  0A72                     u4097:
  4238  0A72  0BF3               	decfsz	??_comandoLCD,f
  4239  0A73  2A72               	goto	u4097
  4240  0A74  0BF4               	decfsz	??_comandoLCD+1,f
  4241  0A75  2A72               	goto	u4097
  4242  0A76  0000               	nop
  4243  0A77                     l2014:
  4244                           
  4245                           ;LCDD2.c: 68:     RC1 = 0;
  4246  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0A79  1087               	bcf	7,1	;volatile
  4249  0A7A                     l211:
  4250  0A7A  0008               	return
  4251  0A7B                     __end_of_comandoLCD:
  4252                           
  4253                           	psect	text17
  4254  0B9E                     __ptext17:	
  4255 ;; *************** function _configuracion *****************
  4256 ;; Defined at:
  4257 ;;		line 122 in file "main.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0
  4274 ;;      Totals:         0       0       0       0       0
  4275 ;;Total ram usage:        0 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    2
  4278 ;; This function calls:
  4279 ;;		_ADCconfig
  4280 ;;		_configUART
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _configuracion
  4288  0B9E                     _configuracion:
  4289  0B9E                     l2242:	
  4290                           ;incstack = 0
  4291                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4292                           
  4293                           
  4294                           ;main.c: 124:     ANSEL = 0X03;
  4295  0B9E  3003               	movlw	3
  4296  0B9F  1683               	bsf	3,5	;RP0=1, select bank3
  4297  0BA0  1703               	bsf	3,6	;RP1=1, select bank3
  4298  0BA1  0088               	movwf	8	;volatile
  4299  0BA2                     l2244:
  4300                           
  4301                           ;main.c: 125:     ANSELH = 0X00;
  4302  0BA2  0189               	clrf	9	;volatile
  4303  0BA3                     l2246:
  4304                           
  4305                           ;main.c: 126:     TRISA = 0X03;
  4306  0BA3  3003               	movlw	3
  4307  0BA4  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0BA5  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0BA6  0085               	movwf	5	;volatile
  4310                           
  4311                           ;main.c: 127:     TRISB = 0X00;
  4312  0BA7  0186               	clrf	6	;volatile
  4313                           
  4314                           ;main.c: 128:     TRISC = 0X00;
  4315  0BA8  0187               	clrf	7	;volatile
  4316                           
  4317                           ;main.c: 129:     TRISD = 0X00;
  4318  0BA9  0188               	clrf	8	;volatile
  4319                           
  4320                           ;main.c: 130:     TRISE = 0X00;
  4321  0BAA  0189               	clrf	9	;volatile
  4322                           
  4323                           ;main.c: 131:     PORTA = 0X00;
  4324  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0BAD  0185               	clrf	5	;volatile
  4327                           
  4328                           ;main.c: 132:     PORTB = 0X00;
  4329  0BAE  0186               	clrf	6	;volatile
  4330                           
  4331                           ;main.c: 133:     PORTC = 0X00;
  4332  0BAF  0187               	clrf	7	;volatile
  4333                           
  4334                           ;main.c: 134:     PORTD = 0X00;
  4335  0BB0  0188               	clrf	8	;volatile
  4336                           
  4337                           ;main.c: 135:     PORTE = 0X00;
  4338  0BB1  0189               	clrf	9	;volatile
  4339  0BB2                     l2248:
  4340                           
  4341                           ;main.c: 138:     configUART();
  4342  0BB2  120A  158A  2255  120A  158A  	fcall	_configUART
  4343  0BB7                     l2250:
  4344                           
  4345                           ;main.c: 141:     OSCCONbits.IRCF = 0b111;
  4346  0BB7  3070               	movlw	112
  4347  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  4349  0BBA  048F               	iorwf	15,f	;volatile
  4350  0BBB                     l2252:
  4351                           
  4352                           ;main.c: 142:     OSCCONbits.SCS = 0b1;
  4353  0BBB  140F               	bsf	15,0	;volatile
  4354  0BBC                     l2254:
  4355                           
  4356                           ;main.c: 145:     INTCONbits.GIE = 1;
  4357  0BBC  178B               	bsf	11,7	;volatile
  4358  0BBD                     l2256:
  4359                           
  4360                           ;main.c: 146:     INTCONbits.PEIE = 1;
  4361  0BBD  170B               	bsf	11,6	;volatile
  4362  0BBE                     l2258:
  4363                           
  4364                           ;main.c: 147:     INTCONbits.T0IF = 0;
  4365  0BBE  110B               	bcf	11,2	;volatile
  4366  0BBF                     l2260:
  4367                           
  4368                           ;main.c: 148:     INTCONbits.T0IE = 1;
  4369  0BBF  168B               	bsf	11,5	;volatile
  4370  0BC0                     l2262:
  4371                           
  4372                           ;main.c: 149:     PIE1bits.RCIE = 1;
  4373  0BC0  168C               	bsf	12,5	;volatile
  4374  0BC1                     l2264:
  4375                           
  4376                           ;main.c: 152:     OPTION_REGbits.T0CS = 0;
  4377  0BC1  1281               	bcf	1,5	;volatile
  4378  0BC2                     l2266:
  4379                           
  4380                           ;main.c: 153:     OPTION_REGbits.PSA = 0;
  4381  0BC2  1181               	bcf	1,3	;volatile
  4382  0BC3                     l2268:
  4383                           
  4384                           ;main.c: 154:     OPTION_REGbits.PS2 = 1;
  4385  0BC3  1501               	bsf	1,2	;volatile
  4386  0BC4                     l2270:
  4387                           
  4388                           ;main.c: 155:     OPTION_REGbits.PS1 = 1;
  4389  0BC4  1481               	bsf	1,1	;volatile
  4390  0BC5                     l2272:
  4391                           
  4392                           ;main.c: 156:     OPTION_REGbits.PS0 = 0;
  4393  0BC5  1001               	bcf	1,0	;volatile
  4394  0BC6                     l2274:
  4395                           
  4396                           ;main.c: 160:     ADCconfig(0,0);
  4397  0BC6  01F3               	clrf	ADCconfig@just
  4398  0BC7  3000               	movlw	0
  4399  0BC8  120A  158A  2415  120A  158A  	fcall	_ADCconfig
  4400  0BCD                     l2276:
  4401                           
  4402                           ;main.c: 162:     PIR1bits.ADIF = 0;
  4403  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  4404  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  4405  0BCF  130C               	bcf	12,6	;volatile
  4406  0BD0                     l2278:
  4407                           
  4408                           ;main.c: 163:     PIE1bits.ADIE = 1;
  4409  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  4410  0BD1  1303               	bcf	3,6	;RP1=0, select bank1
  4411  0BD2  170C               	bsf	12,6	;volatile
  4412  0BD3                     l110:
  4413  0BD3  0008               	return
  4414  0BD4                     __end_of_configuracion:
  4415                           
  4416                           	psect	text18
  4417  0A55                     __ptext18:	
  4418 ;; *************** function _configUART *****************
  4419 ;; Defined at:
  4420 ;;		line 11 in file "ComSerial.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4434 ;;      Params:         0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_configuracion
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _configUART
  4450  0A55                     _configUART:
  4451  0A55                     l1934:	
  4452                           ;incstack = 0
  4453                           ; Regs used in _configUART: [wreg]
  4454                           
  4455                           
  4456                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  4457  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0A56  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0A57  1307               	bcf	7,6	;volatile
  4460                           
  4461                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  4462  0A58  1787               	bsf	7,7	;volatile
  4463  0A59                     l1936:
  4464                           
  4465                           ;ComSerial.c: 15:     SPBRG = 12;
  4466  0A59  300C               	movlw	12
  4467  0A5A  0099               	movwf	25	;volatile
  4468  0A5B                     l1938:
  4469                           
  4470                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  4471  0A5B  1118               	bcf	24,2	;volatile
  4472  0A5C                     l1940:
  4473                           
  4474                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  4475  0A5C  1698               	bsf	24,5	;volatile
  4476  0A5D                     l1942:
  4477                           
  4478                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  4479  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0A5F  1618               	bsf	24,4	;volatile
  4482  0A60                     l1944:
  4483                           
  4484                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  4485  0A60  1683               	bsf	3,5	;RP0=1, select bank1
  4486  0A61  1303               	bcf	3,6	;RP1=0, select bank1
  4487  0A62  1218               	bcf	24,4	;volatile
  4488  0A63                     l1946:
  4489                           
  4490                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  4491  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0A65  1798               	bsf	24,7	;volatile
  4494  0A66                     l148:
  4495  0A66  0008               	return
  4496  0A67                     __end_of_configUART:
  4497                           
  4498                           	psect	text19
  4499  0C15                     __ptext19:	
  4500 ;; *************** function _ADCconfig *****************
  4501 ;; Defined at:
  4502 ;;		line 10 in file "ADC.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  canal           1    wreg     unsigned char 
  4505 ;;  just            1    3[COMMON] unsigned char 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  canal           1    6[COMMON] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         1       0       0       0       0
  4518 ;;      Locals:         1       0       0       0       0
  4519 ;;      Temps:          2       0       0       0       0
  4520 ;;      Totals:         4       0       0       0       0
  4521 ;;Total ram usage:        4 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_configuracion
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           
  4532                           ;psect for function _ADCconfig
  4533  0C15                     _ADCconfig:
  4534                           
  4535                           ;incstack = 0
  4536                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
  4537                           ;ADCconfig@canal stored from wreg
  4538  0C15  00F6               	movwf	ADCconfig@canal
  4539  0C16                     l1948:
  4540                           
  4541                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
  4542  0C16  2C2F               	goto	l1960
  4543  0C17                     l1950:
  4544                           
  4545                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
  4546  0C17  303F               	movlw	-193
  4547  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  4548  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0C1A  059F               	andwf	31,f	;volatile
  4550                           
  4551                           ;ADC.c: 18:             break;
  4552  0C1B  2C45               	goto	l1962
  4553  0C1C                     l1952:
  4554                           
  4555                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
  4556  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0C1E  081F               	movf	31,w	;volatile
  4559  0C1F  393F               	andlw	-193
  4560  0C20  3840               	iorlw	64
  4561  0C21  009F               	movwf	31	;volatile
  4562                           
  4563                           ;ADC.c: 21:             break;
  4564  0C22  2C45               	goto	l1962
  4565  0C23                     l1954:
  4566                           
  4567                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
  4568  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4569  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4570  0C25  081F               	movf	31,w	;volatile
  4571  0C26  393F               	andlw	-193
  4572  0C27  3880               	iorlw	128
  4573  0C28  009F               	movwf	31	;volatile
  4574                           
  4575                           ;ADC.c: 24:             break;
  4576  0C29  2C45               	goto	l1962
  4577  0C2A                     l1956:
  4578                           
  4579                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  4580  0C2A  30C0               	movlw	192
  4581  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0C2D  049F               	iorwf	31,f	;volatile
  4584                           
  4585                           ;ADC.c: 27:             break;
  4586  0C2E  2C45               	goto	l1962
  4587  0C2F                     l1960:
  4588  0C2F  1683               	bsf	3,5	;RP0=1, select bank1
  4589  0C30  1303               	bcf	3,6	;RP1=0, select bank1
  4590  0C31  0E0F               	swapf	15,w	;volatile
  4591  0C32  3907               	andlw	7
  4592  0C33  00F4               	movwf	??_ADCconfig
  4593  0C34  01F5               	clrf	??_ADCconfig+1
  4594                           
  4595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4596                           ; Switch size 1, requested type "simple"
  4597                           ; Number of cases is 1, Range of values is 0 to 0
  4598                           ; switch strategies available:
  4599                           ; Name         Instructions Cycles
  4600                           ; simple_byte            4     3 (average)
  4601                           ; direct_byte           11     8 (fixed)
  4602                           ; jumptable            260     6 (fixed)
  4603                           ;	Chosen strategy is simple_byte
  4604  0C35  0875               	movf	??_ADCconfig+1,w
  4605  0C36  3A00               	xorlw	0	; case 0
  4606  0C37  1903               	skipnz
  4607  0C38  2C3A               	goto	l3134
  4608  0C39  2C2A               	goto	l1956
  4609  0C3A                     l3134:
  4610                           
  4611                           ; Switch size 1, requested type "simple"
  4612                           ; Number of cases is 3, Range of values is 4 to 7
  4613                           ; switch strategies available:
  4614                           ; Name         Instructions Cycles
  4615                           ; simple_byte           10     6 (average)
  4616                           ; direct_byte           23    11 (fixed)
  4617                           ; jumptable            263     9 (fixed)
  4618                           ;	Chosen strategy is simple_byte
  4619  0C3A  0874               	movf	??_ADCconfig,w
  4620  0C3B  3A04               	xorlw	4	; case 4
  4621  0C3C  1903               	skipnz
  4622  0C3D  2C17               	goto	l1950
  4623  0C3E  3A02               	xorlw	2	; case 6
  4624  0C3F  1903               	skipnz
  4625  0C40  2C1C               	goto	l1952
  4626  0C41  3A01               	xorlw	1	; case 7
  4627  0C42  1903               	skipnz
  4628  0C43  2C23               	goto	l1954
  4629  0C44  2C2A               	goto	l1956
  4630  0C45                     l1962:
  4631                           
  4632                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
  4633  0C45  0876               	movf	ADCconfig@canal,w
  4634  0C46  00F4               	movwf	??_ADCconfig
  4635  0C47  0DF4               	rlf	??_ADCconfig,f
  4636  0C48  0DF4               	rlf	??_ADCconfig,f
  4637  0C49  081F               	movf	31,w	;volatile
  4638  0C4A  0674               	xorwf	??_ADCconfig,w
  4639  0C4B  39C3               	andlw	-61
  4640  0C4C  0674               	xorwf	??_ADCconfig,w
  4641  0C4D  009F               	movwf	31	;volatile
  4642  0C4E                     l1964:
  4643                           
  4644                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
  4645  0C4E  109F               	bcf	31,1	;volatile
  4646  0C4F                     l1966:
  4647                           
  4648                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
  4649  0C4F  141F               	bsf	31,0	;volatile
  4650  0C50                     l1968:
  4651                           
  4652                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
  4653  0C50  0C73               	rrf	ADCconfig@just,w
  4654  0C51  1683               	bsf	3,5	;RP0=1, select bank1
  4655  0C52  1303               	bcf	3,6	;RP1=0, select bank1
  4656  0C53  1C03               	skipc
  4657  0C54  139F               	bcf	31,7	;volatile
  4658  0C55  1803               	skipnc
  4659  0C56  179F               	bsf	31,7	;volatile
  4660  0C57                     l1970:
  4661                           
  4662                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
  4663  0C57  129F               	bcf	31,5	;volatile
  4664  0C58                     l1972:
  4665                           
  4666                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  4667  0C58  121F               	bcf	31,4	;volatile
  4668  0C59                     l125:
  4669  0C59  0008               	return
  4670  0C5A                     __end_of_ADCconfig:
  4671                           
  4672                           	psect	text20
  4673  0A90                     __ptext20:	
  4674 ;; *************** function _LCDstring *****************
  4675 ;; Defined at:
  4676 ;;		line 75 in file "LCDD2.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  mensaje         1    wreg     PTR unsigned char 
  4679 ;;		 -> STR_5(16), 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  mensaje         1    6[COMMON] PTR unsigned char 
  4682 ;;		 -> STR_5(16), 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4692 ;;      Params:         0       0       0       0       0
  4693 ;;      Locals:         1       0       0       0       0
  4694 ;;      Temps:          1       0       0       0       0
  4695 ;;      Totals:         2       0       0       0       0
  4696 ;;Total ram usage:        2 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    2
  4699 ;; This function calls:
  4700 ;;		_dispCHAR
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _LCDstring
  4708  0A90                     _LCDstring:
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4712                           ;LCDstring@mensaje stored from wreg
  4713  0A90  00F6               	movwf	LCDstring@mensaje
  4714  0A91                     l2360:
  4715                           
  4716                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4717  0A91  2AA2               	goto	l2366
  4718  0A92                     l2362:
  4719                           
  4720                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  4721  0A92  0876               	movf	LCDstring@mensaje,w
  4722  0A93  0084               	movwf	4
  4723  0A94  120A  158A  2000  120A  158A  	fcall	stringdir
  4724  0A99  120A  158A  2245  120A  158A  	fcall	_dispCHAR
  4725  0A9E                     l2364:
  4726                           
  4727                           ;LCDD2.c: 78:         mensaje ++;
  4728  0A9E  3001               	movlw	1
  4729  0A9F  00F5               	movwf	??_LCDstring
  4730  0AA0  0875               	movf	??_LCDstring,w
  4731  0AA1  07F6               	addwf	LCDstring@mensaje,f
  4732  0AA2                     l2366:
  4733                           
  4734                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4735  0AA2  0876               	movf	LCDstring@mensaje,w
  4736  0AA3  0084               	movwf	4
  4737  0AA4  120A  158A  2000  120A  158A  	fcall	stringdir
  4738  0AA9  3A00               	xorlw	0
  4739  0AAA  1D03               	skipz
  4740  0AAB  2AAD               	goto	u2701
  4741  0AAC  2AAE               	goto	u2700
  4742  0AAD                     u2701:
  4743  0AAD  2A92               	goto	l2362
  4744  0AAE                     u2700:
  4745  0AAE                     l220:
  4746  0AAE  0008               	return
  4747  0AAF                     __end_of_LCDstring:
  4748                           
  4749                           	psect	text21
  4750  0A45                     __ptext21:	
  4751 ;; *************** function _dispCHAR *****************
  4752 ;; Defined at:
  4753 ;;		line 40 in file "LCDD2.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  b               1    wreg     unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  b               1    4[COMMON] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         0       0       0       0       0
  4768 ;;      Locals:         1       0       0       0       0
  4769 ;;      Temps:          1       0       0       0       0
  4770 ;;      Totals:         2       0       0       0       0
  4771 ;;Total ram usage:        2 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;;		_LCDstring
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _dispCHAR
  4784  0A45                     _dispCHAR:
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _dispCHAR: [wreg]
  4788                           ;dispCHAR@b stored from wreg
  4789  0A45  00F4               	movwf	dispCHAR@b
  4790  0A46                     l1926:
  4791                           
  4792                           ;LCDD2.c: 42:     RC0 = 1;
  4793  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  4794  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  4795  0A48  1407               	bsf	7,0	;volatile
  4796  0A49                     l1928:
  4797                           
  4798                           ;LCDD2.c: 43:     PORTD = b;
  4799  0A49  0874               	movf	dispCHAR@b,w
  4800  0A4A  0088               	movwf	8	;volatile
  4801  0A4B                     l1930:
  4802                           
  4803                           ;LCDD2.c: 44:     RC1 = 1;
  4804  0A4B  1487               	bsf	7,1	;volatile
  4805                           
  4806                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4807  0A4C  301A               	movlw	26
  4808  0A4D  00F3               	movwf	??_dispCHAR
  4809  0A4E                     u4107:
  4810  0A4E  0BF3               	decfsz	??_dispCHAR,f
  4811  0A4F  2A4E               	goto	u4107
  4812  0A50  0000               	nop
  4813  0A51                     l1932:
  4814                           
  4815                           ;LCDD2.c: 46:     RC1 = 0;
  4816  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0A53  1087               	bcf	7,1	;volatile
  4819  0A54                     l203:
  4820  0A54  0008               	return
  4821  0A55                     __end_of_dispCHAR:
  4822                           
  4823                           	psect	text22
  4824  0BD4                     __ptext22:	
  4825 ;; *************** function _CONVdec *****************
  4826 ;; Defined at:
  4827 ;;		line 52 in file "ADC.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  lectura         1    wreg     PTR unsigned char 
  4830 ;;		 -> pot2(1), pot1(1), 
  4831 ;;  equiv           1   36[BANK0 ] PTR float 
  4832 ;;		 -> val2(4), val1(4), 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  lectura         1    7[COMMON] PTR unsigned char 
  4835 ;;		 -> pot2(1), pot1(1), 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4845 ;;      Params:         0       1       0       0       0
  4846 ;;      Locals:         1       0       0       0       0
  4847 ;;      Temps:          0       4       0       0       0
  4848 ;;      Totals:         1       5       0       0       0
  4849 ;;Total ram usage:        6 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    3
  4852 ;; This function calls:
  4853 ;;		___flmul
  4854 ;;		___xxtofl
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _CONVdec
  4862  0BD4                     _CONVdec:
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _CONVdec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4866                           ;CONVdec@lectura stored from wreg
  4867  0BD4  00F7               	movwf	CONVdec@lectura
  4868  0BD5                     l3006:
  4869                           
  4870                           ;ADC.c: 54:     *equiv = (float)(0.01961)*(*lectura);
  4871  0BD5  303C               	movlw	60
  4872  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  4873  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  4874  0BD8  00AD               	movwf	___flmul@b+3
  4875  0BD9  30A0               	movlw	160
  4876  0BDA  00AC               	movwf	___flmul@b+2
  4877  0BDB  30A5               	movlw	165
  4878  0BDC  00AB               	movwf	___flmul@b+1
  4879  0BDD  3027               	movlw	39
  4880  0BDE  00AA               	movwf	___flmul@b
  4881  0BDF  0877               	movf	CONVdec@lectura,w
  4882  0BE0  0084               	movwf	4
  4883  0BE1  1383               	bcf	3,7	;select IRP bank0
  4884  0BE2  0800               	movf	0,w
  4885  0BE3  00C5               	movwf	??_CONVdec
  4886  0BE4  01C6               	clrf	??_CONVdec+1
  4887  0BE5  01C7               	clrf	??_CONVdec+2
  4888  0BE6  01C8               	clrf	??_CONVdec+3
  4889  0BE7  0848               	movf	??_CONVdec+3,w
  4890  0BE8  00F6               	movwf	___xxtofl@val+3
  4891  0BE9  0847               	movf	??_CONVdec+2,w
  4892  0BEA  00F5               	movwf	___xxtofl@val+2
  4893  0BEB  0846               	movf	??_CONVdec+1,w
  4894  0BEC  00F4               	movwf	___xxtofl@val+1
  4895  0BED  0845               	movf	??_CONVdec,w
  4896  0BEE  00F3               	movwf	___xxtofl@val
  4897  0BEF  3001               	movlw	1
  4898  0BF0  120A  158A  2744  120A  158A  	fcall	___xxtofl
  4899  0BF5  0876               	movf	?___xxtofl+3,w
  4900  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0BF8  00B1               	movwf	___flmul@a+3
  4903  0BF9  0875               	movf	?___xxtofl+2,w
  4904  0BFA  00B0               	movwf	___flmul@a+2
  4905  0BFB  0874               	movf	?___xxtofl+1,w
  4906  0BFC  00AF               	movwf	___flmul@a+1
  4907  0BFD  0873               	movf	?___xxtofl,w
  4908  0BFE  00AE               	movwf	___flmul@a
  4909  0BFF  120A  118A  2022  120A  158A  	fcall	___flmul
  4910  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4911  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4912  0C06  0844               	movf	CONVdec@equiv,w
  4913  0C07  0084               	movwf	4
  4914  0C08  082A               	movf	?___flmul,w
  4915  0C09  1383               	bcf	3,7	;select IRP bank0
  4916  0C0A  0080               	movwf	0
  4917  0C0B  0A84               	incf	4,f
  4918  0C0C  082B               	movf	?___flmul+1,w
  4919  0C0D  0080               	movwf	0
  4920  0C0E  0A84               	incf	4,f
  4921  0C0F  082C               	movf	?___flmul+2,w
  4922  0C10  0080               	movwf	0
  4923  0C11  0A84               	incf	4,f
  4924  0C12  082D               	movf	?___flmul+3,w
  4925  0C13  0080               	movwf	0
  4926  0C14                     l131:
  4927  0C14  0008               	return
  4928  0C15                     __end_of_CONVdec:
  4929                           
  4930                           	psect	text23
  4931  0F44                     __ptext23:	
  4932 ;; *************** function ___xxtofl *****************
  4933 ;; Defined at:
  4934 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  sign            1    wreg     unsigned char 
  4937 ;;  val             4    3[COMMON] long 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  sign            1    4[BANK0 ] unsigned char 
  4940 ;;  arg             4    6[BANK0 ] unsigned long 
  4941 ;;  exp             1    5[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  4    3[COMMON] unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4951 ;;      Params:         4       0       0       0       0
  4952 ;;      Locals:         0       6       0       0       0
  4953 ;;      Temps:          0       4       0       0       0
  4954 ;;      Totals:         4      10       0       0       0
  4955 ;;Total ram usage:       14 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    1
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_CONVdec
  4962 ;;		_sendfloat
  4963 ;;		_floTochar
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function ___xxtofl
  4969  0F44                     ___xxtofl:
  4970                           
  4971                           ;incstack = 0
  4972                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4973                           ;___xxtofl@sign stored from wreg
  4974  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4975  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0F46  00A4               	movwf	___xxtofl@sign
  4977  0F47                     l2962:
  4978  0F47  0824               	movf	___xxtofl@sign,w
  4979  0F48  1903               	btfsc	3,2
  4980  0F49  2F4B               	goto	u3911
  4981  0F4A  2F4C               	goto	u3910
  4982  0F4B                     u3911:
  4983  0F4B  2F60               	goto	l2968
  4984  0F4C                     u3910:
  4985  0F4C                     l2964:
  4986  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  4987  0F4D  2F4F               	goto	u3921
  4988  0F4E  2F50               	goto	u3920
  4989  0F4F                     u3921:
  4990  0F4F  2F60               	goto	l2968
  4991  0F50                     u3920:
  4992  0F50                     l2966:
  4993  0F50  0973               	comf	___xxtofl@val,w
  4994  0F51  00A6               	movwf	___xxtofl@arg
  4995  0F52  0974               	comf	___xxtofl@val+1,w
  4996  0F53  00A7               	movwf	___xxtofl@arg+1
  4997  0F54  0975               	comf	___xxtofl@val+2,w
  4998  0F55  00A8               	movwf	___xxtofl@arg+2
  4999  0F56  0976               	comf	___xxtofl@val+3,w
  5000  0F57  00A9               	movwf	___xxtofl@arg+3
  5001  0F58  0AA6               	incf	___xxtofl@arg,f
  5002  0F59  1903               	skipnz
  5003  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  5004  0F5B  1903               	skipnz
  5005  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  5006  0F5D  1903               	skipnz
  5007  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  5008  0F5F  2F68               	goto	l739
  5009  0F60                     l2968:
  5010  0F60  0876               	movf	___xxtofl@val+3,w
  5011  0F61  00A9               	movwf	___xxtofl@arg+3
  5012  0F62  0875               	movf	___xxtofl@val+2,w
  5013  0F63  00A8               	movwf	___xxtofl@arg+2
  5014  0F64  0874               	movf	___xxtofl@val+1,w
  5015  0F65  00A7               	movwf	___xxtofl@arg+1
  5016  0F66  0873               	movf	___xxtofl@val,w
  5017  0F67  00A6               	movwf	___xxtofl@arg
  5018  0F68                     l739:
  5019  0F68  0876               	movf	___xxtofl@val+3,w
  5020  0F69  0475               	iorwf	___xxtofl@val+2,w
  5021  0F6A  0474               	iorwf	___xxtofl@val+1,w
  5022  0F6B  0473               	iorwf	___xxtofl@val,w
  5023  0F6C  1D03               	skipz
  5024  0F6D  2F6F               	goto	u3931
  5025  0F6E  2F70               	goto	u3930
  5026  0F6F                     u3931:
  5027  0F6F  2F79               	goto	l2974
  5028  0F70                     u3930:
  5029  0F70                     l2970:
  5030  0F70  3000               	movlw	0
  5031  0F71  00F6               	movwf	?___xxtofl+3
  5032  0F72  3000               	movlw	0
  5033  0F73  00F5               	movwf	?___xxtofl+2
  5034  0F74  3000               	movlw	0
  5035  0F75  00F4               	movwf	?___xxtofl+1
  5036  0F76  3000               	movlw	0
  5037  0F77  00F3               	movwf	?___xxtofl
  5038  0F78  2FFF               	goto	l741
  5039  0F79                     l2974:
  5040  0F79  3096               	movlw	150
  5041  0F7A  00A0               	movwf	??___xxtofl
  5042  0F7B  0820               	movf	??___xxtofl,w
  5043  0F7C  00A5               	movwf	___xxtofl@exp
  5044  0F7D  2F8B               	goto	l2978
  5045  0F7E                     l2976:
  5046  0F7E  3001               	movlw	1
  5047  0F7F  00A0               	movwf	??___xxtofl
  5048  0F80  0820               	movf	??___xxtofl,w
  5049  0F81  07A5               	addwf	___xxtofl@exp,f
  5050  0F82  3001               	movlw	1
  5051  0F83                     u3945:
  5052  0F83  1003               	clrc
  5053  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  5054  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  5055  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  5056  0F87  0CA6               	rrf	___xxtofl@arg,f
  5057  0F88  3EFF               	addlw	-1
  5058  0F89  1D03               	skipz
  5059  0F8A  2F83               	goto	u3945
  5060  0F8B                     l2978:
  5061  0F8B  30FE               	movlw	254
  5062  0F8C  0529               	andwf	___xxtofl@arg+3,w
  5063  0F8D  1D03               	btfss	3,2
  5064  0F8E  2F90               	goto	u3951
  5065  0F8F  2F91               	goto	u3950
  5066  0F90                     u3951:
  5067  0F90  2F7E               	goto	l2976
  5068  0F91                     u3950:
  5069  0F91  2FAD               	goto	l745
  5070  0F92                     l2980:
  5071  0F92  3001               	movlw	1
  5072  0F93  00A0               	movwf	??___xxtofl
  5073  0F94  0820               	movf	??___xxtofl,w
  5074  0F95  07A5               	addwf	___xxtofl@exp,f
  5075  0F96                     l2982:
  5076  0F96  3001               	movlw	1
  5077  0F97  07A6               	addwf	___xxtofl@arg,f
  5078  0F98  3000               	movlw	0
  5079  0F99  1803               	skipnc
  5080  0F9A  3001               	movlw	1
  5081  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  5082  0F9C  3000               	movlw	0
  5083  0F9D  1803               	skipnc
  5084  0F9E  3001               	movlw	1
  5085  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  5086  0FA0  3000               	movlw	0
  5087  0FA1  1803               	skipnc
  5088  0FA2  3001               	movlw	1
  5089  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  5090  0FA4                     l2984:
  5091  0FA4  3001               	movlw	1
  5092  0FA5                     u3965:
  5093  0FA5  1003               	clrc
  5094  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  5095  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  5096  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  5097  0FA9  0CA6               	rrf	___xxtofl@arg,f
  5098  0FAA  3EFF               	addlw	-1
  5099  0FAB  1D03               	skipz
  5100  0FAC  2FA5               	goto	u3965
  5101  0FAD                     l745:
  5102  0FAD  30FF               	movlw	255
  5103  0FAE  0529               	andwf	___xxtofl@arg+3,w
  5104  0FAF  1D03               	btfss	3,2
  5105  0FB0  2FB2               	goto	u3971
  5106  0FB1  2FB3               	goto	u3970
  5107  0FB2                     u3971:
  5108  0FB2  2F92               	goto	l2980
  5109  0FB3                     u3970:
  5110  0FB3  2FBF               	goto	l2988
  5111  0FB4                     l2986:
  5112  0FB4  3001               	movlw	1
  5113  0FB5  02A5               	subwf	___xxtofl@exp,f
  5114  0FB6  3001               	movlw	1
  5115  0FB7  00A0               	movwf	??___xxtofl
  5116  0FB8                     u3985:
  5117  0FB8  1003               	clrc
  5118  0FB9  0DA6               	rlf	___xxtofl@arg,f
  5119  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  5120  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  5121  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  5122  0FBD  0BA0               	decfsz	??___xxtofl,f
  5123  0FBE  2FB8               	goto	u3985
  5124  0FBF                     l2988:
  5125  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  5126  0FC0  2FC2               	goto	u3991
  5127  0FC1  2FC3               	goto	u3990
  5128  0FC2                     u3991:
  5129  0FC2  2FC9               	goto	l752
  5130  0FC3                     u3990:
  5131  0FC3                     l2990:
  5132  0FC3  3002               	movlw	2
  5133  0FC4  0225               	subwf	___xxtofl@exp,w
  5134  0FC5  1803               	skipnc
  5135  0FC6  2FC8               	goto	u4001
  5136  0FC7  2FC9               	goto	u4000
  5137  0FC8                     u4001:
  5138  0FC8  2FB4               	goto	l2986
  5139  0FC9                     u4000:
  5140  0FC9                     l752:
  5141  0FC9  1825               	btfsc	___xxtofl@exp,0
  5142  0FCA  2FCC               	goto	u4011
  5143  0FCB  2FCD               	goto	u4010
  5144  0FCC                     u4011:
  5145  0FCC  2FD5               	goto	l753
  5146  0FCD                     u4010:
  5147  0FCD                     l2992:
  5148  0FCD  30FF               	movlw	255
  5149  0FCE  05A6               	andwf	___xxtofl@arg,f
  5150  0FCF  30FF               	movlw	255
  5151  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  5152  0FD1  307F               	movlw	127
  5153  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  5154  0FD3  30FF               	movlw	255
  5155  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  5156  0FD5                     l753:
  5157  0FD5  1003               	clrc
  5158  0FD6  0CA5               	rrf	___xxtofl@exp,f
  5159  0FD7                     l2994:
  5160  0FD7  0825               	movf	___xxtofl@exp,w
  5161  0FD8  00A0               	movwf	??___xxtofl
  5162  0FD9  01A1               	clrf	??___xxtofl+1
  5163  0FDA  01A2               	clrf	??___xxtofl+2
  5164  0FDB  01A3               	clrf	??___xxtofl+3
  5165  0FDC  3018               	movlw	24
  5166  0FDD                     u4025:
  5167  0FDD  1003               	clrc
  5168  0FDE  0DA0               	rlf	??___xxtofl,f
  5169  0FDF  0DA1               	rlf	??___xxtofl+1,f
  5170  0FE0  0DA2               	rlf	??___xxtofl+2,f
  5171  0FE1  0DA3               	rlf	??___xxtofl+3,f
  5172  0FE2                     u4020:
  5173  0FE2  3EFF               	addlw	-1
  5174  0FE3  1D03               	skipz
  5175  0FE4  2FDD               	goto	u4025
  5176  0FE5  0820               	movf	??___xxtofl,w
  5177  0FE6  04A6               	iorwf	___xxtofl@arg,f
  5178  0FE7  0821               	movf	??___xxtofl+1,w
  5179  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  5180  0FE9  0822               	movf	??___xxtofl+2,w
  5181  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  5182  0FEB  0823               	movf	??___xxtofl+3,w
  5183  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  5184  0FED                     l2996:
  5185  0FED  0824               	movf	___xxtofl@sign,w
  5186  0FEE  1903               	btfsc	3,2
  5187  0FEF  2FF1               	goto	u4031
  5188  0FF0  2FF2               	goto	u4030
  5189  0FF1                     u4031:
  5190  0FF1  2FF7               	goto	l3002
  5191  0FF2                     u4030:
  5192  0FF2                     l2998:
  5193  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  5194  0FF3  2FF5               	goto	u4041
  5195  0FF4  2FF6               	goto	u4040
  5196  0FF5                     u4041:
  5197  0FF5  2FF7               	goto	l3002
  5198  0FF6                     u4040:
  5199  0FF6                     l3000:
  5200  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  5201  0FF7                     l3002:
  5202  0FF7  0829               	movf	___xxtofl@arg+3,w
  5203  0FF8  00F6               	movwf	?___xxtofl+3
  5204  0FF9  0828               	movf	___xxtofl@arg+2,w
  5205  0FFA  00F5               	movwf	?___xxtofl+2
  5206  0FFB  0827               	movf	___xxtofl@arg+1,w
  5207  0FFC  00F4               	movwf	?___xxtofl+1
  5208  0FFD  0826               	movf	___xxtofl@arg,w
  5209  0FFE  00F3               	movwf	?___xxtofl
  5210  0FFF                     l741:
  5211  0FFF  0008               	return
  5212  1000                     __end_of___xxtofl:
  5213                           
  5214                           	psect	text24
  5215  0022                     __ptext24:	
  5216 ;; *************** function ___flmul *****************
  5217 ;; Defined at:
  5218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  b               4   10[BANK0 ] unsigned char 
  5221 ;;  a               4   14[BANK0 ] unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  prod            4   30[BANK0 ] struct .
  5224 ;;  grs             4   25[BANK0 ] unsigned long 
  5225 ;;  temp            2   34[BANK0 ] struct .
  5226 ;;  bexp            1   29[BANK0 ] unsigned char 
  5227 ;;  aexp            1   24[BANK0 ] unsigned char 
  5228 ;;  sign            1   23[BANK0 ] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  4   10[BANK0 ] unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5238 ;;      Params:         0       8       0       0       0
  5239 ;;      Locals:         0      13       0       0       0
  5240 ;;      Temps:          0       5       0       0       0
  5241 ;;      Totals:         0      26       0       0       0
  5242 ;;Total ram usage:       26 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    2
  5245 ;; This function calls:
  5246 ;;		__Umul8_16
  5247 ;; This function is called by:
  5248 ;;		_CONVdec
  5249 ;;		_sendfloat
  5250 ;;		_floTochar
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function ___flmul
  5256  0022                     ___flmul:
  5257  0022                     l2822:	
  5258                           ;incstack = 0
  5259                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5260                           
  5261  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0024  082D               	movf	___flmul@b+3,w
  5264  0025  3980               	andlw	128
  5265  0026  00B2               	movwf	??___flmul
  5266  0027  0832               	movf	??___flmul,w
  5267  0028  00B7               	movwf	___flmul@sign
  5268  0029                     l2824:
  5269  0029  082D               	movf	___flmul@b+3,w
  5270  002A  00B2               	movwf	??___flmul
  5271  002B  0732               	addwf	??___flmul,w
  5272  002C  00B3               	movwf	??___flmul+1
  5273  002D  0833               	movf	??___flmul+1,w
  5274  002E  00BD               	movwf	___flmul@bexp
  5275  002F                     l2826:
  5276  002F  1FAC               	btfss	___flmul@b+2,7
  5277  0030  2832               	goto	u3541
  5278  0031  2833               	goto	u3540
  5279  0032                     u3541:
  5280  0032  2834               	goto	l2830
  5281  0033                     u3540:
  5282  0033                     l2828:
  5283  0033  143D               	bsf	___flmul@bexp,0
  5284  0034                     l2830:
  5285  0034  083D               	movf	___flmul@bexp,w
  5286  0035  1903               	btfsc	3,2
  5287  0036  2838               	goto	u3551
  5288  0037  2839               	goto	u3550
  5289  0038                     u3551:
  5290  0038  2848               	goto	l2838
  5291  0039                     u3550:
  5292  0039                     l2832:
  5293  0039  0A3D               	incf	___flmul@bexp,w
  5294  003A  1D03               	btfss	3,2
  5295  003B  283D               	goto	u3561
  5296  003C  283E               	goto	u3560
  5297  003D                     u3561:
  5298  003D  2846               	goto	l2836
  5299  003E                     u3560:
  5300  003E                     l2834:
  5301  003E  3000               	movlw	0
  5302  003F  00AD               	movwf	___flmul@b+3
  5303  0040  3000               	movlw	0
  5304  0041  00AC               	movwf	___flmul@b+2
  5305  0042  3000               	movlw	0
  5306  0043  00AB               	movwf	___flmul@b+1
  5307  0044  3000               	movlw	0
  5308  0045  00AA               	movwf	___flmul@b
  5309  0046                     l2836:
  5310  0046  17AC               	bsf	___flmul@b+2,7
  5311  0047  2850               	goto	l2840
  5312  0048                     l2838:
  5313  0048  3000               	movlw	0
  5314  0049  00AD               	movwf	___flmul@b+3
  5315  004A  3000               	movlw	0
  5316  004B  00AC               	movwf	___flmul@b+2
  5317  004C  3000               	movlw	0
  5318  004D  00AB               	movwf	___flmul@b+1
  5319  004E  3000               	movlw	0
  5320  004F  00AA               	movwf	___flmul@b
  5321  0050                     l2840:
  5322  0050  0831               	movf	___flmul@a+3,w
  5323  0051  3980               	andlw	128
  5324  0052  00B2               	movwf	??___flmul
  5325  0053  0832               	movf	??___flmul,w
  5326  0054  06B7               	xorwf	___flmul@sign,f
  5327  0055                     l2842:
  5328  0055  0831               	movf	___flmul@a+3,w
  5329  0056  00B2               	movwf	??___flmul
  5330  0057  0732               	addwf	??___flmul,w
  5331  0058  00B3               	movwf	??___flmul+1
  5332  0059  0833               	movf	??___flmul+1,w
  5333  005A  00B8               	movwf	___flmul@aexp
  5334  005B                     l2844:
  5335  005B  1FB0               	btfss	___flmul@a+2,7
  5336  005C  285E               	goto	u3571
  5337  005D  285F               	goto	u3570
  5338  005E                     u3571:
  5339  005E  2860               	goto	l2848
  5340  005F                     u3570:
  5341  005F                     l2846:
  5342  005F  1438               	bsf	___flmul@aexp,0
  5343  0060                     l2848:
  5344  0060  0838               	movf	___flmul@aexp,w
  5345  0061  1903               	btfsc	3,2
  5346  0062  2864               	goto	u3581
  5347  0063  2865               	goto	u3580
  5348  0064                     u3581:
  5349  0064  2874               	goto	l2856
  5350  0065                     u3580:
  5351  0065                     l2850:
  5352  0065  0A38               	incf	___flmul@aexp,w
  5353  0066  1D03               	btfss	3,2
  5354  0067  2869               	goto	u3591
  5355  0068  286A               	goto	u3590
  5356  0069                     u3591:
  5357  0069  2872               	goto	l2854
  5358  006A                     u3590:
  5359  006A                     l2852:
  5360  006A  3000               	movlw	0
  5361  006B  00B1               	movwf	___flmul@a+3
  5362  006C  3000               	movlw	0
  5363  006D  00B0               	movwf	___flmul@a+2
  5364  006E  3000               	movlw	0
  5365  006F  00AF               	movwf	___flmul@a+1
  5366  0070  3000               	movlw	0
  5367  0071  00AE               	movwf	___flmul@a
  5368  0072                     l2854:
  5369  0072  17B0               	bsf	___flmul@a+2,7
  5370  0073  287C               	goto	l2858
  5371  0074                     l2856:
  5372  0074  3000               	movlw	0
  5373  0075  00B1               	movwf	___flmul@a+3
  5374  0076  3000               	movlw	0
  5375  0077  00B0               	movwf	___flmul@a+2
  5376  0078  3000               	movlw	0
  5377  0079  00AF               	movwf	___flmul@a+1
  5378  007A  3000               	movlw	0
  5379  007B  00AE               	movwf	___flmul@a
  5380  007C                     l2858:
  5381  007C  0838               	movf	___flmul@aexp,w
  5382  007D  1903               	btfsc	3,2
  5383  007E  2880               	goto	u3601
  5384  007F  2881               	goto	u3600
  5385  0080                     u3601:
  5386  0080  2886               	goto	l2862
  5387  0081                     u3600:
  5388  0081                     l2860:
  5389  0081  083D               	movf	___flmul@bexp,w
  5390  0082  1D03               	btfss	3,2
  5391  0083  2885               	goto	u3611
  5392  0084  2886               	goto	u3610
  5393  0085                     u3611:
  5394  0085  288F               	goto	l2866
  5395  0086                     u3610:
  5396  0086                     l2862:
  5397  0086  3000               	movlw	0
  5398  0087  00AD               	movwf	?___flmul+3
  5399  0088  3000               	movlw	0
  5400  0089  00AC               	movwf	?___flmul+2
  5401  008A  3000               	movlw	0
  5402  008B  00AB               	movwf	?___flmul+1
  5403  008C  3000               	movlw	0
  5404  008D  00AA               	movwf	?___flmul
  5405  008E  2B82               	goto	l695
  5406  008F                     l2866:
  5407  008F  082A               	movf	___flmul@b,w
  5408  0090  00B2               	movwf	??___flmul
  5409  0091  0832               	movf	??___flmul,w
  5410  0092  00F3               	movwf	__Umul8_16@multiplicand
  5411  0093  0830               	movf	___flmul@a+2,w
  5412  0094  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5413  0099  0874               	movf	?__Umul8_16+1,w
  5414  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5415  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5416  009C  00C3               	movwf	___flmul@temp+1
  5417  009D  0873               	movf	?__Umul8_16,w
  5418  009E  00C2               	movwf	___flmul@temp
  5419  009F                     l2868:
  5420  009F  0842               	movf	___flmul@temp,w
  5421  00A0  00B2               	movwf	??___flmul
  5422  00A1  01B3               	clrf	??___flmul+1
  5423  00A2  01B4               	clrf	??___flmul+2
  5424  00A3  01B5               	clrf	??___flmul+3
  5425  00A4  0835               	movf	??___flmul+3,w
  5426  00A5  00BC               	movwf	___flmul@grs+3
  5427  00A6  0834               	movf	??___flmul+2,w
  5428  00A7  00BB               	movwf	___flmul@grs+2
  5429  00A8  0833               	movf	??___flmul+1,w
  5430  00A9  00BA               	movwf	___flmul@grs+1
  5431  00AA  0832               	movf	??___flmul,w
  5432  00AB  00B9               	movwf	___flmul@grs
  5433  00AC                     l2870:
  5434  00AC  0843               	movf	___flmul@temp+1,w
  5435  00AD  00B2               	movwf	??___flmul
  5436  00AE  01B3               	clrf	??___flmul+1
  5437  00AF  01B4               	clrf	??___flmul+2
  5438  00B0  01B5               	clrf	??___flmul+3
  5439  00B1  0835               	movf	??___flmul+3,w
  5440  00B2  00C1               	movwf	___flmul@prod+3
  5441  00B3  0834               	movf	??___flmul+2,w
  5442  00B4  00C0               	movwf	___flmul@prod+2
  5443  00B5  0833               	movf	??___flmul+1,w
  5444  00B6  00BF               	movwf	___flmul@prod+1
  5445  00B7  0832               	movf	??___flmul,w
  5446  00B8  00BE               	movwf	___flmul@prod
  5447  00B9  082B               	movf	___flmul@b+1,w
  5448  00BA  00B2               	movwf	??___flmul
  5449  00BB  0832               	movf	??___flmul,w
  5450  00BC  00F3               	movwf	__Umul8_16@multiplicand
  5451  00BD  082F               	movf	___flmul@a+1,w
  5452  00BE  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5453  00C3  0874               	movf	?__Umul8_16+1,w
  5454  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5455  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5456  00C6  00C3               	movwf	___flmul@temp+1
  5457  00C7  0873               	movf	?__Umul8_16,w
  5458  00C8  00C2               	movwf	___flmul@temp
  5459  00C9                     l2872:
  5460  00C9  0842               	movf	___flmul@temp,w
  5461  00CA  00B2               	movwf	??___flmul
  5462  00CB  01B3               	clrf	??___flmul+1
  5463  00CC  01B4               	clrf	??___flmul+2
  5464  00CD  01B5               	clrf	??___flmul+3
  5465  00CE  0832               	movf	??___flmul,w
  5466  00CF  07B9               	addwf	___flmul@grs,f
  5467  00D0  0833               	movf	??___flmul+1,w
  5468  00D1  1103               	clrz
  5469  00D2  1803               	skipnc
  5470  00D3  3E01               	addlw	1
  5471  00D4  1903               	skipnz
  5472  00D5  28D7               	goto	u3621
  5473  00D6  07BA               	addwf	___flmul@grs+1,f
  5474  00D7                     u3621:
  5475  00D7  0834               	movf	??___flmul+2,w
  5476  00D8  1103               	clrz
  5477  00D9  1803               	skipnc
  5478  00DA  3E01               	addlw	1
  5479  00DB  1903               	skipnz
  5480  00DC  28DE               	goto	u3622
  5481  00DD  07BB               	addwf	___flmul@grs+2,f
  5482  00DE                     u3622:
  5483  00DE  0835               	movf	??___flmul+3,w
  5484  00DF  1103               	clrz
  5485  00E0  1803               	skipnc
  5486  00E1  3E01               	addlw	1
  5487  00E2  1903               	skipnz
  5488  00E3  28E5               	goto	u3623
  5489  00E4  07BC               	addwf	___flmul@grs+3,f
  5490  00E5                     u3623:
  5491  00E5                     l2874:
  5492  00E5  0843               	movf	___flmul@temp+1,w
  5493  00E6  00B2               	movwf	??___flmul
  5494  00E7  01B3               	clrf	??___flmul+1
  5495  00E8  01B4               	clrf	??___flmul+2
  5496  00E9  01B5               	clrf	??___flmul+3
  5497  00EA  0832               	movf	??___flmul,w
  5498  00EB  07BE               	addwf	___flmul@prod,f
  5499  00EC  0833               	movf	??___flmul+1,w
  5500  00ED  1103               	clrz
  5501  00EE  1803               	skipnc
  5502  00EF  3E01               	addlw	1
  5503  00F0  1903               	skipnz
  5504  00F1  28F3               	goto	u3631
  5505  00F2  07BF               	addwf	___flmul@prod+1,f
  5506  00F3                     u3631:
  5507  00F3  0834               	movf	??___flmul+2,w
  5508  00F4  1103               	clrz
  5509  00F5  1803               	skipnc
  5510  00F6  3E01               	addlw	1
  5511  00F7  1903               	skipnz
  5512  00F8  28FA               	goto	u3632
  5513  00F9  07C0               	addwf	___flmul@prod+2,f
  5514  00FA                     u3632:
  5515  00FA  0835               	movf	??___flmul+3,w
  5516  00FB  1103               	clrz
  5517  00FC  1803               	skipnc
  5518  00FD  3E01               	addlw	1
  5519  00FE  1903               	skipnz
  5520  00FF  2901               	goto	u3633
  5521  0100  07C1               	addwf	___flmul@prod+3,f
  5522  0101                     u3633:
  5523  0101  082C               	movf	___flmul@b+2,w
  5524  0102  00B2               	movwf	??___flmul
  5525  0103  0832               	movf	??___flmul,w
  5526  0104  00F3               	movwf	__Umul8_16@multiplicand
  5527  0105  082E               	movf	___flmul@a,w
  5528  0106  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5529  010B  0874               	movf	?__Umul8_16+1,w
  5530  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5531  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5532  010E  00C3               	movwf	___flmul@temp+1
  5533  010F  0873               	movf	?__Umul8_16,w
  5534  0110  00C2               	movwf	___flmul@temp
  5535  0111                     l2876:
  5536  0111  0842               	movf	___flmul@temp,w
  5537  0112  00B2               	movwf	??___flmul
  5538  0113  01B3               	clrf	??___flmul+1
  5539  0114  01B4               	clrf	??___flmul+2
  5540  0115  01B5               	clrf	??___flmul+3
  5541  0116  0832               	movf	??___flmul,w
  5542  0117  07B9               	addwf	___flmul@grs,f
  5543  0118  0833               	movf	??___flmul+1,w
  5544  0119  1103               	clrz
  5545  011A  1803               	skipnc
  5546  011B  3E01               	addlw	1
  5547  011C  1903               	skipnz
  5548  011D  291F               	goto	u3641
  5549  011E  07BA               	addwf	___flmul@grs+1,f
  5550  011F                     u3641:
  5551  011F  0834               	movf	??___flmul+2,w
  5552  0120  1103               	clrz
  5553  0121  1803               	skipnc
  5554  0122  3E01               	addlw	1
  5555  0123  1903               	skipnz
  5556  0124  2926               	goto	u3642
  5557  0125  07BB               	addwf	___flmul@grs+2,f
  5558  0126                     u3642:
  5559  0126  0835               	movf	??___flmul+3,w
  5560  0127  1103               	clrz
  5561  0128  1803               	skipnc
  5562  0129  3E01               	addlw	1
  5563  012A  1903               	skipnz
  5564  012B  292D               	goto	u3643
  5565  012C  07BC               	addwf	___flmul@grs+3,f
  5566  012D                     u3643:
  5567  012D                     l2878:
  5568  012D  0843               	movf	___flmul@temp+1,w
  5569  012E  00B2               	movwf	??___flmul
  5570  012F  01B3               	clrf	??___flmul+1
  5571  0130  01B4               	clrf	??___flmul+2
  5572  0131  01B5               	clrf	??___flmul+3
  5573  0132  0832               	movf	??___flmul,w
  5574  0133  07BE               	addwf	___flmul@prod,f
  5575  0134  0833               	movf	??___flmul+1,w
  5576  0135  1103               	clrz
  5577  0136  1803               	skipnc
  5578  0137  3E01               	addlw	1
  5579  0138  1903               	skipnz
  5580  0139  293B               	goto	u3651
  5581  013A  07BF               	addwf	___flmul@prod+1,f
  5582  013B                     u3651:
  5583  013B  0834               	movf	??___flmul+2,w
  5584  013C  1103               	clrz
  5585  013D  1803               	skipnc
  5586  013E  3E01               	addlw	1
  5587  013F  1903               	skipnz
  5588  0140  2942               	goto	u3652
  5589  0141  07C0               	addwf	___flmul@prod+2,f
  5590  0142                     u3652:
  5591  0142  0835               	movf	??___flmul+3,w
  5592  0143  1103               	clrz
  5593  0144  1803               	skipnc
  5594  0145  3E01               	addlw	1
  5595  0146  1903               	skipnz
  5596  0147  2949               	goto	u3653
  5597  0148  07C1               	addwf	___flmul@prod+3,f
  5598  0149                     u3653:
  5599  0149                     l2880:
  5600  0149  3008               	movlw	8
  5601  014A  00B2               	movwf	??___flmul
  5602  014B                     u3665:
  5603  014B  1003               	clrc
  5604  014C  0DB9               	rlf	___flmul@grs,f
  5605  014D  0DBA               	rlf	___flmul@grs+1,f
  5606  014E  0DBB               	rlf	___flmul@grs+2,f
  5607  014F  0DBC               	rlf	___flmul@grs+3,f
  5608  0150  0BB2               	decfsz	??___flmul,f
  5609  0151  294B               	goto	u3665
  5610  0152                     l2882:
  5611  0152  082B               	movf	___flmul@b+1,w
  5612  0153  00B2               	movwf	??___flmul
  5613  0154  0832               	movf	??___flmul,w
  5614  0155  00F3               	movwf	__Umul8_16@multiplicand
  5615  0156  082E               	movf	___flmul@a,w
  5616  0157  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5617  015C  0874               	movf	?__Umul8_16+1,w
  5618  015D  1283               	bcf	3,5	;RP0=0, select bank0
  5619  015E  1303               	bcf	3,6	;RP1=0, select bank0
  5620  015F  00C3               	movwf	___flmul@temp+1
  5621  0160  0873               	movf	?__Umul8_16,w
  5622  0161  00C2               	movwf	___flmul@temp
  5623  0162                     l2884:
  5624  0162  0842               	movf	___flmul@temp,w
  5625  0163  00B2               	movwf	??___flmul
  5626  0164  0843               	movf	___flmul@temp+1,w
  5627  0165  00B3               	movwf	??___flmul+1
  5628  0166  01B4               	clrf	??___flmul+2
  5629  0167  01B5               	clrf	??___flmul+3
  5630  0168  0832               	movf	??___flmul,w
  5631  0169  07B9               	addwf	___flmul@grs,f
  5632  016A  0833               	movf	??___flmul+1,w
  5633  016B  1103               	clrz
  5634  016C  1803               	skipnc
  5635  016D  3E01               	addlw	1
  5636  016E  1903               	skipnz
  5637  016F  2971               	goto	u3671
  5638  0170  07BA               	addwf	___flmul@grs+1,f
  5639  0171                     u3671:
  5640  0171  0834               	movf	??___flmul+2,w
  5641  0172  1103               	clrz
  5642  0173  1803               	skipnc
  5643  0174  3E01               	addlw	1
  5644  0175  1903               	skipnz
  5645  0176  2978               	goto	u3672
  5646  0177  07BB               	addwf	___flmul@grs+2,f
  5647  0178                     u3672:
  5648  0178  0835               	movf	??___flmul+3,w
  5649  0179  1103               	clrz
  5650  017A  1803               	skipnc
  5651  017B  3E01               	addlw	1
  5652  017C  1903               	skipnz
  5653  017D  297F               	goto	u3673
  5654  017E  07BC               	addwf	___flmul@grs+3,f
  5655  017F                     u3673:
  5656  017F                     l2886:
  5657  017F  082A               	movf	___flmul@b,w
  5658  0180  00B2               	movwf	??___flmul
  5659  0181  0832               	movf	??___flmul,w
  5660  0182  00F3               	movwf	__Umul8_16@multiplicand
  5661  0183  082F               	movf	___flmul@a+1,w
  5662  0184  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5663  0189  0874               	movf	?__Umul8_16+1,w
  5664  018A  1283               	bcf	3,5	;RP0=0, select bank0
  5665  018B  1303               	bcf	3,6	;RP1=0, select bank0
  5666  018C  00C3               	movwf	___flmul@temp+1
  5667  018D  0873               	movf	?__Umul8_16,w
  5668  018E  00C2               	movwf	___flmul@temp
  5669  018F                     l2888:
  5670  018F  0842               	movf	___flmul@temp,w
  5671  0190  00B2               	movwf	??___flmul
  5672  0191  0843               	movf	___flmul@temp+1,w
  5673  0192  00B3               	movwf	??___flmul+1
  5674  0193  01B4               	clrf	??___flmul+2
  5675  0194  01B5               	clrf	??___flmul+3
  5676  0195  0832               	movf	??___flmul,w
  5677  0196  07B9               	addwf	___flmul@grs,f
  5678  0197  0833               	movf	??___flmul+1,w
  5679  0198  1103               	clrz
  5680  0199  1803               	skipnc
  5681  019A  3E01               	addlw	1
  5682  019B  1903               	skipnz
  5683  019C  299E               	goto	u3681
  5684  019D  07BA               	addwf	___flmul@grs+1,f
  5685  019E                     u3681:
  5686  019E  0834               	movf	??___flmul+2,w
  5687  019F  1103               	clrz
  5688  01A0  1803               	skipnc
  5689  01A1  3E01               	addlw	1
  5690  01A2  1903               	skipnz
  5691  01A3  29A5               	goto	u3682
  5692  01A4  07BB               	addwf	___flmul@grs+2,f
  5693  01A5                     u3682:
  5694  01A5  0835               	movf	??___flmul+3,w
  5695  01A6  1103               	clrz
  5696  01A7  1803               	skipnc
  5697  01A8  3E01               	addlw	1
  5698  01A9  1903               	skipnz
  5699  01AA  29AC               	goto	u3683
  5700  01AB  07BC               	addwf	___flmul@grs+3,f
  5701  01AC                     u3683:
  5702  01AC                     l2890:
  5703  01AC  3008               	movlw	8
  5704  01AD  00B2               	movwf	??___flmul
  5705  01AE                     u3695:
  5706  01AE  1003               	clrc
  5707  01AF  0DB9               	rlf	___flmul@grs,f
  5708  01B0  0DBA               	rlf	___flmul@grs+1,f
  5709  01B1  0DBB               	rlf	___flmul@grs+2,f
  5710  01B2  0DBC               	rlf	___flmul@grs+3,f
  5711  01B3  0BB2               	decfsz	??___flmul,f
  5712  01B4  29AE               	goto	u3695
  5713  01B5  082A               	movf	___flmul@b,w
  5714  01B6  00B2               	movwf	??___flmul
  5715  01B7  0832               	movf	??___flmul,w
  5716  01B8  00F3               	movwf	__Umul8_16@multiplicand
  5717  01B9  082E               	movf	___flmul@a,w
  5718  01BA  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5719  01BF  0874               	movf	?__Umul8_16+1,w
  5720  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5721  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5722  01C2  00C3               	movwf	___flmul@temp+1
  5723  01C3  0873               	movf	?__Umul8_16,w
  5724  01C4  00C2               	movwf	___flmul@temp
  5725  01C5                     l2892:
  5726  01C5  0842               	movf	___flmul@temp,w
  5727  01C6  00B2               	movwf	??___flmul
  5728  01C7  0843               	movf	___flmul@temp+1,w
  5729  01C8  00B3               	movwf	??___flmul+1
  5730  01C9  01B4               	clrf	??___flmul+2
  5731  01CA  01B5               	clrf	??___flmul+3
  5732  01CB  0832               	movf	??___flmul,w
  5733  01CC  07B9               	addwf	___flmul@grs,f
  5734  01CD  0833               	movf	??___flmul+1,w
  5735  01CE  1103               	clrz
  5736  01CF  1803               	skipnc
  5737  01D0  3E01               	addlw	1
  5738  01D1  1903               	skipnz
  5739  01D2  29D4               	goto	u3701
  5740  01D3  07BA               	addwf	___flmul@grs+1,f
  5741  01D4                     u3701:
  5742  01D4  0834               	movf	??___flmul+2,w
  5743  01D5  1103               	clrz
  5744  01D6  1803               	skipnc
  5745  01D7  3E01               	addlw	1
  5746  01D8  1903               	skipnz
  5747  01D9  29DB               	goto	u3702
  5748  01DA  07BB               	addwf	___flmul@grs+2,f
  5749  01DB                     u3702:
  5750  01DB  0835               	movf	??___flmul+3,w
  5751  01DC  1103               	clrz
  5752  01DD  1803               	skipnc
  5753  01DE  3E01               	addlw	1
  5754  01DF  1903               	skipnz
  5755  01E0  29E2               	goto	u3703
  5756  01E1  07BC               	addwf	___flmul@grs+3,f
  5757  01E2                     u3703:
  5758  01E2                     l2894:
  5759  01E2  082B               	movf	___flmul@b+1,w
  5760  01E3  00B2               	movwf	??___flmul
  5761  01E4  0832               	movf	??___flmul,w
  5762  01E5  00F3               	movwf	__Umul8_16@multiplicand
  5763  01E6  0830               	movf	___flmul@a+2,w
  5764  01E7  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5765  01EC  0874               	movf	?__Umul8_16+1,w
  5766  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5767  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5768  01EF  00C3               	movwf	___flmul@temp+1
  5769  01F0  0873               	movf	?__Umul8_16,w
  5770  01F1  00C2               	movwf	___flmul@temp
  5771  01F2  0842               	movf	___flmul@temp,w
  5772  01F3  00B2               	movwf	??___flmul
  5773  01F4  0843               	movf	___flmul@temp+1,w
  5774  01F5  00B3               	movwf	??___flmul+1
  5775  01F6  01B4               	clrf	??___flmul+2
  5776  01F7  01B5               	clrf	??___flmul+3
  5777  01F8  0832               	movf	??___flmul,w
  5778  01F9  07BE               	addwf	___flmul@prod,f
  5779  01FA  0833               	movf	??___flmul+1,w
  5780  01FB  1103               	clrz
  5781  01FC  1803               	skipnc
  5782  01FD  3E01               	addlw	1
  5783  01FE  1903               	skipnz
  5784  01FF  2A01               	goto	u3711
  5785  0200  07BF               	addwf	___flmul@prod+1,f
  5786  0201                     u3711:
  5787  0201  0834               	movf	??___flmul+2,w
  5788  0202  1103               	clrz
  5789  0203  1803               	skipnc
  5790  0204  3E01               	addlw	1
  5791  0205  1903               	skipnz
  5792  0206  2A08               	goto	u3712
  5793  0207  07C0               	addwf	___flmul@prod+2,f
  5794  0208                     u3712:
  5795  0208  0835               	movf	??___flmul+3,w
  5796  0209  1103               	clrz
  5797  020A  1803               	skipnc
  5798  020B  3E01               	addlw	1
  5799  020C  1903               	skipnz
  5800  020D  2A0F               	goto	u3713
  5801  020E  07C1               	addwf	___flmul@prod+3,f
  5802  020F                     u3713:
  5803  020F                     l2896:
  5804  020F  082C               	movf	___flmul@b+2,w
  5805  0210  00B2               	movwf	??___flmul
  5806  0211  0832               	movf	??___flmul,w
  5807  0212  00F3               	movwf	__Umul8_16@multiplicand
  5808  0213  082F               	movf	___flmul@a+1,w
  5809  0214  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5810  0219  0874               	movf	?__Umul8_16+1,w
  5811  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5812  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5813  021C  00C3               	movwf	___flmul@temp+1
  5814  021D  0873               	movf	?__Umul8_16,w
  5815  021E  00C2               	movwf	___flmul@temp
  5816  021F                     l2898:
  5817  021F  0842               	movf	___flmul@temp,w
  5818  0220  00B2               	movwf	??___flmul
  5819  0221  0843               	movf	___flmul@temp+1,w
  5820  0222  00B3               	movwf	??___flmul+1
  5821  0223  01B4               	clrf	??___flmul+2
  5822  0224  01B5               	clrf	??___flmul+3
  5823  0225  0832               	movf	??___flmul,w
  5824  0226  07BE               	addwf	___flmul@prod,f
  5825  0227  0833               	movf	??___flmul+1,w
  5826  0228  1103               	clrz
  5827  0229  1803               	skipnc
  5828  022A  3E01               	addlw	1
  5829  022B  1903               	skipnz
  5830  022C  2A2E               	goto	u3721
  5831  022D  07BF               	addwf	___flmul@prod+1,f
  5832  022E                     u3721:
  5833  022E  0834               	movf	??___flmul+2,w
  5834  022F  1103               	clrz
  5835  0230  1803               	skipnc
  5836  0231  3E01               	addlw	1
  5837  0232  1903               	skipnz
  5838  0233  2A35               	goto	u3722
  5839  0234  07C0               	addwf	___flmul@prod+2,f
  5840  0235                     u3722:
  5841  0235  0835               	movf	??___flmul+3,w
  5842  0236  1103               	clrz
  5843  0237  1803               	skipnc
  5844  0238  3E01               	addlw	1
  5845  0239  1903               	skipnz
  5846  023A  2A3C               	goto	u3723
  5847  023B  07C1               	addwf	___flmul@prod+3,f
  5848  023C                     u3723:
  5849  023C  082C               	movf	___flmul@b+2,w
  5850  023D  00B2               	movwf	??___flmul
  5851  023E  0832               	movf	??___flmul,w
  5852  023F  00F3               	movwf	__Umul8_16@multiplicand
  5853  0240  0830               	movf	___flmul@a+2,w
  5854  0241  120A  158A  2315  120A  118A  	fcall	__Umul8_16
  5855  0246  0874               	movf	?__Umul8_16+1,w
  5856  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5857  0248  1303               	bcf	3,6	;RP1=0, select bank0
  5858  0249  00C3               	movwf	___flmul@temp+1
  5859  024A  0873               	movf	?__Umul8_16,w
  5860  024B  00C2               	movwf	___flmul@temp
  5861  024C                     l2900:
  5862  024C  0842               	movf	___flmul@temp,w
  5863  024D  00B2               	movwf	??___flmul
  5864  024E  0843               	movf	___flmul@temp+1,w
  5865  024F  00B3               	movwf	??___flmul+1
  5866  0250  01B4               	clrf	??___flmul+2
  5867  0251  01B5               	clrf	??___flmul+3
  5868  0252  3008               	movlw	8
  5869  0253                     u3735:
  5870  0253  1003               	clrc
  5871  0254  0DB2               	rlf	??___flmul,f
  5872  0255  0DB3               	rlf	??___flmul+1,f
  5873  0256  0DB4               	rlf	??___flmul+2,f
  5874  0257  0DB5               	rlf	??___flmul+3,f
  5875  0258                     u3730:
  5876  0258  3EFF               	addlw	-1
  5877  0259  1D03               	skipz
  5878  025A  2A53               	goto	u3735
  5879  025B  0832               	movf	??___flmul,w
  5880  025C  07BE               	addwf	___flmul@prod,f
  5881  025D  0833               	movf	??___flmul+1,w
  5882  025E  1103               	clrz
  5883  025F  1803               	skipnc
  5884  0260  3E01               	addlw	1
  5885  0261  1903               	skipnz
  5886  0262  2A64               	goto	u3741
  5887  0263  07BF               	addwf	___flmul@prod+1,f
  5888  0264                     u3741:
  5889  0264  0834               	movf	??___flmul+2,w
  5890  0265  1103               	clrz
  5891  0266  1803               	skipnc
  5892  0267  3E01               	addlw	1
  5893  0268  1903               	skipnz
  5894  0269  2A6B               	goto	u3742
  5895  026A  07C0               	addwf	___flmul@prod+2,f
  5896  026B                     u3742:
  5897  026B  0835               	movf	??___flmul+3,w
  5898  026C  1103               	clrz
  5899  026D  1803               	skipnc
  5900  026E  3E01               	addlw	1
  5901  026F  1903               	skipnz
  5902  0270  2A72               	goto	u3743
  5903  0271  07C1               	addwf	___flmul@prod+3,f
  5904  0272                     u3743:
  5905  0272                     l2902:
  5906  0272  0839               	movf	___flmul@grs,w
  5907  0273  00B2               	movwf	??___flmul
  5908  0274  083A               	movf	___flmul@grs+1,w
  5909  0275  00B3               	movwf	??___flmul+1
  5910  0276  083B               	movf	___flmul@grs+2,w
  5911  0277  00B4               	movwf	??___flmul+2
  5912  0278  083C               	movf	___flmul@grs+3,w
  5913  0279  00B5               	movwf	??___flmul+3
  5914  027A  3018               	movlw	24
  5915  027B                     u3755:
  5916  027B  1003               	clrc
  5917  027C  0CB5               	rrf	??___flmul+3,f
  5918  027D  0CB4               	rrf	??___flmul+2,f
  5919  027E  0CB3               	rrf	??___flmul+1,f
  5920  027F  0CB2               	rrf	??___flmul,f
  5921  0280                     u3750:
  5922  0280  3EFF               	addlw	-1
  5923  0281  1D03               	skipz
  5924  0282  2A7B               	goto	u3755
  5925  0283  0832               	movf	??___flmul,w
  5926  0284  07BE               	addwf	___flmul@prod,f
  5927  0285  0833               	movf	??___flmul+1,w
  5928  0286  1103               	clrz
  5929  0287  1803               	skipnc
  5930  0288  3E01               	addlw	1
  5931  0289  1903               	skipnz
  5932  028A  2A8C               	goto	u3761
  5933  028B  07BF               	addwf	___flmul@prod+1,f
  5934  028C                     u3761:
  5935  028C  0834               	movf	??___flmul+2,w
  5936  028D  1103               	clrz
  5937  028E  1803               	skipnc
  5938  028F  3E01               	addlw	1
  5939  0290  1903               	skipnz
  5940  0291  2A93               	goto	u3762
  5941  0292  07C0               	addwf	___flmul@prod+2,f
  5942  0293                     u3762:
  5943  0293  0835               	movf	??___flmul+3,w
  5944  0294  1103               	clrz
  5945  0295  1803               	skipnc
  5946  0296  3E01               	addlw	1
  5947  0297  1903               	skipnz
  5948  0298  2A9A               	goto	u3763
  5949  0299  07C1               	addwf	___flmul@prod+3,f
  5950  029A                     u3763:
  5951  029A                     l2904:
  5952  029A  3008               	movlw	8
  5953  029B  00B2               	movwf	??___flmul
  5954  029C                     u3775:
  5955  029C  1003               	clrc
  5956  029D  0DB9               	rlf	___flmul@grs,f
  5957  029E  0DBA               	rlf	___flmul@grs+1,f
  5958  029F  0DBB               	rlf	___flmul@grs+2,f
  5959  02A0  0DBC               	rlf	___flmul@grs+3,f
  5960  02A1  0BB2               	decfsz	??___flmul,f
  5961  02A2  2A9C               	goto	u3775
  5962  02A3                     l2906:
  5963  02A3  083D               	movf	___flmul@bexp,w
  5964  02A4  0738               	addwf	___flmul@aexp,w
  5965  02A5  00B2               	movwf	??___flmul
  5966  02A6  01B3               	clrf	??___flmul+1
  5967  02A7  0DB3               	rlf	??___flmul+1,f
  5968  02A8  0832               	movf	??___flmul,w
  5969  02A9  3E82               	addlw	130
  5970  02AA  00C2               	movwf	___flmul@temp
  5971  02AB  0833               	movf	??___flmul+1,w
  5972  02AC  1803               	skipnc
  5973  02AD  3E01               	addlw	1
  5974  02AE  3EFF               	addlw	255
  5975  02AF  00C3               	movwf	___flmul@temp+1
  5976  02B0  2ACE               	goto	l2918
  5977  02B1                     l2908:
  5978  02B1  3001               	movlw	1
  5979  02B2  00B2               	movwf	??___flmul
  5980  02B3                     u3785:
  5981  02B3  1003               	clrc
  5982  02B4  0DBE               	rlf	___flmul@prod,f
  5983  02B5  0DBF               	rlf	___flmul@prod+1,f
  5984  02B6  0DC0               	rlf	___flmul@prod+2,f
  5985  02B7  0DC1               	rlf	___flmul@prod+3,f
  5986  02B8  0BB2               	decfsz	??___flmul,f
  5987  02B9  2AB3               	goto	u3785
  5988  02BA                     l2910:
  5989  02BA  1FBC               	btfss	___flmul@grs+3,7
  5990  02BB  2ABD               	goto	u3791
  5991  02BC  2ABE               	goto	u3790
  5992  02BD                     u3791:
  5993  02BD  2ABF               	goto	l2914
  5994  02BE                     u3790:
  5995  02BE                     l2912:
  5996  02BE  143E               	bsf	___flmul@prod,0
  5997  02BF                     l2914:
  5998  02BF  3001               	movlw	1
  5999  02C0  00B2               	movwf	??___flmul
  6000  02C1                     u3805:
  6001  02C1  1003               	clrc
  6002  02C2  0DB9               	rlf	___flmul@grs,f
  6003  02C3  0DBA               	rlf	___flmul@grs+1,f
  6004  02C4  0DBB               	rlf	___flmul@grs+2,f
  6005  02C5  0DBC               	rlf	___flmul@grs+3,f
  6006  02C6  0BB2               	decfsz	??___flmul,f
  6007  02C7  2AC1               	goto	u3805
  6008  02C8                     l2916:
  6009  02C8  30FF               	movlw	255
  6010  02C9  07C2               	addwf	___flmul@temp,f
  6011  02CA  1803               	skipnc
  6012  02CB  0AC3               	incf	___flmul@temp+1,f
  6013  02CC  30FF               	movlw	255
  6014  02CD  07C3               	addwf	___flmul@temp+1,f
  6015  02CE                     l2918:
  6016  02CE  1FC0               	btfss	___flmul@prod+2,7
  6017  02CF  2AD1               	goto	u3811
  6018  02D0  2AD2               	goto	u3810
  6019  02D1                     u3811:
  6020  02D1  2AB1               	goto	l2908
  6021  02D2                     u3810:
  6022  02D2                     l2920:
  6023  02D2  01B8               	clrf	___flmul@aexp
  6024  02D3                     l2922:
  6025  02D3  1FBC               	btfss	___flmul@grs+3,7
  6026  02D4  2AD6               	goto	u3821
  6027  02D5  2AD7               	goto	u3820
  6028  02D6                     u3821:
  6029  02D6  2AF3               	goto	l2930
  6030  02D7                     u3820:
  6031  02D7                     l2924:
  6032  02D7  30FF               	movlw	255
  6033  02D8  0539               	andwf	___flmul@grs,w
  6034  02D9  00B2               	movwf	??___flmul
  6035  02DA  30FF               	movlw	255
  6036  02DB  053A               	andwf	___flmul@grs+1,w
  6037  02DC  00B3               	movwf	??___flmul+1
  6038  02DD  30FF               	movlw	255
  6039  02DE  053B               	andwf	___flmul@grs+2,w
  6040  02DF  00B4               	movwf	??___flmul+2
  6041  02E0  307F               	movlw	127
  6042  02E1  053C               	andwf	___flmul@grs+3,w
  6043  02E2  00B5               	movwf	??___flmul+3
  6044  02E3  0835               	movf	??___flmul+3,w
  6045  02E4  0434               	iorwf	??___flmul+2,w
  6046  02E5  0433               	iorwf	??___flmul+1,w
  6047  02E6  0432               	iorwf	??___flmul,w
  6048  02E7  1903               	skipnz
  6049  02E8  2AEA               	goto	u3831
  6050  02E9  2AEB               	goto	u3830
  6051  02EA                     u3831:
  6052  02EA  2AEE               	goto	l701
  6053  02EB                     u3830:
  6054  02EB                     l2926:
  6055  02EB  01B8               	clrf	___flmul@aexp
  6056  02EC  0AB8               	incf	___flmul@aexp,f
  6057  02ED  2AF3               	goto	l2930
  6058  02EE                     l701:
  6059  02EE  1C3E               	btfss	___flmul@prod,0
  6060  02EF  2AF1               	goto	u3841
  6061  02F0  2AF2               	goto	u3840
  6062  02F1                     u3841:
  6063  02F1  2AF3               	goto	l2930
  6064  02F2                     u3840:
  6065  02F2  2AEB               	goto	l2926
  6066  02F3                     l2930:
  6067  02F3  0838               	movf	___flmul@aexp,w
  6068  02F4  1903               	btfsc	3,2
  6069  02F5  2AF7               	goto	u3851
  6070  02F6  2AF8               	goto	u3850
  6071  02F7                     u3851:
  6072  02F7  2B29               	goto	l2940
  6073  02F8                     u3850:
  6074  02F8                     l2932:
  6075  02F8  3001               	movlw	1
  6076  02F9  07BE               	addwf	___flmul@prod,f
  6077  02FA  3000               	movlw	0
  6078  02FB  1803               	skipnc
  6079  02FC  3001               	movlw	1
  6080  02FD  07BF               	addwf	___flmul@prod+1,f
  6081  02FE  3000               	movlw	0
  6082  02FF  1803               	skipnc
  6083  0300  3001               	movlw	1
  6084  0301  07C0               	addwf	___flmul@prod+2,f
  6085  0302  3000               	movlw	0
  6086  0303  1803               	skipnc
  6087  0304  3001               	movlw	1
  6088  0305  07C1               	addwf	___flmul@prod+3,f
  6089  0306                     l2934:
  6090  0306  1C41               	btfss	___flmul@prod+3,0
  6091  0307  2B09               	goto	u3861
  6092  0308  2B0A               	goto	u3860
  6093  0309                     u3861:
  6094  0309  2B29               	goto	l2940
  6095  030A                     u3860:
  6096  030A                     l2936:
  6097  030A  083E               	movf	___flmul@prod,w
  6098  030B  00B2               	movwf	??___flmul
  6099  030C  083F               	movf	___flmul@prod+1,w
  6100  030D  00B3               	movwf	??___flmul+1
  6101  030E  0840               	movf	___flmul@prod+2,w
  6102  030F  00B4               	movwf	??___flmul+2
  6103  0310  0841               	movf	___flmul@prod+3,w
  6104  0311  00B5               	movwf	??___flmul+3
  6105  0312  3001               	movlw	1
  6106  0313  00B6               	movwf	??___flmul+4
  6107  0314                     u3875:
  6108  0314  0D35               	rlf	??___flmul+3,w
  6109  0315  0CB5               	rrf	??___flmul+3,f
  6110  0316  0CB4               	rrf	??___flmul+2,f
  6111  0317  0CB3               	rrf	??___flmul+1,f
  6112  0318  0CB2               	rrf	??___flmul,f
  6113  0319                     u3870:
  6114  0319  0BB6               	decfsz	??___flmul+4,f
  6115  031A  2B14               	goto	u3875
  6116  031B  0835               	movf	??___flmul+3,w
  6117  031C  00C1               	movwf	___flmul@prod+3
  6118  031D  0834               	movf	??___flmul+2,w
  6119  031E  00C0               	movwf	___flmul@prod+2
  6120  031F  0833               	movf	??___flmul+1,w
  6121  0320  00BF               	movwf	___flmul@prod+1
  6122  0321  0832               	movf	??___flmul,w
  6123  0322  00BE               	movwf	___flmul@prod
  6124  0323                     l2938:
  6125  0323  3001               	movlw	1
  6126  0324  07C2               	addwf	___flmul@temp,f
  6127  0325  1803               	skipnc
  6128  0326  0AC3               	incf	___flmul@temp+1,f
  6129  0327  3000               	movlw	0
  6130  0328  07C3               	addwf	___flmul@temp+1,f
  6131  0329                     l2940:
  6132  0329  0843               	movf	___flmul@temp+1,w
  6133  032A  3A80               	xorlw	128
  6134  032B  00FF               	movwf	btemp+1
  6135  032C  3080               	movlw	128
  6136  032D  027F               	subwf	btemp+1,w
  6137  032E  1D03               	skipz
  6138  032F  2B32               	goto	u3885
  6139  0330  30FF               	movlw	255
  6140  0331  0242               	subwf	___flmul@temp,w
  6141  0332                     u3885:
  6142  0332  1C03               	skipc
  6143  0333  2B35               	goto	u3881
  6144  0334  2B36               	goto	u3880
  6145  0335                     u3881:
  6146  0335  2B41               	goto	l2944
  6147  0336                     u3880:
  6148  0336                     l2942:
  6149  0336  307F               	movlw	127
  6150  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6152  0339  00C1               	movwf	___flmul@prod+3
  6153  033A  3080               	movlw	128
  6154  033B  00C0               	movwf	___flmul@prod+2
  6155  033C  3000               	movlw	0
  6156  033D  00BF               	movwf	___flmul@prod+1
  6157  033E  3000               	movlw	0
  6158  033F  00BE               	movwf	___flmul@prod
  6159  0340  2B76               	goto	l707
  6160  0341                     l2944:
  6161  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0343  0843               	movf	___flmul@temp+1,w
  6164  0344  3A80               	xorlw	128
  6165  0345  00FF               	movwf	btemp+1
  6166  0346  3080               	movlw	128
  6167  0347  027F               	subwf	btemp+1,w
  6168  0348  1D03               	skipz
  6169  0349  2B4C               	goto	u3895
  6170  034A  3001               	movlw	1
  6171  034B  0242               	subwf	___flmul@temp,w
  6172  034C                     u3895:
  6173  034C  1803               	skipnc
  6174  034D  2B4F               	goto	u3891
  6175  034E  2B50               	goto	u3890
  6176  034F                     u3891:
  6177  034F  2B5C               	goto	l2950
  6178  0350                     u3890:
  6179  0350                     l2946:
  6180  0350  3000               	movlw	0
  6181  0351  1283               	bcf	3,5	;RP0=0, select bank0
  6182  0352  1303               	bcf	3,6	;RP1=0, select bank0
  6183  0353  00C1               	movwf	___flmul@prod+3
  6184  0354  3000               	movlw	0
  6185  0355  00C0               	movwf	___flmul@prod+2
  6186  0356  3000               	movlw	0
  6187  0357  00BF               	movwf	___flmul@prod+1
  6188  0358  3000               	movlw	0
  6189  0359  00BE               	movwf	___flmul@prod
  6190  035A                     l2948:
  6191  035A  01B7               	clrf	___flmul@sign
  6192  035B  2B76               	goto	l707
  6193  035C                     l2950:
  6194  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6195  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6196  035E  0842               	movf	___flmul@temp,w
  6197  035F  00B2               	movwf	??___flmul
  6198  0360  0832               	movf	??___flmul,w
  6199  0361  00BD               	movwf	___flmul@bexp
  6200  0362  30FF               	movlw	255
  6201  0363  05BE               	andwf	___flmul@prod,f
  6202  0364  30FF               	movlw	255
  6203  0365  05BF               	andwf	___flmul@prod+1,f
  6204  0366  307F               	movlw	127
  6205  0367  05C0               	andwf	___flmul@prod+2,f
  6206  0368  3000               	movlw	0
  6207  0369  05C1               	andwf	___flmul@prod+3,f
  6208  036A                     l2952:
  6209  036A  1C3D               	btfss	___flmul@bexp,0
  6210  036B  2B6D               	goto	u3901
  6211  036C  2B6E               	goto	u3900
  6212  036D                     u3901:
  6213  036D  2B6F               	goto	l2956
  6214  036E                     u3900:
  6215  036E                     l2954:
  6216  036E  17C0               	bsf	___flmul@prod+2,7
  6217  036F                     l2956:
  6218  036F  083D               	movf	___flmul@bexp,w
  6219  0370  00B2               	movwf	??___flmul
  6220  0371  1003               	clrc
  6221  0372  0C32               	rrf	??___flmul,w
  6222  0373  00B3               	movwf	??___flmul+1
  6223  0374  0833               	movf	??___flmul+1,w
  6224  0375  00C1               	movwf	___flmul@prod+3
  6225  0376                     l707:
  6226  0376  0837               	movf	___flmul@sign,w
  6227  0377  00B2               	movwf	??___flmul
  6228  0378  0832               	movf	??___flmul,w
  6229  0379  04C1               	iorwf	___flmul@prod+3,f
  6230  037A                     l2958:
  6231  037A  0841               	movf	___flmul@prod+3,w
  6232  037B  00AD               	movwf	?___flmul+3
  6233  037C  0840               	movf	___flmul@prod+2,w
  6234  037D  00AC               	movwf	?___flmul+2
  6235  037E  083F               	movf	___flmul@prod+1,w
  6236  037F  00AB               	movwf	?___flmul+1
  6237  0380  083E               	movf	___flmul@prod,w
  6238  0381  00AA               	movwf	?___flmul
  6239  0382                     l695:
  6240  0382  0008               	return
  6241  0383                     __end_of___flmul:
  6242                           
  6243                           	psect	text25
  6244  0B15                     __ptext25:	
  6245 ;; *************** function __Umul8_16 *****************
  6246 ;; Defined at:
  6247 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  multiplier      1    wreg     unsigned char 
  6250 ;;  multiplicand    1    3[COMMON] unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6253 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6254 ;;  product         2    0[BANK0 ] unsigned int 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    3[COMMON] unsigned int 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         2       0       0       0       0
  6265 ;;      Locals:         0       5       0       0       0
  6266 ;;      Temps:          2       0       0       0       0
  6267 ;;      Totals:         4       5       0       0       0
  6268 ;;Total ram usage:        9 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		___flmul
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function __Umul8_16
  6280  0B15                     __Umul8_16:
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6284                           ;__Umul8_16@multiplier stored from wreg
  6285  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0B17  00A4               	movwf	__Umul8_16@multiplier
  6288  0B18                     l2736:
  6289  0B18  01A0               	clrf	__Umul8_16@product
  6290  0B19  01A1               	clrf	__Umul8_16@product+1
  6291  0B1A                     l2738:
  6292  0B1A  0873               	movf	__Umul8_16@multiplicand,w
  6293  0B1B  00F5               	movwf	??__Umul8_16
  6294  0B1C  01F6               	clrf	??__Umul8_16+1
  6295  0B1D  0875               	movf	??__Umul8_16,w
  6296  0B1E  00A2               	movwf	__Umul8_16@word_mpld
  6297  0B1F  0876               	movf	??__Umul8_16+1,w
  6298  0B20  00A3               	movwf	__Umul8_16@word_mpld+1
  6299  0B21                     l2740:
  6300  0B21  1C24               	btfss	__Umul8_16@multiplier,0
  6301  0B22  2B24               	goto	u3381
  6302  0B23  2B25               	goto	u3380
  6303  0B24                     u3381:
  6304  0B24  2B2B               	goto	l714
  6305  0B25                     u3380:
  6306  0B25                     l2742:
  6307  0B25  0822               	movf	__Umul8_16@word_mpld,w
  6308  0B26  07A0               	addwf	__Umul8_16@product,f
  6309  0B27  1803               	skipnc
  6310  0B28  0AA1               	incf	__Umul8_16@product+1,f
  6311  0B29  0823               	movf	__Umul8_16@word_mpld+1,w
  6312  0B2A  07A1               	addwf	__Umul8_16@product+1,f
  6313  0B2B                     l714:
  6314  0B2B  3001               	movlw	1
  6315  0B2C                     u3395:
  6316  0B2C  1003               	clrc
  6317  0B2D  0DA2               	rlf	__Umul8_16@word_mpld,f
  6318  0B2E  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6319  0B2F  3EFF               	addlw	-1
  6320  0B30  1D03               	skipz
  6321  0B31  2B2C               	goto	u3395
  6322  0B32  1003               	clrc
  6323  0B33  0CA4               	rrf	__Umul8_16@multiplier,f
  6324  0B34                     l2744:
  6325  0B34  0824               	movf	__Umul8_16@multiplier,w
  6326  0B35  1D03               	btfss	3,2
  6327  0B36  2B38               	goto	u3401
  6328  0B37  2B39               	goto	u3400
  6329  0B38                     u3401:
  6330  0B38  2B21               	goto	l2740
  6331  0B39                     u3400:
  6332  0B39                     l2746:
  6333  0B39  0821               	movf	__Umul8_16@product+1,w
  6334  0B3A  00F4               	movwf	?__Umul8_16+1
  6335  0B3B  0820               	movf	__Umul8_16@product,w
  6336  0B3C  00F3               	movwf	?__Umul8_16
  6337  0B3D                     l716:
  6338  0B3D  0008               	return
  6339  0B3E                     __end_of__Umul8_16:
  6340                           
  6341                           	psect	text26
  6342  0CEC                     __ptext26:	
  6343 ;; *************** function _interrupcion *****************
  6344 ;; Defined at:
  6345 ;;		line 53 in file "main.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6359 ;;      Params:         0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0
  6361 ;;      Temps:          3       0       0       0       0
  6362 ;;      Totals:         3       0       0       0       0
  6363 ;;Total ram usage:        3 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		Interrupt level 1
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _interrupcion
  6374  0CEC                     _interrupcion:
  6375  0CEC                     i1l2368:
  6376                           
  6377                           ;main.c: 55:     if(PIR1bits.RCIF){
  6378  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  6379  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  6380  0CEE  1E8C               	btfss	12,5	;volatile
  6381  0CEF  2CF1               	goto	u271_21
  6382  0CF0  2CF2               	goto	u271_20
  6383  0CF1                     u271_21:
  6384  0CF1  2D09               	goto	i1l2380
  6385  0CF2                     u271_20:
  6386  0CF2                     i1l2370:
  6387                           
  6388                           ;main.c: 56:         UARTdat = RCREG;
  6389  0CF2  081A               	movf	26,w	;volatile
  6390  0CF3  00F0               	movwf	??_interrupcion
  6391  0CF4  0870               	movf	??_interrupcion,w
  6392  0CF5  00FA               	movwf	_UARTdat
  6393  0CF6                     i1l2372:
  6394                           
  6395                           ;main.c: 57:         if(UARTdat == '+')UARTval++;
  6396  0CF6  302B               	movlw	43
  6397  0CF7  067A               	xorwf	_UARTdat,w
  6398  0CF8  1D03               	btfss	3,2
  6399  0CF9  2CFB               	goto	u272_21
  6400  0CFA  2CFC               	goto	u272_20
  6401  0CFB                     u272_21:
  6402  0CFB  2D00               	goto	i1l92
  6403  0CFC                     u272_20:
  6404  0CFC                     i1l2374:
  6405  0CFC  3001               	movlw	1
  6406  0CFD  00F0               	movwf	??_interrupcion
  6407  0CFE  0870               	movf	??_interrupcion,w
  6408  0CFF  07EC               	addwf	_UARTval,f
  6409  0D00                     i1l92:
  6410                           
  6411                           ;main.c: 58:         if(UARTdat == '-')UARTval--;
  6412  0D00  302D               	movlw	45
  6413  0D01  067A               	xorwf	_UARTdat,w
  6414  0D02  1D03               	btfss	3,2
  6415  0D03  2D05               	goto	u273_21
  6416  0D04  2D06               	goto	u273_20
  6417  0D05                     u273_21:
  6418  0D05  2D08               	goto	i1l2378
  6419  0D06                     u273_20:
  6420  0D06                     i1l2376:
  6421  0D06  3001               	movlw	1
  6422  0D07  02EC               	subwf	_UARTval,f
  6423  0D08                     i1l2378:
  6424                           
  6425                           ;main.c: 59:         PIR1bits.RCIF = 0;
  6426  0D08  128C               	bcf	12,5	;volatile
  6427  0D09                     i1l2380:
  6428                           
  6429                           ;main.c: 62:     if(PIR1bits.ADIF){
  6430  0D09  1F0C               	btfss	12,6	;volatile
  6431  0D0A  2D0C               	goto	u274_21
  6432  0D0B  2D0D               	goto	u274_20
  6433  0D0C                     u274_21:
  6434  0D0C  2D28               	goto	i1l2392
  6435  0D0D                     u274_20:
  6436  0D0D                     i1l2382:
  6437                           
  6438                           ;main.c: 63:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  6439  0D0D  1003               	clrc
  6440  0D0E  1D1F               	btfss	31,2	;volatile
  6441  0D0F  1403               	setc
  6442  0D10  1803               	btfsc	3,0
  6443  0D11  2D13               	goto	u275_21
  6444  0D12  2D17               	goto	u275_20
  6445  0D13                     u275_21:
  6446  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0D15  151F               	bsf	31,2	;volatile
  6449  0D16  2D1A               	goto	u276_24
  6450  0D17                     u275_20:
  6451  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0D19  111F               	bcf	31,2	;volatile
  6454  0D1A                     u276_24:
  6455  0D1A                     i1l2384:
  6456                           
  6457                           ;main.c: 64:         PIR1bits.ADIF = 0;
  6458  0D1A  130C               	bcf	12,6	;volatile
  6459  0D1B                     i1l2386:
  6460                           
  6461                           ;main.c: 65:         if(ADCON0bits.CHS0)pot1 = ADRESH;
  6462  0D1B  1D1F               	btfss	31,2	;volatile
  6463  0D1C  2D1E               	goto	u277_21
  6464  0D1D  2D1F               	goto	u277_20
  6465  0D1E                     u277_21:
  6466  0D1E  2D24               	goto	i1l2390
  6467  0D1F                     u277_20:
  6468  0D1F                     i1l2388:
  6469  0D1F  081E               	movf	30,w	;volatile
  6470  0D20  00F0               	movwf	??_interrupcion
  6471  0D21  0870               	movf	??_interrupcion,w
  6472  0D22  00EE               	movwf	_pot1
  6473  0D23  2D28               	goto	i1l2392
  6474  0D24                     i1l2390:
  6475  0D24  081E               	movf	30,w	;volatile
  6476  0D25  00F0               	movwf	??_interrupcion
  6477  0D26  0870               	movf	??_interrupcion,w
  6478  0D27  00ED               	movwf	_pot2
  6479  0D28                     i1l2392:
  6480                           
  6481                           ;main.c: 69:     if(INTCONbits.T0IF){
  6482  0D28  1D0B               	btfss	11,2	;volatile
  6483  0D29  2D2B               	goto	u278_21
  6484  0D2A  2D2C               	goto	u278_20
  6485  0D2B                     u278_21:
  6486  0D2B  2D32               	goto	i1l99
  6487  0D2C                     u278_20:
  6488  0D2C                     i1l2394:
  6489                           
  6490                           ;main.c: 70:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  6491  0D2C  189F               	btfsc	31,1	;volatile
  6492  0D2D  2D2F               	goto	u279_21
  6493  0D2E  2D30               	goto	u279_20
  6494  0D2F                     u279_21:
  6495  0D2F  2D31               	goto	i1l98
  6496  0D30                     u279_20:
  6497  0D30                     i1l2396:
  6498  0D30  149F               	bsf	31,1	;volatile
  6499  0D31                     i1l98:
  6500                           
  6501                           ;main.c: 71:         INTCONbits.T0IF = 0;
  6502  0D31  110B               	bcf	11,2	;volatile
  6503  0D32                     i1l99:
  6504  0D32  0872               	movf	??_interrupcion+2,w
  6505  0D33  008A               	movwf	10
  6506  0D34  0E71               	swapf	??_interrupcion+1,w
  6507  0D35  0083               	movwf	3
  6508  0D36  0EFE               	swapf	btemp,f
  6509  0D37  0E7E               	swapf	btemp,w
  6510  0D38  0009               	retfie
  6511  0D39                     __end_of_interrupcion:
  6512  007E                     btemp	set	126	;btemp
  6513  007E                     wtemp0	set	126
  6514                           
  6515                           	psect	intentry
  6516  0004                     __pintentry:	
  6517                           ;incstack = 0
  6518                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  6519                           
  6520  0004                     interrupt_function:
  6521  007E                     saved_w	set	btemp
  6522  0004  00FE               	movwf	btemp
  6523  0005  0E03               	swapf	3,w
  6524  0006  00F1               	movwf	??_interrupcion+1
  6525  0007  080A               	movf	10,w
  6526  0008  00F2               	movwf	??_interrupcion+2
  6527  0009  120A  158A  2CEC   	ljmp	_interrupcion
  6528                           
  6529                           	psect	config
  6530                           
  6531                           ;Config register CONFIG1 @ 0x2007
  6532                           ;	Oscillator Selection bits
  6533                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6534                           ;	Watchdog Timer Enable bit
  6535                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6536                           ;	Power-up Timer Enable bit
  6537                           ;	PWRTE = OFF, PWRT disabled
  6538                           ;	RE3/MCLR pin function select bit
  6539                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6540                           ;	Code Protection bit
  6541                           ;	CP = OFF, Program memory code protection is disabled
  6542                           ;	Data Code Protection bit
  6543                           ;	CPD = OFF, Data memory code protection is disabled
  6544                           ;	Brown Out Reset Selection bits
  6545                           ;	BOREN = OFF, BOR disabled
  6546                           ;	Internal External Switchover bit
  6547                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6548                           ;	Fail-Safe Clock Monitor Enabled bit
  6549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6550                           ;	Low Voltage Programming Enable bit
  6551                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6552                           ;	In-Circuit Debugger Mode bit
  6553                           ;	DEBUG = 0x1, unprogrammed default
  6554  2007                     	org	8199
  6555  2007  20F4               	dw	8436
  6556                           
  6557                           ;Config register CONFIG2 @ 0x2008
  6558                           ;	Brown-out Reset Selection bit
  6559                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6560                           ;	Flash Program Memory Self Write Enable bits
  6561                           ;	WRT = OFF, Write protection off
  6562  2008                     	org	8200
  6563  2008  3FFF               	dw	16383

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     62      79
    BANK1            80      3       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[16]), 

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(BANK0[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(BANK0[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(BANK0[1]), sendhex@unidad(BANK0[1]), 

    division@dec	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    division@un	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    hexTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp3(BANK1[3]), 

    sendhex@valor	PTR unsigned char  size(1) Largest target is 1
		 -> UARTval(BANK0[1]), 

    floTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp2(BANK0[3]), disp1(BANK0[3]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 9
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_4(CODE[6]), STR_3(CODE[9]), 
		 -> STR_2(CODE[9]), STR_1(CODE[8]), 

    CONVdec@lectura	PTR unsigned char  size(1) Largest target is 1
		 -> pot2(BANK0[1]), pot1(BANK0[1]), 

    CONVdec@equiv	PTR float  size(1) Largest target is 4
		 -> val2(BANK0[4]), val1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_cursorLCD
    _sendhex->_divisiondecimal
    _sendfloat->_division
    _sendString->_send1dato
    _initLCD->_comandoLCD
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->_division
    _division->___awdiv
    ___flsub->___fladd
    ___flsub->___xxtofl
    _cursorLCD->_comandoLCD
    _configuracion->_ADCconfig
    _LCDstring->_dispCHAR
    _CONVdec->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_floTochar
    _sendhex->_divisiondecimal
    _sendfloat->___fltol
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->___fltol
    _division->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _CONVdec->___flmul
    ___flmul->___xxtofl

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34619
                                              0 BANK1      3     3      0
                            _CONVdec
                          _LCDstring
                      _configuracion
                          _cursorLCD
                           _dispCHAR
                          _floTochar
                          _hexTochar
                            _initLCD
                         _sendString
                          _sendfloat
                            _sendhex
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2753
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _sendfloat                                           15    11      4   11586
                                             45 BANK0     15    11      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
                          _send1dato
                         _sendString
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     2      0     265
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              6 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _hexTochar                                            8     7      1    2878
                                             10 BANK0      8     7      1
                    _divisiondecimal
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              8 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _floTochar                                           17    12      5   11640
                                             45 BANK0     17    12      5
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             7     5      2    2067
                                              8 COMMON     2     0      2
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              3 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     460
                                              6 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     2      0     100
                                              5 COMMON     2     2      0
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (1) _dispCHAR                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CONVdec                                              6     5      1    4773
                                              7 COMMON     1     1      0
                                             36 BANK0      5     4      1
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVdec
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _LCDstring
     _dispCHAR
   _configuracion
     _ADCconfig
     _configUART
   _cursorLCD
     _comandoLCD
   _dispCHAR
   _floTochar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
   _hexTochar
     _divisiondecimal
       ___awdiv
       ___bmul
   _initLCD
     _comandoLCD
   _sendString
     _send1dato
   _sendfloat
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
     _send1dato
     _sendString
       _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       6       7        7.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 19:02:16 2021

                       pc 0002            ___bmul@product 0075              ___awdiv@sign 0021  
          ?_configuracion 0070                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0BD3                       l200 0CEB                       l131 0C14  
                     l203 0A54                       l211 0A7A                       l220 0AAE  
                     l125 0C59                       l151 0A3E                       l208 0AF0  
                     l160 0ACD                       l154 0A44                       l163 0F43  
                     l148 0A66                       l332 0A8F                       l172 0B69  
                     l502 0E1D                       l166 07F5                       l169 0B9D  
                     l178 0CA1                       l603 048F                       l187 0E9A  
                     l620 0560                       l612 0612                       l701 02EE  
                     l605 0464                       l630 05A6                       l624 0584  
                     l641 0606                       l633 05E4                       l714 0B2B  
                     l642 0612                       l707 0376                       l459 0DA1  
                     l716 0B3D                       l492 0E1D                       l741 0FFF  
                     l645 0B14                       l752 0FC9                       l753 0FD5  
                     l745 0FAD                       l739 0F68                       l499 0E08  
                     l695 0382                       l599 03E6        __size_of_ADCconfig 0045  
                     _RC0 0038                       _RC1 0039                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0038              ___flmul@bexp 003D  
            ___flmul@sign 0037              ___flmul@temp 0042              ___flmul@prod 003E  
         __end_of_CONVdec 0C15              ___fltol@exp1 0078                      l2010 0A6B  
                    l2012 0A6D                      l2014 0A77                      l3000 0FF6  
                    l2008 0A68                      l3002 0FF7                      l3010 0EB0  
                    l2300 0CDF                      l3020 0F34                      l3012 0EE4  
                    l3100 0712                      l3006 0BD5                      l3030 075A  
                    l2302 0CE5                      l3014 0F0E                      l3022 0B6D  
                    l3110 073F                      l3102 071B                      l3040 07EE  
                    l3032 076F                      l3016 0F1C                      l3008 0E9B  
                    l3024 0B82                      l3112 0748                      l3104 0721  
                    l2250 0BB7                      l2242 0B9E                      l3034 0773  
                    l3042 0B41                      l3018 0F2B                      l3026 0B8B  
                    l3106 072D                      l3050 0613                      l2260 0BBF  
                    l2252 0BBB                      l2244 0BA2                      l2500 0D3C  
                    l3036 07A7                      l3044 0B53                      l3028 0B94  
                    l3108 0736                      l3060 0640                      l3052 0618  
                    l3134 0C3A                      l2270 0BC4                      l2262 0BC0  
                    l2254 0BBC                      l2246 0BA3                      l2350 0AD4  
                    l2510 0D50                      l2502 0D40                      l3038 07D1  
                    l3046 0B5C                      l3070 066F                      l3062 0646  
                    l3054 061D                      l2360 0A91                      l2272 0BC5  
                    l2264 0BC1                      l2256 0BBD                      l2248 0BB2  
                    l2352 0AD9                      l2600 0408                      l2520 0D66  
                    l2512 0D54                      l2504 0D45                      l3048 0B62  
                    l2280 0CA2                      l3080 06BF                      l3072 0675  
                    l3064 0654                      l3056 0623                      l2362 0A92  
                    l2274 0BC6                      l2266 0BC2                      l2258 0BBE  
                    l2354 0ADF                      l2610 041C                      l2602 040C  
                    l2530 0D86                      l2522 0D6A                      l2514 0D56  
                    l2506 0D47                      l2290 0CBE                      l2282 0CA5  
                    l1650 0A3A                      l3090 06E8                      l3082 06C7  
                    l3074 068C                      l3066 0663                      l3058 0631  
                    l2364 0A9E                      l2276 0BCD                      l2268 0BC3  
                    l2356 0AE5                      l2348 0ACF                      l2700 0599  
                    l2612 0420                      l2604 0410                      l2620 0430  
                    l2532 0D8D                      l2524 0D6E                      l2516 0D5C  
                    l2508 0D4B                      l2292 0CC4                      l2284 0CA6  
                    l3092 06EE                      l3084 06D0                      l3076 06A3  
                    l3068 0669                      l2366 0AA2                      l2278 0BD0  
                    l2358 0AEA                      l2710 05B0                      l2702 059D  
                    l2630 0475                      l2622 0431                      l2614 0424  
                    l2606 0414                      l2550 0395                      l2542 0383  
                    l2526 0D7F                      l2518 0D5F                      l2534 0D93  
                    l2294 0CCD                      l2286 0CAF                      l3094 06FA  
                    l3086 06D6                      l3078 06B1                      l2720 05EE  
                    l2712 05BE                      l2704 05A3                      l2640 0493  
                    l2632 047B                      l2624 0448                      l2616 0428  
                    l2608 0418                      l2552 039A                      l2560 03AA  
                    l2544 038A                      l2536 0D98                      l2528 0D85  
                    l2296 0CD3                      l2288 0CB5                      l1920 0AB1  
                    l3096 0703                      l3088 06DF                      l1930 0A4B  
                    l2730 0602                      l2722 05F6                      l2714 05C2  
                    l2650 04C0                      l2642 0498                      l2634 047C  
                    l2626 0468                      l2618 042C                      l2570 03C4  
                    l2562 03B2                      l2554 039F                      l2546 0390  
                    l2810 0DFD                      l2802 0DE4                      l2538 0D9D  
                    l2490 0A85                      l2298 0CD9                      l1922 0ABD  
                    l3098 0709                      l2740 0B21                      l2900 024C  
                    l1932 0A51                      l1940 0A5C                      l2732 060D  
                    l2724 05FB                      l2716 05E0                      l2708 05AB  
                    l2660 04D4                      l2652 04C4                      l2636 0485  
                    l2628 0473                      l2580 03DB                      l2572 03C8  
                    l2564 03B7                      l2556 03A7                      l2548 0394  
                    l2812 0E0D                      l2804 0DF6                      l2492 0A87  
                    l2484 0A7C                      l1924 0AC1                      l2742 0B25  
                    l2910 02BA                      l2902 0272                      l2830 0034  
                    l2822 0022                      l1926 0A46                      l1950 0C17  
                    l1942 0A5D                      l1934 0A55                      l2734 0611  
                    l2726 05FC                      l2718 05E9                      l2670 053E  
                    l2662 04DD                      l2654 04CD                      l2646 04A3  
                    l2638 0489                      l2590 03F4                      l2582 03DC  
                    l2574 03C9                      l2566 03BD                      l2558 03A8  
                    l2814 0E12                      l2494 0A8E                      l2486 0A7D  
                    l2750 0C5D                      l1918 0AB0                      l2744 0B34  
                    l2736 0B18                      l2920 02D2                      l2912 02BE  
                    l2904 029A                      l2840 0050                      l2832 0039  
                    l2824 0029                      l1928 0A49                      l1952 0C1C  
                    l1960 0C2F                      l1944 0A60                      l1936 0A59  
                    l2728 0600                      l2672 0543                      l2656 04CF  
                    l2648 04BC                      l2664 04E2                      l2592 03F8  
                    l2576 03CE                      l2584 03DE                      l2568 03BE  
                    l2816 0AF1                      l2488 0A81                      l2760 0C9A  
                    l2752 0C61                      l2746 0B39                      l2738 0B1A  
                    l2930 02F3                      l2922 02D3                      l2914 02BF  
                    l2906 02A3                      l2850 0065                      l2842 0055  
                    l2834 003E                      l2826 002F                      l1970 0C57  
                    l1954 0C23                      l1962 0C45                      l1946 0A63  
                    l1938 0A5B                      l2690 058B                      l2682 0576  
                    l2666 04FA                      l2674 0552                      l2658 04D3  
                    l2594 03FC                      l2586 03EC                      l2578 03D3  
                    l2818 0AF5                      l2498 0D39                      l2754 0C65  
                    l2770 0E30                      l2762 0E1F                      l2932 02F8  
                    l2940 0329                      l2924 02D7                      l2916 02C8  
                    l2908 02B1                      l2860 0081                      l2852 006A  
                    l2844 005B                      l2836 0046                      l2828 0033  
                    l1972 0C58                      l1964 0C4E                      l1956 0C2A  
                    l1948 0C16                      l2692 058D                      l2684 057F  
                    l2676 0568                      l2668 0538                      l2596 0400  
                    l2588 03F0                      l2780 0DA2                      l2756 0C69  
                    l2772 0E5B                      l2764 0E25                      l2950 035C  
                    l2942 0336                      l2934 0306                      l2926 02EB  
                    l2918 02CE                      l2870 00AC                      l2862 0086  
                    l2854 0072                      l2846 005F                      l2838 0048  
                    l1966 0C4F                      l2694 0592                      l2686 0583  
                    l2678 056D                      l2598 0404                      l2790 0DCE  
                    l2782 0DAF                      l2758 0C94                      l2774 0E62  
                    l2766 0E29                      l2952 036A                      l2944 0341  
                    l2936 030A                      l2880 0149                      l2872 00C9  
                    l2856 0074                      l2848 0060                      l1968 0C50  
                    l2688 0588                      l2696 0594                      l2792 0DD6  
                    l2776 0E8D                      l2768 0E2C                      l2954 036E  
                    l2946 0350                      l2938 0323                      l2890 01AC  
                    l2882 0152                      l2874 00E5                      l2866 008F  
                    l2858 007C                      l2970 0F70                      l2962 0F47  
                    l2698 0598                      l2794 0DD8                      l2786 0DB8  
                    l2778 0E93                      l2956 036F                      l2948 035A  
                    l2892 01C5                      l2884 0162                      l2876 0111  
                    l2868 009F                      l2980 0F92                      l2964 0F4C  
                    l2796 0DDC                      l2788 0DCD                      l2958 037A  
                    l2894 01E2                      l2886 017F                      l2878 012D  
                    l2990 0FC3                      l2982 0F96                      l2974 0F79  
                    l2966 0F50                      l2896 020F                      l2888 018F  
                    l2992 0FCD                      l2984 0FA4                      l2976 0F7E  
                    l2968 0F60                      l2898 021F                      l2994 0FD7  
                    l2986 0FB4                      l2978 0F8B                      l2996 0FED  
                    l2988 0FBF                      l2998 0FF2                      STR_1 0828  
                    STR_2 0816                      STR_3 081F                      STR_4 0830  
                    STR_5 0806                      STR_6 0838                      STR_7 0836  
                    u2030 0ACD                      u2031 0ACC                      u3000 03F0  
                    u3001 03EF                      u3010 0448                      u1410 0A44  
                    u3011 0447                      u1411 0A43                      u3020 0453  
                    u3101 04AE                      u3021 0451                      u3110 04C0  
                    u3102 04B5                      u3030 0454                      u3111 04BF  
                    u3103 04BC                      u3015 0444                      u4000 0FC9  
                    u3200 056D                      u3120 04C4                      u3040 0468  
                    u4001 0FC8                      u3201 056C                      u3121 04C3  
                    u3041 0467                      u4010 0FCD                      u3130 04D3  
                    u3050 047B                      u4011 0FCC                      u3131 04D2  
                    u3051 047A                      u4020 0FE2                      u3300 05C2  
                    u3220 0583                      u3301 05C1                      u3221 0582  
                    u4030 0FF2                      u3310 05D1                      u3230 0588  
                    u3150 04FA                      u3070 048F                      u4031 0FF1  
                    u3231 0587                      u3215 0578                      u3151 04F9  
                    u3071 048E                      u3400 0B39                      u4040 0FF6  
                    u3320 05E0                      u3240 0592                      u3080 0493  
                    u3401 0B38                      u4041 0FF5                      u4025 0FDD  
                    u3321 05DF                      u3241 0591                      u3161 0511  
                    u3153 04F6                      u3145 04D6                      u3081 0492  
                    u3065 047E                      u3330 05E9                      u3250 0598  
                    u3170 0525                      u3162 0512                      u3090 0498  
                    u3410 0C9A                      u4107 0A4E                      u3331 05E8  
                    u3315 05CC                      u3251 0597                      u3171 0526  
                    u3163 0517                      u3091 0497                      u3411 0C99  
                    u2700 0AAE                      u3340 05EE                      u3260 059D  
                    u3180 0543                      u3172 052B                      u3164 0518  
                    u3500 0DFC                      u3420 0E61                      u2701 0AAD  
                    u3341 05ED                      u3261 059C                      u3181 0542  
                    u3173 052C                      u3165 051D                      u3501 0DFB  
                    u3421 0E60                      u3350 05FB                      u3270 05A3  
                    u3190 0568                      u3166 051E                      u3430 0E93  
                    u3351 05FA                      u3271 05A2                      u3191 0567  
                    u3431 0E92                      u3600 0081                      u3360 0600  
                    u3280 05AA                      u3520 0E0D                      u3440 0DAF  
                    u2800 0A81                      u3601 0080                      u3361 05FF  
                    u3281 05A9                      u3521 0E0C                      u3441 0DAE  
                    u2801 0A80                      u4057 0750                      u3610 0086  
                    u3370 0611                      u3290 05B0                      u3530 0E12  
                    u3450 0DC6                      u2810 0A8E                      u3611 0085  
                    u3371 0610                      u3291 05AF                      u3531 0E11  
                    u3515 0DFF                      u2811 0A8D                      u4067 0CAA  
                    u3380 0B25                      u3540 0033                      u3460 0DDC  
                    u2900 0D93                      u2820 0D40                      u3381 0B24  
                    u3701 01D4                      u3621 00D7                      u3541 0032  
                    u3461 0DDB                      u2901 0D92                      u2821 0D3F  
                    u4077 0CB9                      u3702 01DB                      u3622 00DE  
                    u3550 0039                      u3470 0DE3                      u2910 0D98  
                    u2830 0D4B                      u3711 0201                      u3703 01E2  
                    u3631 00F3                      u3623 00E5                      u3551 0038  
                    u3471 0DE2                      u3455 0DC1                      u2911 0D97  
                    u2831 0D4A                      u4087 0CC8                      u3712 0208  
                    u3632 00FA                      u3560 003E                      u2680 0AD4  
                    u2920 0394                      u2840 0D5C                      u3721 022E  
                    u3713 020F                      u3641 011F                      u3633 0101  
                    u3561 003D                      u4097 0A72                      u2681 0AD3  
                    u2921 0393                      u2841 0D5B                      u3810 02D2  
                    u3730 0258                      u3722 0235                      u3642 0126  
                    u3570 005F                      u2690 0AE5                      u2930 039A  
                    u3490 0DF5                      u3395 0B2C                      u3811 02D1  
                    u3723 023C                      u3651 013B                      u3643 012D  
                    u3571 005E                      u2691 0AE4                      u2931 0399  
                    u3491 0DF4                      u3900 036E                      u3820 02D7  
                    u3652 0142                      u3580 0065                      u2940 039F  
                    u2860 0D6E                      u3901 036D                      u3821 02D6  
                    u3805 02C1                      u3741 0264                      u3653 0149  
                    u3581 0064                      u2941 039E                      u3485 0DE5  
                    u2861 0D6D                      u3830 02EB                      u3750 0280  
                    u3742 026B                      u3590 006A                      u3910 0F4C  
                    u2950 03BD                      u3831 02EA                      u3743 0272  
                    u3735 0253                      u3671 0171                      u3591 0069  
                    u3911 0F4B                      u2951 03BC                      u2855 0D60  
                    u3840 02F2                      u3672 0178                      u3920 0F50  
                    u2960 03C8                      u2880 0D7F                      u3841 02F1  
                    u3761 028C                      u3681 019E                      u3673 017F  
                    u3665 014B                      u3921 0F4F                      u2961 03C7  
                    u2881 0D7E                      u3850 02F8                      u3762 0293  
                    u3682 01A5                      u3930 0F70                      u2970 03CE  
                    u3851 02F7                      u3763 029A                      u3755 027B  
                    u3683 01AC                      u3931 0F6F                      u2971 03CD  
                    u2875 0D6F                      u3860 030A                      u2980 03D3  
                    u3861 0309                      u2981 03D2                      u2885 0D7B  
                    u3870 0319                      u3790 02BE                      u3950 0F91  
                    u2990 03EC                      u3791 02BD                      u3775 029C  
                    u3695 01AE                      u3951 0F90                      u2991 03EB  
                    u2895 0D87                      u3880 0336                      u3881 0335  
                    u3785 02B3                      u3945 0F83                      u3890 0350  
                    u3970 0FB3                      u3891 034F                      u3875 0314  
                    u3971 0FB2                      i1l92 0D00                      u3885 0332  
                    u3965 0FA5                      u3990 0FC3                      u3895 034C  
                    u3991 0FC2                      u3985 0FB8                      i1l98 0D31  
                    i1l99 0D32                      _main 0613                      _val1 0062  
                    _val2 005E                      _pot1 006E                      _pot2 006D  
                    btemp 007E           _divisiondecimal 0E1E                      start 000C  
       ___bmul@multiplier 0076               division@dec 0079               division@div 0028  
      __size_of_LCDstring 001F             ___fltol@sign1 0077           __end_of___fladd 0613  
                   ?_main 0070           __end_of___awdiv 0DA2           __end_of___flmul 0383  
         __end_of___flsub 0B15           __end_of___fltol 0E1E                     _ANSEL 0188  
         ___awdiv@divisor 0073           ___awdiv@counter 0020                     _RCREG 001A  
            CONVdec@equiv 0044             floTochar@conv 0051                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009             floTochar@temp 0056  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
           send1dato@dato 0073           __end_of_initLCD 0CEC                     _disp1 0069  
                   _disp2 0066                     _disp3 00A0           __end_of_sendhex 0B9E  
                   pclath 000A                     status 0003                     wtemp0 007E  
       __end_of_ADCconfig 0C5A            sendhex@centena 002F           __initialization 000F  
            __end_of_main 075A           ??_configuracion 0077                    ??_main 00A3  
     divisiondecimal@cent 0026                 ??_CONVdec 0045                    _ADRESH 001E  
        ___awdiv@dividend 0075   __end_of_divisiondecimal 0E9B                    _ANSELH 0189  
                  i1l2370 0CF2                    i1l2372 0CF6                    i1l2380 0D09  
                  i1l2390 0D24                    i1l2382 0D0D                    i1l2374 0CFC  
                  i1l2384 0D1A                    i1l2392 0D28                    i1l2376 0D06  
                  i1l2368 0CEC                    i1l2394 0D2C                    i1l2386 0D1B  
                  i1l2378 0D08                    i1l2396 0D30                    i1l2388 0D1F  
       __end_of_LCDstring 0AAF                    u271_20 0CF2                    u271_21 0CF1  
                  u272_20 0CFC                    u272_21 0CFB                    u273_20 0D06  
                  u273_21 0D05                    u274_20 0D0D                    u274_21 0D0C  
                  u275_20 0D17                    u275_21 0D13                    u276_24 0D1A  
                  u277_20 0D1F                    u277_21 0D1E                    u278_20 0D2C  
                  u278_21 0D2B                    u279_20 0D30                    u279_21 0D2F  
           ADCconfig@just 0073            floTochar@valor 004D            sendfloat@valor 004D  
        __end_of___xxtofl 1000             hexTochar@conv 002A          __end_of_dispCHAR 0A55  
                  ___bmul 0A7B          __end_of_division 0CA2                 ??___fladd 0028  
               ??___awdiv 0077                 ??___flmul 0032                 ??___flsub 0077  
               ??___fltol 0048          ___awdiv@quotient 0022                 ??_initLCD 0076  
      __size_of__Umul8_16 0029                    saved_w 007E                 ??_sendhex 002A  
            ___xxtofl@arg 0026              ___xxtofl@exp 0025              ___xxtofl@val 0073  
 __end_of__initialization 001E                ___fltol@f1 0044       ___bmul@multiplicand 0073  
          __pcstackCOMMON 0070             ?_interrupcion 0070            _OPTION_REGbits 0081  
      __size_of_floTochar 009C        __size_of_hexTochar 002C          ?_divisiondecimal 0024  
              __pbssBANK0 005E                __pbssBANK1 00A0        __size_of_cursorLCD 0023  
       __end_of__Umul8_16 0B3E        __size_of_send1dato 000C            ??_interrupcion 0070  
              __pmaintext 0613                   ?___bmul 0073                __pintentry 0004  
      __size_of_sendfloat 00A9                _comandoLCD 0A67                   _CONVdec 0BD4  
              _configUART 0A55            ADCconfig@canal 0076                 ?___xxtofl 0073  
          CONVdec@lectura 0077           floTochar@entero 005B                 ?_dispCHAR 0070  
                 _UARTdat 007A           sendfloat@entero 005A                   _UARTval 006C  
              __stringtab 0800                 ?_division 0078            hexTochar@valor 002E  
       __end_of_floTochar 07F6                 _ADCconfig 0C15           __size_of___bmul 0015  
       __end_of_hexTochar 0B6A                   ___fladd 0383                   ___awdiv 0D39  
                 ___flmul 0022                   ___flsub 0AF1                   ___fltol 0DA2  
                 __ptext1 0B6A                   __ptext2 0E9B                   __ptext3 0AAF  
                 __ptext4 0A39                   __ptext5 0CA2                   __ptext6 0B3E  
                 __ptext7 0E1E                   __ptext8 075A                   __ptext9 0C5A  
                 _initLCD 0CA2         __end_of_cursorLCD 0AF1                ??___xxtofl 0020  
                 _sendhex 0B6A                ??_dispCHAR 0073         __end_of_send1dato 0A45  
                 clrloop0 07F7      end_of_initialization 001E                ??_division 0024  
       __end_of_sendfloat 0F44                _sendString 0AAF                 _LCDstring 0A90  
               _RCSTAbits 0018                ?_ADCconfig 0073     __end_of_configuracion 0BD4  
             ?_comandoLCD 0070               ___fladd@grs 0076               ?_configUART 0070  
           ___xxtofl@sign 0024                 _TRISCbits 0087      __end_of_interrupcion 0D39  
             ___flmul@grs 0039                 _TXSTAbits 0098                ?_LCDstring 0070  
              division@un 0078          hexTochar@centena 0030            __end_of___bmul 0A90  
     start_initialization 000F            division@conteo 0027             sendhex@decena 0030  
           sendhex@unidad 002E        divisiondecimal@dec 0025        divisiondecimal@div 0079  
             ?_sendString 0070             sendfloat@temp 0055       __size_of_comandoLCD 0014  
     __size_of_configUART 0012               ??_ADCconfig 0074                  ??___bmul 0074  
               __Umul8_16 0B15                 ___fladd@a 0024                 ___fladd@b 0020  
                ?_CONVdec 0044     divisiondecimal@conteo 0078                 ___flmul@a 002E  
               ___flmul@b 002A               __pbssCOMMON 007A                 ___flsub@a 0030  
               ___flsub@b 0034                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A3         __size_of___xxtofl 00BC         __size_of_dispCHAR 0010  
       __size_of_division 0048               ??_LCDstring 0075  __size_of_divisiondecimal 007D  
                ?___fladd 0020                  ?___awdiv 0073                  ?___flmul 002A  
                ?___flsub 0030                  ?___fltol 0044                ?__Umul8_16 0073  
               _floTochar 075A                 __pstrings 0800                 _hexTochar 0B3E  
     __size_of_sendString 001F     __size_of_interrupcion 004D                  ?_initLCD 0070  
                ?_sendhex 0070                 _cursorLCD 0ACE                 _send1dato 0A39  
       interrupt_function 0004         sendString@mensaje 0075          floTochar@decimal 005A  
               clear_ram0 07F6                  _PIE1bits 008C                 dispCHAR@b 0074  
               _sendfloat 0E9B                  _PIR1bits 000C          sendfloat@decimal 0059  
            _interrupcion 0CEC                ?_floTochar 004D                ?_hexTochar 002A  
              _ADCON0bits 001F               __stringbase 0805                _ADCON1bits 009F  
            ??_comandoLCD 0073              ??_configUART 0073          __size_of_CONVdec 0041  
         hexTochar@decena 0031                ?_cursorLCD 0076           hexTochar@unidad 002F  
              ?_send1dato 0070              sendhex@valor 002D         divisiondecimal@un 0024  
              ?_sendfloat 004D        __end_of_comandoLCD 0A7B        __end_of_configUART 0A67  
     floTochar@digdecimal 005C               ??__Umul8_16 0075          __size_of___fladd 0290  
        __size_of___awdiv 0069          __size_of___flmul 0361          __size_of___flsub 0024  
        __size_of___fltol 007C         ??_divisiondecimal 0027        __end_of__stringtab 0806  
        __size_of_initLCD 004A                  ___xxtofl 0F44                  _dispCHAR 0A45  
        __size_of_sendhex 0034                  __ptext10 0A7B                  __ptext11 0D39  
                __ptext20 0A90                  __ptext12 0DA2                  __ptext21 0A45  
                __ptext13 0AF1                  __ptext22 0BD4                  __ptext14 0383  
                __ptext23 0F44                  __ptext15 0ACE                  __ptext24 0022  
                __ptext16 0A67                  __ptext25 0B15                  __ptext17 0B9E  
                __ptext26 0CEC                  __ptext18 0A55                  __ptext19 0C15  
        LCDstring@mensaje 0076                  _division 0C5A              ??_sendString 0074  
  __size_of_configuracion 0036             __size_of_main 0147             cursorLCD@fila 0078  
           cursorLCD@temp 0079               ??_floTochar 0052               ??_hexTochar 002B  
     sendfloat@digdecimal 005B        __end_of_sendString 0ACE                _INTCONbits 000B  
             ??_cursorLCD 0077                  intlevel1 0000               ??_send1dato 0073  
             ??_sendfloat 0051                 stringcode 0800                _OSCCONbits 008F  
           _configuracion 0B9E          cursorLCD@columna 0076    __Umul8_16@multiplicand 0073  
                stringdir 0800                  stringtab 0800             ___fladd@signs 0073  
            ___fladd@aexp 0074              ___fladd@bexp 0075      __Umul8_16@multiplier 0024  
       __Umul8_16@product 0020             comandoLCD@cmd 0075  
