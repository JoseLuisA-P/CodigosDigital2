

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 12:11:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0019                     _TXREG	set	25
   469  0018                     _RCSTAbits	set	24
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  000B                     _INTCONbits	set	11
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  001A                     _RCREG	set	26
   479  000C                     _PIR1bits	set	12
   480  0039                     _RC1	set	57
   481  0038                     _RC0	set	56
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  0087                     _TRISCbits	set	135
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008C                     _PIE1bits	set	140
   488  008F                     _OSCCONbits	set	143
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISC	set	135
   492  0086                     _TRISB	set	134
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:
   499  0800                     stringtab:
   500  0800                     __stringtab:
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:
   513  0806                     STR_5:
   514  0806  3450               	retlw	80	;'P'
   515  0807  344F               	retlw	79	;'O'
   516  0808  3454               	retlw	84	;'T'
   517  0809  3431               	retlw	49	;'1'
   518  080A  3420               	retlw	32	;' '
   519  080B  3420               	retlw	32	;' '
   520  080C  3450               	retlw	80	;'P'
   521  080D  344F               	retlw	79	;'O'
   522  080E  3454               	retlw	84	;'T'
   523  080F  3432               	retlw	50	;'2'
   524  0810  3420               	retlw	32	;' '
   525  0811  3420               	retlw	32	;' '
   526  0812  3455               	retlw	85	;'U'
   527  0813  3441               	retlw	65	;'A'
   528  0814  3452               	retlw	82	;'R'
   529  0815  3454               	retlw	84	;'T'
   530  0816  3400               	retlw	0
   531  0817                     STR_1:
   532  0817  3450               	retlw	80	;'P'
   533  0818  344F               	retlw	79	;'O'
   534  0819  3454               	retlw	84	;'T'
   535  081A  3431               	retlw	49	;'1'
   536  081B  343A               	retlw	58	;':'
   537  081C  3420               	retlw	32	;' '
   538  081D  340D               	retlw	13
   539  081E  3400               	retlw	0
   540  081F                     STR_2:
   541  081F  3450               	retlw	80	;'P'
   542  0820  344F               	retlw	79	;'O'
   543  0821  3454               	retlw	84	;'T'
   544  0822  3432               	retlw	50	;'2'
   545  0823  343A               	retlw	58	;':'
   546  0824  3420               	retlw	32	;' '
   547  0825  340D               	retlw	13
   548  0826  3400               	retlw	0
   549  0827                     STR_3:
   550  0827  3455               	retlw	85	;'U'
   551  0828  3441               	retlw	65	;'A'
   552  0829  3452               	retlw	82	;'R'
   553  082A  3454               	retlw	84	;'T'
   554  082B  343A               	retlw	58	;':'
   555  082C  3420               	retlw	32	;' '
   556  082D  340D               	retlw	13
   557  082E  3400               	retlw	0
   558  082F                     STR_4:
   559  082F  340D               	retlw	13
   560  0830  340D               	retlw	13
   561  0831  340D               	retlw	13
   562  0832  340D               	retlw	13
   563  0833  340D               	retlw	13
   564  0834  3400               	retlw	0
   565  0835                     STR_6:
   566  0835  342E               	retlw	46	;'.'
   567  0836  3400               	retlw	0
   568  0833                     
   569                           	psect	cinit
   570  000F                     start_initialization:	
   571                           ; #config settings
   572                           
   573  000F                     __initialization:
   574                           
   575                           ; Clear objects allocated to COMMON
   576  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   577                           
   578                           ; Clear objects allocated to BANK0
   579  0010  1383               	bcf	3,7	;select IRP bank0
   580  0011  305E               	movlw	low __pbssBANK0
   581  0012  0084               	movwf	4
   582  0013  306F               	movlw	low (__pbssBANK0+17)
   583  0014  120A  158A  2241  120A  118A  	fcall	clear_ram0
   584                           
   585                           ; Clear objects allocated to BANK1
   586  0019  1683               	bsf	3,5	;RP0=1, select bank1
   587  001A  1303               	bcf	3,6	;RP1=0, select bank1
   588  001B  01A0               	clrf	__pbssBANK1& (0+127)
   589  001C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   590  001D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   591  001E                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594  001E                     __end_of__initialization:
   595  001E  0183               	clrf	3
   596  001F  120A  118A  2E13   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMMON
   599  007A                     __pbssCOMMON:
   600  007A                     _UARTdat:
   601  007A                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604  005E                     __pbssBANK0:
   605  005E                     _UARTval:
   606  005E                     	ds	1
   607  005F                     _val2:
   608  005F                     	ds	4
   609  0063                     _val1:
   610  0063                     	ds	4
   611  0067                     _disp2:
   612  0067                     	ds	3
   613  006A                     _disp1:
   614  006A                     	ds	3
   615  006D                     _pot2:
   616  006D                     	ds	1
   617  006E                     _pot1:
   618  006E                     	ds	1
   619                           
   620                           	psect	bssBANK1
   621  00A0                     __pbssBANK1:
   622  00A0                     _disp3:
   623  00A0                     	ds	3
   624                           
   625                           	psect	clrtext
   626  0A41                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0A41  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0A42                     clrloop0:
   632  0A42  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0A43  0A84               	incf	4,f	;increment pointer
   634  0A44  0604               	xorwf	4,w	;XOR with final address
   635  0A45  1903               	btfsc	3,2	;have we reached the end yet?
   636  0A46  3400               	retlw	0	;all done for this memory range, return
   637  0A47  0604               	xorwf	4,w	;XOR again to restore value
   638  0A48  2A42               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackBANK1
   641  00A3                     __pcstackBANK1:
   642  00A3                     ??_main:
   643                           
   644                           ; 1 bytes @ 0x0
   645  00A3                     	ds	3
   646                           
   647                           	psect	cstackCOMMON
   648  0070                     __pcstackCOMMON:
   649  0070                     ?_configuracion:
   650  0070                     ?_initLCD:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_sendString:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_sendhex:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_LCDstring:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_dispCHAR:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_configUART:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_comandoLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_interrupcion:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_interrupcion:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_main:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_send1dato:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685  0070                     	ds	3
   686  0073                     ??_dispCHAR:
   687  0073                     ??_configUART:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_ADCconfig:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??_comandoLCD:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ??_send1dato:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ?___bmul:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ?__Umul8_16:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ?___awdiv:	
   706                           ; 2 bytes @ 0x3
   707                           
   708  0073                     ?___xxtofl:	
   709                           ; 2 bytes @ 0x3
   710                           
   711  0073                     ADCconfig@just:	
   712                           ; 4 bytes @ 0x3
   713                           
   714  0073                     send1dato@dato:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ___bmul@multiplicand:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ___fladd@signs:	
   721                           ; 1 bytes @ 0x3
   722                           
   723  0073                     __Umul8_16@multiplicand:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ___awdiv@divisor:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ___xxtofl@val:	
   730                           ; 2 bytes @ 0x3
   731                           
   732                           
   733                           ; 4 bytes @ 0x3
   734  0073                     	ds	1
   735  0074                     ??_sendString:
   736  0074                     ??_ADCconfig:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     ??___bmul:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     dispCHAR@b:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     ___fladd@aexp:	
   746                           ; 1 bytes @ 0x4
   747                           
   748                           
   749                           ; 1 bytes @ 0x4
   750  0074                     	ds	1
   751  0075                     ??_LCDstring:
   752  0075                     ??__Umul8_16:	
   753                           ; 1 bytes @ 0x5
   754                           
   755  0075                     sendString@mensaje:	
   756                           ; 1 bytes @ 0x5
   757                           
   758  0075                     comandoLCD@cmd:	
   759                           ; 1 bytes @ 0x5
   760                           
   761  0075                     ___bmul@product:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ___fladd@bexp:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     ___awdiv@dividend:	
   768                           ; 1 bytes @ 0x5
   769                           
   770                           
   771                           ; 2 bytes @ 0x5
   772  0075                     	ds	1
   773  0076                     ??_initLCD:
   774  0076                     ?_cursorLCD:	
   775                           ; 1 bytes @ 0x6
   776                           
   777  0076                     ADCconfig@canal:	
   778                           ; 1 bytes @ 0x6
   779                           
   780  0076                     cursorLCD@columna:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0076                     LCDstring@mensaje:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     ___bmul@multiplier:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ___fladd@grs:	
   790                           ; 1 bytes @ 0x6
   791                           
   792                           
   793                           ; 1 bytes @ 0x6
   794  0076                     	ds	1
   795  0077                     ??_configuracion:
   796  0077                     ??_cursorLCD:	
   797                           ; 1 bytes @ 0x7
   798                           
   799  0077                     ??___awdiv:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     ??___flsub:	
   803                           ; 1 bytes @ 0x7
   804                           
   805  0077                     CONVdec@lectura:	
   806                           ; 1 bytes @ 0x7
   807                           
   808  0077                     ___fltol@sign1:	
   809                           ; 1 bytes @ 0x7
   810                           
   811                           
   812                           ; 1 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ?_division:
   815  0078                     division@un:	
   816                           ; 1 bytes @ 0x8
   817                           
   818  0078                     divisiondecimal@conteo:	
   819                           ; 1 bytes @ 0x8
   820                           
   821  0078                     cursorLCD@fila:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0078                     ___fltol@exp1:	
   825                           ; 1 bytes @ 0x8
   826                           
   827                           
   828                           ; 1 bytes @ 0x8
   829  0078                     	ds	1
   830  0079                     division@dec:
   831  0079                     divisiondecimal@div:	
   832                           ; 1 bytes @ 0x9
   833                           
   834  0079                     cursorLCD@temp:	
   835                           ; 1 bytes @ 0x9
   836                           
   837                           
   838                           ; 1 bytes @ 0x9
   839  0079                     	ds	1
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:
   843  0020                     ??___xxtofl:
   844  0020                     ?___fladd:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ___awdiv@counter:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0020                     __Umul8_16@product:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___fladd@b:	
   854                           ; 2 bytes @ 0x0
   855                           
   856                           
   857                           ; 4 bytes @ 0x0
   858  0020                     	ds	1
   859  0021                     ___awdiv@sign:
   860                           
   861                           ; 1 bytes @ 0x1
   862  0021                     	ds	1
   863  0022                     ___awdiv@quotient:
   864  0022                     __Umul8_16@word_mpld:	
   865                           ; 2 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	2
   870  0024                     ??_division:
   871  0024                     ?_divisiondecimal:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0024                     divisiondecimal@un:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0024                     __Umul8_16@multiplier:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0024                     ___xxtofl@sign:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0024                     ___fladd@a:	
   884                           ; 1 bytes @ 0x4
   885                           
   886                           
   887                           ; 4 bytes @ 0x4
   888  0024                     	ds	1
   889  0025                     divisiondecimal@dec:
   890  0025                     ___xxtofl@exp:	
   891                           ; 1 bytes @ 0x5
   892                           
   893                           
   894                           ; 1 bytes @ 0x5
   895  0025                     	ds	1
   896  0026                     divisiondecimal@cent:
   897  0026                     ___xxtofl@arg:	
   898                           ; 1 bytes @ 0x6
   899                           
   900                           
   901                           ; 4 bytes @ 0x6
   902  0026                     	ds	1
   903  0027                     ??_divisiondecimal:
   904  0027                     division@conteo:	
   905                           ; 1 bytes @ 0x7
   906                           
   907                           
   908                           ; 1 bytes @ 0x7
   909  0027                     	ds	1
   910  0028                     ??___fladd:
   911  0028                     division@div:	
   912                           ; 1 bytes @ 0x8
   913                           
   914                           
   915                           ; 1 bytes @ 0x8
   916  0028                     	ds	2
   917  002A                     ??_sendhex:
   918  002A                     ?_hexTochar:	
   919                           ; 1 bytes @ 0xA
   920                           
   921  002A                     ?___flmul:	
   922                           ; 1 bytes @ 0xA
   923                           
   924  002A                     hexTochar@conv:	
   925                           ; 4 bytes @ 0xA
   926                           
   927  002A                     ___flmul@b:	
   928                           ; 1 bytes @ 0xA
   929                           
   930                           
   931                           ; 4 bytes @ 0xA
   932  002A                     	ds	1
   933  002B                     ??_hexTochar:
   934                           
   935                           ; 1 bytes @ 0xB
   936  002B                     	ds	2
   937  002D                     sendhex@valor:
   938                           
   939                           ; 1 bytes @ 0xD
   940  002D                     	ds	1
   941  002E                     sendhex@unidad:
   942  002E                     hexTochar@valor:	
   943                           ; 1 bytes @ 0xE
   944                           
   945  002E                     ___flmul@a:	
   946                           ; 1 bytes @ 0xE
   947                           
   948                           
   949                           ; 4 bytes @ 0xE
   950  002E                     	ds	1
   951  002F                     sendhex@centena:
   952  002F                     hexTochar@unidad:	
   953                           ; 1 bytes @ 0xF
   954                           
   955                           
   956                           ; 1 bytes @ 0xF
   957  002F                     	ds	1
   958  0030                     ?___flsub:
   959  0030                     sendhex@decena:	
   960                           ; 4 bytes @ 0x10
   961                           
   962  0030                     hexTochar@centena:	
   963                           ; 1 bytes @ 0x10
   964                           
   965  0030                     ___flsub@a:	
   966                           ; 1 bytes @ 0x10
   967                           
   968                           
   969                           ; 4 bytes @ 0x10
   970  0030                     	ds	1
   971  0031                     hexTochar@decena:
   972                           
   973                           ; 1 bytes @ 0x11
   974  0031                     	ds	1
   975  0032                     ??___flmul:
   976                           
   977                           ; 1 bytes @ 0x12
   978  0032                     	ds	2
   979  0034                     ___flsub@b:
   980                           
   981                           ; 4 bytes @ 0x14
   982  0034                     	ds	3
   983  0037                     ___flmul@sign:
   984                           
   985                           ; 1 bytes @ 0x17
   986  0037                     	ds	1
   987  0038                     ___flmul@aexp:
   988                           
   989                           ; 1 bytes @ 0x18
   990  0038                     	ds	1
   991  0039                     ___flmul@grs:
   992                           
   993                           ; 4 bytes @ 0x19
   994  0039                     	ds	4
   995  003D                     ___flmul@bexp:
   996                           
   997                           ; 1 bytes @ 0x1D
   998  003D                     	ds	1
   999  003E                     ___flmul@prod:
  1000                           
  1001                           ; 4 bytes @ 0x1E
  1002  003E                     	ds	4
  1003  0042                     ___flmul@temp:
  1004                           
  1005                           ; 2 bytes @ 0x22
  1006  0042                     	ds	2
  1007  0044                     ?_CONVdec:
  1008  0044                     ?___fltol:	
  1009                           ; 1 bytes @ 0x24
  1010                           
  1011  0044                     CONVdec@equiv:	
  1012                           ; 4 bytes @ 0x24
  1013                           
  1014  0044                     ___fltol@f1:	
  1015                           ; 1 bytes @ 0x24
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x24
  1019  0044                     	ds	1
  1020  0045                     ??_CONVdec:
  1021                           
  1022                           ; 1 bytes @ 0x25
  1023  0045                     	ds	3
  1024  0048                     ??___fltol:
  1025                           
  1026                           ; 1 bytes @ 0x28
  1027  0048                     	ds	5
  1028  004D                     ?_sendfloat:
  1029  004D                     ?_floTochar:	
  1030                           ; 1 bytes @ 0x2D
  1031                           
  1032  004D                     sendfloat@valor:	
  1033                           ; 1 bytes @ 0x2D
  1034                           
  1035  004D                     floTochar@valor:	
  1036                           ; 4 bytes @ 0x2D
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x2D
  1040  004D                     	ds	4
  1041  0051                     ??_sendfloat:
  1042  0051                     floTochar@conv:	
  1043                           ; 1 bytes @ 0x31
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x31
  1047  0051                     	ds	1
  1048  0052                     ??_floTochar:
  1049                           
  1050                           ; 1 bytes @ 0x32
  1051  0052                     	ds	3
  1052  0055                     sendfloat@temp:
  1053                           
  1054                           ; 4 bytes @ 0x35
  1055  0055                     	ds	1
  1056  0056                     floTochar@temp:
  1057                           
  1058                           ; 4 bytes @ 0x36
  1059  0056                     	ds	3
  1060  0059                     sendfloat@decimal:
  1061                           
  1062                           ; 1 bytes @ 0x39
  1063  0059                     	ds	1
  1064  005A                     sendfloat@entero:
  1065  005A                     floTochar@decimal:	
  1066                           ; 1 bytes @ 0x3A
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x3A
  1070  005A                     	ds	1
  1071  005B                     sendfloat@digdecimal:
  1072  005B                     floTochar@entero:	
  1073                           ; 1 bytes @ 0x3B
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x3B
  1077  005B                     	ds	1
  1078  005C                     floTochar@digdecimal:
  1079                           
  1080                           ; 2 bytes @ 0x3C
  1081  005C                     	ds	2
  1082                           
  1083                           	psect	maintext
  1084  0613                     __pmaintext:	
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 77 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : B00/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       0       3       0       0
  1107 ;;      Totals:         0       0       3       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_CONVdec
  1112 ;;		_LCDstring
  1113 ;;		_configuracion
  1114 ;;		_cursorLCD
  1115 ;;		_dispCHAR
  1116 ;;		_floTochar
  1117 ;;		_hexTochar
  1118 ;;		_initLCD
  1119 ;;		_sendString
  1120 ;;		_sendfloat
  1121 ;;		_sendhex
  1122 ;; This function is called by:
  1123 ;;		Startup code after reset
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _main
  1129  0613                     _main:
  1130  0613                     l3042:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1133                           
  1134                           
  1135                           ;main.c: 78:     configuracion();
  1136  0613  120A  158A  23AB  120A  118A  	fcall	_configuracion
  1137  0618                     l3044:
  1138                           
  1139                           ;main.c: 79:     initLCD();
  1140  0618  120A  158A  24AF  120A  118A  	fcall	_initLCD
  1141  061D                     l3046:
  1142                           
  1143                           ;main.c: 81:         sendString("POT1: \r");
  1144  061D  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145  061E  120A  158A  22BF  120A  118A  	fcall	_sendString
  1146  0623                     l3048:
  1147                           
  1148                           ;main.c: 82:         CONVdec(&pot1,&val1);
  1149  0623  3063               	movlw	(low (_val1| 0))& (0+255)
  1150  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0626  00A3               	movwf	??_main^(0+128)
  1153  0627  0823               	movf	??_main^(0+128),w
  1154  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1156  062A  00C4               	movwf	CONVdec@equiv
  1157  062B  306E               	movlw	(low (_pot1| 0))& (0+255)
  1158  062C  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1159  0631                     l3050:
  1160                           
  1161                           ;main.c: 83:         sendfloat(val1);
  1162  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0633  0866               	movf	_val1+3,w
  1165  0634  00D0               	movwf	sendfloat@valor+3
  1166  0635  0865               	movf	_val1+2,w
  1167  0636  00CF               	movwf	sendfloat@valor+2
  1168  0637  0864               	movf	_val1+1,w
  1169  0638  00CE               	movwf	sendfloat@valor+1
  1170  0639  0863               	movf	_val1,w
  1171  063A  00CD               	movwf	sendfloat@valor
  1172  063B  120A  118A  2750  120A  118A  	fcall	_sendfloat
  1173  0640                     l3052:
  1174                           
  1175                           ;main.c: 84:         sendString("POT2: \r");
  1176  0640  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1177  0641  120A  158A  22BF  120A  118A  	fcall	_sendString
  1178  0646                     l3054:
  1179                           
  1180                           ;main.c: 85:         CONVdec(&pot2,&val2);
  1181  0646  305F               	movlw	(low (_val2| 0))& (0+255)
  1182  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0649  00A3               	movwf	??_main^(0+128)
  1185  064A  0823               	movf	??_main^(0+128),w
  1186  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1187  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1188  064D  00C4               	movwf	CONVdec@equiv
  1189  064E  306D               	movlw	(low (_pot2| 0))& (0+255)
  1190  064F  120A  158A  23E1  120A  118A  	fcall	_CONVdec
  1191  0654                     l3056:
  1192                           
  1193                           ;main.c: 86:         sendfloat(val2);
  1194  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0656  0862               	movf	_val2+3,w
  1197  0657  00D0               	movwf	sendfloat@valor+3
  1198  0658  0861               	movf	_val2+2,w
  1199  0659  00CF               	movwf	sendfloat@valor+2
  1200  065A  0860               	movf	_val2+1,w
  1201  065B  00CE               	movwf	sendfloat@valor+1
  1202  065C  085F               	movf	_val2,w
  1203  065D  00CD               	movwf	sendfloat@valor
  1204  065E  120A  118A  2750  120A  118A  	fcall	_sendfloat
  1205  0663                     l3058:
  1206                           
  1207                           ;main.c: 87:         sendString("UART: \r");
  1208  0663  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1209  0664  120A  158A  22BF  120A  118A  	fcall	_sendString
  1210  0669                     l3060:
  1211                           
  1212                           ;main.c: 88:         sendhex(UARTval);
  1213  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1214  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1215  066B  085E               	movf	_UARTval,w
  1216  066C  120A  158A  237A  120A  118A  	fcall	_sendhex
  1217  0671                     l3062:
  1218                           
  1219                           ;main.c: 89:         sendString("\r\r\r\r\r");
  1220  0671  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1221  0672  120A  158A  22BF  120A  118A  	fcall	_sendString
  1222  0677                     l3064:
  1223                           
  1224                           ;main.c: 90:         floTochar(val1,&disp1);
  1225  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0679  0866               	movf	_val1+3,w
  1228  067A  00D0               	movwf	floTochar@valor+3
  1229  067B  0865               	movf	_val1+2,w
  1230  067C  00CF               	movwf	floTochar@valor+2
  1231  067D  0864               	movf	_val1+1,w
  1232  067E  00CE               	movwf	floTochar@valor+1
  1233  067F  0863               	movf	_val1,w
  1234  0680  00CD               	movwf	floTochar@valor
  1235  0681  306A               	movlw	(low (_disp1| 0))& (0+255)
  1236  0682  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0683  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0684  00A3               	movwf	??_main^(0+128)
  1239  0685  0823               	movf	??_main^(0+128),w
  1240  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0688  00D1               	movwf	floTochar@conv
  1243  0689  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1244  068E                     l3066:
  1245                           
  1246                           ;main.c: 91:         floTochar(val2,&disp2);
  1247  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1248  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0690  0862               	movf	_val2+3,w
  1250  0691  00D0               	movwf	floTochar@valor+3
  1251  0692  0861               	movf	_val2+2,w
  1252  0693  00CF               	movwf	floTochar@valor+2
  1253  0694  0860               	movf	_val2+1,w
  1254  0695  00CE               	movwf	floTochar@valor+1
  1255  0696  085F               	movf	_val2,w
  1256  0697  00CD               	movwf	floTochar@valor
  1257  0698  3067               	movlw	(low (_disp2| 0))& (0+255)
  1258  0699  1683               	bsf	3,5	;RP0=1, select bank1
  1259  069A  1303               	bcf	3,6	;RP1=0, select bank1
  1260  069B  00A3               	movwf	??_main^(0+128)
  1261  069C  0823               	movf	??_main^(0+128),w
  1262  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1263  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1264  069F  00D1               	movwf	floTochar@conv
  1265  06A0  120A  158A  26A8  120A  118A  	fcall	_floTochar
  1266  06A5                     l3068:
  1267                           
  1268                           ;main.c: 92:         hexTochar(UARTval,&disp3);
  1269  06A5  30A0               	movlw	(low (_disp3| 0))& (0+255)
  1270  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1271  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1272  06A8  00A3               	movwf	??_main^(0+128)
  1273  06A9  0823               	movf	??_main^(0+128),w
  1274  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06AC  00AA               	movwf	hexTochar@conv
  1277  06AD  085E               	movf	_UARTval,w
  1278  06AE  120A  158A  234E  120A  118A  	fcall	_hexTochar
  1279  06B3                     l3070:
  1280                           
  1281                           ;main.c: 93:         cursorLCD(1,1);
  1282  06B3  01F6               	clrf	cursorLCD@columna
  1283  06B4  0AF6               	incf	cursorLCD@columna,f
  1284  06B5  3001               	movlw	1
  1285  06B6  120A  158A  22DE  120A  118A  	fcall	_cursorLCD
  1286                           
  1287                           ;main.c: 94:         LCDstring("POT1  POT2  UART");
  1288  06BB  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1289  06BC  120A  158A  22A0  120A  118A  	fcall	_LCDstring
  1290  06C1                     l3072:
  1291                           
  1292                           ;main.c: 95:         cursorLCD(2,1);
  1293  06C1  01F6               	clrf	cursorLCD@columna
  1294  06C2  0AF6               	incf	cursorLCD@columna,f
  1295  06C3  3002               	movlw	2
  1296  06C4  120A  158A  22DE  120A  118A  	fcall	_cursorLCD
  1297  06C9                     l3074:
  1298                           
  1299                           ;main.c: 96:         dispCHAR(disp1[0]+48);
  1300  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1301  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1302  06CB  086A               	movf	_disp1,w
  1303  06CC  3E30               	addlw	48
  1304  06CD  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1305  06D2                     l3076:
  1306                           
  1307                           ;main.c: 97:         dispCHAR('.');
  1308  06D2  302E               	movlw	46
  1309  06D3  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1310  06D8                     l3078:
  1311                           
  1312                           ;main.c: 98:         dispCHAR(disp1[1]+48);
  1313  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1314  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1315  06DA  086B               	movf	_disp1+1,w
  1316  06DB  3E30               	addlw	48
  1317  06DC  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1318  06E1                     l3080:
  1319                           
  1320                           ;main.c: 99:         dispCHAR(disp1[2]+48);
  1321  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1322  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1323  06E3  086C               	movf	_disp1+2,w
  1324  06E4  3E30               	addlw	48
  1325  06E5  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1326  06EA                     l3082:
  1327                           
  1328                           ;main.c: 100:         cursorLCD(2,7);
  1329  06EA  3007               	movlw	7
  1330  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1331  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1332  06ED  00A3               	movwf	??_main^(0+128)
  1333  06EE  0823               	movf	??_main^(0+128),w
  1334  06EF  00F6               	movwf	cursorLCD@columna
  1335  06F0  3002               	movlw	2
  1336  06F1  120A  158A  22DE  120A  118A  	fcall	_cursorLCD
  1337  06F6                     l3084:
  1338                           
  1339                           ;main.c: 101:         dispCHAR(disp2[0]+48);
  1340  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1341  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1342  06F8  0867               	movf	_disp2,w
  1343  06F9  3E30               	addlw	48
  1344  06FA  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1345  06FF                     l3086:
  1346                           
  1347                           ;main.c: 102:         dispCHAR('.');
  1348  06FF  302E               	movlw	46
  1349  0700  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1350  0705                     l3088:
  1351                           
  1352                           ;main.c: 103:         dispCHAR(disp2[1]+48);
  1353  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0707  0868               	movf	_disp2+1,w
  1356  0708  3E30               	addlw	48
  1357  0709  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1358  070E                     l3090:
  1359                           
  1360                           ;main.c: 104:         dispCHAR(disp2[2]+48);
  1361  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1362  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0710  0869               	movf	_disp2+2,w
  1364  0711  3E30               	addlw	48
  1365  0712  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1366  0717                     l3092:
  1367                           
  1368                           ;main.c: 105:         cursorLCD(2,13);
  1369  0717  300D               	movlw	13
  1370  0718  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0719  1303               	bcf	3,6	;RP1=0, select bank1
  1372  071A  00A3               	movwf	??_main^(0+128)
  1373  071B  0823               	movf	??_main^(0+128),w
  1374  071C  00F6               	movwf	cursorLCD@columna
  1375  071D  3002               	movlw	2
  1376  071E  120A  158A  22DE  120A  118A  	fcall	_cursorLCD
  1377  0723                     l3094:
  1378                           
  1379                           ;main.c: 106:         dispCHAR(disp3[2]+48);
  1380  0723  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0724  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0725  0822               	movf	(_disp3^(0+128)+2),w
  1383  0726  3E30               	addlw	48
  1384  0727  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1385  072C                     l3096:
  1386                           
  1387                           ;main.c: 107:         dispCHAR(disp3[1]+48);
  1388  072C  1683               	bsf	3,5	;RP0=1, select bank1
  1389  072D  1303               	bcf	3,6	;RP1=0, select bank1
  1390  072E  0821               	movf	(_disp3^(0+128)+1),w
  1391  072F  3E30               	addlw	48
  1392  0730  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1393  0735                     l3098:
  1394                           
  1395                           ;main.c: 108:         dispCHAR(disp3[0]+48);
  1396  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0737  0820               	movf	_disp3^(0+128),w
  1399  0738  3E30               	addlw	48
  1400  0739  120A  158A  2255  120A  118A  	fcall	_dispCHAR
  1401  073E                     l3100:
  1402                           
  1403                           ;main.c: 109:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1404  073E  3006               	movlw	6
  1405  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0741  00A5               	movwf	(??_main^(0+128)+2)
  1408  0742  3013               	movlw	19
  1409  0743  00A4               	movwf	(??_main^(0+128)+1)
  1410  0744  30AD               	movlw	173
  1411  0745  00A3               	movwf	??_main^(0+128)
  1412  0746                     u4057:
  1413  0746  0BA3               	decfsz	??_main^(0+128),f
  1414  0747  2F46               	goto	u4057
  1415  0748  0BA4               	decfsz	(??_main^(0+128)+1),f
  1416  0749  2F46               	goto	u4057
  1417  074A  0BA5               	decfsz	(??_main^(0+128)+2),f
  1418  074B  2F46               	goto	u4057
  1419  074C  2E1D               	goto	l3046
  1420  074D  120A  118A  280C   	ljmp	start
  1421  0750                     __end_of_main:
  1422                           
  1423                           	psect	text1
  1424  0B7A                     __ptext1:	
  1425 ;; *************** function _sendhex *****************
  1426 ;; Defined at:
  1427 ;;		line 81 in file "ComSerial.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  valor           1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  valor           1   13[BANK0 ] unsigned char 
  1432 ;;  decena          1   16[BANK0 ] unsigned char 
  1433 ;;  centena         1   15[BANK0 ] unsigned char 
  1434 ;;  unidad          1   14[BANK0 ] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       0       0       0
  1445 ;;      Locals:         0       4       0       0       0
  1446 ;;      Temps:          0       3       0       0       0
  1447 ;;      Totals:         0       7       0       0       0
  1448 ;;Total ram usage:        7 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		_divisiondecimal
  1453 ;;		_send1dato
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _sendhex
  1461  0B7A                     _sendhex:
  1462                           
  1463                           ;incstack = 0
  1464                           ; Regs used in _sendhex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1465                           ;sendhex@valor stored from wreg
  1466  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0B7C  00AD               	movwf	sendhex@valor
  1469  0B7D                     l3014:
  1470                           
  1471                           ;ComSerial.c: 82:     uint8_t centena;;ComSerial.c: 83:     uint8_t decena;;ComSerial.c:
      +                           84:     uint8_t unidad;;ComSerial.c: 86:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  1472  0B7D  302E               	movlw	(low (sendhex@unidad| 0))& (0+255)
  1473  0B7E  00AA               	movwf	??_sendhex
  1474  0B7F  082A               	movf	??_sendhex,w
  1475  0B80  00A4               	movwf	divisiondecimal@un
  1476  0B81  3030               	movlw	(low (sendhex@decena| 0))& (0+255)
  1477  0B82  00AB               	movwf	??_sendhex+1
  1478  0B83  082B               	movf	??_sendhex+1,w
  1479  0B84  00A5               	movwf	divisiondecimal@dec
  1480  0B85  302F               	movlw	(low (sendhex@centena| 0))& (0+255)
  1481  0B86  00AC               	movwf	??_sendhex+2
  1482  0B87  082C               	movf	??_sendhex+2,w
  1483  0B88  00A6               	movwf	divisiondecimal@cent
  1484  0B89  082D               	movf	sendhex@valor,w
  1485  0B8A  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  1486  0B8F                     l3016:
  1487                           
  1488                           ;ComSerial.c: 87:     send1dato(centena +48);
  1489  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0B91  082F               	movf	sendhex@centena,w
  1492  0B92  3E30               	addlw	48
  1493  0B93  120A  158A  2249  120A  158A  	fcall	_send1dato
  1494  0B98                     l3018:
  1495                           
  1496                           ;ComSerial.c: 88:     send1dato(decena +48);
  1497  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0B9A  0830               	movf	sendhex@decena,w
  1500  0B9B  3E30               	addlw	48
  1501  0B9C  120A  158A  2249  120A  158A  	fcall	_send1dato
  1502  0BA1                     l3020:
  1503                           
  1504                           ;ComSerial.c: 89:     send1dato(unidad +48);
  1505  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0BA3  082E               	movf	sendhex@unidad,w
  1508  0BA4  3E30               	addlw	48
  1509  0BA5  120A  158A  2249  120A  158A  	fcall	_send1dato
  1510  0BAA                     l169:
  1511  0BAA  0008               	return
  1512  0BAB                     __end_of_sendhex:
  1513                           
  1514                           	psect	text2
  1515  0750                     __ptext2:	
  1516 ;; *************** function _sendfloat *****************
  1517 ;; Defined at:
  1518 ;;		line 39 in file "ComSerial.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  valor           4   45[BANK0 ] const float 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  temp            4   53[BANK0 ] float 
  1523 ;;  digdecimal      1   59[BANK0 ] unsigned char [1]
  1524 ;;  entero          1   58[BANK0 ] unsigned char 
  1525 ;;  decimal         1   57[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       4       0       0       0
  1536 ;;      Locals:         0       7       0       0       0
  1537 ;;      Temps:          0       4       0       0       0
  1538 ;;      Totals:         0      15       0       0       0
  1539 ;;Total ram usage:       15 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    3
  1542 ;; This function calls:
  1543 ;;		___flmul
  1544 ;;		___flsub
  1545 ;;		___fltol
  1546 ;;		___xxtofl
  1547 ;;		_division
  1548 ;;		_send1dato
  1549 ;;		_sendString
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _sendfloat
  1557  0750                     _sendfloat:
  1558  0750                     l3000:	
  1559                           ;incstack = 0
  1560                           ; Regs used in _sendfloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1561                           
  1562                           
  1563                           ;ComSerial.c: 40:     uint8_t entero;;ComSerial.c: 41:     uint8_t decimal;;ComSerial.c:
      +                           42:     float temp;;ComSerial.c: 43:     unsigned char digdecimal[1];;ComSerial.c: 49: 
      +                              entero = valor;
  1564  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0752  0850               	movf	sendfloat@valor+3,w
  1567  0753  00C7               	movwf	___fltol@f1+3
  1568  0754  084F               	movf	sendfloat@valor+2,w
  1569  0755  00C6               	movwf	___fltol@f1+2
  1570  0756  084E               	movf	sendfloat@valor+1,w
  1571  0757  00C5               	movwf	___fltol@f1+1
  1572  0758  084D               	movf	sendfloat@valor,w
  1573  0759  00C4               	movwf	___fltol@f1
  1574  075A  120A  158A  25AF  120A  118A  	fcall	___fltol
  1575  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0761  0844               	movf	?___fltol,w
  1578  0762  00D1               	movwf	??_sendfloat
  1579  0763  0851               	movf	??_sendfloat,w
  1580  0764  00DA               	movwf	sendfloat@entero
  1581  0765                     l3002:
  1582                           
  1583                           ;ComSerial.c: 50:     temp = valor-(float)entero;
  1584  0765  085A               	movf	sendfloat@entero,w
  1585  0766  00D1               	movwf	??_sendfloat
  1586  0767  01D2               	clrf	??_sendfloat+1
  1587  0768  01D3               	clrf	??_sendfloat+2
  1588  0769  01D4               	clrf	??_sendfloat+3
  1589  076A  0854               	movf	??_sendfloat+3,w
  1590  076B  00F6               	movwf	___xxtofl@val+3
  1591  076C  0853               	movf	??_sendfloat+2,w
  1592  076D  00F5               	movwf	___xxtofl@val+2
  1593  076E  0852               	movf	??_sendfloat+1,w
  1594  076F  00F4               	movwf	___xxtofl@val+1
  1595  0770  0851               	movf	??_sendfloat,w
  1596  0771  00F3               	movwf	___xxtofl@val
  1597  0772  3000               	movlw	0
  1598  0773  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1599  0778  0876               	movf	?___xxtofl+3,w
  1600  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1601  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1602  077B  00B3               	movwf	___flsub@a+3
  1603  077C  0875               	movf	?___xxtofl+2,w
  1604  077D  00B2               	movwf	___flsub@a+2
  1605  077E  0874               	movf	?___xxtofl+1,w
  1606  077F  00B1               	movwf	___flsub@a+1
  1607  0780  0873               	movf	?___xxtofl,w
  1608  0781  00B0               	movwf	___flsub@a
  1609  0782  0850               	movf	sendfloat@valor+3,w
  1610  0783  00B7               	movwf	___flsub@b+3
  1611  0784  084F               	movf	sendfloat@valor+2,w
  1612  0785  00B6               	movwf	___flsub@b+2
  1613  0786  084E               	movf	sendfloat@valor+1,w
  1614  0787  00B5               	movwf	___flsub@b+1
  1615  0788  084D               	movf	sendfloat@valor,w
  1616  0789  00B4               	movwf	___flsub@b
  1617  078A  120A  158A  2301  120A  118A  	fcall	___flsub
  1618  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0791  0833               	movf	?___flsub+3,w
  1621  0792  00D8               	movwf	sendfloat@temp+3
  1622  0793  0832               	movf	?___flsub+2,w
  1623  0794  00D7               	movwf	sendfloat@temp+2
  1624  0795  0831               	movf	?___flsub+1,w
  1625  0796  00D6               	movwf	sendfloat@temp+1
  1626  0797  0830               	movf	?___flsub,w
  1627  0798  00D5               	movwf	sendfloat@temp
  1628  0799                     l3004:
  1629                           
  1630                           ;ComSerial.c: 51:     decimal = (temp*100);
  1631  0799  0858               	movf	sendfloat@temp+3,w
  1632  079A  00B1               	movwf	___flmul@a+3
  1633  079B  0857               	movf	sendfloat@temp+2,w
  1634  079C  00B0               	movwf	___flmul@a+2
  1635  079D  0856               	movf	sendfloat@temp+1,w
  1636  079E  00AF               	movwf	___flmul@a+1
  1637  079F  0855               	movf	sendfloat@temp,w
  1638  07A0  00AE               	movwf	___flmul@a
  1639  07A1  3042               	movlw	66
  1640  07A2  00AD               	movwf	___flmul@b+3
  1641  07A3  30C8               	movlw	200
  1642  07A4  00AC               	movwf	___flmul@b+2
  1643  07A5  3000               	movlw	0
  1644  07A6  00AB               	movwf	___flmul@b+1
  1645  07A7  3000               	movlw	0
  1646  07A8  00AA               	movwf	___flmul@b
  1647  07A9  120A  118A  2022  120A  118A  	fcall	___flmul
  1648  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1649  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1650  07B0  082D               	movf	?___flmul+3,w
  1651  07B1  00C7               	movwf	___fltol@f1+3
  1652  07B2  082C               	movf	?___flmul+2,w
  1653  07B3  00C6               	movwf	___fltol@f1+2
  1654  07B4  082B               	movf	?___flmul+1,w
  1655  07B5  00C5               	movwf	___fltol@f1+1
  1656  07B6  082A               	movf	?___flmul,w
  1657  07B7  00C4               	movwf	___fltol@f1
  1658  07B8  120A  158A  25AF  120A  118A  	fcall	___fltol
  1659  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1660  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1661  07BF  0844               	movf	?___fltol,w
  1662  07C0  00D1               	movwf	??_sendfloat
  1663  07C1  0851               	movf	??_sendfloat,w
  1664  07C2  00D9               	movwf	sendfloat@decimal
  1665  07C3                     l3006:
  1666                           
  1667                           ;ComSerial.c: 52:     division(decimal,&digdecimal[0],&digdecimal[1]);
  1668  07C3  305B               	movlw	(low (sendfloat@digdecimal| 0))& (0+255)
  1669  07C4  00D1               	movwf	??_sendfloat
  1670  07C5  0851               	movf	??_sendfloat,w
  1671  07C6  00F8               	movwf	division@un
  1672  07C7  305C               	movlw	(low ((sendfloat@digdecimal| 0+1)))& (0+255)
  1673  07C8  00D2               	movwf	??_sendfloat+1
  1674  07C9  0852               	movf	??_sendfloat+1,w
  1675  07CA  00F9               	movwf	division@dec
  1676  07CB  0859               	movf	sendfloat@decimal,w
  1677  07CC  120A  158A  2467  120A  118A  	fcall	_division
  1678  07D1                     l3008:
  1679                           
  1680                           ;ComSerial.c: 53:     send1dato(entero+48);
  1681  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1682  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1683  07D3  085A               	movf	sendfloat@entero,w
  1684  07D4  3E30               	addlw	48
  1685  07D5  120A  158A  2249  120A  118A  	fcall	_send1dato
  1686                           
  1687                           ;ComSerial.c: 54:     sendString(".");
  1688  07DA  3030               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1689  07DB  120A  158A  22BF  120A  118A  	fcall	_sendString
  1690  07E0                     l3010:
  1691                           
  1692                           ;ComSerial.c: 55:     send1dato(digdecimal[1]+48);
  1693  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1694  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1695  07E2  085C               	movf	sendfloat@digdecimal+1,w
  1696  07E3  3E30               	addlw	48
  1697  07E4  120A  158A  2249  120A  118A  	fcall	_send1dato
  1698  07E9                     l3012:
  1699                           
  1700                           ;ComSerial.c: 56:     send1dato(digdecimal[0]+48);
  1701  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1702  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1703  07EB  085B               	movf	sendfloat@digdecimal,w
  1704  07EC  3E30               	addlw	48
  1705  07ED  120A  158A  2249  120A  118A  	fcall	_send1dato
  1706                           
  1707                           ;ComSerial.c: 57:     sendString("\r");
  1708  07F2  302E               	movlw	(low (((STR_4+4)-__stringbase)| (0+32768)))& (0+255)
  1709  07F3  120A  158A  22BF  120A  118A  	fcall	_sendString
  1710  07F8                     l163:
  1711  07F8  0008               	return
  1712  07F9                     __end_of_sendfloat:
  1713                           
  1714                           	psect	text3
  1715  0ABF                     __ptext3:	
  1716 ;; *************** function _sendString *****************
  1717 ;; Defined at:
  1718 ;;		line 31 in file "ComSerial.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  mensaje         1    wreg     PTR unsigned char 
  1721 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1722 ;;		 -> STR_2(8), STR_1(8), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  mensaje         1    5[COMMON] PTR unsigned char 
  1725 ;;		 -> STR_7(2), STR_6(2), STR_4(6), STR_3(8), 
  1726 ;;		 -> STR_2(8), STR_1(8), 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         1       0       0       0       0
  1738 ;;      Temps:          1       0       0       0       0
  1739 ;;      Totals:         2       0       0       0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    2
  1743 ;; This function calls:
  1744 ;;		_send1dato
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;;		_sendfloat
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _sendString
  1753  0ABF                     _sendString:
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1757                           ;sendString@mensaje stored from wreg
  1758  0ABF  00F5               	movwf	sendString@mensaje
  1759  0AC0                     l1914:
  1760                           
  1761                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1762  0AC0  2AD1               	goto	l1920
  1763  0AC1                     l1916:
  1764                           
  1765                           ;ComSerial.c: 33:         send1dato(*mensaje);
  1766  0AC1  0875               	movf	sendString@mensaje,w
  1767  0AC2  0084               	movwf	4
  1768  0AC3  120A  158A  2000  120A  158A  	fcall	stringdir
  1769  0AC8  120A  158A  2249  120A  158A  	fcall	_send1dato
  1770  0ACD                     l1918:
  1771                           
  1772                           ;ComSerial.c: 34:         mensaje ++;
  1773  0ACD  3001               	movlw	1
  1774  0ACE  00F4               	movwf	??_sendString
  1775  0ACF  0874               	movf	??_sendString,w
  1776  0AD0  07F5               	addwf	sendString@mensaje,f
  1777  0AD1                     l1920:
  1778                           
  1779                           ;ComSerial.c: 32:     while(*mensaje != 0x00){
  1780  0AD1  0875               	movf	sendString@mensaje,w
  1781  0AD2  0084               	movwf	4
  1782  0AD3  120A  158A  2000  120A  158A  	fcall	stringdir
  1783  0AD8  3A00               	xorlw	0
  1784  0AD9  1D03               	skipz
  1785  0ADA  2ADC               	goto	u2031
  1786  0ADB  2ADD               	goto	u2030
  1787  0ADC                     u2031:
  1788  0ADC  2AC1               	goto	l1916
  1789  0ADD                     u2030:
  1790  0ADD                     l160:
  1791  0ADD  0008               	return
  1792  0ADE                     __end_of_sendString:
  1793                           
  1794                           	psect	text4
  1795  0A49                     __ptext4:	
  1796 ;; *************** function _send1dato *****************
  1797 ;; Defined at:
  1798 ;;		line 26 in file "ComSerial.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  dato            1    wreg     unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  dato            1    3[COMMON] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       0       0       0       0
  1813 ;;      Locals:         1       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         1       0       0       0       0
  1816 ;;Total ram usage:        1 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_sendString
  1823 ;;		_sendfloat
  1824 ;;		_sendhex
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _send1dato
  1830  0A49                     _send1dato:
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _send1dato: [wreg]
  1834                           ;send1dato@dato stored from wreg
  1835  0A49  00F3               	movwf	send1dato@dato
  1836  0A4A                     l1646:
  1837                           
  1838                           ;ComSerial.c: 27:     TXREG = dato;
  1839  0A4A  0873               	movf	send1dato@dato,w
  1840  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0A4D  0099               	movwf	25	;volatile
  1843  0A4E                     l151:	
  1844                           ;ComSerial.c: 28:     while(!TXSTAbits.TRMT);
  1845                           
  1846  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0A4F  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0A50  1C98               	btfss	24,1	;volatile
  1849  0A51  2A53               	goto	u1411
  1850  0A52  2A54               	goto	u1410
  1851  0A53                     u1411:
  1852  0A53  2A4E               	goto	l151
  1853  0A54                     u1410:
  1854  0A54                     l154:
  1855  0A54  0008               	return
  1856  0A55                     __end_of_send1dato:
  1857                           
  1858                           	psect	text5
  1859  0CAF                     __ptext5:	
  1860 ;; *************** function _initLCD *****************
  1861 ;; Defined at:
  1862 ;;		line 20 in file "LCDD2.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          2       0       0       0       0
  1879 ;;      Totals:         2       0       0       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		_comandoLCD
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _initLCD
  1892  0CAF                     _initLCD:
  1893  0CAF                     l2276:	
  1894                           ;incstack = 0
  1895                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1896                           
  1897                           
  1898                           ;LCDD2.c: 21:     RC0 = 0;
  1899  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0CB1  1007               	bcf	7,0	;volatile
  1902  0CB2                     l2278:
  1903                           
  1904                           ;LCDD2.c: 22:     PORTD = 0X00;
  1905  0CB2  0188               	clrf	8	;volatile
  1906  0CB3                     l2280:
  1907                           
  1908                           ;LCDD2.c: 23:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1909  0CB3  3082               	movlw	130
  1910  0CB4  00F7               	movwf	??_initLCD+1
  1911  0CB5  30DD               	movlw	221
  1912  0CB6  00F6               	movwf	??_initLCD
  1913  0CB7                     u4067:
  1914  0CB7  0BF6               	decfsz	??_initLCD,f
  1915  0CB8  2CB7               	goto	u4067
  1916  0CB9  0BF7               	decfsz	??_initLCD+1,f
  1917  0CBA  2CB7               	goto	u4067
  1918  0CBB  2CBC               	nop2
  1919  0CBC                     l2282:
  1920                           
  1921                           ;LCDD2.c: 24:     comandoLCD(0X30);
  1922  0CBC  3030               	movlw	48
  1923  0CBD  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1924  0CC2                     l2284:
  1925                           
  1926                           ;LCDD2.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1927  0CC2  300D               	movlw	13
  1928  0CC3  00F7               	movwf	??_initLCD+1
  1929  0CC4  30FB               	movlw	251
  1930  0CC5  00F6               	movwf	??_initLCD
  1931  0CC6                     u4077:
  1932  0CC6  0BF6               	decfsz	??_initLCD,f
  1933  0CC7  2CC6               	goto	u4077
  1934  0CC8  0BF7               	decfsz	??_initLCD+1,f
  1935  0CC9  2CC6               	goto	u4077
  1936  0CCA  2CCB               	nop2
  1937  0CCB                     l2286:
  1938                           
  1939                           ;LCDD2.c: 26:     comandoLCD(0X30);
  1940  0CCB  3030               	movlw	48
  1941  0CCC  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1942  0CD1                     l2288:
  1943                           
  1944                           ;LCDD2.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1945  0CD1  300D               	movlw	13
  1946  0CD2  00F7               	movwf	??_initLCD+1
  1947  0CD3  30FB               	movlw	251
  1948  0CD4  00F6               	movwf	??_initLCD
  1949  0CD5                     u4087:
  1950  0CD5  0BF6               	decfsz	??_initLCD,f
  1951  0CD6  2CD5               	goto	u4087
  1952  0CD7  0BF7               	decfsz	??_initLCD+1,f
  1953  0CD8  2CD5               	goto	u4087
  1954  0CD9  2CDA               	nop2
  1955  0CDA                     l2290:
  1956                           
  1957                           ;LCDD2.c: 28:     comandoLCD(0X30);
  1958  0CDA  3030               	movlw	48
  1959  0CDB  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1960  0CE0                     l2292:
  1961                           
  1962                           ;LCDD2.c: 29:     comandoLCD(0X38);
  1963  0CE0  3038               	movlw	56
  1964  0CE1  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1965  0CE6                     l2294:
  1966                           
  1967                           ;LCDD2.c: 30:     comandoLCD(0X06);
  1968  0CE6  3006               	movlw	6
  1969  0CE7  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1970  0CEC                     l2296:
  1971                           
  1972                           ;LCDD2.c: 31:     comandoLCD(0X0E);
  1973  0CEC  300E               	movlw	14
  1974  0CED  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1975  0CF2                     l2298:
  1976                           
  1977                           ;LCDD2.c: 32:     comandoLCD(0X01);
  1978  0CF2  3001               	movlw	1
  1979  0CF3  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  1980  0CF8                     l200:
  1981  0CF8  0008               	return
  1982  0CF9                     __end_of_initLCD:
  1983                           
  1984                           	psect	text6
  1985  0B4E                     __ptext6:	
  1986 ;; *************** function _hexTochar *****************
  1987 ;; Defined at:
  1988 ;;		line 92 in file "ComSerial.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  valor           1    wreg     unsigned char 
  1991 ;;  conv            1   10[BANK0 ] PTR unsigned char 
  1992 ;;		 -> disp3(3), 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  valor           1   14[BANK0 ] unsigned char 
  1995 ;;  decena          1   17[BANK0 ] unsigned char 
  1996 ;;  centena         1   16[BANK0 ] unsigned char 
  1997 ;;  unidad          1   15[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       1       0       0       0
  2008 ;;      Locals:         0       4       0       0       0
  2009 ;;      Temps:          0       3       0       0       0
  2010 ;;      Totals:         0       8       0       0       0
  2011 ;;Total ram usage:        8 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    3
  2014 ;; This function calls:
  2015 ;;		_divisiondecimal
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _hexTochar
  2023  0B4E                     _hexTochar:
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _hexTochar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2027                           ;hexTochar@valor stored from wreg
  2028  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0B50  00AE               	movwf	hexTochar@valor
  2031  0B51                     l3034:
  2032                           
  2033                           ;ComSerial.c: 93:     uint8_t centena;;ComSerial.c: 94:     uint8_t decena;;ComSerial.c:
      +                           95:     uint8_t unidad;;ComSerial.c: 97:     divisiondecimal(valor,&unidad,&decena,&cen
      +                          tena);
  2034  0B51  302F               	movlw	(low (hexTochar@unidad| 0))& (0+255)
  2035  0B52  00AB               	movwf	??_hexTochar
  2036  0B53  082B               	movf	??_hexTochar,w
  2037  0B54  00A4               	movwf	divisiondecimal@un
  2038  0B55  3031               	movlw	(low (hexTochar@decena| 0))& (0+255)
  2039  0B56  00AC               	movwf	??_hexTochar+1
  2040  0B57  082C               	movf	??_hexTochar+1,w
  2041  0B58  00A5               	movwf	divisiondecimal@dec
  2042  0B59  3030               	movlw	(low (hexTochar@centena| 0))& (0+255)
  2043  0B5A  00AD               	movwf	??_hexTochar+2
  2044  0B5B  082D               	movf	??_hexTochar+2,w
  2045  0B5C  00A6               	movwf	divisiondecimal@cent
  2046  0B5D  082E               	movf	hexTochar@valor,w
  2047  0B5E  120A  158A  262B  120A  158A  	fcall	_divisiondecimal
  2048  0B63                     l3036:
  2049                           
  2050                           ;ComSerial.c: 98:     conv[0]= unidad;
  2051  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0B65  082F               	movf	hexTochar@unidad,w
  2054  0B66  00AB               	movwf	??_hexTochar
  2055  0B67  082A               	movf	hexTochar@conv,w
  2056  0B68  0084               	movwf	4
  2057  0B69  082B               	movf	??_hexTochar,w
  2058  0B6A  1383               	bcf	3,7	;select IRP bank0
  2059  0B6B  0080               	movwf	0
  2060  0B6C                     l3038:
  2061                           
  2062                           ;ComSerial.c: 99:     conv[1]= decena;
  2063  0B6C  0831               	movf	hexTochar@decena,w
  2064  0B6D  00AB               	movwf	??_hexTochar
  2065  0B6E  0A2A               	incf	hexTochar@conv,w
  2066  0B6F  0084               	movwf	4
  2067  0B70  082B               	movf	??_hexTochar,w
  2068  0B71  0080               	movwf	0
  2069  0B72                     l3040:
  2070                           
  2071                           ;ComSerial.c: 100:     conv[2]= centena;
  2072  0B72  0830               	movf	hexTochar@centena,w
  2073  0B73  00AB               	movwf	??_hexTochar
  2074  0B74  082A               	movf	hexTochar@conv,w
  2075  0B75  3E02               	addlw	2
  2076  0B76  0084               	movwf	4
  2077  0B77  082B               	movf	??_hexTochar,w
  2078  0B78  0080               	movwf	0
  2079  0B79                     l172:
  2080  0B79  0008               	return
  2081  0B7A                     __end_of_hexTochar:
  2082                           
  2083                           	psect	text7
  2084  0E2B                     __ptext7:	
  2085 ;; *************** function _divisiondecimal *****************
  2086 ;; Defined at:
  2087 ;;		line 120 in file "ComSerial.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  conteo          1    wreg     unsigned char 
  2090 ;;  un              1    4[BANK0 ] PTR unsigned char 
  2091 ;;		 -> hexTochar@unidad(1), sendhex@unidad(1), 
  2092 ;;  dec             1    5[BANK0 ] PTR unsigned char 
  2093 ;;		 -> hexTochar@decena(1), sendhex@decena(1), 
  2094 ;;  cent            1    6[BANK0 ] PTR unsigned char 
  2095 ;;		 -> hexTochar@centena(1), sendhex@centena(1), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  conteo          1    8[COMMON] unsigned char 
  2098 ;;  div             1    9[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       3       0       0       0
  2109 ;;      Locals:         2       0       0       0       0
  2110 ;;      Temps:          0       3       0       0       0
  2111 ;;      Totals:         2       6       0       0       0
  2112 ;;Total ram usage:        8 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    2
  2115 ;; This function calls:
  2116 ;;		___awdiv
  2117 ;;		___bmul
  2118 ;; This function is called by:
  2119 ;;		_sendhex
  2120 ;;		_hexTochar
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _divisiondecimal
  2126  0E2B                     _divisiondecimal:
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _divisiondecimal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2130                           ;divisiondecimal@conteo stored from wreg
  2131  0E2B  00F8               	movwf	divisiondecimal@conteo
  2132  0E2C                     l2754:
  2133                           
  2134                           ;ComSerial.c: 121:     uint8_t div = conteo;
  2135  0E2C  0878               	movf	divisiondecimal@conteo,w
  2136  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0E2F  00A7               	movwf	??_divisiondecimal
  2139  0E30  0827               	movf	??_divisiondecimal,w
  2140  0E31  00F9               	movwf	divisiondecimal@div
  2141  0E32                     l2756:
  2142                           
  2143                           ;ComSerial.c: 122:     *un = 0;
  2144  0E32  0824               	movf	divisiondecimal@un,w
  2145  0E33  0084               	movwf	4
  2146  0E34  1383               	bcf	3,7	;select IRP bank0
  2147  0E35  0180               	clrf	0
  2148  0E36                     l2758:
  2149                           
  2150                           ;ComSerial.c: 123:     *dec = 0;
  2151  0E36  0825               	movf	divisiondecimal@dec,w
  2152  0E37  0084               	movwf	4
  2153  0E38  0180               	clrf	0
  2154  0E39                     l2760:
  2155                           
  2156                           ;ComSerial.c: 124:     *cent = 0;
  2157  0E39  0826               	movf	divisiondecimal@cent,w
  2158  0E3A  0084               	movwf	4
  2159  0E3B  0180               	clrf	0
  2160                           
  2161                           ;ComSerial.c: 127:     while(div >= 100){
  2162  0E3C  2E68               	goto	l2764
  2163  0E3D                     l2762:
  2164                           
  2165                           ;ComSerial.c: 128:     *cent = div/100;
  2166  0E3D  3064               	movlw	100
  2167  0E3E  00F3               	movwf	___awdiv@divisor
  2168  0E3F  3000               	movlw	0
  2169  0E40  00F4               	movwf	___awdiv@divisor+1
  2170  0E41  0879               	movf	divisiondecimal@div,w
  2171  0E42  00A7               	movwf	??_divisiondecimal
  2172  0E43  01A8               	clrf	??_divisiondecimal+1
  2173  0E44  0827               	movf	??_divisiondecimal,w
  2174  0E45  00F5               	movwf	___awdiv@dividend
  2175  0E46  0828               	movf	??_divisiondecimal+1,w
  2176  0E47  00F6               	movwf	___awdiv@dividend+1
  2177  0E48  120A  158A  2546  120A  158A  	fcall	___awdiv
  2178  0E4D  0873               	movf	?___awdiv,w
  2179  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0E50  00A9               	movwf	??_divisiondecimal+2
  2182  0E51  0826               	movf	divisiondecimal@cent,w
  2183  0E52  0084               	movwf	4
  2184  0E53  0829               	movf	??_divisiondecimal+2,w
  2185  0E54  1383               	bcf	3,7	;select IRP bank0
  2186  0E55  0080               	movwf	0
  2187                           
  2188                           ;ComSerial.c: 129:     div = div - (*cent)*(100);
  2189  0E56  309C               	movlw	156
  2190  0E57  00A7               	movwf	??_divisiondecimal
  2191  0E58  0827               	movf	??_divisiondecimal,w
  2192  0E59  00F3               	movwf	___bmul@multiplicand
  2193  0E5A  0826               	movf	divisiondecimal@cent,w
  2194  0E5B  0084               	movwf	4
  2195  0E5C  0800               	movf	0,w
  2196  0E5D  120A  158A  228B  120A  158A  	fcall	___bmul
  2197  0E62  0779               	addwf	divisiondecimal@div,w
  2198  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0E65  00A8               	movwf	??_divisiondecimal+1
  2201  0E66  0828               	movf	??_divisiondecimal+1,w
  2202  0E67  00F9               	movwf	divisiondecimal@div
  2203  0E68                     l2764:
  2204                           
  2205                           ;ComSerial.c: 127:     while(div >= 100){
  2206  0E68  3064               	movlw	100
  2207  0E69  0279               	subwf	divisiondecimal@div,w
  2208  0E6A  1803               	skipnc
  2209  0E6B  2E6D               	goto	u3421
  2210  0E6C  2E6E               	goto	u3420
  2211  0E6D                     u3421:
  2212  0E6D  2E3D               	goto	l2762
  2213  0E6E                     u3420:
  2214  0E6E  2E9A               	goto	l2768
  2215  0E6F                     l2766:
  2216                           
  2217                           ;ComSerial.c: 133:     *dec = div/10;
  2218  0E6F  300A               	movlw	10
  2219  0E70  00F3               	movwf	___awdiv@divisor
  2220  0E71  3000               	movlw	0
  2221  0E72  00F4               	movwf	___awdiv@divisor+1
  2222  0E73  0879               	movf	divisiondecimal@div,w
  2223  0E74  00A7               	movwf	??_divisiondecimal
  2224  0E75  01A8               	clrf	??_divisiondecimal+1
  2225  0E76  0827               	movf	??_divisiondecimal,w
  2226  0E77  00F5               	movwf	___awdiv@dividend
  2227  0E78  0828               	movf	??_divisiondecimal+1,w
  2228  0E79  00F6               	movwf	___awdiv@dividend+1
  2229  0E7A  120A  158A  2546  120A  158A  	fcall	___awdiv
  2230  0E7F  0873               	movf	?___awdiv,w
  2231  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0E82  00A9               	movwf	??_divisiondecimal+2
  2234  0E83  0825               	movf	divisiondecimal@dec,w
  2235  0E84  0084               	movwf	4
  2236  0E85  0829               	movf	??_divisiondecimal+2,w
  2237  0E86  1383               	bcf	3,7	;select IRP bank0
  2238  0E87  0080               	movwf	0
  2239                           
  2240                           ;ComSerial.c: 134:     div = div - (*dec)*(10);
  2241  0E88  30F6               	movlw	246
  2242  0E89  00A7               	movwf	??_divisiondecimal
  2243  0E8A  0827               	movf	??_divisiondecimal,w
  2244  0E8B  00F3               	movwf	___bmul@multiplicand
  2245  0E8C  0825               	movf	divisiondecimal@dec,w
  2246  0E8D  0084               	movwf	4
  2247  0E8E  0800               	movf	0,w
  2248  0E8F  120A  158A  228B  120A  158A  	fcall	___bmul
  2249  0E94  0779               	addwf	divisiondecimal@div,w
  2250  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0E97  00A8               	movwf	??_divisiondecimal+1
  2253  0E98  0828               	movf	??_divisiondecimal+1,w
  2254  0E99  00F9               	movwf	divisiondecimal@div
  2255  0E9A                     l2768:
  2256                           
  2257                           ;ComSerial.c: 132:     while (div >= 10){
  2258  0E9A  300A               	movlw	10
  2259  0E9B  0279               	subwf	divisiondecimal@div,w
  2260  0E9C  1803               	skipnc
  2261  0E9D  2E9F               	goto	u3431
  2262  0E9E  2EA0               	goto	u3430
  2263  0E9F                     u3431:
  2264  0E9F  2E6F               	goto	l2766
  2265  0EA0                     u3430:
  2266  0EA0                     l2770:
  2267                           
  2268                           ;ComSerial.c: 137:     *un = div;
  2269  0EA0  0879               	movf	divisiondecimal@div,w
  2270  0EA1  00A7               	movwf	??_divisiondecimal
  2271  0EA2  0824               	movf	divisiondecimal@un,w
  2272  0EA3  0084               	movwf	4
  2273  0EA4  0827               	movf	??_divisiondecimal,w
  2274  0EA5  1383               	bcf	3,7	;select IRP bank0
  2275  0EA6  0080               	movwf	0
  2276  0EA7                     l187:
  2277  0EA7  0008               	return
  2278  0EA8                     __end_of_divisiondecimal:
  2279                           
  2280                           	psect	text8
  2281  0EA8                     __ptext8:	
  2282 ;; *************** function _floTochar *****************
  2283 ;; Defined at:
  2284 ;;		line 61 in file "ComSerial.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  valor           4   45[BANK0 ] const float 
  2287 ;;  conv            1   49[BANK0 ] PTR unsigned char 
  2288 ;;		 -> disp2(3), disp1(3), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  temp            4   54[BANK0 ] float 
  2291 ;;  digdecimal      2   60[BANK0 ] unsigned char [2]
  2292 ;;  entero          1   59[BANK0 ] unsigned char 
  2293 ;;  decimal         1   58[BANK0 ] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       5       0       0       0
  2304 ;;      Locals:         0       8       0       0       0
  2305 ;;      Temps:          0       4       0       0       0
  2306 ;;      Totals:         0      17       0       0       0
  2307 ;;Total ram usage:       17 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		___flmul
  2312 ;;		___flsub
  2313 ;;		___fltol
  2314 ;;		___xxtofl
  2315 ;;		_division
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _floTochar
  2323  0EA8                     _floTochar:
  2324  0EA8                     l3022:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _floTochar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2327                           
  2328                           
  2329                           ;ComSerial.c: 62:     uint8_t entero;;ComSerial.c: 63:     uint8_t decimal;;ComSerial.c:
      +                           64:     float temp;;ComSerial.c: 65:     unsigned char digdecimal[2];;ComSerial.c: 71: 
      +                              entero = valor;
  2330  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0EAA  0850               	movf	floTochar@valor+3,w
  2333  0EAB  00C7               	movwf	___fltol@f1+3
  2334  0EAC  084F               	movf	floTochar@valor+2,w
  2335  0EAD  00C6               	movwf	___fltol@f1+2
  2336  0EAE  084E               	movf	floTochar@valor+1,w
  2337  0EAF  00C5               	movwf	___fltol@f1+1
  2338  0EB0  084D               	movf	floTochar@valor,w
  2339  0EB1  00C4               	movwf	___fltol@f1
  2340  0EB2  120A  158A  25AF  120A  158A  	fcall	___fltol
  2341  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0EB9  0844               	movf	?___fltol,w
  2344  0EBA  00D2               	movwf	??_floTochar
  2345  0EBB  0852               	movf	??_floTochar,w
  2346  0EBC  00DB               	movwf	floTochar@entero
  2347  0EBD                     l3024:
  2348                           
  2349                           ;ComSerial.c: 72:     digdecimal[2] = entero;
  2350  0EBD  085B               	movf	floTochar@entero,w
  2351  0EBE  00D2               	movwf	??_floTochar
  2352  0EBF  0852               	movf	??_floTochar,w
  2353  0EC0  00DE               	movwf	floTochar@digdecimal+2
  2354  0EC1                     l3026:
  2355                           
  2356                           ;ComSerial.c: 73:     temp = valor-(float)entero;
  2357  0EC1  085B               	movf	floTochar@entero,w
  2358  0EC2  00D2               	movwf	??_floTochar
  2359  0EC3  01D3               	clrf	??_floTochar+1
  2360  0EC4  01D4               	clrf	??_floTochar+2
  2361  0EC5  01D5               	clrf	??_floTochar+3
  2362  0EC6  0855               	movf	??_floTochar+3,w
  2363  0EC7  00F6               	movwf	___xxtofl@val+3
  2364  0EC8  0854               	movf	??_floTochar+2,w
  2365  0EC9  00F5               	movwf	___xxtofl@val+2
  2366  0ECA  0853               	movf	??_floTochar+1,w
  2367  0ECB  00F4               	movwf	___xxtofl@val+1
  2368  0ECC  0852               	movf	??_floTochar,w
  2369  0ECD  00F3               	movwf	___xxtofl@val
  2370  0ECE  3000               	movlw	0
  2371  0ECF  120A  158A  2744  120A  158A  	fcall	___xxtofl
  2372  0ED4  0876               	movf	?___xxtofl+3,w
  2373  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0ED7  00B3               	movwf	___flsub@a+3
  2376  0ED8  0875               	movf	?___xxtofl+2,w
  2377  0ED9  00B2               	movwf	___flsub@a+2
  2378  0EDA  0874               	movf	?___xxtofl+1,w
  2379  0EDB  00B1               	movwf	___flsub@a+1
  2380  0EDC  0873               	movf	?___xxtofl,w
  2381  0EDD  00B0               	movwf	___flsub@a
  2382  0EDE  0850               	movf	floTochar@valor+3,w
  2383  0EDF  00B7               	movwf	___flsub@b+3
  2384  0EE0  084F               	movf	floTochar@valor+2,w
  2385  0EE1  00B6               	movwf	___flsub@b+2
  2386  0EE2  084E               	movf	floTochar@valor+1,w
  2387  0EE3  00B5               	movwf	___flsub@b+1
  2388  0EE4  084D               	movf	floTochar@valor,w
  2389  0EE5  00B4               	movwf	___flsub@b
  2390  0EE6  120A  158A  2301  120A  158A  	fcall	___flsub
  2391  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0EED  0833               	movf	?___flsub+3,w
  2394  0EEE  00D9               	movwf	floTochar@temp+3
  2395  0EEF  0832               	movf	?___flsub+2,w
  2396  0EF0  00D8               	movwf	floTochar@temp+2
  2397  0EF1  0831               	movf	?___flsub+1,w
  2398  0EF2  00D7               	movwf	floTochar@temp+1
  2399  0EF3  0830               	movf	?___flsub,w
  2400  0EF4  00D6               	movwf	floTochar@temp
  2401  0EF5                     l3028:
  2402                           
  2403                           ;ComSerial.c: 74:     decimal = (temp*100);
  2404  0EF5  0859               	movf	floTochar@temp+3,w
  2405  0EF6  00B1               	movwf	___flmul@a+3
  2406  0EF7  0858               	movf	floTochar@temp+2,w
  2407  0EF8  00B0               	movwf	___flmul@a+2
  2408  0EF9  0857               	movf	floTochar@temp+1,w
  2409  0EFA  00AF               	movwf	___flmul@a+1
  2410  0EFB  0856               	movf	floTochar@temp,w
  2411  0EFC  00AE               	movwf	___flmul@a
  2412  0EFD  3042               	movlw	66
  2413  0EFE  00AD               	movwf	___flmul@b+3
  2414  0EFF  30C8               	movlw	200
  2415  0F00  00AC               	movwf	___flmul@b+2
  2416  0F01  3000               	movlw	0
  2417  0F02  00AB               	movwf	___flmul@b+1
  2418  0F03  3000               	movlw	0
  2419  0F04  00AA               	movwf	___flmul@b
  2420  0F05  120A  118A  2022  120A  158A  	fcall	___flmul
  2421  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0F0C  082D               	movf	?___flmul+3,w
  2424  0F0D  00C7               	movwf	___fltol@f1+3
  2425  0F0E  082C               	movf	?___flmul+2,w
  2426  0F0F  00C6               	movwf	___fltol@f1+2
  2427  0F10  082B               	movf	?___flmul+1,w
  2428  0F11  00C5               	movwf	___fltol@f1+1
  2429  0F12  082A               	movf	?___flmul,w
  2430  0F13  00C4               	movwf	___fltol@f1
  2431  0F14  120A  158A  25AF  120A  158A  	fcall	___fltol
  2432  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0F1B  0844               	movf	?___fltol,w
  2435  0F1C  00D2               	movwf	??_floTochar
  2436  0F1D  0852               	movf	??_floTochar,w
  2437  0F1E  00DA               	movwf	floTochar@decimal
  2438  0F1F                     l3030:
  2439                           
  2440                           ;ComSerial.c: 75:     division(decimal,&digdecimal[0],&digdecimal[1]);
  2441  0F1F  305C               	movlw	(low (floTochar@digdecimal| 0))& (0+255)
  2442  0F20  00D2               	movwf	??_floTochar
  2443  0F21  0852               	movf	??_floTochar,w
  2444  0F22  00F8               	movwf	division@un
  2445  0F23  305D               	movlw	(low ((floTochar@digdecimal| 0+1)))& (0+255)
  2446  0F24  00D3               	movwf	??_floTochar+1
  2447  0F25  0853               	movf	??_floTochar+1,w
  2448  0F26  00F9               	movwf	division@dec
  2449  0F27  085A               	movf	floTochar@decimal,w
  2450  0F28  120A  158A  2467  120A  158A  	fcall	_division
  2451                           
  2452                           ;ComSerial.c: 76:     conv[0] = entero;
  2453  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0F2F  085B               	movf	floTochar@entero,w
  2456  0F30  00D2               	movwf	??_floTochar
  2457  0F31  0851               	movf	floTochar@conv,w
  2458  0F32  0084               	movwf	4
  2459  0F33  0852               	movf	??_floTochar,w
  2460  0F34  1383               	bcf	3,7	;select IRP bank0
  2461  0F35  0080               	movwf	0
  2462                           
  2463                           ;ComSerial.c: 77:     conv[1] = digdecimal[1];
  2464  0F36  085D               	movf	floTochar@digdecimal+1,w
  2465  0F37  00D2               	movwf	??_floTochar
  2466  0F38  0A51               	incf	floTochar@conv,w
  2467  0F39  0084               	movwf	4
  2468  0F3A  0852               	movf	??_floTochar,w
  2469  0F3B  0080               	movwf	0
  2470  0F3C                     l3032:
  2471                           
  2472                           ;ComSerial.c: 78:     conv[2] = digdecimal[0];
  2473  0F3C  085C               	movf	floTochar@digdecimal,w
  2474  0F3D  00D2               	movwf	??_floTochar
  2475  0F3E  0851               	movf	floTochar@conv,w
  2476  0F3F  3E02               	addlw	2
  2477  0F40  0084               	movwf	4
  2478  0F41  0852               	movf	??_floTochar,w
  2479  0F42  0080               	movwf	0
  2480  0F43                     l166:
  2481  0F43  0008               	return
  2482  0F44                     __end_of_floTochar:
  2483                           
  2484                           	psect	text9
  2485  0C67                     __ptext9:	
  2486 ;; *************** function _division *****************
  2487 ;; Defined at:
  2488 ;;		line 106 in file "ComSerial.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  conteo          1    wreg     unsigned char 
  2491 ;;  un              1    8[COMMON] PTR unsigned char 
  2492 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2493 ;;  dec             1    9[COMMON] PTR unsigned char 
  2494 ;;		 -> floTochar@digdecimal(2), sendfloat@digdecimal(1), 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  conteo          1    7[BANK0 ] unsigned char 
  2497 ;;  div             1    8[BANK0 ] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         2       0       0       0       0
  2508 ;;      Locals:         0       2       0       0       0
  2509 ;;      Temps:          0       3       0       0       0
  2510 ;;      Totals:         2       5       0       0       0
  2511 ;;Total ram usage:        7 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		___awdiv
  2516 ;;		___bmul
  2517 ;; This function is called by:
  2518 ;;		_sendfloat
  2519 ;;		_floTochar
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _division
  2525  0C67                     _division:
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2529                           ;division@conteo stored from wreg
  2530  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0C69  00A7               	movwf	division@conteo
  2533  0C6A                     l2742:
  2534                           
  2535                           ;ComSerial.c: 107:     uint8_t div = conteo;
  2536  0C6A  0827               	movf	division@conteo,w
  2537  0C6B  00A4               	movwf	??_division
  2538  0C6C  0824               	movf	??_division,w
  2539  0C6D  00A8               	movwf	division@div
  2540  0C6E                     l2744:
  2541                           
  2542                           ;ComSerial.c: 108:     *un = 0;
  2543  0C6E  0878               	movf	division@un,w
  2544  0C6F  0084               	movwf	4
  2545  0C70  1383               	bcf	3,7	;select IRP bank0
  2546  0C71  0180               	clrf	0
  2547  0C72                     l2746:
  2548                           
  2549                           ;ComSerial.c: 109:     *dec = 0;
  2550  0C72  0879               	movf	division@dec,w
  2551  0C73  0084               	movwf	4
  2552  0C74  0180               	clrf	0
  2553                           
  2554                           ;ComSerial.c: 112:     while (div >= 10){
  2555  0C75  2CA1               	goto	l2750
  2556  0C76                     l2748:
  2557                           
  2558                           ;ComSerial.c: 113:     *dec = div/10;
  2559  0C76  300A               	movlw	10
  2560  0C77  00F3               	movwf	___awdiv@divisor
  2561  0C78  3000               	movlw	0
  2562  0C79  00F4               	movwf	___awdiv@divisor+1
  2563  0C7A  0828               	movf	division@div,w
  2564  0C7B  00A4               	movwf	??_division
  2565  0C7C  01A5               	clrf	??_division+1
  2566  0C7D  0824               	movf	??_division,w
  2567  0C7E  00F5               	movwf	___awdiv@dividend
  2568  0C7F  0825               	movf	??_division+1,w
  2569  0C80  00F6               	movwf	___awdiv@dividend+1
  2570  0C81  120A  158A  2546  120A  158A  	fcall	___awdiv
  2571  0C86  0873               	movf	?___awdiv,w
  2572  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0C89  00A6               	movwf	??_division+2
  2575  0C8A  0879               	movf	division@dec,w
  2576  0C8B  0084               	movwf	4
  2577  0C8C  0826               	movf	??_division+2,w
  2578  0C8D  1383               	bcf	3,7	;select IRP bank0
  2579  0C8E  0080               	movwf	0
  2580                           
  2581                           ;ComSerial.c: 114:     div = div - (*dec)*(10);
  2582  0C8F  30F6               	movlw	246
  2583  0C90  00A4               	movwf	??_division
  2584  0C91  0824               	movf	??_division,w
  2585  0C92  00F3               	movwf	___bmul@multiplicand
  2586  0C93  0879               	movf	division@dec,w
  2587  0C94  0084               	movwf	4
  2588  0C95  0800               	movf	0,w
  2589  0C96  120A  158A  228B  120A  158A  	fcall	___bmul
  2590  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0C9D  0728               	addwf	division@div,w
  2593  0C9E  00A5               	movwf	??_division+1
  2594  0C9F  0825               	movf	??_division+1,w
  2595  0CA0  00A8               	movwf	division@div
  2596  0CA1                     l2750:
  2597                           
  2598                           ;ComSerial.c: 112:     while (div >= 10){
  2599  0CA1  300A               	movlw	10
  2600  0CA2  0228               	subwf	division@div,w
  2601  0CA3  1803               	skipnc
  2602  0CA4  2CA6               	goto	u3411
  2603  0CA5  2CA7               	goto	u3410
  2604  0CA6                     u3411:
  2605  0CA6  2C76               	goto	l2748
  2606  0CA7                     u3410:
  2607  0CA7                     l2752:
  2608                           
  2609                           ;ComSerial.c: 117:     *un = div;
  2610  0CA7  0828               	movf	division@div,w
  2611  0CA8  00A4               	movwf	??_division
  2612  0CA9  0878               	movf	division@un,w
  2613  0CAA  0084               	movwf	4
  2614  0CAB  0824               	movf	??_division,w
  2615  0CAC  1383               	bcf	3,7	;select IRP bank0
  2616  0CAD  0080               	movwf	0
  2617  0CAE                     l178:
  2618  0CAE  0008               	return
  2619  0CAF                     __end_of_division:
  2620                           
  2621                           	psect	text10
  2622  0A8B                     __ptext10:	
  2623 ;; *************** function ___bmul *****************
  2624 ;; Defined at:
  2625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  multiplier      1    wreg     unsigned char 
  2628 ;;  multiplicand    1    3[COMMON] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  multiplier      1    6[COMMON] unsigned char 
  2631 ;;  product         1    5[COMMON] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         1       0       0       0       0
  2642 ;;      Locals:         2       0       0       0       0
  2643 ;;      Temps:          1       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_division
  2652 ;;		_divisiondecimal
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function ___bmul
  2658  0A8B                     ___bmul:
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2662                           ;___bmul@multiplier stored from wreg
  2663  0A8B  00F6               	movwf	___bmul@multiplier
  2664  0A8C                     l2476:
  2665  0A8C  01F5               	clrf	___bmul@product
  2666  0A8D                     l2478:
  2667  0A8D  1C76               	btfss	___bmul@multiplier,0
  2668  0A8E  2A90               	goto	u2801
  2669  0A8F  2A91               	goto	u2800
  2670  0A90                     u2801:
  2671  0A90  2A95               	goto	l2482
  2672  0A91                     u2800:
  2673  0A91                     l2480:
  2674  0A91  0873               	movf	___bmul@multiplicand,w
  2675  0A92  00F4               	movwf	??___bmul
  2676  0A93  0874               	movf	??___bmul,w
  2677  0A94  07F5               	addwf	___bmul@product,f
  2678  0A95                     l2482:
  2679  0A95  1003               	clrc
  2680  0A96  0DF3               	rlf	___bmul@multiplicand,f
  2681  0A97                     l2484:
  2682  0A97  1003               	clrc
  2683  0A98  0CF6               	rrf	___bmul@multiplier,f
  2684  0A99  0876               	movf	___bmul@multiplier,w
  2685  0A9A  1D03               	btfss	3,2
  2686  0A9B  2A9D               	goto	u2811
  2687  0A9C  2A9E               	goto	u2810
  2688  0A9D                     u2811:
  2689  0A9D  2A8D               	goto	l2478
  2690  0A9E                     u2810:
  2691  0A9E                     l2486:
  2692  0A9E  0875               	movf	___bmul@product,w
  2693  0A9F                     l332:
  2694  0A9F  0008               	return
  2695  0AA0                     __end_of___bmul:
  2696                           
  2697                           	psect	text11
  2698  0D46                     __ptext11:	
  2699 ;; *************** function ___awdiv *****************
  2700 ;; Defined at:
  2701 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  divisor         2    3[COMMON] int 
  2704 ;;  dividend        2    5[COMMON] int 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  quotient        2    2[BANK0 ] int 
  2707 ;;  sign            1    1[BANK0 ] unsigned char 
  2708 ;;  counter         1    0[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    3[COMMON] int 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         4       0       0       0       0
  2719 ;;      Locals:         0       4       0       0       0
  2720 ;;      Temps:          1       0       0       0       0
  2721 ;;      Totals:         5       4       0       0       0
  2722 ;;Total ram usage:        9 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_division
  2729 ;;		_divisiondecimal
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function ___awdiv
  2735  0D46                     ___awdiv:
  2736  0D46                     l2490:	
  2737                           ;incstack = 0
  2738                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2739                           
  2740  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0D48  01A1               	clrf	___awdiv@sign
  2743  0D49                     l2492:
  2744  0D49  1FF4               	btfss	___awdiv@divisor+1,7
  2745  0D4A  2D4C               	goto	u2821
  2746  0D4B  2D4D               	goto	u2820
  2747  0D4C                     u2821:
  2748  0D4C  2D54               	goto	l2498
  2749  0D4D                     u2820:
  2750  0D4D                     l2494:
  2751  0D4D  09F3               	comf	___awdiv@divisor,f
  2752  0D4E  09F4               	comf	___awdiv@divisor+1,f
  2753  0D4F  0AF3               	incf	___awdiv@divisor,f
  2754  0D50  1903               	skipnz
  2755  0D51  0AF4               	incf	___awdiv@divisor+1,f
  2756  0D52                     l2496:
  2757  0D52  01A1               	clrf	___awdiv@sign
  2758  0D53  0AA1               	incf	___awdiv@sign,f
  2759  0D54                     l2498:
  2760  0D54  1FF6               	btfss	___awdiv@dividend+1,7
  2761  0D55  2D57               	goto	u2831
  2762  0D56  2D58               	goto	u2830
  2763  0D57                     u2831:
  2764  0D57  2D61               	goto	l2504
  2765  0D58                     u2830:
  2766  0D58                     l2500:
  2767  0D58  09F5               	comf	___awdiv@dividend,f
  2768  0D59  09F6               	comf	___awdiv@dividend+1,f
  2769  0D5A  0AF5               	incf	___awdiv@dividend,f
  2770  0D5B  1903               	skipnz
  2771  0D5C  0AF6               	incf	___awdiv@dividend+1,f
  2772  0D5D                     l2502:
  2773  0D5D  3001               	movlw	1
  2774  0D5E  00F7               	movwf	??___awdiv
  2775  0D5F  0877               	movf	??___awdiv,w
  2776  0D60  06A1               	xorwf	___awdiv@sign,f
  2777  0D61                     l2504:
  2778  0D61  01A2               	clrf	___awdiv@quotient
  2779  0D62  01A3               	clrf	___awdiv@quotient+1
  2780  0D63                     l2506:
  2781  0D63  0873               	movf	___awdiv@divisor,w
  2782  0D64  0474               	iorwf	___awdiv@divisor+1,w
  2783  0D65  1903               	btfsc	3,2
  2784  0D66  2D68               	goto	u2841
  2785  0D67  2D69               	goto	u2840
  2786  0D68                     u2841:
  2787  0D68  2DA0               	goto	l2526
  2788  0D69                     u2840:
  2789  0D69                     l2508:
  2790  0D69  01A0               	clrf	___awdiv@counter
  2791  0D6A  0AA0               	incf	___awdiv@counter,f
  2792  0D6B  2D77               	goto	l2514
  2793  0D6C                     l2510:
  2794  0D6C  3001               	movlw	1
  2795  0D6D                     u2855:
  2796  0D6D  1003               	clrc
  2797  0D6E  0DF3               	rlf	___awdiv@divisor,f
  2798  0D6F  0DF4               	rlf	___awdiv@divisor+1,f
  2799  0D70  3EFF               	addlw	-1
  2800  0D71  1D03               	skipz
  2801  0D72  2D6D               	goto	u2855
  2802  0D73                     l2512:
  2803  0D73  3001               	movlw	1
  2804  0D74  00F7               	movwf	??___awdiv
  2805  0D75  0877               	movf	??___awdiv,w
  2806  0D76  07A0               	addwf	___awdiv@counter,f
  2807  0D77                     l2514:
  2808  0D77  1FF4               	btfss	___awdiv@divisor+1,7
  2809  0D78  2D7A               	goto	u2861
  2810  0D79  2D7B               	goto	u2860
  2811  0D7A                     u2861:
  2812  0D7A  2D6C               	goto	l2510
  2813  0D7B                     u2860:
  2814  0D7B                     l2516:
  2815  0D7B  3001               	movlw	1
  2816  0D7C                     u2875:
  2817  0D7C  1003               	clrc
  2818  0D7D  0DA2               	rlf	___awdiv@quotient,f
  2819  0D7E  0DA3               	rlf	___awdiv@quotient+1,f
  2820  0D7F  3EFF               	addlw	-1
  2821  0D80  1D03               	skipz
  2822  0D81  2D7C               	goto	u2875
  2823  0D82  0874               	movf	___awdiv@divisor+1,w
  2824  0D83  0276               	subwf	___awdiv@dividend+1,w
  2825  0D84  1D03               	skipz
  2826  0D85  2D88               	goto	u2885
  2827  0D86  0873               	movf	___awdiv@divisor,w
  2828  0D87  0275               	subwf	___awdiv@dividend,w
  2829  0D88                     u2885:
  2830  0D88  1C03               	skipc
  2831  0D89  2D8B               	goto	u2881
  2832  0D8A  2D8C               	goto	u2880
  2833  0D8B                     u2881:
  2834  0D8B  2D93               	goto	l2522
  2835  0D8C                     u2880:
  2836  0D8C                     l2518:
  2837  0D8C  0873               	movf	___awdiv@divisor,w
  2838  0D8D  02F5               	subwf	___awdiv@dividend,f
  2839  0D8E  0874               	movf	___awdiv@divisor+1,w
  2840  0D8F  1C03               	skipc
  2841  0D90  03F6               	decf	___awdiv@dividend+1,f
  2842  0D91  02F6               	subwf	___awdiv@dividend+1,f
  2843  0D92                     l2520:
  2844  0D92  1422               	bsf	___awdiv@quotient,0
  2845  0D93                     l2522:
  2846  0D93  3001               	movlw	1
  2847  0D94                     u2895:
  2848  0D94  1003               	clrc
  2849  0D95  0CF4               	rrf	___awdiv@divisor+1,f
  2850  0D96  0CF3               	rrf	___awdiv@divisor,f
  2851  0D97  3EFF               	addlw	-1
  2852  0D98  1D03               	skipz
  2853  0D99  2D94               	goto	u2895
  2854  0D9A                     l2524:
  2855  0D9A  3001               	movlw	1
  2856  0D9B  02A0               	subwf	___awdiv@counter,f
  2857  0D9C  1D03               	btfss	3,2
  2858  0D9D  2D9F               	goto	u2901
  2859  0D9E  2DA0               	goto	u2900
  2860  0D9F                     u2901:
  2861  0D9F  2D7B               	goto	l2516
  2862  0DA0                     u2900:
  2863  0DA0                     l2526:
  2864  0DA0  0821               	movf	___awdiv@sign,w
  2865  0DA1  1903               	btfsc	3,2
  2866  0DA2  2DA4               	goto	u2911
  2867  0DA3  2DA5               	goto	u2910
  2868  0DA4                     u2911:
  2869  0DA4  2DAA               	goto	l2530
  2870  0DA5                     u2910:
  2871  0DA5                     l2528:
  2872  0DA5  09A2               	comf	___awdiv@quotient,f
  2873  0DA6  09A3               	comf	___awdiv@quotient+1,f
  2874  0DA7  0AA2               	incf	___awdiv@quotient,f
  2875  0DA8  1903               	skipnz
  2876  0DA9  0AA3               	incf	___awdiv@quotient+1,f
  2877  0DAA                     l2530:
  2878  0DAA  0823               	movf	___awdiv@quotient+1,w
  2879  0DAB  00F4               	movwf	?___awdiv+1
  2880  0DAC  0822               	movf	___awdiv@quotient,w
  2881  0DAD  00F3               	movwf	?___awdiv
  2882  0DAE                     l459:
  2883  0DAE  0008               	return
  2884  0DAF                     __end_of___awdiv:
  2885                           
  2886                           	psect	text12
  2887  0DAF                     __ptext12:	
  2888 ;; *************** function ___fltol *****************
  2889 ;; Defined at:
  2890 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  f1              4   36[BANK0 ] int 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  exp1            1    8[COMMON] unsigned char 
  2895 ;;  sign1           1    7[COMMON] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  4   36[BANK0 ] long 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         0       4       0       0       0
  2906 ;;      Locals:         2       0       0       0       0
  2907 ;;      Temps:          0       5       0       0       0
  2908 ;;      Totals:         2       9       0       0       0
  2909 ;;Total ram usage:       11 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_sendfloat
  2916 ;;		_floTochar
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function ___fltol
  2922  0DAF                     ___fltol:
  2923  0DAF                     l2772:	
  2924                           ;incstack = 0
  2925                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2926                           
  2927  0DAF  1003               	clrc
  2928  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0DB2  0D46               	rlf	___fltol@f1+2,w
  2931  0DB3  0D47               	rlf	___fltol@f1+3,w
  2932  0DB4  00C8               	movwf	??___fltol
  2933  0DB5  0848               	movf	??___fltol,w
  2934  0DB6  00F8               	movwf	___fltol@exp1
  2935  0DB7  0878               	movf	___fltol@exp1,w
  2936  0DB8  1D03               	btfss	3,2
  2937  0DB9  2DBB               	goto	u3441
  2938  0DBA  2DBC               	goto	u3440
  2939  0DBB                     u3441:
  2940  0DBB  2DC5               	goto	l2778
  2941  0DBC                     u3440:
  2942  0DBC                     l2774:
  2943  0DBC  3000               	movlw	0
  2944  0DBD  00C7               	movwf	?___fltol+3
  2945  0DBE  3000               	movlw	0
  2946  0DBF  00C6               	movwf	?___fltol+2
  2947  0DC0  3000               	movlw	0
  2948  0DC1  00C5               	movwf	?___fltol+1
  2949  0DC2  3000               	movlw	0
  2950  0DC3  00C4               	movwf	?___fltol
  2951  0DC4  2E2A               	goto	l492
  2952  0DC5                     l2778:
  2953  0DC5  0844               	movf	___fltol@f1,w
  2954  0DC6  00C8               	movwf	??___fltol
  2955  0DC7  0845               	movf	___fltol@f1+1,w
  2956  0DC8  00C9               	movwf	??___fltol+1
  2957  0DC9  0846               	movf	___fltol@f1+2,w
  2958  0DCA  00CA               	movwf	??___fltol+2
  2959  0DCB  0847               	movf	___fltol@f1+3,w
  2960  0DCC  00CB               	movwf	??___fltol+3
  2961  0DCD  301F               	movlw	31
  2962  0DCE                     u3455:
  2963  0DCE  1003               	clrc
  2964  0DCF  0CCB               	rrf	??___fltol+3,f
  2965  0DD0  0CCA               	rrf	??___fltol+2,f
  2966  0DD1  0CC9               	rrf	??___fltol+1,f
  2967  0DD2  0CC8               	rrf	??___fltol,f
  2968  0DD3                     u3450:
  2969  0DD3  3EFF               	addlw	-1
  2970  0DD4  1D03               	skipz
  2971  0DD5  2DCE               	goto	u3455
  2972  0DD6  0848               	movf	??___fltol,w
  2973  0DD7  00CC               	movwf	??___fltol+4
  2974  0DD8  084C               	movf	??___fltol+4,w
  2975  0DD9  00F7               	movwf	___fltol@sign1
  2976  0DDA                     l2780:
  2977  0DDA  17C6               	bsf	___fltol@f1+2,7
  2978  0DDB                     l2782:
  2979  0DDB  30FF               	movlw	255
  2980  0DDC  05C4               	andwf	___fltol@f1,f
  2981  0DDD  30FF               	movlw	255
  2982  0DDE  05C5               	andwf	___fltol@f1+1,f
  2983  0DDF  30FF               	movlw	255
  2984  0DE0  05C6               	andwf	___fltol@f1+2,f
  2985  0DE1  3000               	movlw	0
  2986  0DE2  05C7               	andwf	___fltol@f1+3,f
  2987  0DE3                     l2784:
  2988  0DE3  3096               	movlw	150
  2989  0DE4  02F8               	subwf	___fltol@exp1,f
  2990  0DE5                     l2786:
  2991  0DE5  1FF8               	btfss	___fltol@exp1,7
  2992  0DE6  2DE8               	goto	u3461
  2993  0DE7  2DE9               	goto	u3460
  2994  0DE8                     u3461:
  2995  0DE8  2E03               	goto	l2796
  2996  0DE9                     u3460:
  2997  0DE9                     l2788:
  2998  0DE9  0878               	movf	___fltol@exp1,w
  2999  0DEA  3A80               	xorlw	128
  3000  0DEB  3E97               	addlw	151
  3001  0DEC  1803               	skipnc
  3002  0DED  2DEF               	goto	u3471
  3003  0DEE  2DF0               	goto	u3470
  3004  0DEF                     u3471:
  3005  0DEF  2DF1               	goto	l2794
  3006  0DF0                     u3470:
  3007  0DF0  2DBC               	goto	l2774
  3008  0DF1                     l2794:
  3009  0DF1  3001               	movlw	1
  3010  0DF2                     u3485:
  3011  0DF2  1003               	clrc
  3012  0DF3  0CC7               	rrf	___fltol@f1+3,f
  3013  0DF4  0CC6               	rrf	___fltol@f1+2,f
  3014  0DF5  0CC5               	rrf	___fltol@f1+1,f
  3015  0DF6  0CC4               	rrf	___fltol@f1,f
  3016  0DF7  3EFF               	addlw	-1
  3017  0DF8  1D03               	skipz
  3018  0DF9  2DF2               	goto	u3485
  3019  0DFA  3001               	movlw	1
  3020  0DFB  00C8               	movwf	??___fltol
  3021  0DFC  0848               	movf	??___fltol,w
  3022  0DFD  07F8               	addwf	___fltol@exp1,f
  3023  0DFE  1D03               	btfss	3,2
  3024  0DFF  2E01               	goto	u3491
  3025  0E00  2E02               	goto	u3490
  3026  0E01                     u3491:
  3027  0E01  2DF1               	goto	l2794
  3028  0E02                     u3490:
  3029  0E02  2E1A               	goto	l2804
  3030  0E03                     l2796:
  3031  0E03  3020               	movlw	32
  3032  0E04  0278               	subwf	___fltol@exp1,w
  3033  0E05  1C03               	skipc
  3034  0E06  2E08               	goto	u3501
  3035  0E07  2E09               	goto	u3500
  3036  0E08                     u3501:
  3037  0E08  2E15               	goto	l499
  3038  0E09                     u3500:
  3039  0E09  2DBC               	goto	l2774
  3040  0E0A                     l2802:
  3041  0E0A  3001               	movlw	1
  3042  0E0B  00C8               	movwf	??___fltol
  3043  0E0C                     u3515:
  3044  0E0C  1003               	clrc
  3045  0E0D  0DC4               	rlf	___fltol@f1,f
  3046  0E0E  0DC5               	rlf	___fltol@f1+1,f
  3047  0E0F  0DC6               	rlf	___fltol@f1+2,f
  3048  0E10  0DC7               	rlf	___fltol@f1+3,f
  3049  0E11  0BC8               	decfsz	??___fltol,f
  3050  0E12  2E0C               	goto	u3515
  3051  0E13  3001               	movlw	1
  3052  0E14  02F8               	subwf	___fltol@exp1,f
  3053  0E15                     l499:
  3054  0E15  0878               	movf	___fltol@exp1,w
  3055  0E16  1D03               	btfss	3,2
  3056  0E17  2E19               	goto	u3521
  3057  0E18  2E1A               	goto	u3520
  3058  0E19                     u3521:
  3059  0E19  2E0A               	goto	l2802
  3060  0E1A                     u3520:
  3061  0E1A                     l2804:
  3062  0E1A  0877               	movf	___fltol@sign1,w
  3063  0E1B  1903               	btfsc	3,2
  3064  0E1C  2E1E               	goto	u3531
  3065  0E1D  2E1F               	goto	u3530
  3066  0E1E                     u3531:
  3067  0E1E  2E2A               	goto	l502
  3068  0E1F                     u3530:
  3069  0E1F                     l2806:
  3070  0E1F  09C4               	comf	___fltol@f1,f
  3071  0E20  09C5               	comf	___fltol@f1+1,f
  3072  0E21  09C6               	comf	___fltol@f1+2,f
  3073  0E22  09C7               	comf	___fltol@f1+3,f
  3074  0E23  0AC4               	incf	___fltol@f1,f
  3075  0E24  1903               	skipnz
  3076  0E25  0AC5               	incf	___fltol@f1+1,f
  3077  0E26  1903               	skipnz
  3078  0E27  0AC6               	incf	___fltol@f1+2,f
  3079  0E28  1903               	skipnz
  3080  0E29  0AC7               	incf	___fltol@f1+3,f
  3081  0E2A                     l502:
  3082  0E2A                     l492:
  3083  0E2A  0008               	return
  3084  0E2B                     __end_of___fltol:
  3085                           
  3086                           	psect	text13
  3087  0B01                     __ptext13:	
  3088 ;; *************** function ___flsub *****************
  3089 ;; Defined at:
  3090 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  a               4   16[BANK0 ] long 
  3093 ;;  b               4   20[BANK0 ] long 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  4   16[BANK0 ] long 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         0       8       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0
  3108 ;;      Totals:         0       8       0       0       0
  3109 ;;Total ram usage:        8 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    2
  3112 ;; This function calls:
  3113 ;;		___fladd
  3114 ;; This function is called by:
  3115 ;;		_sendfloat
  3116 ;;		_floTochar
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function ___flsub
  3122  0B01                     ___flsub:
  3123  0B01                     l2808:	
  3124                           ;incstack = 0
  3125                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3126                           
  3127  0B01  3080               	movlw	128
  3128  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0B04  06B3               	xorwf	___flsub@a+3,f
  3131  0B05                     l2810:
  3132  0B05  0837               	movf	___flsub@b+3,w
  3133  0B06  00A3               	movwf	___fladd@b+3
  3134  0B07  0836               	movf	___flsub@b+2,w
  3135  0B08  00A2               	movwf	___fladd@b+2
  3136  0B09  0835               	movf	___flsub@b+1,w
  3137  0B0A  00A1               	movwf	___fladd@b+1
  3138  0B0B  0834               	movf	___flsub@b,w
  3139  0B0C  00A0               	movwf	___fladd@b
  3140  0B0D  0833               	movf	___flsub@a+3,w
  3141  0B0E  00A7               	movwf	___fladd@a+3
  3142  0B0F  0832               	movf	___flsub@a+2,w
  3143  0B10  00A6               	movwf	___fladd@a+2
  3144  0B11  0831               	movf	___flsub@a+1,w
  3145  0B12  00A5               	movwf	___fladd@a+1
  3146  0B13  0830               	movf	___flsub@a,w
  3147  0B14  00A4               	movwf	___fladd@a
  3148  0B15  120A  118A  2383  120A  158A  	fcall	___fladd
  3149  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0B1C  0823               	movf	?___fladd+3,w
  3152  0B1D  00B3               	movwf	?___flsub+3
  3153  0B1E  0822               	movf	?___fladd+2,w
  3154  0B1F  00B2               	movwf	?___flsub+2
  3155  0B20  0821               	movf	?___fladd+1,w
  3156  0B21  00B1               	movwf	?___flsub+1
  3157  0B22  0820               	movf	?___fladd,w
  3158  0B23  00B0               	movwf	?___flsub
  3159  0B24                     l645:
  3160  0B24  0008               	return
  3161  0B25                     __end_of___flsub:
  3162                           
  3163                           	psect	text14
  3164  0383                     __ptext14:	
  3165 ;; *************** function ___fladd *****************
  3166 ;; Defined at:
  3167 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  b               4    0[BANK0 ] long 
  3170 ;;  a               4    4[BANK0 ] long 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  grs             1    6[COMMON] unsigned char 
  3173 ;;  bexp            1    5[COMMON] unsigned char 
  3174 ;;  aexp            1    4[COMMON] unsigned char 
  3175 ;;  signs           1    3[COMMON] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  4    0[BANK0 ] unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, btemp+1
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       8       0       0       0
  3186 ;;      Locals:         4       0       0       0       0
  3187 ;;      Temps:          0       8       0       0       0
  3188 ;;      Totals:         4      16       0       0       0
  3189 ;;Total ram usage:       20 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		___flsub
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function ___fladd
  3201  0383                     ___fladd:
  3202  0383                     l2534:	
  3203                           ;incstack = 0
  3204                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3205                           
  3206  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0385  0823               	movf	___fladd@b+3,w
  3209  0386  3980               	andlw	128
  3210  0387  00A8               	movwf	??___fladd
  3211  0388  0828               	movf	??___fladd,w
  3212  0389  00F3               	movwf	___fladd@signs
  3213  038A                     l2536:
  3214  038A  0823               	movf	___fladd@b+3,w
  3215  038B  00A8               	movwf	??___fladd
  3216  038C  0728               	addwf	??___fladd,w
  3217  038D  00A9               	movwf	??___fladd+1
  3218  038E  0829               	movf	??___fladd+1,w
  3219  038F  00F5               	movwf	___fladd@bexp
  3220  0390                     l2538:
  3221  0390  1FA2               	btfss	___fladd@b+2,7
  3222  0391  2B93               	goto	u2921
  3223  0392  2B94               	goto	u2920
  3224  0393                     u2921:
  3225  0393  2B95               	goto	l2542
  3226  0394                     u2920:
  3227  0394                     l2540:
  3228  0394  1475               	bsf	___fladd@bexp,0
  3229  0395                     l2542:
  3230  0395  0875               	movf	___fladd@bexp,w
  3231  0396  1903               	btfsc	3,2
  3232  0397  2B99               	goto	u2931
  3233  0398  2B9A               	goto	u2930
  3234  0399                     u2931:
  3235  0399  2BAA               	goto	l2552
  3236  039A                     u2930:
  3237  039A                     l2544:
  3238  039A  0A75               	incf	___fladd@bexp,w
  3239  039B  1D03               	btfss	3,2
  3240  039C  2B9E               	goto	u2941
  3241  039D  2B9F               	goto	u2940
  3242  039E                     u2941:
  3243  039E  2BA7               	goto	l2548
  3244  039F                     u2940:
  3245  039F                     l2546:
  3246  039F  3000               	movlw	0
  3247  03A0  00A3               	movwf	___fladd@b+3
  3248  03A1  3000               	movlw	0
  3249  03A2  00A2               	movwf	___fladd@b+2
  3250  03A3  3000               	movlw	0
  3251  03A4  00A1               	movwf	___fladd@b+1
  3252  03A5  3000               	movlw	0
  3253  03A6  00A0               	movwf	___fladd@b
  3254  03A7                     l2548:
  3255  03A7  17A2               	bsf	___fladd@b+2,7
  3256  03A8                     l2550:
  3257  03A8  01A3               	clrf	___fladd@b+3
  3258  03A9  2BB2               	goto	l2554
  3259  03AA                     l2552:
  3260  03AA  3000               	movlw	0
  3261  03AB  00A3               	movwf	___fladd@b+3
  3262  03AC  3000               	movlw	0
  3263  03AD  00A2               	movwf	___fladd@b+2
  3264  03AE  3000               	movlw	0
  3265  03AF  00A1               	movwf	___fladd@b+1
  3266  03B0  3000               	movlw	0
  3267  03B1  00A0               	movwf	___fladd@b
  3268  03B2                     l2554:
  3269  03B2  0827               	movf	___fladd@a+3,w
  3270  03B3  3980               	andlw	128
  3271  03B4  00A8               	movwf	??___fladd
  3272  03B5  0828               	movf	??___fladd,w
  3273  03B6  00F4               	movwf	___fladd@aexp
  3274  03B7                     l2556:
  3275  03B7  0874               	movf	___fladd@aexp,w
  3276  03B8  0673               	xorwf	___fladd@signs,w
  3277  03B9  1903               	skipnz
  3278  03BA  2BBC               	goto	u2951
  3279  03BB  2BBD               	goto	u2950
  3280  03BC                     u2951:
  3281  03BC  2BBE               	goto	l2560
  3282  03BD                     u2950:
  3283  03BD                     l2558:
  3284  03BD  1773               	bsf	___fladd@signs,6
  3285  03BE                     l2560:
  3286  03BE  0827               	movf	___fladd@a+3,w
  3287  03BF  00A8               	movwf	??___fladd
  3288  03C0  0728               	addwf	??___fladd,w
  3289  03C1  00A9               	movwf	??___fladd+1
  3290  03C2  0829               	movf	??___fladd+1,w
  3291  03C3  00F4               	movwf	___fladd@aexp
  3292  03C4                     l2562:
  3293  03C4  1FA6               	btfss	___fladd@a+2,7
  3294  03C5  2BC7               	goto	u2961
  3295  03C6  2BC8               	goto	u2960
  3296  03C7                     u2961:
  3297  03C7  2BC9               	goto	l2566
  3298  03C8                     u2960:
  3299  03C8                     l2564:
  3300  03C8  1474               	bsf	___fladd@aexp,0
  3301  03C9                     l2566:
  3302  03C9  0874               	movf	___fladd@aexp,w
  3303  03CA  1903               	btfsc	3,2
  3304  03CB  2BCD               	goto	u2971
  3305  03CC  2BCE               	goto	u2970
  3306  03CD                     u2971:
  3307  03CD  2BDE               	goto	l2576
  3308  03CE                     u2970:
  3309  03CE                     l2568:
  3310  03CE  0A74               	incf	___fladd@aexp,w
  3311  03CF  1D03               	btfss	3,2
  3312  03D0  2BD2               	goto	u2981
  3313  03D1  2BD3               	goto	u2980
  3314  03D2                     u2981:
  3315  03D2  2BDB               	goto	l2572
  3316  03D3                     u2980:
  3317  03D3                     l2570:
  3318  03D3  3000               	movlw	0
  3319  03D4  00A7               	movwf	___fladd@a+3
  3320  03D5  3000               	movlw	0
  3321  03D6  00A6               	movwf	___fladd@a+2
  3322  03D7  3000               	movlw	0
  3323  03D8  00A5               	movwf	___fladd@a+1
  3324  03D9  3000               	movlw	0
  3325  03DA  00A4               	movwf	___fladd@a
  3326  03DB                     l2572:
  3327  03DB  17A6               	bsf	___fladd@a+2,7
  3328  03DC                     l2574:
  3329  03DC  01A7               	clrf	___fladd@a+3
  3330  03DD  2BE6               	goto	l599
  3331  03DE                     l2576:
  3332  03DE  3000               	movlw	0
  3333  03DF  00A7               	movwf	___fladd@a+3
  3334  03E0  3000               	movlw	0
  3335  03E1  00A6               	movwf	___fladd@a+2
  3336  03E2  3000               	movlw	0
  3337  03E3  00A5               	movwf	___fladd@a+1
  3338  03E4  3000               	movlw	0
  3339  03E5  00A4               	movwf	___fladd@a
  3340  03E6                     l599:
  3341  03E6  0875               	movf	___fladd@bexp,w
  3342  03E7  0274               	subwf	___fladd@aexp,w
  3343  03E8  1803               	skipnc
  3344  03E9  2BEB               	goto	u2991
  3345  03EA  2BEC               	goto	u2990
  3346  03EB                     u2991:
  3347  03EB  2C30               	goto	l2612
  3348  03EC                     u2990:
  3349  03EC                     l2578:
  3350  03EC  1F73               	btfss	___fladd@signs,6
  3351  03ED  2BEF               	goto	u3001
  3352  03EE  2BF0               	goto	u3000
  3353  03EF                     u3001:
  3354  03EF  2BF4               	goto	l2582
  3355  03F0                     u3000:
  3356  03F0                     l2580:
  3357  03F0  3080               	movlw	128
  3358  03F1  00A8               	movwf	??___fladd
  3359  03F2  0828               	movf	??___fladd,w
  3360  03F3  06F3               	xorwf	___fladd@signs,f
  3361  03F4                     l2582:
  3362  03F4  0875               	movf	___fladd@bexp,w
  3363  03F5  00A8               	movwf	??___fladd
  3364  03F6  0828               	movf	??___fladd,w
  3365  03F7  00F6               	movwf	___fladd@grs
  3366  03F8                     l2584:
  3367  03F8  0874               	movf	___fladd@aexp,w
  3368  03F9  00A8               	movwf	??___fladd
  3369  03FA  0828               	movf	??___fladd,w
  3370  03FB  00F5               	movwf	___fladd@bexp
  3371  03FC                     l2586:
  3372  03FC  0876               	movf	___fladd@grs,w
  3373  03FD  00A8               	movwf	??___fladd
  3374  03FE  0828               	movf	??___fladd,w
  3375  03FF  00F4               	movwf	___fladd@aexp
  3376  0400                     l2588:
  3377  0400  0820               	movf	___fladd@b,w
  3378  0401  00A8               	movwf	??___fladd
  3379  0402  0828               	movf	??___fladd,w
  3380  0403  00F6               	movwf	___fladd@grs
  3381  0404                     l2590:
  3382  0404  0824               	movf	___fladd@a,w
  3383  0405  00A8               	movwf	??___fladd
  3384  0406  0828               	movf	??___fladd,w
  3385  0407  00A0               	movwf	___fladd@b
  3386  0408                     l2592:
  3387  0408  0876               	movf	___fladd@grs,w
  3388  0409  00A8               	movwf	??___fladd
  3389  040A  0828               	movf	??___fladd,w
  3390  040B  00A4               	movwf	___fladd@a
  3391  040C                     l2594:
  3392  040C  0821               	movf	___fladd@b+1,w
  3393  040D  00A8               	movwf	??___fladd
  3394  040E  0828               	movf	??___fladd,w
  3395  040F  00F6               	movwf	___fladd@grs
  3396  0410                     l2596:
  3397  0410  0825               	movf	___fladd@a+1,w
  3398  0411  00A8               	movwf	??___fladd
  3399  0412  0828               	movf	??___fladd,w
  3400  0413  00A1               	movwf	___fladd@b+1
  3401  0414                     l2598:
  3402  0414  0876               	movf	___fladd@grs,w
  3403  0415  00A8               	movwf	??___fladd
  3404  0416  0828               	movf	??___fladd,w
  3405  0417  00A5               	movwf	___fladd@a+1
  3406  0418                     l2600:
  3407  0418  0822               	movf	___fladd@b+2,w
  3408  0419  00A8               	movwf	??___fladd
  3409  041A  0828               	movf	??___fladd,w
  3410  041B  00F6               	movwf	___fladd@grs
  3411  041C                     l2602:
  3412  041C  0826               	movf	___fladd@a+2,w
  3413  041D  00A8               	movwf	??___fladd
  3414  041E  0828               	movf	??___fladd,w
  3415  041F  00A2               	movwf	___fladd@b+2
  3416  0420                     l2604:
  3417  0420  0876               	movf	___fladd@grs,w
  3418  0421  00A8               	movwf	??___fladd
  3419  0422  0828               	movf	??___fladd,w
  3420  0423  00A6               	movwf	___fladd@a+2
  3421  0424                     l2606:
  3422  0424  0823               	movf	___fladd@b+3,w
  3423  0425  00A8               	movwf	??___fladd
  3424  0426  0828               	movf	??___fladd,w
  3425  0427  00F6               	movwf	___fladd@grs
  3426  0428                     l2608:
  3427  0428  0827               	movf	___fladd@a+3,w
  3428  0429  00A8               	movwf	??___fladd
  3429  042A  0828               	movf	??___fladd,w
  3430  042B  00A3               	movwf	___fladd@b+3
  3431  042C                     l2610:
  3432  042C  0876               	movf	___fladd@grs,w
  3433  042D  00A8               	movwf	??___fladd
  3434  042E  0828               	movf	??___fladd,w
  3435  042F  00A7               	movwf	___fladd@a+3
  3436  0430                     l2612:
  3437  0430  01F6               	clrf	___fladd@grs
  3438  0431                     l2614:
  3439  0431  0874               	movf	___fladd@aexp,w
  3440  0432  00A8               	movwf	??___fladd
  3441  0433  01A9               	clrf	??___fladd+1
  3442  0434  0829               	movf	??___fladd+1,w
  3443  0435  00AB               	movwf	??___fladd+3
  3444  0436  0875               	movf	___fladd@bexp,w
  3445  0437  0228               	subwf	??___fladd,w
  3446  0438  00AA               	movwf	??___fladd+2
  3447  0439  1C03               	skipc
  3448  043A  03AB               	decf	??___fladd+3,f
  3449  043B  082B               	movf	??___fladd+3,w
  3450  043C  3A80               	xorlw	128
  3451  043D  00FF               	movwf	btemp+1
  3452  043E  3080               	movlw	128
  3453  043F  027F               	subwf	btemp+1,w
  3454  0440  1D03               	skipz
  3455  0441  2C44               	goto	u3015
  3456  0442  301A               	movlw	26
  3457  0443  022A               	subwf	??___fladd+2,w
  3458  0444                     u3015:
  3459  0444  1C03               	skipc
  3460  0445  2C47               	goto	u3011
  3461  0446  2C48               	goto	u3010
  3462  0447                     u3011:
  3463  0447  2C89               	goto	l2630
  3464  0448                     u3010:
  3465  0448                     l2616:
  3466  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3468  044A  0823               	movf	___fladd@b+3,w
  3469  044B  0422               	iorwf	___fladd@b+2,w
  3470  044C  0421               	iorwf	___fladd@b+1,w
  3471  044D  0420               	iorwf	___fladd@b,w
  3472  044E  1D03               	skipz
  3473  044F  2C51               	goto	u3021
  3474  0450  2C53               	goto	u3020
  3475  0451                     u3021:
  3476  0451  3001               	movlw	1
  3477  0452  2C54               	goto	u3030
  3478  0453                     u3020:
  3479  0453  3000               	movlw	0
  3480  0454                     u3030:
  3481  0454  00A8               	movwf	??___fladd
  3482  0455  0828               	movf	??___fladd,w
  3483  0456  00F6               	movwf	___fladd@grs
  3484  0457  3000               	movlw	0
  3485  0458  00A3               	movwf	___fladd@b+3
  3486  0459  3000               	movlw	0
  3487  045A  00A2               	movwf	___fladd@b+2
  3488  045B  3000               	movlw	0
  3489  045C  00A1               	movwf	___fladd@b+1
  3490  045D  3000               	movlw	0
  3491  045E  00A0               	movwf	___fladd@b
  3492  045F  0874               	movf	___fladd@aexp,w
  3493  0460  00A8               	movwf	??___fladd
  3494  0461  0828               	movf	??___fladd,w
  3495  0462  00F5               	movwf	___fladd@bexp
  3496  0463  2C8F               	goto	l603
  3497  0464                     l605:
  3498  0464  1C76               	btfss	___fladd@grs,0
  3499  0465  2C67               	goto	u3041
  3500  0466  2C68               	goto	u3040
  3501  0467                     u3041:
  3502  0467  2C73               	goto	l2620
  3503  0468                     u3040:
  3504  0468                     l2618:
  3505  0468  0876               	movf	___fladd@grs,w
  3506  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3507  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3508  046B  00A8               	movwf	??___fladd
  3509  046C  1003               	clrc
  3510  046D  0C28               	rrf	??___fladd,w
  3511  046E  3801               	iorlw	1
  3512  046F  00A9               	movwf	??___fladd+1
  3513  0470  0829               	movf	??___fladd+1,w
  3514  0471  00F6               	movwf	___fladd@grs
  3515  0472  2C75               	goto	l2622
  3516  0473                     l2620:
  3517  0473  1003               	clrc
  3518  0474  0CF6               	rrf	___fladd@grs,f
  3519  0475                     l2622:
  3520  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0477  1C20               	btfss	___fladd@b,0
  3523  0478  2C7A               	goto	u3051
  3524  0479  2C7B               	goto	u3050
  3525  047A                     u3051:
  3526  047A  2C7C               	goto	l2626
  3527  047B                     u3050:
  3528  047B                     l2624:
  3529  047B  17F6               	bsf	___fladd@grs,7
  3530  047C                     l2626:
  3531  047C  3001               	movlw	1
  3532  047D  00A8               	movwf	??___fladd
  3533  047E                     u3065:
  3534  047E  0D23               	rlf	___fladd@b+3,w
  3535  047F  0CA3               	rrf	___fladd@b+3,f
  3536  0480  0CA2               	rrf	___fladd@b+2,f
  3537  0481  0CA1               	rrf	___fladd@b+1,f
  3538  0482  0CA0               	rrf	___fladd@b,f
  3539  0483  0BA8               	decfsz	??___fladd& (0+127),f
  3540  0484  2C7E               	goto	u3065
  3541  0485                     l2628:
  3542  0485  3001               	movlw	1
  3543  0486  00A8               	movwf	??___fladd
  3544  0487  0828               	movf	??___fladd,w
  3545  0488  07F5               	addwf	___fladd@bexp,f
  3546  0489                     l2630:
  3547  0489  0874               	movf	___fladd@aexp,w
  3548  048A  0275               	subwf	___fladd@bexp,w
  3549  048B  1C03               	skipc
  3550  048C  2C8E               	goto	u3071
  3551  048D  2C8F               	goto	u3070
  3552  048E                     u3071:
  3553  048E  2C64               	goto	l605
  3554  048F                     u3070:
  3555  048F                     l603:
  3556  048F  1B73               	btfsc	___fladd@signs,6
  3557  0490  2C92               	goto	u3081
  3558  0491  2C93               	goto	u3080
  3559  0492                     u3081:
  3560  0492  2CE2               	goto	l2656
  3561  0493                     u3080:
  3562  0493                     l2632:
  3563  0493  0875               	movf	___fladd@bexp,w
  3564  0494  1D03               	btfss	3,2
  3565  0495  2C97               	goto	u3091
  3566  0496  2C98               	goto	u3090
  3567  0497                     u3091:
  3568  0497  2CA3               	goto	l2638
  3569  0498                     u3090:
  3570  0498                     l2634:
  3571  0498  3000               	movlw	0
  3572  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3573  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3574  049B  00A3               	movwf	?___fladd+3
  3575  049C  3000               	movlw	0
  3576  049D  00A2               	movwf	?___fladd+2
  3577  049E  3000               	movlw	0
  3578  049F  00A1               	movwf	?___fladd+1
  3579  04A0  3000               	movlw	0
  3580  04A1  00A0               	movwf	?___fladd
  3581  04A2  2E12               	goto	l612
  3582  04A3                     l2638:
  3583  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3584  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3585  04A5  0824               	movf	___fladd@a,w
  3586  04A6  07A0               	addwf	___fladd@b,f
  3587  04A7  0825               	movf	___fladd@a+1,w
  3588  04A8  1103               	clrz
  3589  04A9  1803               	skipnc
  3590  04AA  3E01               	addlw	1
  3591  04AB  1903               	skipnz
  3592  04AC  2CAE               	goto	u3101
  3593  04AD  07A1               	addwf	___fladd@b+1,f
  3594  04AE                     u3101:
  3595  04AE  0826               	movf	___fladd@a+2,w
  3596  04AF  1103               	clrz
  3597  04B0  1803               	skipnc
  3598  04B1  3E01               	addlw	1
  3599  04B2  1903               	skipnz
  3600  04B3  2CB5               	goto	u3102
  3601  04B4  07A2               	addwf	___fladd@b+2,f
  3602  04B5                     u3102:
  3603  04B5  0827               	movf	___fladd@a+3,w
  3604  04B6  1103               	clrz
  3605  04B7  1803               	skipnc
  3606  04B8  3E01               	addlw	1
  3607  04B9  1903               	skipnz
  3608  04BA  2CBC               	goto	u3103
  3609  04BB  07A3               	addwf	___fladd@b+3,f
  3610  04BC                     u3103:
  3611  04BC                     l2640:
  3612  04BC  1C23               	btfss	___fladd@b+3,0
  3613  04BD  2CBF               	goto	u3111
  3614  04BE  2CC0               	goto	u3110
  3615  04BF                     u3111:
  3616  04BF  2D98               	goto	l2690
  3617  04C0                     u3110:
  3618  04C0                     l2642:
  3619  04C0  1C76               	btfss	___fladd@grs,0
  3620  04C1  2CC3               	goto	u3121
  3621  04C2  2CC4               	goto	u3120
  3622  04C3                     u3121:
  3623  04C3  2CCD               	goto	l2646
  3624  04C4                     u3120:
  3625  04C4                     l2644:
  3626  04C4  0876               	movf	___fladd@grs,w
  3627  04C5  00A8               	movwf	??___fladd
  3628  04C6  1003               	clrc
  3629  04C7  0C28               	rrf	??___fladd,w
  3630  04C8  3801               	iorlw	1
  3631  04C9  00A9               	movwf	??___fladd+1
  3632  04CA  0829               	movf	??___fladd+1,w
  3633  04CB  00F6               	movwf	___fladd@grs
  3634  04CC  2CCF               	goto	l2648
  3635  04CD                     l2646:
  3636  04CD  1003               	clrc
  3637  04CE  0CF6               	rrf	___fladd@grs,f
  3638  04CF                     l2648:
  3639  04CF  1C20               	btfss	___fladd@b,0
  3640  04D0  2CD2               	goto	u3131
  3641  04D1  2CD3               	goto	u3130
  3642  04D2                     u3131:
  3643  04D2  2CD4               	goto	l2652
  3644  04D3                     u3130:
  3645  04D3                     l2650:
  3646  04D3  17F6               	bsf	___fladd@grs,7
  3647  04D4                     l2652:
  3648  04D4  3001               	movlw	1
  3649  04D5  00A8               	movwf	??___fladd
  3650  04D6                     u3145:
  3651  04D6  0D23               	rlf	___fladd@b+3,w
  3652  04D7  0CA3               	rrf	___fladd@b+3,f
  3653  04D8  0CA2               	rrf	___fladd@b+2,f
  3654  04D9  0CA1               	rrf	___fladd@b+1,f
  3655  04DA  0CA0               	rrf	___fladd@b,f
  3656  04DB  0BA8               	decfsz	??___fladd& (0+127),f
  3657  04DC  2CD6               	goto	u3145
  3658  04DD                     l2654:
  3659  04DD  3001               	movlw	1
  3660  04DE  00A8               	movwf	??___fladd
  3661  04DF  0828               	movf	??___fladd,w
  3662  04E0  07F5               	addwf	___fladd@bexp,f
  3663  04E1  2D98               	goto	l2690
  3664  04E2                     l2656:
  3665  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3666  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3667  04E4  0823               	movf	___fladd@b+3,w
  3668  04E5  3A80               	xorlw	128
  3669  04E6  00FF               	movwf	btemp+1
  3670  04E7  0827               	movf	___fladd@a+3,w
  3671  04E8  3A80               	xorlw	128
  3672  04E9  027F               	subwf	btemp+1,w
  3673  04EA  1D03               	skipz
  3674  04EB  2CF6               	goto	u3153
  3675  04EC  0826               	movf	___fladd@a+2,w
  3676  04ED  0222               	subwf	___fladd@b+2,w
  3677  04EE  1D03               	skipz
  3678  04EF  2CF6               	goto	u3153
  3679  04F0  0825               	movf	___fladd@a+1,w
  3680  04F1  0221               	subwf	___fladd@b+1,w
  3681  04F2  1D03               	skipz
  3682  04F3  2CF6               	goto	u3153
  3683  04F4  0824               	movf	___fladd@a,w
  3684  04F5  0220               	subwf	___fladd@b,w
  3685  04F6                     u3153:
  3686  04F6  1803               	skipnc
  3687  04F7  2CF9               	goto	u3151
  3688  04F8  2CFA               	goto	u3150
  3689  04F9                     u3151:
  3690  04F9  2D52               	goto	l2666
  3691  04FA                     u3150:
  3692  04FA                     l2658:
  3693  04FA  30FF               	movlw	255
  3694  04FB  00A8               	movwf	??___fladd
  3695  04FC  30FF               	movlw	255
  3696  04FD  00A9               	movwf	??___fladd+1
  3697  04FE  30FF               	movlw	255
  3698  04FF  00AA               	movwf	??___fladd+2
  3699  0500  30FF               	movlw	255
  3700  0501  00AB               	movwf	??___fladd+3
  3701  0502  0824               	movf	___fladd@a,w
  3702  0503  00AC               	movwf	??___fladd+4
  3703  0504  0825               	movf	___fladd@a+1,w
  3704  0505  00AD               	movwf	??___fladd+5
  3705  0506  0826               	movf	___fladd@a+2,w
  3706  0507  00AE               	movwf	??___fladd+6
  3707  0508  0827               	movf	___fladd@a+3,w
  3708  0509  00AF               	movwf	??___fladd+7
  3709  050A  0820               	movf	___fladd@b,w
  3710  050B  02AC               	subwf	??___fladd+4,f
  3711  050C  0821               	movf	___fladd@b+1,w
  3712  050D  1C03               	skipc
  3713  050E  0F21               	incfsz	___fladd@b+1,w
  3714  050F  2D11               	goto	u3161
  3715  0510  2D12               	goto	u3162
  3716  0511                     u3161:
  3717  0511  02AD               	subwf	??___fladd+5,f
  3718  0512                     u3162:
  3719  0512  0822               	movf	___fladd@b+2,w
  3720  0513  1C03               	skipc
  3721  0514  0F22               	incfsz	___fladd@b+2,w
  3722  0515  2D17               	goto	u3163
  3723  0516  2D18               	goto	u3164
  3724  0517                     u3163:
  3725  0517  02AE               	subwf	??___fladd+6,f
  3726  0518                     u3164:
  3727  0518  0823               	movf	___fladd@b+3,w
  3728  0519  1C03               	skipc
  3729  051A  0F23               	incfsz	___fladd@b+3,w
  3730  051B  2D1D               	goto	u3165
  3731  051C  2D1E               	goto	u3166
  3732  051D                     u3165:
  3733  051D  02AF               	subwf	??___fladd+7,f
  3734  051E                     u3166:
  3735  051E  082C               	movf	??___fladd+4,w
  3736  051F  07A8               	addwf	??___fladd,f
  3737  0520  082D               	movf	??___fladd+5,w
  3738  0521  1803               	skipnc
  3739  0522  0F2D               	incfsz	??___fladd+5,w
  3740  0523  2D25               	goto	u3170
  3741  0524  2D26               	goto	u3171
  3742  0525                     u3170:
  3743  0525  07A9               	addwf	??___fladd+1,f
  3744  0526                     u3171:
  3745  0526  082E               	movf	??___fladd+6,w
  3746  0527  1803               	skipnc
  3747  0528  0F2E               	incfsz	??___fladd+6,w
  3748  0529  2D2B               	goto	u3172
  3749  052A  2D2C               	goto	u3173
  3750  052B                     u3172:
  3751  052B  07AA               	addwf	??___fladd+2,f
  3752  052C                     u3173:
  3753  052C  082F               	movf	??___fladd+7,w
  3754  052D  1803               	skipnc
  3755  052E  0A2F               	incf	??___fladd+7,w
  3756  052F  07AB               	addwf	??___fladd+3,f
  3757  0530  082B               	movf	??___fladd+3,w
  3758  0531  00A3               	movwf	___fladd@b+3
  3759  0532  082A               	movf	??___fladd+2,w
  3760  0533  00A2               	movwf	___fladd@b+2
  3761  0534  0829               	movf	??___fladd+1,w
  3762  0535  00A1               	movwf	___fladd@b+1
  3763  0536  0828               	movf	??___fladd,w
  3764  0537  00A0               	movwf	___fladd@b
  3765  0538                     l2660:
  3766  0538  3080               	movlw	128
  3767  0539  00A8               	movwf	??___fladd
  3768  053A  0828               	movf	??___fladd,w
  3769  053B  06F3               	xorwf	___fladd@signs,f
  3770  053C  09F6               	comf	___fladd@grs,f
  3771  053D  0AF6               	incf	___fladd@grs,f
  3772  053E                     l2662:
  3773  053E  0876               	movf	___fladd@grs,w
  3774  053F  1D03               	btfss	3,2
  3775  0540  2D42               	goto	u3181
  3776  0541  2D43               	goto	u3180
  3777  0542                     u3181:
  3778  0542  2D60               	goto	l620
  3779  0543                     u3180:
  3780  0543                     l2664:
  3781  0543  3001               	movlw	1
  3782  0544  07A0               	addwf	___fladd@b,f
  3783  0545  3000               	movlw	0
  3784  0546  1803               	skipnc
  3785  0547  3001               	movlw	1
  3786  0548  07A1               	addwf	___fladd@b+1,f
  3787  0549  3000               	movlw	0
  3788  054A  1803               	skipnc
  3789  054B  3001               	movlw	1
  3790  054C  07A2               	addwf	___fladd@b+2,f
  3791  054D  3000               	movlw	0
  3792  054E  1803               	skipnc
  3793  054F  3001               	movlw	1
  3794  0550  07A3               	addwf	___fladd@b+3,f
  3795  0551  2D60               	goto	l620
  3796  0552                     l2666:
  3797  0552  0824               	movf	___fladd@a,w
  3798  0553  02A0               	subwf	___fladd@b,f
  3799  0554  0825               	movf	___fladd@a+1,w
  3800  0555  1C03               	skipc
  3801  0556  0F25               	incfsz	___fladd@a+1,w
  3802  0557  02A1               	subwf	___fladd@b+1,f
  3803  0558  0826               	movf	___fladd@a+2,w
  3804  0559  1C03               	skipc
  3805  055A  0F26               	incfsz	___fladd@a+2,w
  3806  055B  02A2               	subwf	___fladd@b+2,f
  3807  055C  0827               	movf	___fladd@a+3,w
  3808  055D  1C03               	skipc
  3809  055E  0F27               	incfsz	___fladd@a+3,w
  3810  055F  02A3               	subwf	___fladd@b+3,f
  3811  0560                     l620:
  3812  0560  0823               	movf	___fladd@b+3,w
  3813  0561  0422               	iorwf	___fladd@b+2,w
  3814  0562  0421               	iorwf	___fladd@b+1,w
  3815  0563  0420               	iorwf	___fladd@b,w
  3816  0564  1D03               	skipz
  3817  0565  2D67               	goto	u3191
  3818  0566  2D68               	goto	u3190
  3819  0567                     u3191:
  3820  0567  2D94               	goto	l2688
  3821  0568                     u3190:
  3822  0568                     l2668:
  3823  0568  0876               	movf	___fladd@grs,w
  3824  0569  1D03               	btfss	3,2
  3825  056A  2D6C               	goto	u3201
  3826  056B  2D6D               	goto	u3200
  3827  056C                     u3201:
  3828  056C  2D94               	goto	l2688
  3829  056D                     u3200:
  3830  056D                     l2670:
  3831  056D  3000               	movlw	0
  3832  056E  00A3               	movwf	?___fladd+3
  3833  056F  3000               	movlw	0
  3834  0570  00A2               	movwf	?___fladd+2
  3835  0571  3000               	movlw	0
  3836  0572  00A1               	movwf	?___fladd+1
  3837  0573  3000               	movlw	0
  3838  0574  00A0               	movwf	?___fladd
  3839  0575  2E12               	goto	l612
  3840  0576                     l2674:
  3841  0576  3001               	movlw	1
  3842  0577  00A8               	movwf	??___fladd
  3843  0578                     u3215:
  3844  0578  1003               	clrc
  3845  0579  0DA0               	rlf	___fladd@b,f
  3846  057A  0DA1               	rlf	___fladd@b+1,f
  3847  057B  0DA2               	rlf	___fladd@b+2,f
  3848  057C  0DA3               	rlf	___fladd@b+3,f
  3849  057D  0BA8               	decfsz	??___fladd,f
  3850  057E  2D78               	goto	u3215
  3851  057F                     l2676:
  3852  057F  1FF6               	btfss	___fladd@grs,7
  3853  0580  2D82               	goto	u3221
  3854  0581  2D83               	goto	u3220
  3855  0582                     u3221:
  3856  0582  2D84               	goto	l624
  3857  0583                     u3220:
  3858  0583                     l2678:
  3859  0583  1420               	bsf	___fladd@b,0
  3860  0584                     l624:
  3861  0584  1C76               	btfss	___fladd@grs,0
  3862  0585  2D87               	goto	u3231
  3863  0586  2D88               	goto	u3230
  3864  0587                     u3231:
  3865  0587  2D8B               	goto	l2682
  3866  0588                     u3230:
  3867  0588                     l2680:
  3868  0588  1403               	setc
  3869  0589  0DF6               	rlf	___fladd@grs,f
  3870  058A  2D8D               	goto	l2684
  3871  058B                     l2682:
  3872  058B  1003               	clrc
  3873  058C  0DF6               	rlf	___fladd@grs,f
  3874  058D                     l2684:
  3875  058D  0875               	movf	___fladd@bexp,w
  3876  058E  1903               	btfsc	3,2
  3877  058F  2D91               	goto	u3241
  3878  0590  2D92               	goto	u3240
  3879  0591                     u3241:
  3880  0591  2D94               	goto	l2688
  3881  0592                     u3240:
  3882  0592                     l2686:
  3883  0592  3001               	movlw	1
  3884  0593  02F5               	subwf	___fladd@bexp,f
  3885  0594                     l2688:
  3886  0594  1FA2               	btfss	___fladd@b+2,7
  3887  0595  2D97               	goto	u3251
  3888  0596  2D98               	goto	u3250
  3889  0597                     u3251:
  3890  0597  2D76               	goto	l2674
  3891  0598                     u3250:
  3892  0598                     l2690:
  3893  0598  01F4               	clrf	___fladd@aexp
  3894  0599                     l2692:
  3895  0599  1FF6               	btfss	___fladd@grs,7
  3896  059A  2D9C               	goto	u3261
  3897  059B  2D9D               	goto	u3260
  3898  059C                     u3261:
  3899  059C  2DAB               	goto	l2700
  3900  059D                     u3260:
  3901  059D                     l2694:
  3902  059D  0876               	movf	___fladd@grs,w
  3903  059E  397F               	andlw	127
  3904  059F  1903               	btfsc	3,2
  3905  05A0  2DA2               	goto	u3271
  3906  05A1  2DA3               	goto	u3270
  3907  05A2                     u3271:
  3908  05A2  2DA6               	goto	l630
  3909  05A3                     u3270:
  3910  05A3                     l2696:
  3911  05A3  01F4               	clrf	___fladd@aexp
  3912  05A4  0AF4               	incf	___fladd@aexp,f
  3913  05A5  2DAB               	goto	l2700
  3914  05A6                     l630:
  3915  05A6  1C20               	btfss	___fladd@b,0
  3916  05A7  2DA9               	goto	u3281
  3917  05A8  2DAA               	goto	u3280
  3918  05A9                     u3281:
  3919  05A9  2DAB               	goto	l2700
  3920  05AA                     u3280:
  3921  05AA  2DA3               	goto	l2696
  3922  05AB                     l2700:
  3923  05AB  0874               	movf	___fladd@aexp,w
  3924  05AC  1903               	btfsc	3,2
  3925  05AD  2DAF               	goto	u3291
  3926  05AE  2DB0               	goto	u3290
  3927  05AF                     u3291:
  3928  05AF  2DE4               	goto	l633
  3929  05B0                     u3290:
  3930  05B0                     l2702:
  3931  05B0  3001               	movlw	1
  3932  05B1  07A0               	addwf	___fladd@b,f
  3933  05B2  3000               	movlw	0
  3934  05B3  1803               	skipnc
  3935  05B4  3001               	movlw	1
  3936  05B5  07A1               	addwf	___fladd@b+1,f
  3937  05B6  3000               	movlw	0
  3938  05B7  1803               	skipnc
  3939  05B8  3001               	movlw	1
  3940  05B9  07A2               	addwf	___fladd@b+2,f
  3941  05BA  3000               	movlw	0
  3942  05BB  1803               	skipnc
  3943  05BC  3001               	movlw	1
  3944  05BD  07A3               	addwf	___fladd@b+3,f
  3945  05BE                     l2704:
  3946  05BE  1C23               	btfss	___fladd@b+3,0
  3947  05BF  2DC1               	goto	u3301
  3948  05C0  2DC2               	goto	u3300
  3949  05C1                     u3301:
  3950  05C1  2DE4               	goto	l633
  3951  05C2                     u3300:
  3952  05C2                     l2706:
  3953  05C2  0820               	movf	___fladd@b,w
  3954  05C3  00A8               	movwf	??___fladd
  3955  05C4  0821               	movf	___fladd@b+1,w
  3956  05C5  00A9               	movwf	??___fladd+1
  3957  05C6  0822               	movf	___fladd@b+2,w
  3958  05C7  00AA               	movwf	??___fladd+2
  3959  05C8  0823               	movf	___fladd@b+3,w
  3960  05C9  00AB               	movwf	??___fladd+3
  3961  05CA  3001               	movlw	1
  3962  05CB  00AC               	movwf	??___fladd+4
  3963  05CC                     u3315:
  3964  05CC  0D2B               	rlf	??___fladd+3,w
  3965  05CD  0CAB               	rrf	??___fladd+3,f
  3966  05CE  0CAA               	rrf	??___fladd+2,f
  3967  05CF  0CA9               	rrf	??___fladd+1,f
  3968  05D0  0CA8               	rrf	??___fladd,f
  3969  05D1                     u3310:
  3970  05D1  0BAC               	decfsz	??___fladd+4,f
  3971  05D2  2DCC               	goto	u3315
  3972  05D3  082B               	movf	??___fladd+3,w
  3973  05D4  00A3               	movwf	___fladd@b+3
  3974  05D5  082A               	movf	??___fladd+2,w
  3975  05D6  00A2               	movwf	___fladd@b+2
  3976  05D7  0829               	movf	??___fladd+1,w
  3977  05D8  00A1               	movwf	___fladd@b+1
  3978  05D9  0828               	movf	??___fladd,w
  3979  05DA  00A0               	movwf	___fladd@b
  3980  05DB  0A75               	incf	___fladd@bexp,w
  3981  05DC  1903               	btfsc	3,2
  3982  05DD  2DDF               	goto	u3321
  3983  05DE  2DE0               	goto	u3320
  3984  05DF                     u3321:
  3985  05DF  2DE4               	goto	l633
  3986  05E0                     u3320:
  3987  05E0                     l2708:
  3988  05E0  3001               	movlw	1
  3989  05E1  00A8               	movwf	??___fladd
  3990  05E2  0828               	movf	??___fladd,w
  3991  05E3  07F5               	addwf	___fladd@bexp,f
  3992  05E4                     l633:
  3993  05E4  0A75               	incf	___fladd@bexp,w
  3994  05E5  1903               	btfsc	3,2
  3995  05E6  2DE8               	goto	u3331
  3996  05E7  2DE9               	goto	u3330
  3997  05E8                     u3331:
  3998  05E8  2DEE               	goto	l2712
  3999  05E9                     u3330:
  4000  05E9                     l2710:
  4001  05E9  0875               	movf	___fladd@bexp,w
  4002  05EA  1D03               	btfss	3,2
  4003  05EB  2DED               	goto	u3341
  4004  05EC  2DEE               	goto	u3340
  4005  05ED                     u3341:
  4006  05ED  2DFC               	goto	l2718
  4007  05EE                     u3340:
  4008  05EE                     l2712:
  4009  05EE  3000               	movlw	0
  4010  05EF  00A3               	movwf	___fladd@b+3
  4011  05F0  3000               	movlw	0
  4012  05F1  00A2               	movwf	___fladd@b+2
  4013  05F2  3000               	movlw	0
  4014  05F3  00A1               	movwf	___fladd@b+1
  4015  05F4  3000               	movlw	0
  4016  05F5  00A0               	movwf	___fladd@b
  4017  05F6                     l2714:
  4018  05F6  0875               	movf	___fladd@bexp,w
  4019  05F7  1D03               	btfss	3,2
  4020  05F8  2DFA               	goto	u3351
  4021  05F9  2DFB               	goto	u3350
  4022  05FA                     u3351:
  4023  05FA  2DFC               	goto	l2718
  4024  05FB                     u3350:
  4025  05FB                     l2716:
  4026  05FB  01F3               	clrf	___fladd@signs
  4027  05FC                     l2718:
  4028  05FC  1C75               	btfss	___fladd@bexp,0
  4029  05FD  2DFF               	goto	u3361
  4030  05FE  2E00               	goto	u3360
  4031  05FF                     u3361:
  4032  05FF  2E02               	goto	l2722
  4033  0600                     u3360:
  4034  0600                     l2720:
  4035  0600  17A2               	bsf	___fladd@b+2,7
  4036  0601  2E06               	goto	l641
  4037  0602                     l2722:
  4038  0602  307F               	movlw	127
  4039  0603  00A8               	movwf	??___fladd
  4040  0604  0828               	movf	??___fladd,w
  4041  0605  05A2               	andwf	___fladd@b+2,f
  4042  0606                     l641:
  4043  0606  0875               	movf	___fladd@bexp,w
  4044  0607  00A8               	movwf	??___fladd
  4045  0608  1003               	clrc
  4046  0609  0C28               	rrf	??___fladd,w
  4047  060A  00A9               	movwf	??___fladd+1
  4048  060B  0829               	movf	??___fladd+1,w
  4049  060C  00A3               	movwf	___fladd@b+3
  4050  060D                     l2724:
  4051  060D  1FF3               	btfss	___fladd@signs,7
  4052  060E  2E10               	goto	u3371
  4053  060F  2E11               	goto	u3370
  4054  0610                     u3371:
  4055  0610  2E12               	goto	l642
  4056  0611                     u3370:
  4057  0611                     l2726:
  4058  0611  17A3               	bsf	___fladd@b+3,7
  4059  0612                     l642:
  4060  0612                     l612:
  4061  0612  0008               	return
  4062  0613                     __end_of___fladd:
  4063                           
  4064                           	psect	text15
  4065  0ADE                     __ptext15:	
  4066 ;; *************** function _cursorLCD *****************
  4067 ;; Defined at:
  4068 ;;		line 50 in file "LCDD2.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  fila            1    wreg     unsigned char 
  4071 ;;  columna         1    6[COMMON] unsigned char 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  fila            1    8[COMMON] unsigned char 
  4074 ;;  temp            1    9[COMMON] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         1       0       0       0       0
  4085 ;;      Locals:         2       0       0       0       0
  4086 ;;      Temps:          1       0       0       0       0
  4087 ;;      Totals:         4       0       0       0       0
  4088 ;;Total ram usage:        4 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    2
  4091 ;; This function calls:
  4092 ;;		_comandoLCD
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _cursorLCD
  4100  0ADE                     _cursorLCD:
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4104                           ;cursorLCD@fila stored from wreg
  4105  0ADE  00F8               	movwf	cursorLCD@fila
  4106  0ADF                     l2344:
  4107                           
  4108                           ;LCDD2.c: 51:     uint8_t temp;;LCDD2.c: 52:     if(fila == 1){
  4109  0ADF  0378               	decf	cursorLCD@fila,w
  4110  0AE0  1D03               	btfss	3,2
  4111  0AE1  2AE3               	goto	u2681
  4112  0AE2  2AE4               	goto	u2680
  4113  0AE3                     u2681:
  4114  0AE3  2AEF               	goto	l2350
  4115  0AE4                     u2680:
  4116  0AE4                     l2346:
  4117                           
  4118                           ;LCDD2.c: 53:         temp = 0X80 + columna - 1;
  4119  0AE4  0876               	movf	cursorLCD@columna,w
  4120  0AE5  3E7F               	addlw	127
  4121  0AE6  00F7               	movwf	??_cursorLCD
  4122  0AE7  0877               	movf	??_cursorLCD,w
  4123  0AE8  00F9               	movwf	cursorLCD@temp
  4124  0AE9                     l2348:
  4125                           
  4126                           ;LCDD2.c: 54:         comandoLCD(temp);
  4127  0AE9  0879               	movf	cursorLCD@temp,w
  4128  0AEA  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  4129  0AEF                     l2350:
  4130                           
  4131                           ;LCDD2.c: 57:     if(fila == 2){
  4132  0AEF  3002               	movlw	2
  4133  0AF0  0678               	xorwf	cursorLCD@fila,w
  4134  0AF1  1D03               	btfss	3,2
  4135  0AF2  2AF4               	goto	u2691
  4136  0AF3  2AF5               	goto	u2690
  4137  0AF4                     u2691:
  4138  0AF4  2B00               	goto	l208
  4139  0AF5                     u2690:
  4140  0AF5                     l2352:
  4141                           
  4142                           ;LCDD2.c: 58:         temp = 0XC0 + columna -1;
  4143  0AF5  0876               	movf	cursorLCD@columna,w
  4144  0AF6  3EBF               	addlw	191
  4145  0AF7  00F7               	movwf	??_cursorLCD
  4146  0AF8  0877               	movf	??_cursorLCD,w
  4147  0AF9  00F9               	movwf	cursorLCD@temp
  4148  0AFA                     l2354:
  4149                           
  4150                           ;LCDD2.c: 59:         comandoLCD(temp);
  4151  0AFA  0879               	movf	cursorLCD@temp,w
  4152  0AFB  120A  158A  2277  120A  158A  	fcall	_comandoLCD
  4153  0B00                     l208:
  4154  0B00  0008               	return
  4155  0B01                     __end_of_cursorLCD:
  4156                           
  4157                           	psect	text16
  4158  0A77                     __ptext16:	
  4159 ;; *************** function _comandoLCD *****************
  4160 ;; Defined at:
  4161 ;;		line 63 in file "LCDD2.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  cmd             1    wreg     unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  cmd             1    5[COMMON] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       0       0       0       0
  4176 ;;      Locals:         1       0       0       0       0
  4177 ;;      Temps:          2       0       0       0       0
  4178 ;;      Totals:         3       0       0       0       0
  4179 ;;Total ram usage:        3 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_initLCD
  4186 ;;		_cursorLCD
  4187 ;;		_ClearLCD
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           
  4192                           ;psect for function _comandoLCD
  4193  0A77                     _comandoLCD:
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in _comandoLCD: [wreg]
  4197                           ;comandoLCD@cmd stored from wreg
  4198  0A77  00F5               	movwf	comandoLCD@cmd
  4199  0A78                     l2004:
  4200                           
  4201                           ;LCDD2.c: 64:     RC0 = 0;
  4202  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0A7A  1007               	bcf	7,0	;volatile
  4205  0A7B                     l2006:
  4206                           
  4207                           ;LCDD2.c: 65:     PORTD = cmd;
  4208  0A7B  0875               	movf	comandoLCD@cmd,w
  4209  0A7C  0088               	movwf	8	;volatile
  4210  0A7D                     l2008:
  4211                           
  4212                           ;LCDD2.c: 66:     RC1 = 1;
  4213  0A7D  1487               	bsf	7,1	;volatile
  4214                           
  4215                           ;LCDD2.c: 67:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4216  0A7E  300B               	movlw	11
  4217  0A7F  00F4               	movwf	??_comandoLCD+1
  4218  0A80  3062               	movlw	98
  4219  0A81  00F3               	movwf	??_comandoLCD
  4220  0A82                     u4097:
  4221  0A82  0BF3               	decfsz	??_comandoLCD,f
  4222  0A83  2A82               	goto	u4097
  4223  0A84  0BF4               	decfsz	??_comandoLCD+1,f
  4224  0A85  2A82               	goto	u4097
  4225  0A86  0000               	nop
  4226  0A87                     l2010:
  4227                           
  4228                           ;LCDD2.c: 68:     RC1 = 0;
  4229  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0A89  1087               	bcf	7,1	;volatile
  4232  0A8A                     l211:
  4233  0A8A  0008               	return
  4234  0A8B                     __end_of_comandoLCD:
  4235                           
  4236                           	psect	text17
  4237  0BAB                     __ptext17:	
  4238 ;; *************** function _configuracion *****************
  4239 ;; Defined at:
  4240 ;;		line 116 in file "main.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4254 ;;      Params:         0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0
  4257 ;;      Totals:         0       0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    2
  4261 ;; This function calls:
  4262 ;;		_ADCconfig
  4263 ;;		_configUART
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _configuracion
  4271  0BAB                     _configuracion:
  4272  0BAB                     l2238:	
  4273                           ;incstack = 0
  4274                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4275                           
  4276                           
  4277                           ;main.c: 118:     ANSEL = 0X03;
  4278  0BAB  3003               	movlw	3
  4279  0BAC  1683               	bsf	3,5	;RP0=1, select bank3
  4280  0BAD  1703               	bsf	3,6	;RP1=1, select bank3
  4281  0BAE  0088               	movwf	8	;volatile
  4282  0BAF                     l2240:
  4283                           
  4284                           ;main.c: 119:     ANSELH = 0X00;
  4285  0BAF  0189               	clrf	9	;volatile
  4286  0BB0                     l2242:
  4287                           
  4288                           ;main.c: 120:     TRISA = 0X03;
  4289  0BB0  3003               	movlw	3
  4290  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  4291  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  4292  0BB3  0085               	movwf	5	;volatile
  4293                           
  4294                           ;main.c: 121:     TRISB = 0X00;
  4295  0BB4  0186               	clrf	6	;volatile
  4296                           
  4297                           ;main.c: 122:     TRISC = 0X00;
  4298  0BB5  0187               	clrf	7	;volatile
  4299                           
  4300                           ;main.c: 123:     TRISD = 0X00;
  4301  0BB6  0188               	clrf	8	;volatile
  4302                           
  4303                           ;main.c: 124:     TRISE = 0X00;
  4304  0BB7  0189               	clrf	9	;volatile
  4305                           
  4306                           ;main.c: 125:     PORTA = 0X00;
  4307  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0BBA  0185               	clrf	5	;volatile
  4310                           
  4311                           ;main.c: 126:     PORTB = 0X00;
  4312  0BBB  0186               	clrf	6	;volatile
  4313                           
  4314                           ;main.c: 127:     PORTC = 0X00;
  4315  0BBC  0187               	clrf	7	;volatile
  4316                           
  4317                           ;main.c: 128:     PORTD = 0X00;
  4318  0BBD  0188               	clrf	8	;volatile
  4319                           
  4320                           ;main.c: 129:     PORTE = 0X00;
  4321  0BBE  0189               	clrf	9	;volatile
  4322  0BBF                     l2244:
  4323                           
  4324                           ;main.c: 132:     configUART();
  4325  0BBF  120A  158A  2265  120A  158A  	fcall	_configUART
  4326  0BC4                     l2246:
  4327                           
  4328                           ;main.c: 135:     OSCCONbits.IRCF = 0b111;
  4329  0BC4  3070               	movlw	112
  4330  0BC5  1683               	bsf	3,5	;RP0=1, select bank1
  4331  0BC6  1303               	bcf	3,6	;RP1=0, select bank1
  4332  0BC7  048F               	iorwf	15,f	;volatile
  4333  0BC8                     l2248:
  4334                           
  4335                           ;main.c: 136:     OSCCONbits.SCS = 0b1;
  4336  0BC8  140F               	bsf	15,0	;volatile
  4337  0BC9                     l2250:
  4338                           
  4339                           ;main.c: 139:     INTCONbits.GIE = 1;
  4340  0BC9  178B               	bsf	11,7	;volatile
  4341  0BCA                     l2252:
  4342                           
  4343                           ;main.c: 140:     INTCONbits.PEIE = 1;
  4344  0BCA  170B               	bsf	11,6	;volatile
  4345  0BCB                     l2254:
  4346                           
  4347                           ;main.c: 141:     INTCONbits.T0IF = 0;
  4348  0BCB  110B               	bcf	11,2	;volatile
  4349  0BCC                     l2256:
  4350                           
  4351                           ;main.c: 142:     INTCONbits.T0IE = 1;
  4352  0BCC  168B               	bsf	11,5	;volatile
  4353  0BCD                     l2258:
  4354                           
  4355                           ;main.c: 143:     PIE1bits.RCIE = 1;
  4356  0BCD  168C               	bsf	12,5	;volatile
  4357  0BCE                     l2260:
  4358                           
  4359                           ;main.c: 146:     OPTION_REGbits.T0CS = 0;
  4360  0BCE  1281               	bcf	1,5	;volatile
  4361  0BCF                     l2262:
  4362                           
  4363                           ;main.c: 147:     OPTION_REGbits.PSA = 0;
  4364  0BCF  1181               	bcf	1,3	;volatile
  4365  0BD0                     l2264:
  4366                           
  4367                           ;main.c: 148:     OPTION_REGbits.PS2 = 1;
  4368  0BD0  1501               	bsf	1,2	;volatile
  4369  0BD1                     l2266:
  4370                           
  4371                           ;main.c: 149:     OPTION_REGbits.PS1 = 1;
  4372  0BD1  1481               	bsf	1,1	;volatile
  4373  0BD2                     l2268:
  4374                           
  4375                           ;main.c: 150:     OPTION_REGbits.PS0 = 0;
  4376  0BD2  1001               	bcf	1,0	;volatile
  4377  0BD3                     l2270:
  4378                           
  4379                           ;main.c: 155:     ADCconfig(0,0);
  4380  0BD3  01F3               	clrf	ADCconfig@just
  4381  0BD4  3000               	movlw	0
  4382  0BD5  120A  158A  2422  120A  158A  	fcall	_ADCconfig
  4383  0BDA                     l2272:
  4384                           
  4385                           ;main.c: 157:     PIR1bits.ADIF = 0;
  4386  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  4387  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  4388  0BDC  130C               	bcf	12,6	;volatile
  4389  0BDD                     l2274:
  4390                           
  4391                           ;main.c: 158:     PIE1bits.ADIE = 1;
  4392  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  4393  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  4394  0BDF  170C               	bsf	12,6	;volatile
  4395  0BE0                     l110:
  4396  0BE0  0008               	return
  4397  0BE1                     __end_of_configuracion:
  4398                           
  4399                           	psect	text18
  4400  0A65                     __ptext18:	
  4401 ;; *************** function _configUART *****************
  4402 ;; Defined at:
  4403 ;;		line 11 in file "ComSerial.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_configuracion
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _configUART
  4433  0A65                     _configUART:
  4434  0A65                     l1930:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _configUART: [wreg]
  4437                           
  4438                           
  4439                           ;ComSerial.c: 13:     TRISCbits.TRISC6 = 0;
  4440  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0A67  1307               	bcf	7,6	;volatile
  4443                           
  4444                           ;ComSerial.c: 14:     TRISCbits.TRISC7 = 1;
  4445  0A68  1787               	bsf	7,7	;volatile
  4446  0A69                     l1932:
  4447                           
  4448                           ;ComSerial.c: 15:     SPBRG = 12;
  4449  0A69  300C               	movlw	12
  4450  0A6A  0099               	movwf	25	;volatile
  4451  0A6B                     l1934:
  4452                           
  4453                           ;ComSerial.c: 16:     TXSTAbits.BRGH = 0;
  4454  0A6B  1118               	bcf	24,2	;volatile
  4455  0A6C                     l1936:
  4456                           
  4457                           ;ComSerial.c: 17:     TXSTAbits.TXEN = 1;
  4458  0A6C  1698               	bsf	24,5	;volatile
  4459  0A6D                     l1938:
  4460                           
  4461                           ;ComSerial.c: 18:     RCSTAbits.CREN = 1;
  4462  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  4463  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  4464  0A6F  1618               	bsf	24,4	;volatile
  4465  0A70                     l1940:
  4466                           
  4467                           ;ComSerial.c: 19:     TXSTAbits.SYNC = 0;
  4468  0A70  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0A71  1303               	bcf	3,6	;RP1=0, select bank1
  4470  0A72  1218               	bcf	24,4	;volatile
  4471  0A73                     l1942:
  4472                           
  4473                           ;ComSerial.c: 20:     RCSTAbits.SPEN = 1;
  4474  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0A75  1798               	bsf	24,7	;volatile
  4477  0A76                     l148:
  4478  0A76  0008               	return
  4479  0A77                     __end_of_configUART:
  4480                           
  4481                           	psect	text19
  4482  0C22                     __ptext19:	
  4483 ;; *************** function _ADCconfig *****************
  4484 ;; Defined at:
  4485 ;;		line 10 in file "ADC.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  canal           1    wreg     unsigned char 
  4488 ;;  just            1    3[COMMON] unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  canal           1    6[COMMON] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         1       0       0       0       0
  4501 ;;      Locals:         1       0       0       0       0
  4502 ;;      Temps:          2       0       0       0       0
  4503 ;;      Totals:         4       0       0       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_configuracion
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function _ADCconfig
  4516  0C22                     _ADCconfig:
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in _ADCconfig: [wreg-fsr0h+status,2+status,0]
  4520                           ;ADCconfig@canal stored from wreg
  4521  0C22  00F6               	movwf	ADCconfig@canal
  4522  0C23                     l1944:
  4523                           
  4524                           ;ADC.c: 15:     switch(OSCCONbits.IRCF){
  4525  0C23  2C3C               	goto	l1956
  4526  0C24                     l1946:
  4527                           
  4528                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b000;
  4529  0C24  303F               	movlw	-193
  4530  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  4531  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  4532  0C27  059F               	andwf	31,f	;volatile
  4533                           
  4534                           ;ADC.c: 18:             break;
  4535  0C28  2C52               	goto	l1958
  4536  0C29                     l1948:
  4537                           
  4538                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b001;
  4539  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4540  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4541  0C2B  081F               	movf	31,w	;volatile
  4542  0C2C  393F               	andlw	-193
  4543  0C2D  3840               	iorlw	64
  4544  0C2E  009F               	movwf	31	;volatile
  4545                           
  4546                           ;ADC.c: 21:             break;
  4547  0C2F  2C52               	goto	l1958
  4548  0C30                     l1950:
  4549                           
  4550                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b010;
  4551  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0C32  081F               	movf	31,w	;volatile
  4554  0C33  393F               	andlw	-193
  4555  0C34  3880               	iorlw	128
  4556  0C35  009F               	movwf	31	;volatile
  4557                           
  4558                           ;ADC.c: 24:             break;
  4559  0C36  2C52               	goto	l1958
  4560  0C37                     l1952:
  4561                           
  4562                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  4563  0C37  30C0               	movlw	192
  4564  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0C3A  049F               	iorwf	31,f	;volatile
  4567                           
  4568                           ;ADC.c: 27:             break;
  4569  0C3B  2C52               	goto	l1958
  4570  0C3C                     l1956:
  4571  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  4572  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  4573  0C3E  0E0F               	swapf	15,w	;volatile
  4574  0C3F  3907               	andlw	7
  4575  0C40  00F4               	movwf	??_ADCconfig
  4576  0C41  01F5               	clrf	??_ADCconfig+1
  4577                           
  4578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4579                           ; Switch size 1, requested type "simple"
  4580                           ; Number of cases is 1, Range of values is 0 to 0
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ; direct_byte           11     8 (fixed)
  4585                           ; jumptable            260     6 (fixed)
  4586                           ;	Chosen strategy is simple_byte
  4587  0C42  0875               	movf	??_ADCconfig+1,w
  4588  0C43  3A00               	xorlw	0	; case 0
  4589  0C44  1903               	skipnz
  4590  0C45  2C47               	goto	l3122
  4591  0C46  2C37               	goto	l1952
  4592  0C47                     l3122:
  4593                           
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 3, Range of values is 4 to 7
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte           10     6 (average)
  4599                           ; direct_byte           23    11 (fixed)
  4600                           ; jumptable            263     9 (fixed)
  4601                           ;	Chosen strategy is simple_byte
  4602  0C47  0874               	movf	??_ADCconfig,w
  4603  0C48  3A04               	xorlw	4	; case 4
  4604  0C49  1903               	skipnz
  4605  0C4A  2C24               	goto	l1946
  4606  0C4B  3A02               	xorlw	2	; case 6
  4607  0C4C  1903               	skipnz
  4608  0C4D  2C29               	goto	l1948
  4609  0C4E  3A01               	xorlw	1	; case 7
  4610  0C4F  1903               	skipnz
  4611  0C50  2C30               	goto	l1950
  4612  0C51  2C37               	goto	l1952
  4613  0C52                     l1958:
  4614                           
  4615                           ;ADC.c: 29:     ADCON0bits.CHS = canal;
  4616  0C52  0876               	movf	ADCconfig@canal,w
  4617  0C53  00F4               	movwf	??_ADCconfig
  4618  0C54  0DF4               	rlf	??_ADCconfig,f
  4619  0C55  0DF4               	rlf	??_ADCconfig,f
  4620  0C56  081F               	movf	31,w	;volatile
  4621  0C57  0674               	xorwf	??_ADCconfig,w
  4622  0C58  39C3               	andlw	-61
  4623  0C59  0674               	xorwf	??_ADCconfig,w
  4624  0C5A  009F               	movwf	31	;volatile
  4625  0C5B                     l1960:
  4626                           
  4627                           ;ADC.c: 30:     ADCON0bits.GO = 0b0;
  4628  0C5B  109F               	bcf	31,1	;volatile
  4629  0C5C                     l1962:
  4630                           
  4631                           ;ADC.c: 31:     ADCON0bits.ADON = 0b1;
  4632  0C5C  141F               	bsf	31,0	;volatile
  4633  0C5D                     l1964:
  4634                           
  4635                           ;ADC.c: 32:     ADCON1bits.ADFM = just;
  4636  0C5D  0C73               	rrf	ADCconfig@just,w
  4637  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0C60  1C03               	skipc
  4640  0C61  139F               	bcf	31,7	;volatile
  4641  0C62  1803               	skipnc
  4642  0C63  179F               	bsf	31,7	;volatile
  4643  0C64                     l1966:
  4644                           
  4645                           ;ADC.c: 33:     ADCON1bits.VCFG1 = 0b0;
  4646  0C64  129F               	bcf	31,5	;volatile
  4647  0C65                     l1968:
  4648                           
  4649                           ;ADC.c: 34:     ADCON1bits.VCFG0 = 0b0;
  4650  0C65  121F               	bcf	31,4	;volatile
  4651  0C66                     l125:
  4652  0C66  0008               	return
  4653  0C67                     __end_of_ADCconfig:
  4654                           
  4655                           	psect	text20
  4656  0AA0                     __ptext20:	
  4657 ;; *************** function _LCDstring *****************
  4658 ;; Defined at:
  4659 ;;		line 75 in file "LCDD2.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  mensaje         1    wreg     PTR unsigned char 
  4662 ;;		 -> STR_5(17), 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  mensaje         1    6[COMMON] PTR unsigned char 
  4665 ;;		 -> STR_5(17), 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         0       0       0       0       0
  4676 ;;      Locals:         1       0       0       0       0
  4677 ;;      Temps:          1       0       0       0       0
  4678 ;;      Totals:         2       0       0       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		_dispCHAR
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _LCDstring
  4691  0AA0                     _LCDstring:
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _LCDstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4695                           ;LCDstring@mensaje stored from wreg
  4696  0AA0  00F6               	movwf	LCDstring@mensaje
  4697  0AA1                     l2356:
  4698                           
  4699                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4700  0AA1  2AB2               	goto	l2362
  4701  0AA2                     l2358:
  4702                           
  4703                           ;LCDD2.c: 77:         dispCHAR(*mensaje);
  4704  0AA2  0876               	movf	LCDstring@mensaje,w
  4705  0AA3  0084               	movwf	4
  4706  0AA4  120A  158A  2000  120A  158A  	fcall	stringdir
  4707  0AA9  120A  158A  2255  120A  158A  	fcall	_dispCHAR
  4708  0AAE                     l2360:
  4709                           
  4710                           ;LCDD2.c: 78:         mensaje ++;
  4711  0AAE  3001               	movlw	1
  4712  0AAF  00F5               	movwf	??_LCDstring
  4713  0AB0  0875               	movf	??_LCDstring,w
  4714  0AB1  07F6               	addwf	LCDstring@mensaje,f
  4715  0AB2                     l2362:
  4716                           
  4717                           ;LCDD2.c: 76:     while(*mensaje != 0x00){
  4718  0AB2  0876               	movf	LCDstring@mensaje,w
  4719  0AB3  0084               	movwf	4
  4720  0AB4  120A  158A  2000  120A  158A  	fcall	stringdir
  4721  0AB9  3A00               	xorlw	0
  4722  0ABA  1D03               	skipz
  4723  0ABB  2ABD               	goto	u2701
  4724  0ABC  2ABE               	goto	u2700
  4725  0ABD                     u2701:
  4726  0ABD  2AA2               	goto	l2358
  4727  0ABE                     u2700:
  4728  0ABE                     l220:
  4729  0ABE  0008               	return
  4730  0ABF                     __end_of_LCDstring:
  4731                           
  4732                           	psect	text21
  4733  0A55                     __ptext21:	
  4734 ;; *************** function _dispCHAR *****************
  4735 ;; Defined at:
  4736 ;;		line 40 in file "LCDD2.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  b               1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  b               1    4[COMMON] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         0       0       0       0       0
  4751 ;;      Locals:         1       0       0       0       0
  4752 ;;      Temps:          1       0       0       0       0
  4753 ;;      Totals:         2       0       0       0       0
  4754 ;;Total ram usage:        2 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;;		_LCDstring
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _dispCHAR
  4767  0A55                     _dispCHAR:
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _dispCHAR: [wreg]
  4771                           ;dispCHAR@b stored from wreg
  4772  0A55  00F4               	movwf	dispCHAR@b
  4773  0A56                     l1922:
  4774                           
  4775                           ;LCDD2.c: 42:     RC0 = 1;
  4776  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0A58  1407               	bsf	7,0	;volatile
  4779  0A59                     l1924:
  4780                           
  4781                           ;LCDD2.c: 43:     PORTD = b;
  4782  0A59  0874               	movf	dispCHAR@b,w
  4783  0A5A  0088               	movwf	8	;volatile
  4784  0A5B                     l1926:
  4785                           
  4786                           ;LCDD2.c: 44:     RC1 = 1;
  4787  0A5B  1487               	bsf	7,1	;volatile
  4788                           
  4789                           ;LCDD2.c: 45:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4790  0A5C  301A               	movlw	26
  4791  0A5D  00F3               	movwf	??_dispCHAR
  4792  0A5E                     u4107:
  4793  0A5E  0BF3               	decfsz	??_dispCHAR,f
  4794  0A5F  2A5E               	goto	u4107
  4795  0A60  0000               	nop
  4796  0A61                     l1928:
  4797                           
  4798                           ;LCDD2.c: 46:     RC1 = 0;
  4799  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0A63  1087               	bcf	7,1	;volatile
  4802  0A64                     l203:
  4803  0A64  0008               	return
  4804  0A65                     __end_of_dispCHAR:
  4805                           
  4806                           	psect	text22
  4807  0BE1                     __ptext22:	
  4808 ;; *************** function _CONVdec *****************
  4809 ;; Defined at:
  4810 ;;		line 52 in file "ADC.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  lectura         1    wreg     PTR unsigned char 
  4813 ;;		 -> pot2(1), pot1(1), 
  4814 ;;  equiv           1   36[BANK0 ] PTR float 
  4815 ;;		 -> val2(4), val1(4), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  lectura         1    7[COMMON] PTR unsigned char 
  4818 ;;		 -> pot2(1), pot1(1), 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4828 ;;      Params:         0       1       0       0       0
  4829 ;;      Locals:         1       0       0       0       0
  4830 ;;      Temps:          0       4       0       0       0
  4831 ;;      Totals:         1       5       0       0       0
  4832 ;;Total ram usage:        6 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    3
  4835 ;; This function calls:
  4836 ;;		___flmul
  4837 ;;		___xxtofl
  4838 ;; This function is called by:
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _CONVdec
  4845  0BE1                     _CONVdec:
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _CONVdec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4849                           ;CONVdec@lectura stored from wreg
  4850  0BE1  00F7               	movwf	CONVdec@lectura
  4851  0BE2                     l2998:
  4852                           
  4853                           ;ADC.c: 54:     *equiv = (float)(0.01961)*(*lectura);
  4854  0BE2  303C               	movlw	60
  4855  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0BE5  00AD               	movwf	___flmul@b+3
  4858  0BE6  30A0               	movlw	160
  4859  0BE7  00AC               	movwf	___flmul@b+2
  4860  0BE8  30A5               	movlw	165
  4861  0BE9  00AB               	movwf	___flmul@b+1
  4862  0BEA  3027               	movlw	39
  4863  0BEB  00AA               	movwf	___flmul@b
  4864  0BEC  0877               	movf	CONVdec@lectura,w
  4865  0BED  0084               	movwf	4
  4866  0BEE  1383               	bcf	3,7	;select IRP bank0
  4867  0BEF  0800               	movf	0,w
  4868  0BF0  00C5               	movwf	??_CONVdec
  4869  0BF1  01C6               	clrf	??_CONVdec+1
  4870  0BF2  01C7               	clrf	??_CONVdec+2
  4871  0BF3  01C8               	clrf	??_CONVdec+3
  4872  0BF4  0848               	movf	??_CONVdec+3,w
  4873  0BF5  00F6               	movwf	___xxtofl@val+3
  4874  0BF6  0847               	movf	??_CONVdec+2,w
  4875  0BF7  00F5               	movwf	___xxtofl@val+2
  4876  0BF8  0846               	movf	??_CONVdec+1,w
  4877  0BF9  00F4               	movwf	___xxtofl@val+1
  4878  0BFA  0845               	movf	??_CONVdec,w
  4879  0BFB  00F3               	movwf	___xxtofl@val
  4880  0BFC  3001               	movlw	1
  4881  0BFD  120A  158A  2744  120A  158A  	fcall	___xxtofl
  4882  0C02  0876               	movf	?___xxtofl+3,w
  4883  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4884  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0C05  00B1               	movwf	___flmul@a+3
  4886  0C06  0875               	movf	?___xxtofl+2,w
  4887  0C07  00B0               	movwf	___flmul@a+2
  4888  0C08  0874               	movf	?___xxtofl+1,w
  4889  0C09  00AF               	movwf	___flmul@a+1
  4890  0C0A  0873               	movf	?___xxtofl,w
  4891  0C0B  00AE               	movwf	___flmul@a
  4892  0C0C  120A  118A  2022  120A  158A  	fcall	___flmul
  4893  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0C13  0844               	movf	CONVdec@equiv,w
  4896  0C14  0084               	movwf	4
  4897  0C15  082A               	movf	?___flmul,w
  4898  0C16  1383               	bcf	3,7	;select IRP bank0
  4899  0C17  0080               	movwf	0
  4900  0C18  0A84               	incf	4,f
  4901  0C19  082B               	movf	?___flmul+1,w
  4902  0C1A  0080               	movwf	0
  4903  0C1B  0A84               	incf	4,f
  4904  0C1C  082C               	movf	?___flmul+2,w
  4905  0C1D  0080               	movwf	0
  4906  0C1E  0A84               	incf	4,f
  4907  0C1F  082D               	movf	?___flmul+3,w
  4908  0C20  0080               	movwf	0
  4909  0C21                     l131:
  4910  0C21  0008               	return
  4911  0C22                     __end_of_CONVdec:
  4912                           
  4913                           	psect	text23
  4914  0F44                     __ptext23:	
  4915 ;; *************** function ___xxtofl *****************
  4916 ;; Defined at:
  4917 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  sign            1    wreg     unsigned char 
  4920 ;;  val             4    3[COMMON] long 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  sign            1    4[BANK0 ] unsigned char 
  4923 ;;  arg             4    6[BANK0 ] unsigned long 
  4924 ;;  exp             1    5[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  4    3[COMMON] unsigned char 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         4       0       0       0       0
  4935 ;;      Locals:         0       6       0       0       0
  4936 ;;      Temps:          0       4       0       0       0
  4937 ;;      Totals:         4      10       0       0       0
  4938 ;;Total ram usage:       14 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_CONVdec
  4945 ;;		_sendfloat
  4946 ;;		_floTochar
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function ___xxtofl
  4952  0F44                     ___xxtofl:
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4956                           ;___xxtofl@sign stored from wreg
  4957  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0F46  00A4               	movwf	___xxtofl@sign
  4960  0F47                     l2954:
  4961  0F47  0824               	movf	___xxtofl@sign,w
  4962  0F48  1903               	btfsc	3,2
  4963  0F49  2F4B               	goto	u3911
  4964  0F4A  2F4C               	goto	u3910
  4965  0F4B                     u3911:
  4966  0F4B  2F60               	goto	l2960
  4967  0F4C                     u3910:
  4968  0F4C                     l2956:
  4969  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  4970  0F4D  2F4F               	goto	u3921
  4971  0F4E  2F50               	goto	u3920
  4972  0F4F                     u3921:
  4973  0F4F  2F60               	goto	l2960
  4974  0F50                     u3920:
  4975  0F50                     l2958:
  4976  0F50  0973               	comf	___xxtofl@val,w
  4977  0F51  00A6               	movwf	___xxtofl@arg
  4978  0F52  0974               	comf	___xxtofl@val+1,w
  4979  0F53  00A7               	movwf	___xxtofl@arg+1
  4980  0F54  0975               	comf	___xxtofl@val+2,w
  4981  0F55  00A8               	movwf	___xxtofl@arg+2
  4982  0F56  0976               	comf	___xxtofl@val+3,w
  4983  0F57  00A9               	movwf	___xxtofl@arg+3
  4984  0F58  0AA6               	incf	___xxtofl@arg,f
  4985  0F59  1903               	skipnz
  4986  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  4987  0F5B  1903               	skipnz
  4988  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  4989  0F5D  1903               	skipnz
  4990  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  4991  0F5F  2F68               	goto	l739
  4992  0F60                     l2960:
  4993  0F60  0876               	movf	___xxtofl@val+3,w
  4994  0F61  00A9               	movwf	___xxtofl@arg+3
  4995  0F62  0875               	movf	___xxtofl@val+2,w
  4996  0F63  00A8               	movwf	___xxtofl@arg+2
  4997  0F64  0874               	movf	___xxtofl@val+1,w
  4998  0F65  00A7               	movwf	___xxtofl@arg+1
  4999  0F66  0873               	movf	___xxtofl@val,w
  5000  0F67  00A6               	movwf	___xxtofl@arg
  5001  0F68                     l739:
  5002  0F68  0876               	movf	___xxtofl@val+3,w
  5003  0F69  0475               	iorwf	___xxtofl@val+2,w
  5004  0F6A  0474               	iorwf	___xxtofl@val+1,w
  5005  0F6B  0473               	iorwf	___xxtofl@val,w
  5006  0F6C  1D03               	skipz
  5007  0F6D  2F6F               	goto	u3931
  5008  0F6E  2F70               	goto	u3930
  5009  0F6F                     u3931:
  5010  0F6F  2F79               	goto	l2966
  5011  0F70                     u3930:
  5012  0F70                     l2962:
  5013  0F70  3000               	movlw	0
  5014  0F71  00F6               	movwf	?___xxtofl+3
  5015  0F72  3000               	movlw	0
  5016  0F73  00F5               	movwf	?___xxtofl+2
  5017  0F74  3000               	movlw	0
  5018  0F75  00F4               	movwf	?___xxtofl+1
  5019  0F76  3000               	movlw	0
  5020  0F77  00F3               	movwf	?___xxtofl
  5021  0F78  2FFF               	goto	l741
  5022  0F79                     l2966:
  5023  0F79  3096               	movlw	150
  5024  0F7A  00A0               	movwf	??___xxtofl
  5025  0F7B  0820               	movf	??___xxtofl,w
  5026  0F7C  00A5               	movwf	___xxtofl@exp
  5027  0F7D  2F8B               	goto	l2970
  5028  0F7E                     l2968:
  5029  0F7E  3001               	movlw	1
  5030  0F7F  00A0               	movwf	??___xxtofl
  5031  0F80  0820               	movf	??___xxtofl,w
  5032  0F81  07A5               	addwf	___xxtofl@exp,f
  5033  0F82  3001               	movlw	1
  5034  0F83                     u3945:
  5035  0F83  1003               	clrc
  5036  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  5037  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  5038  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  5039  0F87  0CA6               	rrf	___xxtofl@arg,f
  5040  0F88  3EFF               	addlw	-1
  5041  0F89  1D03               	skipz
  5042  0F8A  2F83               	goto	u3945
  5043  0F8B                     l2970:
  5044  0F8B  30FE               	movlw	254
  5045  0F8C  0529               	andwf	___xxtofl@arg+3,w
  5046  0F8D  1D03               	btfss	3,2
  5047  0F8E  2F90               	goto	u3951
  5048  0F8F  2F91               	goto	u3950
  5049  0F90                     u3951:
  5050  0F90  2F7E               	goto	l2968
  5051  0F91                     u3950:
  5052  0F91  2FAD               	goto	l745
  5053  0F92                     l2972:
  5054  0F92  3001               	movlw	1
  5055  0F93  00A0               	movwf	??___xxtofl
  5056  0F94  0820               	movf	??___xxtofl,w
  5057  0F95  07A5               	addwf	___xxtofl@exp,f
  5058  0F96                     l2974:
  5059  0F96  3001               	movlw	1
  5060  0F97  07A6               	addwf	___xxtofl@arg,f
  5061  0F98  3000               	movlw	0
  5062  0F99  1803               	skipnc
  5063  0F9A  3001               	movlw	1
  5064  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  5065  0F9C  3000               	movlw	0
  5066  0F9D  1803               	skipnc
  5067  0F9E  3001               	movlw	1
  5068  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  5069  0FA0  3000               	movlw	0
  5070  0FA1  1803               	skipnc
  5071  0FA2  3001               	movlw	1
  5072  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  5073  0FA4                     l2976:
  5074  0FA4  3001               	movlw	1
  5075  0FA5                     u3965:
  5076  0FA5  1003               	clrc
  5077  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  5078  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  5079  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  5080  0FA9  0CA6               	rrf	___xxtofl@arg,f
  5081  0FAA  3EFF               	addlw	-1
  5082  0FAB  1D03               	skipz
  5083  0FAC  2FA5               	goto	u3965
  5084  0FAD                     l745:
  5085  0FAD  30FF               	movlw	255
  5086  0FAE  0529               	andwf	___xxtofl@arg+3,w
  5087  0FAF  1D03               	btfss	3,2
  5088  0FB0  2FB2               	goto	u3971
  5089  0FB1  2FB3               	goto	u3970
  5090  0FB2                     u3971:
  5091  0FB2  2F92               	goto	l2972
  5092  0FB3                     u3970:
  5093  0FB3  2FBF               	goto	l2980
  5094  0FB4                     l2978:
  5095  0FB4  3001               	movlw	1
  5096  0FB5  02A5               	subwf	___xxtofl@exp,f
  5097  0FB6  3001               	movlw	1
  5098  0FB7  00A0               	movwf	??___xxtofl
  5099  0FB8                     u3985:
  5100  0FB8  1003               	clrc
  5101  0FB9  0DA6               	rlf	___xxtofl@arg,f
  5102  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  5103  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  5104  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  5105  0FBD  0BA0               	decfsz	??___xxtofl,f
  5106  0FBE  2FB8               	goto	u3985
  5107  0FBF                     l2980:
  5108  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  5109  0FC0  2FC2               	goto	u3991
  5110  0FC1  2FC3               	goto	u3990
  5111  0FC2                     u3991:
  5112  0FC2  2FC9               	goto	l752
  5113  0FC3                     u3990:
  5114  0FC3                     l2982:
  5115  0FC3  3002               	movlw	2
  5116  0FC4  0225               	subwf	___xxtofl@exp,w
  5117  0FC5  1803               	skipnc
  5118  0FC6  2FC8               	goto	u4001
  5119  0FC7  2FC9               	goto	u4000
  5120  0FC8                     u4001:
  5121  0FC8  2FB4               	goto	l2978
  5122  0FC9                     u4000:
  5123  0FC9                     l752:
  5124  0FC9  1825               	btfsc	___xxtofl@exp,0
  5125  0FCA  2FCC               	goto	u4011
  5126  0FCB  2FCD               	goto	u4010
  5127  0FCC                     u4011:
  5128  0FCC  2FD5               	goto	l753
  5129  0FCD                     u4010:
  5130  0FCD                     l2984:
  5131  0FCD  30FF               	movlw	255
  5132  0FCE  05A6               	andwf	___xxtofl@arg,f
  5133  0FCF  30FF               	movlw	255
  5134  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  5135  0FD1  307F               	movlw	127
  5136  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  5137  0FD3  30FF               	movlw	255
  5138  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  5139  0FD5                     l753:
  5140  0FD5  1003               	clrc
  5141  0FD6  0CA5               	rrf	___xxtofl@exp,f
  5142  0FD7                     l2986:
  5143  0FD7  0825               	movf	___xxtofl@exp,w
  5144  0FD8  00A0               	movwf	??___xxtofl
  5145  0FD9  01A1               	clrf	??___xxtofl+1
  5146  0FDA  01A2               	clrf	??___xxtofl+2
  5147  0FDB  01A3               	clrf	??___xxtofl+3
  5148  0FDC  3018               	movlw	24
  5149  0FDD                     u4025:
  5150  0FDD  1003               	clrc
  5151  0FDE  0DA0               	rlf	??___xxtofl,f
  5152  0FDF  0DA1               	rlf	??___xxtofl+1,f
  5153  0FE0  0DA2               	rlf	??___xxtofl+2,f
  5154  0FE1  0DA3               	rlf	??___xxtofl+3,f
  5155  0FE2                     u4020:
  5156  0FE2  3EFF               	addlw	-1
  5157  0FE3  1D03               	skipz
  5158  0FE4  2FDD               	goto	u4025
  5159  0FE5  0820               	movf	??___xxtofl,w
  5160  0FE6  04A6               	iorwf	___xxtofl@arg,f
  5161  0FE7  0821               	movf	??___xxtofl+1,w
  5162  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  5163  0FE9  0822               	movf	??___xxtofl+2,w
  5164  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  5165  0FEB  0823               	movf	??___xxtofl+3,w
  5166  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  5167  0FED                     l2988:
  5168  0FED  0824               	movf	___xxtofl@sign,w
  5169  0FEE  1903               	btfsc	3,2
  5170  0FEF  2FF1               	goto	u4031
  5171  0FF0  2FF2               	goto	u4030
  5172  0FF1                     u4031:
  5173  0FF1  2FF7               	goto	l2994
  5174  0FF2                     u4030:
  5175  0FF2                     l2990:
  5176  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  5177  0FF3  2FF5               	goto	u4041
  5178  0FF4  2FF6               	goto	u4040
  5179  0FF5                     u4041:
  5180  0FF5  2FF7               	goto	l2994
  5181  0FF6                     u4040:
  5182  0FF6                     l2992:
  5183  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  5184  0FF7                     l2994:
  5185  0FF7  0829               	movf	___xxtofl@arg+3,w
  5186  0FF8  00F6               	movwf	?___xxtofl+3
  5187  0FF9  0828               	movf	___xxtofl@arg+2,w
  5188  0FFA  00F5               	movwf	?___xxtofl+2
  5189  0FFB  0827               	movf	___xxtofl@arg+1,w
  5190  0FFC  00F4               	movwf	?___xxtofl+1
  5191  0FFD  0826               	movf	___xxtofl@arg,w
  5192  0FFE  00F3               	movwf	?___xxtofl
  5193  0FFF                     l741:
  5194  0FFF  0008               	return
  5195  1000                     __end_of___xxtofl:
  5196                           
  5197                           	psect	text24
  5198  0022                     __ptext24:	
  5199 ;; *************** function ___flmul *****************
  5200 ;; Defined at:
  5201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  b               4   10[BANK0 ] unsigned char 
  5204 ;;  a               4   14[BANK0 ] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  prod            4   30[BANK0 ] struct .
  5207 ;;  grs             4   25[BANK0 ] unsigned long 
  5208 ;;  temp            2   34[BANK0 ] struct .
  5209 ;;  bexp            1   29[BANK0 ] unsigned char 
  5210 ;;  aexp            1   24[BANK0 ] unsigned char 
  5211 ;;  sign            1   23[BANK0 ] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  4   10[BANK0 ] unsigned char 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5221 ;;      Params:         0       8       0       0       0
  5222 ;;      Locals:         0      13       0       0       0
  5223 ;;      Temps:          0       5       0       0       0
  5224 ;;      Totals:         0      26       0       0       0
  5225 ;;Total ram usage:       26 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    2
  5228 ;; This function calls:
  5229 ;;		__Umul8_16
  5230 ;; This function is called by:
  5231 ;;		_CONVdec
  5232 ;;		_sendfloat
  5233 ;;		_floTochar
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function ___flmul
  5239  0022                     ___flmul:
  5240  0022                     l2814:	
  5241                           ;incstack = 0
  5242                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5243                           
  5244  0022  1283               	bcf	3,5	;RP0=0, select bank0
  5245  0023  1303               	bcf	3,6	;RP1=0, select bank0
  5246  0024  082D               	movf	___flmul@b+3,w
  5247  0025  3980               	andlw	128
  5248  0026  00B2               	movwf	??___flmul
  5249  0027  0832               	movf	??___flmul,w
  5250  0028  00B7               	movwf	___flmul@sign
  5251  0029                     l2816:
  5252  0029  082D               	movf	___flmul@b+3,w
  5253  002A  00B2               	movwf	??___flmul
  5254  002B  0732               	addwf	??___flmul,w
  5255  002C  00B3               	movwf	??___flmul+1
  5256  002D  0833               	movf	??___flmul+1,w
  5257  002E  00BD               	movwf	___flmul@bexp
  5258  002F                     l2818:
  5259  002F  1FAC               	btfss	___flmul@b+2,7
  5260  0030  2832               	goto	u3541
  5261  0031  2833               	goto	u3540
  5262  0032                     u3541:
  5263  0032  2834               	goto	l2822
  5264  0033                     u3540:
  5265  0033                     l2820:
  5266  0033  143D               	bsf	___flmul@bexp,0
  5267  0034                     l2822:
  5268  0034  083D               	movf	___flmul@bexp,w
  5269  0035  1903               	btfsc	3,2
  5270  0036  2838               	goto	u3551
  5271  0037  2839               	goto	u3550
  5272  0038                     u3551:
  5273  0038  2848               	goto	l2830
  5274  0039                     u3550:
  5275  0039                     l2824:
  5276  0039  0A3D               	incf	___flmul@bexp,w
  5277  003A  1D03               	btfss	3,2
  5278  003B  283D               	goto	u3561
  5279  003C  283E               	goto	u3560
  5280  003D                     u3561:
  5281  003D  2846               	goto	l2828
  5282  003E                     u3560:
  5283  003E                     l2826:
  5284  003E  3000               	movlw	0
  5285  003F  00AD               	movwf	___flmul@b+3
  5286  0040  3000               	movlw	0
  5287  0041  00AC               	movwf	___flmul@b+2
  5288  0042  3000               	movlw	0
  5289  0043  00AB               	movwf	___flmul@b+1
  5290  0044  3000               	movlw	0
  5291  0045  00AA               	movwf	___flmul@b
  5292  0046                     l2828:
  5293  0046  17AC               	bsf	___flmul@b+2,7
  5294  0047  2850               	goto	l2832
  5295  0048                     l2830:
  5296  0048  3000               	movlw	0
  5297  0049  00AD               	movwf	___flmul@b+3
  5298  004A  3000               	movlw	0
  5299  004B  00AC               	movwf	___flmul@b+2
  5300  004C  3000               	movlw	0
  5301  004D  00AB               	movwf	___flmul@b+1
  5302  004E  3000               	movlw	0
  5303  004F  00AA               	movwf	___flmul@b
  5304  0050                     l2832:
  5305  0050  0831               	movf	___flmul@a+3,w
  5306  0051  3980               	andlw	128
  5307  0052  00B2               	movwf	??___flmul
  5308  0053  0832               	movf	??___flmul,w
  5309  0054  06B7               	xorwf	___flmul@sign,f
  5310  0055                     l2834:
  5311  0055  0831               	movf	___flmul@a+3,w
  5312  0056  00B2               	movwf	??___flmul
  5313  0057  0732               	addwf	??___flmul,w
  5314  0058  00B3               	movwf	??___flmul+1
  5315  0059  0833               	movf	??___flmul+1,w
  5316  005A  00B8               	movwf	___flmul@aexp
  5317  005B                     l2836:
  5318  005B  1FB0               	btfss	___flmul@a+2,7
  5319  005C  285E               	goto	u3571
  5320  005D  285F               	goto	u3570
  5321  005E                     u3571:
  5322  005E  2860               	goto	l2840
  5323  005F                     u3570:
  5324  005F                     l2838:
  5325  005F  1438               	bsf	___flmul@aexp,0
  5326  0060                     l2840:
  5327  0060  0838               	movf	___flmul@aexp,w
  5328  0061  1903               	btfsc	3,2
  5329  0062  2864               	goto	u3581
  5330  0063  2865               	goto	u3580
  5331  0064                     u3581:
  5332  0064  2874               	goto	l2848
  5333  0065                     u3580:
  5334  0065                     l2842:
  5335  0065  0A38               	incf	___flmul@aexp,w
  5336  0066  1D03               	btfss	3,2
  5337  0067  2869               	goto	u3591
  5338  0068  286A               	goto	u3590
  5339  0069                     u3591:
  5340  0069  2872               	goto	l2846
  5341  006A                     u3590:
  5342  006A                     l2844:
  5343  006A  3000               	movlw	0
  5344  006B  00B1               	movwf	___flmul@a+3
  5345  006C  3000               	movlw	0
  5346  006D  00B0               	movwf	___flmul@a+2
  5347  006E  3000               	movlw	0
  5348  006F  00AF               	movwf	___flmul@a+1
  5349  0070  3000               	movlw	0
  5350  0071  00AE               	movwf	___flmul@a
  5351  0072                     l2846:
  5352  0072  17B0               	bsf	___flmul@a+2,7
  5353  0073  287C               	goto	l2850
  5354  0074                     l2848:
  5355  0074  3000               	movlw	0
  5356  0075  00B1               	movwf	___flmul@a+3
  5357  0076  3000               	movlw	0
  5358  0077  00B0               	movwf	___flmul@a+2
  5359  0078  3000               	movlw	0
  5360  0079  00AF               	movwf	___flmul@a+1
  5361  007A  3000               	movlw	0
  5362  007B  00AE               	movwf	___flmul@a
  5363  007C                     l2850:
  5364  007C  0838               	movf	___flmul@aexp,w
  5365  007D  1903               	btfsc	3,2
  5366  007E  2880               	goto	u3601
  5367  007F  2881               	goto	u3600
  5368  0080                     u3601:
  5369  0080  2886               	goto	l2854
  5370  0081                     u3600:
  5371  0081                     l2852:
  5372  0081  083D               	movf	___flmul@bexp,w
  5373  0082  1D03               	btfss	3,2
  5374  0083  2885               	goto	u3611
  5375  0084  2886               	goto	u3610
  5376  0085                     u3611:
  5377  0085  288F               	goto	l2858
  5378  0086                     u3610:
  5379  0086                     l2854:
  5380  0086  3000               	movlw	0
  5381  0087  00AD               	movwf	?___flmul+3
  5382  0088  3000               	movlw	0
  5383  0089  00AC               	movwf	?___flmul+2
  5384  008A  3000               	movlw	0
  5385  008B  00AB               	movwf	?___flmul+1
  5386  008C  3000               	movlw	0
  5387  008D  00AA               	movwf	?___flmul
  5388  008E  2B82               	goto	l695
  5389  008F                     l2858:
  5390  008F  082A               	movf	___flmul@b,w
  5391  0090  00B2               	movwf	??___flmul
  5392  0091  0832               	movf	??___flmul,w
  5393  0092  00F3               	movwf	__Umul8_16@multiplicand
  5394  0093  0830               	movf	___flmul@a+2,w
  5395  0094  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5396  0099  0874               	movf	?__Umul8_16+1,w
  5397  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5398  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5399  009C  00C3               	movwf	___flmul@temp+1
  5400  009D  0873               	movf	?__Umul8_16,w
  5401  009E  00C2               	movwf	___flmul@temp
  5402  009F                     l2860:
  5403  009F  0842               	movf	___flmul@temp,w
  5404  00A0  00B2               	movwf	??___flmul
  5405  00A1  01B3               	clrf	??___flmul+1
  5406  00A2  01B4               	clrf	??___flmul+2
  5407  00A3  01B5               	clrf	??___flmul+3
  5408  00A4  0835               	movf	??___flmul+3,w
  5409  00A5  00BC               	movwf	___flmul@grs+3
  5410  00A6  0834               	movf	??___flmul+2,w
  5411  00A7  00BB               	movwf	___flmul@grs+2
  5412  00A8  0833               	movf	??___flmul+1,w
  5413  00A9  00BA               	movwf	___flmul@grs+1
  5414  00AA  0832               	movf	??___flmul,w
  5415  00AB  00B9               	movwf	___flmul@grs
  5416  00AC                     l2862:
  5417  00AC  0843               	movf	___flmul@temp+1,w
  5418  00AD  00B2               	movwf	??___flmul
  5419  00AE  01B3               	clrf	??___flmul+1
  5420  00AF  01B4               	clrf	??___flmul+2
  5421  00B0  01B5               	clrf	??___flmul+3
  5422  00B1  0835               	movf	??___flmul+3,w
  5423  00B2  00C1               	movwf	___flmul@prod+3
  5424  00B3  0834               	movf	??___flmul+2,w
  5425  00B4  00C0               	movwf	___flmul@prod+2
  5426  00B5  0833               	movf	??___flmul+1,w
  5427  00B6  00BF               	movwf	___flmul@prod+1
  5428  00B7  0832               	movf	??___flmul,w
  5429  00B8  00BE               	movwf	___flmul@prod
  5430  00B9  082B               	movf	___flmul@b+1,w
  5431  00BA  00B2               	movwf	??___flmul
  5432  00BB  0832               	movf	??___flmul,w
  5433  00BC  00F3               	movwf	__Umul8_16@multiplicand
  5434  00BD  082F               	movf	___flmul@a+1,w
  5435  00BE  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5436  00C3  0874               	movf	?__Umul8_16+1,w
  5437  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5438  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5439  00C6  00C3               	movwf	___flmul@temp+1
  5440  00C7  0873               	movf	?__Umul8_16,w
  5441  00C8  00C2               	movwf	___flmul@temp
  5442  00C9                     l2864:
  5443  00C9  0842               	movf	___flmul@temp,w
  5444  00CA  00B2               	movwf	??___flmul
  5445  00CB  01B3               	clrf	??___flmul+1
  5446  00CC  01B4               	clrf	??___flmul+2
  5447  00CD  01B5               	clrf	??___flmul+3
  5448  00CE  0832               	movf	??___flmul,w
  5449  00CF  07B9               	addwf	___flmul@grs,f
  5450  00D0  0833               	movf	??___flmul+1,w
  5451  00D1  1103               	clrz
  5452  00D2  1803               	skipnc
  5453  00D3  3E01               	addlw	1
  5454  00D4  1903               	skipnz
  5455  00D5  28D7               	goto	u3621
  5456  00D6  07BA               	addwf	___flmul@grs+1,f
  5457  00D7                     u3621:
  5458  00D7  0834               	movf	??___flmul+2,w
  5459  00D8  1103               	clrz
  5460  00D9  1803               	skipnc
  5461  00DA  3E01               	addlw	1
  5462  00DB  1903               	skipnz
  5463  00DC  28DE               	goto	u3622
  5464  00DD  07BB               	addwf	___flmul@grs+2,f
  5465  00DE                     u3622:
  5466  00DE  0835               	movf	??___flmul+3,w
  5467  00DF  1103               	clrz
  5468  00E0  1803               	skipnc
  5469  00E1  3E01               	addlw	1
  5470  00E2  1903               	skipnz
  5471  00E3  28E5               	goto	u3623
  5472  00E4  07BC               	addwf	___flmul@grs+3,f
  5473  00E5                     u3623:
  5474  00E5                     l2866:
  5475  00E5  0843               	movf	___flmul@temp+1,w
  5476  00E6  00B2               	movwf	??___flmul
  5477  00E7  01B3               	clrf	??___flmul+1
  5478  00E8  01B4               	clrf	??___flmul+2
  5479  00E9  01B5               	clrf	??___flmul+3
  5480  00EA  0832               	movf	??___flmul,w
  5481  00EB  07BE               	addwf	___flmul@prod,f
  5482  00EC  0833               	movf	??___flmul+1,w
  5483  00ED  1103               	clrz
  5484  00EE  1803               	skipnc
  5485  00EF  3E01               	addlw	1
  5486  00F0  1903               	skipnz
  5487  00F1  28F3               	goto	u3631
  5488  00F2  07BF               	addwf	___flmul@prod+1,f
  5489  00F3                     u3631:
  5490  00F3  0834               	movf	??___flmul+2,w
  5491  00F4  1103               	clrz
  5492  00F5  1803               	skipnc
  5493  00F6  3E01               	addlw	1
  5494  00F7  1903               	skipnz
  5495  00F8  28FA               	goto	u3632
  5496  00F9  07C0               	addwf	___flmul@prod+2,f
  5497  00FA                     u3632:
  5498  00FA  0835               	movf	??___flmul+3,w
  5499  00FB  1103               	clrz
  5500  00FC  1803               	skipnc
  5501  00FD  3E01               	addlw	1
  5502  00FE  1903               	skipnz
  5503  00FF  2901               	goto	u3633
  5504  0100  07C1               	addwf	___flmul@prod+3,f
  5505  0101                     u3633:
  5506  0101  082C               	movf	___flmul@b+2,w
  5507  0102  00B2               	movwf	??___flmul
  5508  0103  0832               	movf	??___flmul,w
  5509  0104  00F3               	movwf	__Umul8_16@multiplicand
  5510  0105  082E               	movf	___flmul@a,w
  5511  0106  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5512  010B  0874               	movf	?__Umul8_16+1,w
  5513  010C  1283               	bcf	3,5	;RP0=0, select bank0
  5514  010D  1303               	bcf	3,6	;RP1=0, select bank0
  5515  010E  00C3               	movwf	___flmul@temp+1
  5516  010F  0873               	movf	?__Umul8_16,w
  5517  0110  00C2               	movwf	___flmul@temp
  5518  0111                     l2868:
  5519  0111  0842               	movf	___flmul@temp,w
  5520  0112  00B2               	movwf	??___flmul
  5521  0113  01B3               	clrf	??___flmul+1
  5522  0114  01B4               	clrf	??___flmul+2
  5523  0115  01B5               	clrf	??___flmul+3
  5524  0116  0832               	movf	??___flmul,w
  5525  0117  07B9               	addwf	___flmul@grs,f
  5526  0118  0833               	movf	??___flmul+1,w
  5527  0119  1103               	clrz
  5528  011A  1803               	skipnc
  5529  011B  3E01               	addlw	1
  5530  011C  1903               	skipnz
  5531  011D  291F               	goto	u3641
  5532  011E  07BA               	addwf	___flmul@grs+1,f
  5533  011F                     u3641:
  5534  011F  0834               	movf	??___flmul+2,w
  5535  0120  1103               	clrz
  5536  0121  1803               	skipnc
  5537  0122  3E01               	addlw	1
  5538  0123  1903               	skipnz
  5539  0124  2926               	goto	u3642
  5540  0125  07BB               	addwf	___flmul@grs+2,f
  5541  0126                     u3642:
  5542  0126  0835               	movf	??___flmul+3,w
  5543  0127  1103               	clrz
  5544  0128  1803               	skipnc
  5545  0129  3E01               	addlw	1
  5546  012A  1903               	skipnz
  5547  012B  292D               	goto	u3643
  5548  012C  07BC               	addwf	___flmul@grs+3,f
  5549  012D                     u3643:
  5550  012D                     l2870:
  5551  012D  0843               	movf	___flmul@temp+1,w
  5552  012E  00B2               	movwf	??___flmul
  5553  012F  01B3               	clrf	??___flmul+1
  5554  0130  01B4               	clrf	??___flmul+2
  5555  0131  01B5               	clrf	??___flmul+3
  5556  0132  0832               	movf	??___flmul,w
  5557  0133  07BE               	addwf	___flmul@prod,f
  5558  0134  0833               	movf	??___flmul+1,w
  5559  0135  1103               	clrz
  5560  0136  1803               	skipnc
  5561  0137  3E01               	addlw	1
  5562  0138  1903               	skipnz
  5563  0139  293B               	goto	u3651
  5564  013A  07BF               	addwf	___flmul@prod+1,f
  5565  013B                     u3651:
  5566  013B  0834               	movf	??___flmul+2,w
  5567  013C  1103               	clrz
  5568  013D  1803               	skipnc
  5569  013E  3E01               	addlw	1
  5570  013F  1903               	skipnz
  5571  0140  2942               	goto	u3652
  5572  0141  07C0               	addwf	___flmul@prod+2,f
  5573  0142                     u3652:
  5574  0142  0835               	movf	??___flmul+3,w
  5575  0143  1103               	clrz
  5576  0144  1803               	skipnc
  5577  0145  3E01               	addlw	1
  5578  0146  1903               	skipnz
  5579  0147  2949               	goto	u3653
  5580  0148  07C1               	addwf	___flmul@prod+3,f
  5581  0149                     u3653:
  5582  0149                     l2872:
  5583  0149  3008               	movlw	8
  5584  014A  00B2               	movwf	??___flmul
  5585  014B                     u3665:
  5586  014B  1003               	clrc
  5587  014C  0DB9               	rlf	___flmul@grs,f
  5588  014D  0DBA               	rlf	___flmul@grs+1,f
  5589  014E  0DBB               	rlf	___flmul@grs+2,f
  5590  014F  0DBC               	rlf	___flmul@grs+3,f
  5591  0150  0BB2               	decfsz	??___flmul,f
  5592  0151  294B               	goto	u3665
  5593  0152                     l2874:
  5594  0152  082B               	movf	___flmul@b+1,w
  5595  0153  00B2               	movwf	??___flmul
  5596  0154  0832               	movf	??___flmul,w
  5597  0155  00F3               	movwf	__Umul8_16@multiplicand
  5598  0156  082E               	movf	___flmul@a,w
  5599  0157  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5600  015C  0874               	movf	?__Umul8_16+1,w
  5601  015D  1283               	bcf	3,5	;RP0=0, select bank0
  5602  015E  1303               	bcf	3,6	;RP1=0, select bank0
  5603  015F  00C3               	movwf	___flmul@temp+1
  5604  0160  0873               	movf	?__Umul8_16,w
  5605  0161  00C2               	movwf	___flmul@temp
  5606  0162                     l2876:
  5607  0162  0842               	movf	___flmul@temp,w
  5608  0163  00B2               	movwf	??___flmul
  5609  0164  0843               	movf	___flmul@temp+1,w
  5610  0165  00B3               	movwf	??___flmul+1
  5611  0166  01B4               	clrf	??___flmul+2
  5612  0167  01B5               	clrf	??___flmul+3
  5613  0168  0832               	movf	??___flmul,w
  5614  0169  07B9               	addwf	___flmul@grs,f
  5615  016A  0833               	movf	??___flmul+1,w
  5616  016B  1103               	clrz
  5617  016C  1803               	skipnc
  5618  016D  3E01               	addlw	1
  5619  016E  1903               	skipnz
  5620  016F  2971               	goto	u3671
  5621  0170  07BA               	addwf	___flmul@grs+1,f
  5622  0171                     u3671:
  5623  0171  0834               	movf	??___flmul+2,w
  5624  0172  1103               	clrz
  5625  0173  1803               	skipnc
  5626  0174  3E01               	addlw	1
  5627  0175  1903               	skipnz
  5628  0176  2978               	goto	u3672
  5629  0177  07BB               	addwf	___flmul@grs+2,f
  5630  0178                     u3672:
  5631  0178  0835               	movf	??___flmul+3,w
  5632  0179  1103               	clrz
  5633  017A  1803               	skipnc
  5634  017B  3E01               	addlw	1
  5635  017C  1903               	skipnz
  5636  017D  297F               	goto	u3673
  5637  017E  07BC               	addwf	___flmul@grs+3,f
  5638  017F                     u3673:
  5639  017F                     l2878:
  5640  017F  082A               	movf	___flmul@b,w
  5641  0180  00B2               	movwf	??___flmul
  5642  0181  0832               	movf	??___flmul,w
  5643  0182  00F3               	movwf	__Umul8_16@multiplicand
  5644  0183  082F               	movf	___flmul@a+1,w
  5645  0184  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5646  0189  0874               	movf	?__Umul8_16+1,w
  5647  018A  1283               	bcf	3,5	;RP0=0, select bank0
  5648  018B  1303               	bcf	3,6	;RP1=0, select bank0
  5649  018C  00C3               	movwf	___flmul@temp+1
  5650  018D  0873               	movf	?__Umul8_16,w
  5651  018E  00C2               	movwf	___flmul@temp
  5652  018F                     l2880:
  5653  018F  0842               	movf	___flmul@temp,w
  5654  0190  00B2               	movwf	??___flmul
  5655  0191  0843               	movf	___flmul@temp+1,w
  5656  0192  00B3               	movwf	??___flmul+1
  5657  0193  01B4               	clrf	??___flmul+2
  5658  0194  01B5               	clrf	??___flmul+3
  5659  0195  0832               	movf	??___flmul,w
  5660  0196  07B9               	addwf	___flmul@grs,f
  5661  0197  0833               	movf	??___flmul+1,w
  5662  0198  1103               	clrz
  5663  0199  1803               	skipnc
  5664  019A  3E01               	addlw	1
  5665  019B  1903               	skipnz
  5666  019C  299E               	goto	u3681
  5667  019D  07BA               	addwf	___flmul@grs+1,f
  5668  019E                     u3681:
  5669  019E  0834               	movf	??___flmul+2,w
  5670  019F  1103               	clrz
  5671  01A0  1803               	skipnc
  5672  01A1  3E01               	addlw	1
  5673  01A2  1903               	skipnz
  5674  01A3  29A5               	goto	u3682
  5675  01A4  07BB               	addwf	___flmul@grs+2,f
  5676  01A5                     u3682:
  5677  01A5  0835               	movf	??___flmul+3,w
  5678  01A6  1103               	clrz
  5679  01A7  1803               	skipnc
  5680  01A8  3E01               	addlw	1
  5681  01A9  1903               	skipnz
  5682  01AA  29AC               	goto	u3683
  5683  01AB  07BC               	addwf	___flmul@grs+3,f
  5684  01AC                     u3683:
  5685  01AC                     l2882:
  5686  01AC  3008               	movlw	8
  5687  01AD  00B2               	movwf	??___flmul
  5688  01AE                     u3695:
  5689  01AE  1003               	clrc
  5690  01AF  0DB9               	rlf	___flmul@grs,f
  5691  01B0  0DBA               	rlf	___flmul@grs+1,f
  5692  01B1  0DBB               	rlf	___flmul@grs+2,f
  5693  01B2  0DBC               	rlf	___flmul@grs+3,f
  5694  01B3  0BB2               	decfsz	??___flmul,f
  5695  01B4  29AE               	goto	u3695
  5696  01B5  082A               	movf	___flmul@b,w
  5697  01B6  00B2               	movwf	??___flmul
  5698  01B7  0832               	movf	??___flmul,w
  5699  01B8  00F3               	movwf	__Umul8_16@multiplicand
  5700  01B9  082E               	movf	___flmul@a,w
  5701  01BA  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5702  01BF  0874               	movf	?__Umul8_16+1,w
  5703  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5704  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5705  01C2  00C3               	movwf	___flmul@temp+1
  5706  01C3  0873               	movf	?__Umul8_16,w
  5707  01C4  00C2               	movwf	___flmul@temp
  5708  01C5                     l2884:
  5709  01C5  0842               	movf	___flmul@temp,w
  5710  01C6  00B2               	movwf	??___flmul
  5711  01C7  0843               	movf	___flmul@temp+1,w
  5712  01C8  00B3               	movwf	??___flmul+1
  5713  01C9  01B4               	clrf	??___flmul+2
  5714  01CA  01B5               	clrf	??___flmul+3
  5715  01CB  0832               	movf	??___flmul,w
  5716  01CC  07B9               	addwf	___flmul@grs,f
  5717  01CD  0833               	movf	??___flmul+1,w
  5718  01CE  1103               	clrz
  5719  01CF  1803               	skipnc
  5720  01D0  3E01               	addlw	1
  5721  01D1  1903               	skipnz
  5722  01D2  29D4               	goto	u3701
  5723  01D3  07BA               	addwf	___flmul@grs+1,f
  5724  01D4                     u3701:
  5725  01D4  0834               	movf	??___flmul+2,w
  5726  01D5  1103               	clrz
  5727  01D6  1803               	skipnc
  5728  01D7  3E01               	addlw	1
  5729  01D8  1903               	skipnz
  5730  01D9  29DB               	goto	u3702
  5731  01DA  07BB               	addwf	___flmul@grs+2,f
  5732  01DB                     u3702:
  5733  01DB  0835               	movf	??___flmul+3,w
  5734  01DC  1103               	clrz
  5735  01DD  1803               	skipnc
  5736  01DE  3E01               	addlw	1
  5737  01DF  1903               	skipnz
  5738  01E0  29E2               	goto	u3703
  5739  01E1  07BC               	addwf	___flmul@grs+3,f
  5740  01E2                     u3703:
  5741  01E2                     l2886:
  5742  01E2  082B               	movf	___flmul@b+1,w
  5743  01E3  00B2               	movwf	??___flmul
  5744  01E4  0832               	movf	??___flmul,w
  5745  01E5  00F3               	movwf	__Umul8_16@multiplicand
  5746  01E6  0830               	movf	___flmul@a+2,w
  5747  01E7  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5748  01EC  0874               	movf	?__Umul8_16+1,w
  5749  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5750  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5751  01EF  00C3               	movwf	___flmul@temp+1
  5752  01F0  0873               	movf	?__Umul8_16,w
  5753  01F1  00C2               	movwf	___flmul@temp
  5754  01F2  0842               	movf	___flmul@temp,w
  5755  01F3  00B2               	movwf	??___flmul
  5756  01F4  0843               	movf	___flmul@temp+1,w
  5757  01F5  00B3               	movwf	??___flmul+1
  5758  01F6  01B4               	clrf	??___flmul+2
  5759  01F7  01B5               	clrf	??___flmul+3
  5760  01F8  0832               	movf	??___flmul,w
  5761  01F9  07BE               	addwf	___flmul@prod,f
  5762  01FA  0833               	movf	??___flmul+1,w
  5763  01FB  1103               	clrz
  5764  01FC  1803               	skipnc
  5765  01FD  3E01               	addlw	1
  5766  01FE  1903               	skipnz
  5767  01FF  2A01               	goto	u3711
  5768  0200  07BF               	addwf	___flmul@prod+1,f
  5769  0201                     u3711:
  5770  0201  0834               	movf	??___flmul+2,w
  5771  0202  1103               	clrz
  5772  0203  1803               	skipnc
  5773  0204  3E01               	addlw	1
  5774  0205  1903               	skipnz
  5775  0206  2A08               	goto	u3712
  5776  0207  07C0               	addwf	___flmul@prod+2,f
  5777  0208                     u3712:
  5778  0208  0835               	movf	??___flmul+3,w
  5779  0209  1103               	clrz
  5780  020A  1803               	skipnc
  5781  020B  3E01               	addlw	1
  5782  020C  1903               	skipnz
  5783  020D  2A0F               	goto	u3713
  5784  020E  07C1               	addwf	___flmul@prod+3,f
  5785  020F                     u3713:
  5786  020F                     l2888:
  5787  020F  082C               	movf	___flmul@b+2,w
  5788  0210  00B2               	movwf	??___flmul
  5789  0211  0832               	movf	??___flmul,w
  5790  0212  00F3               	movwf	__Umul8_16@multiplicand
  5791  0213  082F               	movf	___flmul@a+1,w
  5792  0214  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5793  0219  0874               	movf	?__Umul8_16+1,w
  5794  021A  1283               	bcf	3,5	;RP0=0, select bank0
  5795  021B  1303               	bcf	3,6	;RP1=0, select bank0
  5796  021C  00C3               	movwf	___flmul@temp+1
  5797  021D  0873               	movf	?__Umul8_16,w
  5798  021E  00C2               	movwf	___flmul@temp
  5799  021F                     l2890:
  5800  021F  0842               	movf	___flmul@temp,w
  5801  0220  00B2               	movwf	??___flmul
  5802  0221  0843               	movf	___flmul@temp+1,w
  5803  0222  00B3               	movwf	??___flmul+1
  5804  0223  01B4               	clrf	??___flmul+2
  5805  0224  01B5               	clrf	??___flmul+3
  5806  0225  0832               	movf	??___flmul,w
  5807  0226  07BE               	addwf	___flmul@prod,f
  5808  0227  0833               	movf	??___flmul+1,w
  5809  0228  1103               	clrz
  5810  0229  1803               	skipnc
  5811  022A  3E01               	addlw	1
  5812  022B  1903               	skipnz
  5813  022C  2A2E               	goto	u3721
  5814  022D  07BF               	addwf	___flmul@prod+1,f
  5815  022E                     u3721:
  5816  022E  0834               	movf	??___flmul+2,w
  5817  022F  1103               	clrz
  5818  0230  1803               	skipnc
  5819  0231  3E01               	addlw	1
  5820  0232  1903               	skipnz
  5821  0233  2A35               	goto	u3722
  5822  0234  07C0               	addwf	___flmul@prod+2,f
  5823  0235                     u3722:
  5824  0235  0835               	movf	??___flmul+3,w
  5825  0236  1103               	clrz
  5826  0237  1803               	skipnc
  5827  0238  3E01               	addlw	1
  5828  0239  1903               	skipnz
  5829  023A  2A3C               	goto	u3723
  5830  023B  07C1               	addwf	___flmul@prod+3,f
  5831  023C                     u3723:
  5832  023C  082C               	movf	___flmul@b+2,w
  5833  023D  00B2               	movwf	??___flmul
  5834  023E  0832               	movf	??___flmul,w
  5835  023F  00F3               	movwf	__Umul8_16@multiplicand
  5836  0240  0830               	movf	___flmul@a+2,w
  5837  0241  120A  158A  2325  120A  118A  	fcall	__Umul8_16
  5838  0246  0874               	movf	?__Umul8_16+1,w
  5839  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0248  1303               	bcf	3,6	;RP1=0, select bank0
  5841  0249  00C3               	movwf	___flmul@temp+1
  5842  024A  0873               	movf	?__Umul8_16,w
  5843  024B  00C2               	movwf	___flmul@temp
  5844  024C                     l2892:
  5845  024C  0842               	movf	___flmul@temp,w
  5846  024D  00B2               	movwf	??___flmul
  5847  024E  0843               	movf	___flmul@temp+1,w
  5848  024F  00B3               	movwf	??___flmul+1
  5849  0250  01B4               	clrf	??___flmul+2
  5850  0251  01B5               	clrf	??___flmul+3
  5851  0252  3008               	movlw	8
  5852  0253                     u3735:
  5853  0253  1003               	clrc
  5854  0254  0DB2               	rlf	??___flmul,f
  5855  0255  0DB3               	rlf	??___flmul+1,f
  5856  0256  0DB4               	rlf	??___flmul+2,f
  5857  0257  0DB5               	rlf	??___flmul+3,f
  5858  0258                     u3730:
  5859  0258  3EFF               	addlw	-1
  5860  0259  1D03               	skipz
  5861  025A  2A53               	goto	u3735
  5862  025B  0832               	movf	??___flmul,w
  5863  025C  07BE               	addwf	___flmul@prod,f
  5864  025D  0833               	movf	??___flmul+1,w
  5865  025E  1103               	clrz
  5866  025F  1803               	skipnc
  5867  0260  3E01               	addlw	1
  5868  0261  1903               	skipnz
  5869  0262  2A64               	goto	u3741
  5870  0263  07BF               	addwf	___flmul@prod+1,f
  5871  0264                     u3741:
  5872  0264  0834               	movf	??___flmul+2,w
  5873  0265  1103               	clrz
  5874  0266  1803               	skipnc
  5875  0267  3E01               	addlw	1
  5876  0268  1903               	skipnz
  5877  0269  2A6B               	goto	u3742
  5878  026A  07C0               	addwf	___flmul@prod+2,f
  5879  026B                     u3742:
  5880  026B  0835               	movf	??___flmul+3,w
  5881  026C  1103               	clrz
  5882  026D  1803               	skipnc
  5883  026E  3E01               	addlw	1
  5884  026F  1903               	skipnz
  5885  0270  2A72               	goto	u3743
  5886  0271  07C1               	addwf	___flmul@prod+3,f
  5887  0272                     u3743:
  5888  0272                     l2894:
  5889  0272  0839               	movf	___flmul@grs,w
  5890  0273  00B2               	movwf	??___flmul
  5891  0274  083A               	movf	___flmul@grs+1,w
  5892  0275  00B3               	movwf	??___flmul+1
  5893  0276  083B               	movf	___flmul@grs+2,w
  5894  0277  00B4               	movwf	??___flmul+2
  5895  0278  083C               	movf	___flmul@grs+3,w
  5896  0279  00B5               	movwf	??___flmul+3
  5897  027A  3018               	movlw	24
  5898  027B                     u3755:
  5899  027B  1003               	clrc
  5900  027C  0CB5               	rrf	??___flmul+3,f
  5901  027D  0CB4               	rrf	??___flmul+2,f
  5902  027E  0CB3               	rrf	??___flmul+1,f
  5903  027F  0CB2               	rrf	??___flmul,f
  5904  0280                     u3750:
  5905  0280  3EFF               	addlw	-1
  5906  0281  1D03               	skipz
  5907  0282  2A7B               	goto	u3755
  5908  0283  0832               	movf	??___flmul,w
  5909  0284  07BE               	addwf	___flmul@prod,f
  5910  0285  0833               	movf	??___flmul+1,w
  5911  0286  1103               	clrz
  5912  0287  1803               	skipnc
  5913  0288  3E01               	addlw	1
  5914  0289  1903               	skipnz
  5915  028A  2A8C               	goto	u3761
  5916  028B  07BF               	addwf	___flmul@prod+1,f
  5917  028C                     u3761:
  5918  028C  0834               	movf	??___flmul+2,w
  5919  028D  1103               	clrz
  5920  028E  1803               	skipnc
  5921  028F  3E01               	addlw	1
  5922  0290  1903               	skipnz
  5923  0291  2A93               	goto	u3762
  5924  0292  07C0               	addwf	___flmul@prod+2,f
  5925  0293                     u3762:
  5926  0293  0835               	movf	??___flmul+3,w
  5927  0294  1103               	clrz
  5928  0295  1803               	skipnc
  5929  0296  3E01               	addlw	1
  5930  0297  1903               	skipnz
  5931  0298  2A9A               	goto	u3763
  5932  0299  07C1               	addwf	___flmul@prod+3,f
  5933  029A                     u3763:
  5934  029A                     l2896:
  5935  029A  3008               	movlw	8
  5936  029B  00B2               	movwf	??___flmul
  5937  029C                     u3775:
  5938  029C  1003               	clrc
  5939  029D  0DB9               	rlf	___flmul@grs,f
  5940  029E  0DBA               	rlf	___flmul@grs+1,f
  5941  029F  0DBB               	rlf	___flmul@grs+2,f
  5942  02A0  0DBC               	rlf	___flmul@grs+3,f
  5943  02A1  0BB2               	decfsz	??___flmul,f
  5944  02A2  2A9C               	goto	u3775
  5945  02A3                     l2898:
  5946  02A3  083D               	movf	___flmul@bexp,w
  5947  02A4  0738               	addwf	___flmul@aexp,w
  5948  02A5  00B2               	movwf	??___flmul
  5949  02A6  01B3               	clrf	??___flmul+1
  5950  02A7  0DB3               	rlf	??___flmul+1,f
  5951  02A8  0832               	movf	??___flmul,w
  5952  02A9  3E82               	addlw	130
  5953  02AA  00C2               	movwf	___flmul@temp
  5954  02AB  0833               	movf	??___flmul+1,w
  5955  02AC  1803               	skipnc
  5956  02AD  3E01               	addlw	1
  5957  02AE  3EFF               	addlw	255
  5958  02AF  00C3               	movwf	___flmul@temp+1
  5959  02B0  2ACE               	goto	l2910
  5960  02B1                     l2900:
  5961  02B1  3001               	movlw	1
  5962  02B2  00B2               	movwf	??___flmul
  5963  02B3                     u3785:
  5964  02B3  1003               	clrc
  5965  02B4  0DBE               	rlf	___flmul@prod,f
  5966  02B5  0DBF               	rlf	___flmul@prod+1,f
  5967  02B6  0DC0               	rlf	___flmul@prod+2,f
  5968  02B7  0DC1               	rlf	___flmul@prod+3,f
  5969  02B8  0BB2               	decfsz	??___flmul,f
  5970  02B9  2AB3               	goto	u3785
  5971  02BA                     l2902:
  5972  02BA  1FBC               	btfss	___flmul@grs+3,7
  5973  02BB  2ABD               	goto	u3791
  5974  02BC  2ABE               	goto	u3790
  5975  02BD                     u3791:
  5976  02BD  2ABF               	goto	l2906
  5977  02BE                     u3790:
  5978  02BE                     l2904:
  5979  02BE  143E               	bsf	___flmul@prod,0
  5980  02BF                     l2906:
  5981  02BF  3001               	movlw	1
  5982  02C0  00B2               	movwf	??___flmul
  5983  02C1                     u3805:
  5984  02C1  1003               	clrc
  5985  02C2  0DB9               	rlf	___flmul@grs,f
  5986  02C3  0DBA               	rlf	___flmul@grs+1,f
  5987  02C4  0DBB               	rlf	___flmul@grs+2,f
  5988  02C5  0DBC               	rlf	___flmul@grs+3,f
  5989  02C6  0BB2               	decfsz	??___flmul,f
  5990  02C7  2AC1               	goto	u3805
  5991  02C8                     l2908:
  5992  02C8  30FF               	movlw	255
  5993  02C9  07C2               	addwf	___flmul@temp,f
  5994  02CA  1803               	skipnc
  5995  02CB  0AC3               	incf	___flmul@temp+1,f
  5996  02CC  30FF               	movlw	255
  5997  02CD  07C3               	addwf	___flmul@temp+1,f
  5998  02CE                     l2910:
  5999  02CE  1FC0               	btfss	___flmul@prod+2,7
  6000  02CF  2AD1               	goto	u3811
  6001  02D0  2AD2               	goto	u3810
  6002  02D1                     u3811:
  6003  02D1  2AB1               	goto	l2900
  6004  02D2                     u3810:
  6005  02D2                     l2912:
  6006  02D2  01B8               	clrf	___flmul@aexp
  6007  02D3                     l2914:
  6008  02D3  1FBC               	btfss	___flmul@grs+3,7
  6009  02D4  2AD6               	goto	u3821
  6010  02D5  2AD7               	goto	u3820
  6011  02D6                     u3821:
  6012  02D6  2AF3               	goto	l2922
  6013  02D7                     u3820:
  6014  02D7                     l2916:
  6015  02D7  30FF               	movlw	255
  6016  02D8  0539               	andwf	___flmul@grs,w
  6017  02D9  00B2               	movwf	??___flmul
  6018  02DA  30FF               	movlw	255
  6019  02DB  053A               	andwf	___flmul@grs+1,w
  6020  02DC  00B3               	movwf	??___flmul+1
  6021  02DD  30FF               	movlw	255
  6022  02DE  053B               	andwf	___flmul@grs+2,w
  6023  02DF  00B4               	movwf	??___flmul+2
  6024  02E0  307F               	movlw	127
  6025  02E1  053C               	andwf	___flmul@grs+3,w
  6026  02E2  00B5               	movwf	??___flmul+3
  6027  02E3  0835               	movf	??___flmul+3,w
  6028  02E4  0434               	iorwf	??___flmul+2,w
  6029  02E5  0433               	iorwf	??___flmul+1,w
  6030  02E6  0432               	iorwf	??___flmul,w
  6031  02E7  1903               	skipnz
  6032  02E8  2AEA               	goto	u3831
  6033  02E9  2AEB               	goto	u3830
  6034  02EA                     u3831:
  6035  02EA  2AEE               	goto	l701
  6036  02EB                     u3830:
  6037  02EB                     l2918:
  6038  02EB  01B8               	clrf	___flmul@aexp
  6039  02EC  0AB8               	incf	___flmul@aexp,f
  6040  02ED  2AF3               	goto	l2922
  6041  02EE                     l701:
  6042  02EE  1C3E               	btfss	___flmul@prod,0
  6043  02EF  2AF1               	goto	u3841
  6044  02F0  2AF2               	goto	u3840
  6045  02F1                     u3841:
  6046  02F1  2AF3               	goto	l2922
  6047  02F2                     u3840:
  6048  02F2  2AEB               	goto	l2918
  6049  02F3                     l2922:
  6050  02F3  0838               	movf	___flmul@aexp,w
  6051  02F4  1903               	btfsc	3,2
  6052  02F5  2AF7               	goto	u3851
  6053  02F6  2AF8               	goto	u3850
  6054  02F7                     u3851:
  6055  02F7  2B29               	goto	l2932
  6056  02F8                     u3850:
  6057  02F8                     l2924:
  6058  02F8  3001               	movlw	1
  6059  02F9  07BE               	addwf	___flmul@prod,f
  6060  02FA  3000               	movlw	0
  6061  02FB  1803               	skipnc
  6062  02FC  3001               	movlw	1
  6063  02FD  07BF               	addwf	___flmul@prod+1,f
  6064  02FE  3000               	movlw	0
  6065  02FF  1803               	skipnc
  6066  0300  3001               	movlw	1
  6067  0301  07C0               	addwf	___flmul@prod+2,f
  6068  0302  3000               	movlw	0
  6069  0303  1803               	skipnc
  6070  0304  3001               	movlw	1
  6071  0305  07C1               	addwf	___flmul@prod+3,f
  6072  0306                     l2926:
  6073  0306  1C41               	btfss	___flmul@prod+3,0
  6074  0307  2B09               	goto	u3861
  6075  0308  2B0A               	goto	u3860
  6076  0309                     u3861:
  6077  0309  2B29               	goto	l2932
  6078  030A                     u3860:
  6079  030A                     l2928:
  6080  030A  083E               	movf	___flmul@prod,w
  6081  030B  00B2               	movwf	??___flmul
  6082  030C  083F               	movf	___flmul@prod+1,w
  6083  030D  00B3               	movwf	??___flmul+1
  6084  030E  0840               	movf	___flmul@prod+2,w
  6085  030F  00B4               	movwf	??___flmul+2
  6086  0310  0841               	movf	___flmul@prod+3,w
  6087  0311  00B5               	movwf	??___flmul+3
  6088  0312  3001               	movlw	1
  6089  0313  00B6               	movwf	??___flmul+4
  6090  0314                     u3875:
  6091  0314  0D35               	rlf	??___flmul+3,w
  6092  0315  0CB5               	rrf	??___flmul+3,f
  6093  0316  0CB4               	rrf	??___flmul+2,f
  6094  0317  0CB3               	rrf	??___flmul+1,f
  6095  0318  0CB2               	rrf	??___flmul,f
  6096  0319                     u3870:
  6097  0319  0BB6               	decfsz	??___flmul+4,f
  6098  031A  2B14               	goto	u3875
  6099  031B  0835               	movf	??___flmul+3,w
  6100  031C  00C1               	movwf	___flmul@prod+3
  6101  031D  0834               	movf	??___flmul+2,w
  6102  031E  00C0               	movwf	___flmul@prod+2
  6103  031F  0833               	movf	??___flmul+1,w
  6104  0320  00BF               	movwf	___flmul@prod+1
  6105  0321  0832               	movf	??___flmul,w
  6106  0322  00BE               	movwf	___flmul@prod
  6107  0323                     l2930:
  6108  0323  3001               	movlw	1
  6109  0324  07C2               	addwf	___flmul@temp,f
  6110  0325  1803               	skipnc
  6111  0326  0AC3               	incf	___flmul@temp+1,f
  6112  0327  3000               	movlw	0
  6113  0328  07C3               	addwf	___flmul@temp+1,f
  6114  0329                     l2932:
  6115  0329  0843               	movf	___flmul@temp+1,w
  6116  032A  3A80               	xorlw	128
  6117  032B  00FF               	movwf	btemp+1
  6118  032C  3080               	movlw	128
  6119  032D  027F               	subwf	btemp+1,w
  6120  032E  1D03               	skipz
  6121  032F  2B32               	goto	u3885
  6122  0330  30FF               	movlw	255
  6123  0331  0242               	subwf	___flmul@temp,w
  6124  0332                     u3885:
  6125  0332  1C03               	skipc
  6126  0333  2B35               	goto	u3881
  6127  0334  2B36               	goto	u3880
  6128  0335                     u3881:
  6129  0335  2B41               	goto	l2936
  6130  0336                     u3880:
  6131  0336                     l2934:
  6132  0336  307F               	movlw	127
  6133  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6134  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6135  0339  00C1               	movwf	___flmul@prod+3
  6136  033A  3080               	movlw	128
  6137  033B  00C0               	movwf	___flmul@prod+2
  6138  033C  3000               	movlw	0
  6139  033D  00BF               	movwf	___flmul@prod+1
  6140  033E  3000               	movlw	0
  6141  033F  00BE               	movwf	___flmul@prod
  6142  0340  2B76               	goto	l707
  6143  0341                     l2936:
  6144  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6145  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6146  0343  0843               	movf	___flmul@temp+1,w
  6147  0344  3A80               	xorlw	128
  6148  0345  00FF               	movwf	btemp+1
  6149  0346  3080               	movlw	128
  6150  0347  027F               	subwf	btemp+1,w
  6151  0348  1D03               	skipz
  6152  0349  2B4C               	goto	u3895
  6153  034A  3001               	movlw	1
  6154  034B  0242               	subwf	___flmul@temp,w
  6155  034C                     u3895:
  6156  034C  1803               	skipnc
  6157  034D  2B4F               	goto	u3891
  6158  034E  2B50               	goto	u3890
  6159  034F                     u3891:
  6160  034F  2B5C               	goto	l2942
  6161  0350                     u3890:
  6162  0350                     l2938:
  6163  0350  3000               	movlw	0
  6164  0351  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0352  1303               	bcf	3,6	;RP1=0, select bank0
  6166  0353  00C1               	movwf	___flmul@prod+3
  6167  0354  3000               	movlw	0
  6168  0355  00C0               	movwf	___flmul@prod+2
  6169  0356  3000               	movlw	0
  6170  0357  00BF               	movwf	___flmul@prod+1
  6171  0358  3000               	movlw	0
  6172  0359  00BE               	movwf	___flmul@prod
  6173  035A                     l2940:
  6174  035A  01B7               	clrf	___flmul@sign
  6175  035B  2B76               	goto	l707
  6176  035C                     l2942:
  6177  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6178  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6179  035E  0842               	movf	___flmul@temp,w
  6180  035F  00B2               	movwf	??___flmul
  6181  0360  0832               	movf	??___flmul,w
  6182  0361  00BD               	movwf	___flmul@bexp
  6183  0362  30FF               	movlw	255
  6184  0363  05BE               	andwf	___flmul@prod,f
  6185  0364  30FF               	movlw	255
  6186  0365  05BF               	andwf	___flmul@prod+1,f
  6187  0366  307F               	movlw	127
  6188  0367  05C0               	andwf	___flmul@prod+2,f
  6189  0368  3000               	movlw	0
  6190  0369  05C1               	andwf	___flmul@prod+3,f
  6191  036A                     l2944:
  6192  036A  1C3D               	btfss	___flmul@bexp,0
  6193  036B  2B6D               	goto	u3901
  6194  036C  2B6E               	goto	u3900
  6195  036D                     u3901:
  6196  036D  2B6F               	goto	l2948
  6197  036E                     u3900:
  6198  036E                     l2946:
  6199  036E  17C0               	bsf	___flmul@prod+2,7
  6200  036F                     l2948:
  6201  036F  083D               	movf	___flmul@bexp,w
  6202  0370  00B2               	movwf	??___flmul
  6203  0371  1003               	clrc
  6204  0372  0C32               	rrf	??___flmul,w
  6205  0373  00B3               	movwf	??___flmul+1
  6206  0374  0833               	movf	??___flmul+1,w
  6207  0375  00C1               	movwf	___flmul@prod+3
  6208  0376                     l707:
  6209  0376  0837               	movf	___flmul@sign,w
  6210  0377  00B2               	movwf	??___flmul
  6211  0378  0832               	movf	??___flmul,w
  6212  0379  04C1               	iorwf	___flmul@prod+3,f
  6213  037A                     l2950:
  6214  037A  0841               	movf	___flmul@prod+3,w
  6215  037B  00AD               	movwf	?___flmul+3
  6216  037C  0840               	movf	___flmul@prod+2,w
  6217  037D  00AC               	movwf	?___flmul+2
  6218  037E  083F               	movf	___flmul@prod+1,w
  6219  037F  00AB               	movwf	?___flmul+1
  6220  0380  083E               	movf	___flmul@prod,w
  6221  0381  00AA               	movwf	?___flmul
  6222  0382                     l695:
  6223  0382  0008               	return
  6224  0383                     __end_of___flmul:
  6225                           
  6226                           	psect	text25
  6227  0B25                     __ptext25:	
  6228 ;; *************** function __Umul8_16 *****************
  6229 ;; Defined at:
  6230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  multiplier      1    wreg     unsigned char 
  6233 ;;  multiplicand    1    3[COMMON] unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6236 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6237 ;;  product         2    0[BANK0 ] unsigned int 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  2    3[COMMON] unsigned int 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         2       0       0       0       0
  6248 ;;      Locals:         0       5       0       0       0
  6249 ;;      Temps:          2       0       0       0       0
  6250 ;;      Totals:         4       5       0       0       0
  6251 ;;Total ram usage:        9 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		___flmul
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           
  6262                           ;psect for function __Umul8_16
  6263  0B25                     __Umul8_16:
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6267                           ;__Umul8_16@multiplier stored from wreg
  6268  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0B26  1303               	bcf	3,6	;RP1=0, select bank0
  6270  0B27  00A4               	movwf	__Umul8_16@multiplier
  6271  0B28                     l2728:
  6272  0B28  01A0               	clrf	__Umul8_16@product
  6273  0B29  01A1               	clrf	__Umul8_16@product+1
  6274  0B2A                     l2730:
  6275  0B2A  0873               	movf	__Umul8_16@multiplicand,w
  6276  0B2B  00F5               	movwf	??__Umul8_16
  6277  0B2C  01F6               	clrf	??__Umul8_16+1
  6278  0B2D  0875               	movf	??__Umul8_16,w
  6279  0B2E  00A2               	movwf	__Umul8_16@word_mpld
  6280  0B2F  0876               	movf	??__Umul8_16+1,w
  6281  0B30  00A3               	movwf	__Umul8_16@word_mpld+1
  6282  0B31                     l2732:
  6283  0B31  1C24               	btfss	__Umul8_16@multiplier,0
  6284  0B32  2B34               	goto	u3381
  6285  0B33  2B35               	goto	u3380
  6286  0B34                     u3381:
  6287  0B34  2B3B               	goto	l714
  6288  0B35                     u3380:
  6289  0B35                     l2734:
  6290  0B35  0822               	movf	__Umul8_16@word_mpld,w
  6291  0B36  07A0               	addwf	__Umul8_16@product,f
  6292  0B37  1803               	skipnc
  6293  0B38  0AA1               	incf	__Umul8_16@product+1,f
  6294  0B39  0823               	movf	__Umul8_16@word_mpld+1,w
  6295  0B3A  07A1               	addwf	__Umul8_16@product+1,f
  6296  0B3B                     l714:
  6297  0B3B  3001               	movlw	1
  6298  0B3C                     u3395:
  6299  0B3C  1003               	clrc
  6300  0B3D  0DA2               	rlf	__Umul8_16@word_mpld,f
  6301  0B3E  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6302  0B3F  3EFF               	addlw	-1
  6303  0B40  1D03               	skipz
  6304  0B41  2B3C               	goto	u3395
  6305  0B42  1003               	clrc
  6306  0B43  0CA4               	rrf	__Umul8_16@multiplier,f
  6307  0B44                     l2736:
  6308  0B44  0824               	movf	__Umul8_16@multiplier,w
  6309  0B45  1D03               	btfss	3,2
  6310  0B46  2B48               	goto	u3401
  6311  0B47  2B49               	goto	u3400
  6312  0B48                     u3401:
  6313  0B48  2B31               	goto	l2732
  6314  0B49                     u3400:
  6315  0B49                     l2738:
  6316  0B49  0821               	movf	__Umul8_16@product+1,w
  6317  0B4A  00F4               	movwf	?__Umul8_16+1
  6318  0B4B  0820               	movf	__Umul8_16@product,w
  6319  0B4C  00F3               	movwf	?__Umul8_16
  6320  0B4D                     l716:
  6321  0B4D  0008               	return
  6322  0B4E                     __end_of__Umul8_16:
  6323                           
  6324                           	psect	text26
  6325  0CF9                     __ptext26:	
  6326 ;; *************** function _interrupcion *****************
  6327 ;; Defined at:
  6328 ;;		line 52 in file "main.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6342 ;;      Params:         0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0
  6344 ;;      Temps:          3       0       0       0       0
  6345 ;;      Totals:         3       0       0       0       0
  6346 ;;Total ram usage:        3 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		Interrupt level 1
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _interrupcion
  6357  0CF9                     _interrupcion:
  6358  0CF9                     i1l2364:
  6359                           
  6360                           ;main.c: 54:     if(PIR1bits.RCIF){
  6361  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6363  0CFB  1E8C               	btfss	12,5	;volatile
  6364  0CFC  2CFE               	goto	u271_21
  6365  0CFD  2CFF               	goto	u271_20
  6366  0CFE                     u271_21:
  6367  0CFE  2D16               	goto	i1l2376
  6368  0CFF                     u271_20:
  6369  0CFF                     i1l2366:
  6370                           
  6371                           ;main.c: 55:         UARTdat = RCREG;
  6372  0CFF  081A               	movf	26,w	;volatile
  6373  0D00  00F0               	movwf	??_interrupcion
  6374  0D01  0870               	movf	??_interrupcion,w
  6375  0D02  00FA               	movwf	_UARTdat
  6376  0D03                     i1l2368:
  6377                           
  6378                           ;main.c: 56:         if(UARTdat == 0X2B)UARTval++;
  6379  0D03  302B               	movlw	43
  6380  0D04  067A               	xorwf	_UARTdat,w
  6381  0D05  1D03               	btfss	3,2
  6382  0D06  2D08               	goto	u272_21
  6383  0D07  2D09               	goto	u272_20
  6384  0D08                     u272_21:
  6385  0D08  2D0D               	goto	i1l92
  6386  0D09                     u272_20:
  6387  0D09                     i1l2370:
  6388  0D09  3001               	movlw	1
  6389  0D0A  00F0               	movwf	??_interrupcion
  6390  0D0B  0870               	movf	??_interrupcion,w
  6391  0D0C  07DE               	addwf	_UARTval,f
  6392  0D0D                     i1l92:
  6393                           
  6394                           ;main.c: 57:         if(UARTdat == 0X2D)UARTval--;
  6395  0D0D  302D               	movlw	45
  6396  0D0E  067A               	xorwf	_UARTdat,w
  6397  0D0F  1D03               	btfss	3,2
  6398  0D10  2D12               	goto	u273_21
  6399  0D11  2D13               	goto	u273_20
  6400  0D12                     u273_21:
  6401  0D12  2D15               	goto	i1l2374
  6402  0D13                     u273_20:
  6403  0D13                     i1l2372:
  6404  0D13  3001               	movlw	1
  6405  0D14  02DE               	subwf	_UARTval,f
  6406  0D15                     i1l2374:
  6407                           
  6408                           ;main.c: 58:         PIR1bits.RCIF = 0;
  6409  0D15  128C               	bcf	12,5	;volatile
  6410  0D16                     i1l2376:
  6411                           
  6412                           ;main.c: 61:     if(PIR1bits.ADIF){
  6413  0D16  1F0C               	btfss	12,6	;volatile
  6414  0D17  2D19               	goto	u274_21
  6415  0D18  2D1A               	goto	u274_20
  6416  0D19                     u274_21:
  6417  0D19  2D35               	goto	i1l2388
  6418  0D1A                     u274_20:
  6419  0D1A                     i1l2378:
  6420                           
  6421                           ;main.c: 62:         ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
  6422  0D1A  1003               	clrc
  6423  0D1B  1D1F               	btfss	31,2	;volatile
  6424  0D1C  1403               	setc
  6425  0D1D  1803               	btfsc	3,0
  6426  0D1E  2D20               	goto	u275_21
  6427  0D1F  2D24               	goto	u275_20
  6428  0D20                     u275_21:
  6429  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0D22  151F               	bsf	31,2	;volatile
  6432  0D23  2D27               	goto	u276_24
  6433  0D24                     u275_20:
  6434  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6435  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6436  0D26  111F               	bcf	31,2	;volatile
  6437  0D27                     u276_24:
  6438  0D27                     i1l2380:
  6439                           
  6440                           ;main.c: 63:         PIR1bits.ADIF = 0;
  6441  0D27  130C               	bcf	12,6	;volatile
  6442  0D28                     i1l2382:
  6443                           
  6444                           ;main.c: 64:         if(ADCON0bits.CHS0)pot1 = ADRESH;
  6445  0D28  1D1F               	btfss	31,2	;volatile
  6446  0D29  2D2B               	goto	u277_21
  6447  0D2A  2D2C               	goto	u277_20
  6448  0D2B                     u277_21:
  6449  0D2B  2D31               	goto	i1l2386
  6450  0D2C                     u277_20:
  6451  0D2C                     i1l2384:
  6452  0D2C  081E               	movf	30,w	;volatile
  6453  0D2D  00F0               	movwf	??_interrupcion
  6454  0D2E  0870               	movf	??_interrupcion,w
  6455  0D2F  00EE               	movwf	_pot1
  6456  0D30  2D35               	goto	i1l2388
  6457  0D31                     i1l2386:
  6458  0D31  081E               	movf	30,w	;volatile
  6459  0D32  00F0               	movwf	??_interrupcion
  6460  0D33  0870               	movf	??_interrupcion,w
  6461  0D34  00ED               	movwf	_pot2
  6462  0D35                     i1l2388:
  6463                           
  6464                           ;main.c: 68:     if(INTCONbits.T0IF){
  6465  0D35  1D0B               	btfss	11,2	;volatile
  6466  0D36  2D38               	goto	u278_21
  6467  0D37  2D39               	goto	u278_20
  6468  0D38                     u278_21:
  6469  0D38  2D3F               	goto	i1l99
  6470  0D39                     u278_20:
  6471  0D39                     i1l2390:
  6472                           
  6473                           ;main.c: 69:         if(!ADCON0bits.GO)ADCON0bits.GO = 1;
  6474  0D39  189F               	btfsc	31,1	;volatile
  6475  0D3A  2D3C               	goto	u279_21
  6476  0D3B  2D3D               	goto	u279_20
  6477  0D3C                     u279_21:
  6478  0D3C  2D3E               	goto	i1l98
  6479  0D3D                     u279_20:
  6480  0D3D                     i1l2392:
  6481  0D3D  149F               	bsf	31,1	;volatile
  6482  0D3E                     i1l98:
  6483                           
  6484                           ;main.c: 70:         INTCONbits.T0IF = 0;
  6485  0D3E  110B               	bcf	11,2	;volatile
  6486  0D3F                     i1l99:
  6487  0D3F  0872               	movf	??_interrupcion+2,w
  6488  0D40  008A               	movwf	10
  6489  0D41  0E71               	swapf	??_interrupcion+1,w
  6490  0D42  0083               	movwf	3
  6491  0D43  0EFE               	swapf	btemp,f
  6492  0D44  0E7E               	swapf	btemp,w
  6493  0D45  0009               	retfie
  6494  0D46                     __end_of_interrupcion:
  6495  007E                     btemp	set	126	;btemp
  6496  007E                     wtemp0	set	126
  6497                           
  6498                           	psect	intentry
  6499  0004                     __pintentry:	
  6500                           ;incstack = 0
  6501                           ; Regs used in _interrupcion: [wreg+status,2+status,0]
  6502                           
  6503  0004                     interrupt_function:
  6504  007E                     saved_w	set	btemp
  6505  0004  00FE               	movwf	btemp
  6506  0005  0E03               	swapf	3,w
  6507  0006  00F1               	movwf	??_interrupcion+1
  6508  0007  080A               	movf	10,w
  6509  0008  00F2               	movwf	??_interrupcion+2
  6510  0009  120A  158A  2CF9   	ljmp	_interrupcion
  6511                           
  6512                           	psect	config
  6513                           
  6514                           ;Config register CONFIG1 @ 0x2007
  6515                           ;	Oscillator Selection bits
  6516                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6517                           ;	Watchdog Timer Enable bit
  6518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6519                           ;	Power-up Timer Enable bit
  6520                           ;	PWRTE = OFF, PWRT disabled
  6521                           ;	RE3/MCLR pin function select bit
  6522                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6523                           ;	Code Protection bit
  6524                           ;	CP = OFF, Program memory code protection is disabled
  6525                           ;	Data Code Protection bit
  6526                           ;	CPD = OFF, Data memory code protection is disabled
  6527                           ;	Brown Out Reset Selection bits
  6528                           ;	BOREN = OFF, BOR disabled
  6529                           ;	Internal External Switchover bit
  6530                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6531                           ;	Fail-Safe Clock Monitor Enabled bit
  6532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6533                           ;	Low Voltage Programming Enable bit
  6534                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6535                           ;	In-Circuit Debugger Mode bit
  6536                           ;	DEBUG = 0x1, unprogrammed default
  6537  2007                     	org	8199
  6538  2007  20F4               	dw	8436
  6539                           
  6540                           ;Config register CONFIG2 @ 0x2008
  6541                           ;	Brown-out Reset Selection bit
  6542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6543                           ;	Flash Program Memory Self Write Enable bits
  6544                           ;	WRT = OFF, Write protection off
  6545  2008                     	org	8200
  6546  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     62      79
    BANK1            80      3       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDstring@mensaje	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[17]), 

    divisiondecimal@cent	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@centena(BANK0[1]), sendhex@centena(BANK0[1]), 

    divisiondecimal@dec	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@decena(BANK0[1]), sendhex@decena(BANK0[1]), 

    divisiondecimal@un	PTR unsigned char  size(1) Largest target is 1
		 -> hexTochar@unidad(BANK0[1]), sendhex@unidad(BANK0[1]), 

    division@dec	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    division@un	PTR unsigned char  size(1) Largest target is 2
		 -> floTochar@digdecimal(BANK0[2]), sendfloat@digdecimal(BANK0[1]), 

    hexTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp3(BANK1[3]), 

    floTochar@conv	PTR unsigned char  size(1) Largest target is 3
		 -> disp2(BANK0[3]), disp1(BANK0[3]), 

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_4(CODE[6]), STR_3(CODE[8]), 
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    CONVdec@lectura	PTR unsigned char  size(1) Largest target is 1
		 -> pot2(BANK0[1]), pot1(BANK0[1]), 

    CONVdec@equiv	PTR float  size(1) Largest target is 4
		 -> val2(BANK0[4]), val1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_cursorLCD
    _sendhex->_divisiondecimal
    _sendfloat->_division
    _sendString->_send1dato
    _initLCD->_comandoLCD
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->_division
    _division->___awdiv
    ___flsub->___fladd
    ___flsub->___xxtofl
    _cursorLCD->_comandoLCD
    _configuracion->_ADCconfig
    _LCDstring->_dispCHAR
    _CONVdec->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl

Critical Paths under _interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_floTochar
    _sendhex->_divisiondecimal
    _sendfloat->___fltol
    _hexTochar->_divisiondecimal
    _divisiondecimal->___awdiv
    _floTochar->___fltol
    _division->___awdiv
    ___fltol->___flmul
    ___flsub->___fladd
    _CONVdec->___flmul
    ___flmul->___xxtofl

Critical Paths under _interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34583
                                              0 BANK1      3     3      0
                            _CONVdec
                          _LCDstring
                      _configuracion
                          _cursorLCD
                           _dispCHAR
                          _floTochar
                          _hexTochar
                            _initLCD
                         _sendString
                          _sendfloat
                            _sendhex
 ---------------------------------------------------------------------------------
 (1) _sendhex                                              7     7      0    2717
                                             10 BANK0      7     7      0
                    _divisiondecimal
                          _send1dato
 ---------------------------------------------------------------------------------
 (1) _sendfloat                                           15    11      4   11586
                                             45 BANK0     15    11      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
                          _send1dato
                         _sendString
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     2      0     265
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              6 COMMON     2     2      0
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (1) _hexTochar                                            8     7      1    2878
                                             10 BANK0      8     7      1
                    _divisiondecimal
 ---------------------------------------------------------------------------------
 (2) _divisiondecimal                                      8     5      3    2436
                                              8 COMMON     2     2      0
                                              4 BANK0      6     3      3
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _floTochar                                           17    12      5   11640
                                             45 BANK0     17    12      5
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             7     5      2    2067
                                              8 COMMON     2     0      2
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     406
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     697
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              3 COMMON     4     4      0
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _cursorLCD                                            4     3      1     460
                                              6 COMMON     4     3      1
                         _comandoLCD
 ---------------------------------------------------------------------------------
 (2) _comandoLCD                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0     120
                          _ADCconfig
                         _configUART
 ---------------------------------------------------------------------------------
 (2) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCconfig                                            4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCDstring                                            2     2      0     100
                                              5 COMMON     2     2      0
                           _dispCHAR
 ---------------------------------------------------------------------------------
 (1) _dispCHAR                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CONVdec                                              6     5      1    4773
                                              7 COMMON     1     1      0
                                             36 BANK0      5     4      1
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3713
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupcion                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVdec
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _LCDstring
     _dispCHAR
   _configuracion
     _ADCconfig
     _configUART
   _cursorLCD
     _comandoLCD
   _dispCHAR
   _floTochar
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
   _hexTochar
     _divisiondecimal
       ___awdiv
       ___bmul
   _initLCD
     _comandoLCD
   _sendString
     _send1dato
   _sendfloat
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _division
       ___awdiv
       ___bmul
     _send1dato
     _sendString
       _send1dato
   _sendhex
     _divisiondecimal
       ___awdiv
       ___bmul
     _send1dato

 _interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       6       7        7.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 12:11:13 2021

                       pc 0002            ___bmul@product 0075              ___awdiv@sign 0021  
          ?_configuracion 0070                        fsr 0004       __Umul8_16@word_mpld 0022  
                     l110 0BE0                       l200 0CF8                       l131 0C21  
                     l203 0A64                       l211 0A8A                       l220 0ABE  
                     l125 0C66                       l151 0A4E                       l208 0B00  
                     l160 0ADD                       l154 0A54                       l163 07F8  
                     l148 0A76                       l332 0A9F                       l172 0B79  
                     l502 0E2A                       l166 0F43                       l169 0BAA  
                     l178 0CAE                       l603 048F                       l187 0EA7  
                     l620 0560                       l612 0612                       l701 02EE  
                     l605 0464                       l630 05A6                       l624 0584  
                     l641 0606                       l633 05E4                       l714 0B3B  
                     l642 0612                       l707 0376                       l459 0DAE  
                     l716 0B4D                       l492 0E2A                       l741 0FFF  
                     l645 0B24                       l752 0FC9                       l753 0FD5  
                     l745 0FAD                       l739 0F68                       l499 0E15  
                     l695 0382                       l599 03E6        __size_of_ADCconfig 0045  
                     _RC0 0038                       _RC1 0039                       fsr0 0004  
                     indf 0000              ___flmul@aexp 0038              ___flmul@bexp 003D  
            ___flmul@sign 0037              ___flmul@temp 0042              ___flmul@prod 003E  
         __end_of_CONVdec 0C22              ___fltol@exp1 0078                      l2010 0A87  
                    l2004 0A78                      l2006 0A7B                      l2008 0A7D  
                    l3000 0750                      l3010 07E0                      l3002 0765  
                    l3012 07E9                      l3004 0799                      l3020 0BA1  
                    l3100 073E                      l3030 0F1F                      l3022 0EA8  
                    l3006 07C3                      l3014 0B7D                      l2240 0BAF  
                    l3032 0F3C                      l3024 0EBD                      l3040 0B72  
                    l3008 07D1                      l3016 0B8F                      l3122 0C47  
                    l2250 0BC9                      l2242 0BB0                      l3026 0EC1  
                    l3034 0B51                      l3018 0B98                      l3050 0631  
                    l3042 0613                      l2260 0BCE                      l2252 0BCA  
                    l2244 0BBF                      l2500 0D58                      l3028 0EF5  
                    l3036 0B63                      l3060 0669                      l3052 0640  
                    l3044 0618                      l2270 0BD3                      l2262 0BCF  
                    l2254 0BCB                      l2246 0BC4                      l2238 0BAB  
                    l2350 0AEF                      l2510 0D6C                      l2502 0D5D  
                    l3038 0B6C                      l3070 06B3                      l3062 0671  
                    l3054 0646                      l3046 061D                      l2360 0AAE  
                    l2272 0BDA                      l2264 0BD0                      l2256 0BCC  
                    l2248 0BC8                      l2352 0AF5                      l2344 0ADF  
                    l2600 0418                      l2520 0D92                      l2512 0D73  
                    l2504 0D61                      l2280 0CB3                      l3080 06E1  
                    l3072 06C1                      l3064 0677                      l3056 0654  
                    l3048 0623                      l2362 0AB2                      l2274 0BDD  
                    l2266 0BD1                      l2258 0BCD                      l2354 0AFA  
                    l2346 0AE4                      l2610 042C                      l2602 041C  
                    l2530 0DAA                      l2522 0D93                      l2514 0D77  
                    l2506 0D63                      l2290 0CDA                      l2282 0CBC  
                    l3090 070E                      l3082 06EA                      l3074 06C9  
                    l3066 068E                      l3058 0663                      l2356 0AA1  
                    l2268 0BD2                      l2348 0AE9                      l2700 05AB  
                    l2620 0473                      l2604 0420                      l2612 0430  
                    l2540 0394                      l2524 0D9A                      l2516 0D7B  
                    l2508 0D69                      l2292 0CE0                      l2284 0CC2  
                    l2276 0CAF                      l3092 0717                      l3084 06F6  
                    l3076 06D2                      l3068 06A5                      l2358 0AA2  
                    l2710 05E9                      l2702 05B0                      l2622 0475  
                    l2630 0489                      l2614 0431                      l2606 0424  
                    l2550 03A8                      l2542 0395                      l2534 0383  
                    l2518 0D8C                      l2526 0DA0                      l2294 0CE6  
                    l2286 0CCB                      l2278 0CB2                      l1646 0A4A  
                    l3094 0723                      l3086 06FF                      l3078 06D8  
                    l2720 0600                      l2712 05EE                      l2704 05BE  
                    l2640 04BC                      l2632 0493                      l2624 047B  
                    l2616 0448                      l2608 0428                      l2560 03BE  
                    l2544 039A                      l2552 03AA                      l2536 038A  
                    l2528 0DA5                      l2480 0A91                      l2296 0CEC  
                    l2288 0CD1                      l1920 0AD1                      l3096 072C  
                    l3088 0705                      l2730 0B2A                      l1922 0A56  
                    l1930 0A65                      l2722 0602                      l2714 05F6  
                    l2706 05C2                      l2650 04D3                      l2642 04C0  
                    l2634 0498                      l2626 047C                      l2618 0468  
                    l2570 03D3                      l2562 03C4                      l2554 03B2  
                    l2546 039F                      l2538 0390                      l2810 0B05  
                    l2802 0E0A                      l2490 0D46                      l2482 0A95  
                    l2298 0CF2                      l1914 0AC0                      l3098 0735  
                    l2732 0B31                      l2900 02B1                      l2820 0033  
                    l1924 0A59                      l1940 0A70                      l1932 0A69  
                    l2724 060D                      l2716 05FB                      l2708 05E0  
                    l2660 0538                      l2652 04D4                      l2644 04C4  
                    l2628 0485                      l2580 03F0                      l2572 03DB  
                    l2564 03C8                      l2556 03B7                      l2548 03A7  
                    l2804 0E1A                      l2492 0D49                      l2484 0A97  
                    l2476 0A8C                      l1916 0AC1                      l2734 0B35  
                    l2902 02BA                      l2910 02CE                      l2830 0048  
                    l2822 0034                      l2814 0022                      l1926 0A5B  
                    l1950 0C30                      l1942 0A73                      l1934 0A6B  
                    l2726 0611                      l2718 05FC                      l2670 056D  
                    l2662 053E                      l2654 04DD                      l2646 04CD  
                    l2638 04A3                      l2590 0404                      l2582 03F4  
                    l2574 03DC                      l2566 03C9                      l2558 03BD  
                    l2806 0E1F                      l2494 0D4D                      l2486 0A9E  
                    l2478 0A8D                      l2750 0CA1                      l2742 0C6A  
                    l1918 0ACD                      l2736 0B44                      l2728 0B28  
                    l2912 02D2                      l2904 02BE                      l2840 0060  
                    l2832 0050                      l2824 0039                      l2816 0029  
                    l1928 0A61                      l1960 0C5B                      l1952 0C37  
                    l1944 0C23                      l1936 0A6C                      l2680 0588  
                    l2664 0543                      l2648 04CF                      l2656 04E2  
                    l2592 0408                      l2584 03F8                      l2568 03CE  
                    l2576 03DE                      l2808 0B01                      l2496 0D52  
                    l2752 0CA7                      l2744 0C6E                      l2760 0E39  
                    l2738 0B49                      l2930 0323                      l2922 02F3  
                    l2914 02D3                      l2906 02BF                      l2850 007C  
                    l2842 0065                      l2834 0055                      l2826 003E  
                    l2818 002F                      l1962 0C5C                      l1946 0C24  
                    l1938 0A6D                      l2682 058B                      l2674 0576  
                    l2658 04FA                      l2666 0552                      l2690 0598  
                    l2594 040C                      l2586 03FC                      l2578 03EC  
                    l2498 0D54                      l2746 0C72                      l2770 0EA0  
                    l2762 0E3D                      l2754 0E2C                      l2940 035A  
                    l2924 02F8                      l2932 0329                      l2916 02D7  
                    l2908 02C8                      l2860 009F                      l2852 0081  
                    l2844 006A                      l2836 005B                      l2828 0046  
                    l1964 0C5D                      l1948 0C29                      l1956 0C3C  
                    l2692 0599                      l2684 058D                      l2676 057F  
                    l2668 0568                      l2596 0410                      l2588 0400  
                    l2780 0DDA                      l2772 0DAF                      l2748 0C76  
                    l2764 0E68                      l2756 0E32                      l2950 037A  
                    l2942 035C                      l2934 0336                      l2926 0306  
                    l2918 02EB                      l2870 012D                      l2862 00AC  
                    l2854 0086                      l2846 0072                      l2838 005F  
                    l1966 0C64                      l1958 0C52                      l2694 059D  
                    l2686 0592                      l2678 0583                      l2598 0414  
                    l2782 0DDB                      l2774 0DBC                      l2766 0E6F  
                    l2758 0E36                      l2944 036A                      l2936 0341  
                    l2928 030A                      l2880 018F                      l2872 0149  
                    l2864 00C9                      l2848 0074                      l2960 0F60  
                    l1968 0C65                      l2696 05A3                      l2688 0594  
                    l2784 0DE3                      l2768 0E9A                      l2946 036E  
                    l2938 0350                      l2890 021F                      l2882 01AC  
                    l2874 0152                      l2866 00E5                      l2858 008F  
                    l2970 0F8B                      l2962 0F70                      l2954 0F47  
                    l2794 0DF1                      l2786 0DE5                      l2778 0DC5  
                    l2948 036F                      l2892 024C                      l2884 01C5  
                    l2876 0162                      l2868 0111                      l2980 0FBF  
                    l2972 0F92                      l2956 0F4C                      l2788 0DE9  
                    l2796 0E03                      l2894 0272                      l2886 01E2  
                    l2878 017F                      l2990 0FF2                      l2982 0FC3  
                    l2974 0F96                      l2966 0F79                      l2958 0F50  
                    l2896 029A                      l2888 020F                      l2992 0FF6  
                    l2984 0FCD                      l2976 0FA4                      l2968 0F7E  
                    l2898 02A3                      l2994 0FF7                      l2986 0FD7  
                    l2978 0FB4                      l2988 0FED                      l2998 0BE2  
                    STR_1 0817                      STR_2 081F                      STR_3 0827  
                    STR_4 082F                      STR_5 0806                      STR_6 0835  
                    STR_7 0833                      u2030 0ADD                      u2031 0ADC  
                    u3000 03F0                      u3001 03EF                      u3010 0448  
                    u1410 0A54                      u3011 0447                      u1411 0A53  
                    u3020 0453                      u3101 04AE                      u3021 0451  
                    u3110 04C0                      u3102 04B5                      u3030 0454  
                    u3111 04BF                      u3103 04BC                      u3015 0444  
                    u4000 0FC9                      u3200 056D                      u3120 04C4  
                    u3040 0468                      u4001 0FC8                      u3201 056C  
                    u3121 04C3                      u3041 0467                      u4010 0FCD  
                    u3130 04D3                      u3050 047B                      u4011 0FCC  
                    u3131 04D2                      u3051 047A                      u4020 0FE2  
                    u3300 05C2                      u3220 0583                      u3301 05C1  
                    u3221 0582                      u4030 0FF2                      u3310 05D1  
                    u3230 0588                      u3150 04FA                      u3070 048F  
                    u4031 0FF1                      u3231 0587                      u3215 0578  
                    u3151 04F9                      u3071 048E                      u3400 0B49  
                    u4040 0FF6                      u3320 05E0                      u3240 0592  
                    u3080 0493                      u3401 0B48                      u4041 0FF5  
                    u4025 0FDD                      u3321 05DF                      u3241 0591  
                    u3161 0511                      u3153 04F6                      u3145 04D6  
                    u3081 0492                      u3065 047E                      u3330 05E9  
                    u3250 0598                      u3170 0525                      u3162 0512  
                    u3090 0498                      u3410 0CA7                      u4107 0A5E  
                    u3331 05E8                      u3315 05CC                      u3251 0597  
                    u3171 0526                      u3163 0517                      u3091 0497  
                    u3411 0CA6                      u2700 0ABE                      u3340 05EE  
                    u3260 059D                      u3180 0543                      u3172 052B  
                    u3164 0518                      u3500 0E09                      u3420 0E6E  
                    u2701 0ABD                      u3341 05ED                      u3261 059C  
                    u3181 0542                      u3173 052C                      u3165 051D  
                    u3501 0E08                      u3421 0E6D                      u3350 05FB  
                    u3270 05A3                      u3190 0568                      u3166 051E  
                    u3430 0EA0                      u3351 05FA                      u3271 05A2  
                    u3191 0567                      u3431 0E9F                      u3600 0081  
                    u3360 0600                      u3280 05AA                      u3520 0E1A  
                    u3440 0DBC                      u2800 0A91                      u3601 0080  
                    u3361 05FF                      u3281 05A9                      u3521 0E19  
                    u3441 0DBB                      u2801 0A90                      u4057 0746  
                    u3610 0086                      u3370 0611                      u3290 05B0  
                    u3530 0E1F                      u3450 0DD3                      u2810 0A9E  
                    u3611 0085                      u3371 0610                      u3291 05AF  
                    u3531 0E1E                      u3515 0E0C                      u2811 0A9D  
                    u4067 0CB7                      u3380 0B35                      u3540 0033  
                    u3460 0DE9                      u2900 0DA0                      u2820 0D4D  
                    u3381 0B34                      u3701 01D4                      u3621 00D7  
                    u3541 0032                      u3461 0DE8                      u2901 0D9F  
                    u2821 0D4C                      u4077 0CC6                      u3702 01DB  
                    u3622 00DE                      u3550 0039                      u3470 0DF0  
                    u2910 0DA5                      u2830 0D58                      u3711 0201  
                    u3703 01E2                      u3631 00F3                      u3623 00E5  
                    u3551 0038                      u3471 0DEF                      u3455 0DCE  
                    u2911 0DA4                      u2831 0D57                      u4087 0CD5  
                    u3712 0208                      u3632 00FA                      u3560 003E  
                    u2680 0AE4                      u2920 0394                      u2840 0D69  
                    u3721 022E                      u3713 020F                      u3641 011F  
                    u3633 0101                      u3561 003D                      u4097 0A82  
                    u2681 0AE3                      u2921 0393                      u2841 0D68  
                    u3810 02D2                      u3730 0258                      u3722 0235  
                    u3642 0126                      u3570 005F                      u2690 0AF5  
                    u2930 039A                      u3490 0E02                      u3395 0B3C  
                    u3811 02D1                      u3723 023C                      u3651 013B  
                    u3643 012D                      u3571 005E                      u2691 0AF4  
                    u2931 0399                      u3491 0E01                      u3900 036E  
                    u3820 02D7                      u3652 0142                      u3580 0065  
                    u2940 039F                      u2860 0D7B                      u3901 036D  
                    u3821 02D6                      u3805 02C1                      u3741 0264  
                    u3653 0149                      u3581 0064                      u2941 039E  
                    u3485 0DF2                      u2861 0D7A                      u3830 02EB  
                    u3750 0280                      u3742 026B                      u3590 006A  
                    u3910 0F4C                      u2950 03BD                      u3831 02EA  
                    u3743 0272                      u3735 0253                      u3671 0171  
                    u3591 0069                      u3911 0F4B                      u2951 03BC  
                    u2855 0D6D                      u3840 02F2                      u3672 0178  
                    u3920 0F50                      u2960 03C8                      u2880 0D8C  
                    u3841 02F1                      u3761 028C                      u3681 019E  
                    u3673 017F                      u3665 014B                      u3921 0F4F  
                    u2961 03C7                      u2881 0D8B                      u3850 02F8  
                    u3762 0293                      u3682 01A5                      u3930 0F70  
                    u2970 03CE                      u3851 02F7                      u3763 029A  
                    u3755 027B                      u3683 01AC                      u3931 0F6F  
                    u2971 03CD                      u2875 0D7C                      u3860 030A  
                    u2980 03D3                      u3861 0309                      u2981 03D2  
                    u2885 0D88                      u3870 0319                      u3790 02BE  
                    u3950 0F91                      u2990 03EC                      u3791 02BD  
                    u3775 029C                      u3695 01AE                      u3951 0F90  
                    u2991 03EB                      u2895 0D94                      u3880 0336  
                    u3881 0335                      u3785 02B3                      u3945 0F83  
                    u3890 0350                      u3970 0FB3                      u3891 034F  
                    u3875 0314                      u3971 0FB2                      i1l92 0D0D  
                    u3885 0332                      u3965 0FA5                      u3990 0FC3  
                    u3895 034C                      u3991 0FC2                      u3985 0FB8  
                    i1l98 0D3E                      i1l99 0D3F                      _main 0613  
                    _val1 0063                      _val2 005F                      _pot1 006E  
                    _pot2 006D                      btemp 007E           _divisiondecimal 0E2B  
                    start 000C         ___bmul@multiplier 0076               division@dec 0079  
             division@div 0028        __size_of_LCDstring 001F             ___fltol@sign1 0077  
         __end_of___fladd 0613                     ?_main 0070           __end_of___awdiv 0DAF  
         __end_of___flmul 0383           __end_of___flsub 0B25           __end_of___fltol 0E2B  
                   _ANSEL 0188           ___awdiv@divisor 0073           ___awdiv@counter 0020  
                   _RCREG 001A              CONVdec@equiv 0044             floTochar@conv 0051  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
           floTochar@temp 0056                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019             send1dato@dato 0073           __end_of_initLCD 0CF9  
                   _disp1 006A                     _disp2 0067                     _disp3 00A0  
         __end_of_sendhex 0BAB                     pclath 000A                     status 0003  
                   wtemp0 007E         __end_of_ADCconfig 0C67            sendhex@centena 002F  
         __initialization 000F              __end_of_main 0750           ??_configuracion 0077  
                  ??_main 00A3       divisiondecimal@cent 0026                 ??_CONVdec 0045  
                  _ADRESH 001E          ___awdiv@dividend 0075   __end_of_divisiondecimal 0EA8  
                  _ANSELH 0189                    i1l2370 0D09                    i1l2380 0D27  
                  i1l2372 0D13                    i1l2364 0CF9                    i1l2390 0D39  
                  i1l2382 0D28                    i1l2374 0D15                    i1l2366 0CFF  
                  i1l2392 0D3D                    i1l2384 0D2C                    i1l2368 0D03  
                  i1l2376 0D16                    i1l2386 0D31                    i1l2378 0D1A  
                  i1l2388 0D35         __end_of_LCDstring 0ABF                    u271_20 0CFF  
                  u271_21 0CFE                    u272_20 0D09                    u272_21 0D08  
                  u273_20 0D13                    u273_21 0D12                    u274_20 0D1A  
                  u274_21 0D19                    u275_20 0D24                    u275_21 0D20  
                  u276_24 0D27                    u277_20 0D2C                    u277_21 0D2B  
                  u278_20 0D39                    u278_21 0D38                    u279_20 0D3D  
                  u279_21 0D3C             ADCconfig@just 0073            floTochar@valor 004D  
          sendfloat@valor 004D          __end_of___xxtofl 1000             hexTochar@conv 002A  
        __end_of_dispCHAR 0A65                    ___bmul 0A8B          __end_of_division 0CAF  
               ??___fladd 0028                 ??___awdiv 0077                 ??___flmul 0032  
               ??___flsub 0077                 ??___fltol 0048          ___awdiv@quotient 0022  
               ??_initLCD 0076        __size_of__Umul8_16 0029                    saved_w 007E  
               ??_sendhex 002A              ___xxtofl@arg 0026              ___xxtofl@exp 0025  
            ___xxtofl@val 0073   __end_of__initialization 001E                ___fltol@f1 0044  
     ___bmul@multiplicand 0073            __pcstackCOMMON 0070             ?_interrupcion 0070  
          _OPTION_REGbits 0081        __size_of_floTochar 009C        __size_of_hexTochar 002C  
        ?_divisiondecimal 0024                __pbssBANK0 005E                __pbssBANK1 00A0  
      __size_of_cursorLCD 0023         __end_of__Umul8_16 0B4E        __size_of_send1dato 000C  
          ??_interrupcion 0070                __pmaintext 0613                   ?___bmul 0073  
              __pintentry 0004        __size_of_sendfloat 00A9                _comandoLCD 0A77  
                 _CONVdec 0BE1                _configUART 0A65            ADCconfig@canal 0076  
               ?___xxtofl 0073            CONVdec@lectura 0077           floTochar@entero 005B  
               ?_dispCHAR 0070                   _UARTdat 007A           sendfloat@entero 005A  
                 _UARTval 005E                __stringtab 0800                 ?_division 0078  
          hexTochar@valor 002E         __end_of_floTochar 0F44                 _ADCconfig 0C22  
         __size_of___bmul 0015         __end_of_hexTochar 0B7A                   ___fladd 0383  
                 ___awdiv 0D46                   ___flmul 0022                   ___flsub 0B01  
                 ___fltol 0DAF                   __ptext1 0B7A                   __ptext2 0750  
                 __ptext3 0ABF                   __ptext4 0A49                   __ptext5 0CAF  
                 __ptext6 0B4E                   __ptext7 0E2B                   __ptext8 0EA8  
                 __ptext9 0C67                   _initLCD 0CAF         __end_of_cursorLCD 0B01  
              ??___xxtofl 0020                   _sendhex 0B7A                ??_dispCHAR 0073  
       __end_of_send1dato 0A55                   clrloop0 0A42      end_of_initialization 001E  
              ??_division 0024         __end_of_sendfloat 07F9                _sendString 0ABF  
               _LCDstring 0AA0                 _RCSTAbits 0018                ?_ADCconfig 0073  
   __end_of_configuracion 0BE1               ?_comandoLCD 0070               ___fladd@grs 0076  
             ?_configUART 0070             ___xxtofl@sign 0024                 _TRISCbits 0087  
    __end_of_interrupcion 0D46               ___flmul@grs 0039                 _TXSTAbits 0098  
              ?_LCDstring 0070                division@un 0078          hexTochar@centena 0030  
          __end_of___bmul 0AA0       start_initialization 000F            division@conteo 0027  
           sendhex@decena 0030             sendhex@unidad 002E        divisiondecimal@dec 0025  
      divisiondecimal@div 0079               ?_sendString 0070             sendfloat@temp 0055  
     __size_of_comandoLCD 0014       __size_of_configUART 0012               ??_ADCconfig 0074  
                ??___bmul 0074                 __Umul8_16 0B25                 ___fladd@a 0024  
               ___fladd@b 0020                  ?_CONVdec 0044     divisiondecimal@conteo 0078  
               ___flmul@a 002E                 ___flmul@b 002A               __pbssCOMMON 007A  
               ___flsub@a 0030                 ___flsub@b 0034                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A3         __size_of___xxtofl 00BC  
       __size_of_dispCHAR 0010         __size_of_division 0048               ??_LCDstring 0075  
__size_of_divisiondecimal 007D                  ?___fladd 0020                  ?___awdiv 0073  
                ?___flmul 002A                  ?___flsub 0030                  ?___fltol 0044  
              ?__Umul8_16 0073                 _floTochar 0EA8                 __pstrings 0800  
               _hexTochar 0B4E       __size_of_sendString 001F     __size_of_interrupcion 004D  
                ?_initLCD 0070                  ?_sendhex 0070                 _cursorLCD 0ADE  
               _send1dato 0A49         interrupt_function 0004         sendString@mensaje 0075  
        floTochar@decimal 005A                 clear_ram0 0A41                  _PIE1bits 008C  
               dispCHAR@b 0074                 _sendfloat 0750                  _PIR1bits 000C  
        sendfloat@decimal 0059              _interrupcion 0CF9                ?_floTochar 004D  
              ?_hexTochar 002A                _ADCON0bits 001F               __stringbase 0805  
              _ADCON1bits 009F              ??_comandoLCD 0073              ??_configUART 0073  
        __size_of_CONVdec 0041           hexTochar@decena 0031                ?_cursorLCD 0076  
         hexTochar@unidad 002F                ?_send1dato 0070              sendhex@valor 002D  
       divisiondecimal@un 0024                ?_sendfloat 004D        __end_of_comandoLCD 0A8B  
      __end_of_configUART 0A77       floTochar@digdecimal 005C               ??__Umul8_16 0075  
        __size_of___fladd 0290          __size_of___awdiv 0069          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C         ??_divisiondecimal 0027  
      __end_of__stringtab 0806          __size_of_initLCD 004A                  ___xxtofl 0F44  
                _dispCHAR 0A55          __size_of_sendhex 0031                  __ptext10 0A8B  
                __ptext11 0D46                  __ptext20 0AA0                  __ptext12 0DAF  
                __ptext21 0A55                  __ptext13 0B01                  __ptext22 0BE1  
                __ptext14 0383                  __ptext23 0F44                  __ptext15 0ADE  
                __ptext24 0022                  __ptext16 0A77                  __ptext25 0B25  
                __ptext17 0BAB                  __ptext26 0CF9                  __ptext18 0A65  
                __ptext19 0C22          LCDstring@mensaje 0076                  _division 0C67  
            ??_sendString 0074    __size_of_configuracion 0036             __size_of_main 013D  
           cursorLCD@fila 0078             cursorLCD@temp 0079               ??_floTochar 0052  
             ??_hexTochar 002B       sendfloat@digdecimal 005B        __end_of_sendString 0ADE  
              _INTCONbits 000B               ??_cursorLCD 0077                  intlevel1 0000  
             ??_send1dato 0073               ??_sendfloat 0051                 stringcode 0800  
              _OSCCONbits 008F             _configuracion 0BAB          cursorLCD@columna 0076  
  __Umul8_16@multiplicand 0073                  stringdir 0800                  stringtab 0800  
           ___fladd@signs 0073              ___fladd@aexp 0074              ___fladd@bexp 0075  
    __Umul8_16@multiplier 0024         __Umul8_16@product 0020             comandoLCD@cmd 0075  
